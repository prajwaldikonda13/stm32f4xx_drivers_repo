
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006e94  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000428  08007048  08007048  00017048  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007470  08007470  00020bc4  2**0
                  CONTENTS
  4 .ARM          00000008  08007470  08007470  00017470  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007478  08007478  00020bc4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08007478  08007478  00017478  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007480  08007480  00017480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000bc4  20000000  08007484  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000530  20000bc4  08008048  00020bc4  2**2
                  ALLOC
 10 ._user_heap_stack 00000404  200010f4  08008048  000210f4  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020bc4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000227d  00000000  00000000  00020bee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000760  00000000  00000000  00022e6b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001b0  00000000  00000000  000235d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  00003155  00000000  00000000  00023780  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00002428  00000000  00000000  000268d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    00009bda  00000000  00000000  00028cfd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000050  00000000  00000000  000328d7  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 00000150  00000000  00000000  00032928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001dac  00000000  00000000  00032a78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000bc4 	.word	0x20000bc4
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800702c 	.word	0x0800702c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000bc8 	.word	0x20000bc8
 80001ec:	0800702c 	.word	0x0800702c

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bdc:	f000 b974 	b.w	8000ec8 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9e08      	ldr	r6, [sp, #32]
 8000bfe:	460d      	mov	r5, r1
 8000c00:	4604      	mov	r4, r0
 8000c02:	4688      	mov	r8, r1
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d14d      	bne.n	8000ca4 <__udivmoddi4+0xac>
 8000c08:	428a      	cmp	r2, r1
 8000c0a:	4694      	mov	ip, r2
 8000c0c:	d968      	bls.n	8000ce0 <__udivmoddi4+0xe8>
 8000c0e:	fab2 f282 	clz	r2, r2
 8000c12:	b152      	cbz	r2, 8000c2a <__udivmoddi4+0x32>
 8000c14:	fa01 f302 	lsl.w	r3, r1, r2
 8000c18:	f1c2 0120 	rsb	r1, r2, #32
 8000c1c:	fa20 f101 	lsr.w	r1, r0, r1
 8000c20:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c24:	ea41 0803 	orr.w	r8, r1, r3
 8000c28:	4094      	lsls	r4, r2
 8000c2a:	ea4f 451c 	mov.w	r5, ip, lsr #16
 8000c2e:	0c21      	lsrs	r1, r4, #16
 8000c30:	fbb8 fef5 	udiv	lr, r8, r5
 8000c34:	fa1f f78c 	uxth.w	r7, ip
 8000c38:	fb05 831e 	mls	r3, r5, lr, r8
 8000c3c:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c40:	fb0e f107 	mul.w	r1, lr, r7
 8000c44:	4299      	cmp	r1, r3
 8000c46:	d90b      	bls.n	8000c60 <__udivmoddi4+0x68>
 8000c48:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4c:	f10e 30ff 	add.w	r0, lr, #4294967295
 8000c50:	f080 811e 	bcs.w	8000e90 <__udivmoddi4+0x298>
 8000c54:	4299      	cmp	r1, r3
 8000c56:	f240 811b 	bls.w	8000e90 <__udivmoddi4+0x298>
 8000c5a:	f1ae 0e02 	sub.w	lr, lr, #2
 8000c5e:	4463      	add	r3, ip
 8000c60:	1a5b      	subs	r3, r3, r1
 8000c62:	b2a4      	uxth	r4, r4
 8000c64:	fbb3 f0f5 	udiv	r0, r3, r5
 8000c68:	fb05 3310 	mls	r3, r5, r0, r3
 8000c6c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c70:	fb00 f707 	mul.w	r7, r0, r7
 8000c74:	42a7      	cmp	r7, r4
 8000c76:	d90a      	bls.n	8000c8e <__udivmoddi4+0x96>
 8000c78:	eb1c 0404 	adds.w	r4, ip, r4
 8000c7c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c80:	f080 8108 	bcs.w	8000e94 <__udivmoddi4+0x29c>
 8000c84:	42a7      	cmp	r7, r4
 8000c86:	f240 8105 	bls.w	8000e94 <__udivmoddi4+0x29c>
 8000c8a:	4464      	add	r4, ip
 8000c8c:	3802      	subs	r0, #2
 8000c8e:	1be4      	subs	r4, r4, r7
 8000c90:	ea40 400e 	orr.w	r0, r0, lr, lsl #16
 8000c94:	2100      	movs	r1, #0
 8000c96:	b11e      	cbz	r6, 8000ca0 <__udivmoddi4+0xa8>
 8000c98:	40d4      	lsrs	r4, r2
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	e9c6 4300 	strd	r4, r3, [r6]
 8000ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca4:	428b      	cmp	r3, r1
 8000ca6:	d908      	bls.n	8000cba <__udivmoddi4+0xc2>
 8000ca8:	2e00      	cmp	r6, #0
 8000caa:	f000 80ee 	beq.w	8000e8a <__udivmoddi4+0x292>
 8000cae:	2100      	movs	r1, #0
 8000cb0:	e9c6 0500 	strd	r0, r5, [r6]
 8000cb4:	4608      	mov	r0, r1
 8000cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cba:	fab3 f183 	clz	r1, r3
 8000cbe:	2900      	cmp	r1, #0
 8000cc0:	d14a      	bne.n	8000d58 <__udivmoddi4+0x160>
 8000cc2:	42ab      	cmp	r3, r5
 8000cc4:	d302      	bcc.n	8000ccc <__udivmoddi4+0xd4>
 8000cc6:	4282      	cmp	r2, r0
 8000cc8:	f200 80f9 	bhi.w	8000ebe <__udivmoddi4+0x2c6>
 8000ccc:	1a84      	subs	r4, r0, r2
 8000cce:	eb65 0303 	sbc.w	r3, r5, r3
 8000cd2:	2001      	movs	r0, #1
 8000cd4:	4698      	mov	r8, r3
 8000cd6:	2e00      	cmp	r6, #0
 8000cd8:	d0e2      	beq.n	8000ca0 <__udivmoddi4+0xa8>
 8000cda:	e9c6 4800 	strd	r4, r8, [r6]
 8000cde:	e7df      	b.n	8000ca0 <__udivmoddi4+0xa8>
 8000ce0:	b902      	cbnz	r2, 8000ce4 <__udivmoddi4+0xec>
 8000ce2:	deff      	udf	#255	; 0xff
 8000ce4:	fab2 f282 	clz	r2, r2
 8000ce8:	2a00      	cmp	r2, #0
 8000cea:	f040 8091 	bne.w	8000e10 <__udivmoddi4+0x218>
 8000cee:	eba1 050c 	sub.w	r5, r1, ip
 8000cf2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cf6:	fa1f fe8c 	uxth.w	lr, ip
 8000cfa:	2101      	movs	r1, #1
 8000cfc:	fbb5 f3f7 	udiv	r3, r5, r7
 8000d00:	fb07 5013 	mls	r0, r7, r3, r5
 8000d04:	0c25      	lsrs	r5, r4, #16
 8000d06:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8000d0a:	fb0e f003 	mul.w	r0, lr, r3
 8000d0e:	42a8      	cmp	r0, r5
 8000d10:	d908      	bls.n	8000d24 <__udivmoddi4+0x12c>
 8000d12:	eb1c 0505 	adds.w	r5, ip, r5
 8000d16:	f103 38ff 	add.w	r8, r3, #4294967295
 8000d1a:	d202      	bcs.n	8000d22 <__udivmoddi4+0x12a>
 8000d1c:	42a8      	cmp	r0, r5
 8000d1e:	f200 80cb 	bhi.w	8000eb8 <__udivmoddi4+0x2c0>
 8000d22:	4643      	mov	r3, r8
 8000d24:	1a2d      	subs	r5, r5, r0
 8000d26:	b2a4      	uxth	r4, r4
 8000d28:	fbb5 f0f7 	udiv	r0, r5, r7
 8000d2c:	fb07 5510 	mls	r5, r7, r0, r5
 8000d30:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d34:	fb0e fe00 	mul.w	lr, lr, r0
 8000d38:	45a6      	cmp	lr, r4
 8000d3a:	d908      	bls.n	8000d4e <__udivmoddi4+0x156>
 8000d3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000d40:	f100 35ff 	add.w	r5, r0, #4294967295
 8000d44:	d202      	bcs.n	8000d4c <__udivmoddi4+0x154>
 8000d46:	45a6      	cmp	lr, r4
 8000d48:	f200 80bb 	bhi.w	8000ec2 <__udivmoddi4+0x2ca>
 8000d4c:	4628      	mov	r0, r5
 8000d4e:	eba4 040e 	sub.w	r4, r4, lr
 8000d52:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d56:	e79e      	b.n	8000c96 <__udivmoddi4+0x9e>
 8000d58:	f1c1 0720 	rsb	r7, r1, #32
 8000d5c:	408b      	lsls	r3, r1
 8000d5e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d66:	fa20 f407 	lsr.w	r4, r0, r7
 8000d6a:	fa05 f301 	lsl.w	r3, r5, r1
 8000d6e:	431c      	orrs	r4, r3
 8000d70:	40fd      	lsrs	r5, r7
 8000d72:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d76:	fa00 f301 	lsl.w	r3, r0, r1
 8000d7a:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d7e:	0c20      	lsrs	r0, r4, #16
 8000d80:	fa1f fe8c 	uxth.w	lr, ip
 8000d84:	fb09 5518 	mls	r5, r9, r8, r5
 8000d88:	ea40 4505 	orr.w	r5, r0, r5, lsl #16
 8000d8c:	fb08 f00e 	mul.w	r0, r8, lr
 8000d90:	42a8      	cmp	r0, r5
 8000d92:	fa02 f201 	lsl.w	r2, r2, r1
 8000d96:	d90b      	bls.n	8000db0 <__udivmoddi4+0x1b8>
 8000d98:	eb1c 0505 	adds.w	r5, ip, r5
 8000d9c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000da0:	f080 8088 	bcs.w	8000eb4 <__udivmoddi4+0x2bc>
 8000da4:	42a8      	cmp	r0, r5
 8000da6:	f240 8085 	bls.w	8000eb4 <__udivmoddi4+0x2bc>
 8000daa:	f1a8 0802 	sub.w	r8, r8, #2
 8000dae:	4465      	add	r5, ip
 8000db0:	1a2d      	subs	r5, r5, r0
 8000db2:	b2a4      	uxth	r4, r4
 8000db4:	fbb5 f0f9 	udiv	r0, r5, r9
 8000db8:	fb09 5510 	mls	r5, r9, r0, r5
 8000dbc:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000dc0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dc4:	45ae      	cmp	lr, r5
 8000dc6:	d908      	bls.n	8000dda <__udivmoddi4+0x1e2>
 8000dc8:	eb1c 0505 	adds.w	r5, ip, r5
 8000dcc:	f100 34ff 	add.w	r4, r0, #4294967295
 8000dd0:	d26c      	bcs.n	8000eac <__udivmoddi4+0x2b4>
 8000dd2:	45ae      	cmp	lr, r5
 8000dd4:	d96a      	bls.n	8000eac <__udivmoddi4+0x2b4>
 8000dd6:	3802      	subs	r0, #2
 8000dd8:	4465      	add	r5, ip
 8000dda:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dde:	fba0 9402 	umull	r9, r4, r0, r2
 8000de2:	eba5 050e 	sub.w	r5, r5, lr
 8000de6:	42a5      	cmp	r5, r4
 8000de8:	46c8      	mov	r8, r9
 8000dea:	46a6      	mov	lr, r4
 8000dec:	d356      	bcc.n	8000e9c <__udivmoddi4+0x2a4>
 8000dee:	d053      	beq.n	8000e98 <__udivmoddi4+0x2a0>
 8000df0:	b15e      	cbz	r6, 8000e0a <__udivmoddi4+0x212>
 8000df2:	ebb3 0208 	subs.w	r2, r3, r8
 8000df6:	eb65 050e 	sbc.w	r5, r5, lr
 8000dfa:	fa05 f707 	lsl.w	r7, r5, r7
 8000dfe:	fa22 f301 	lsr.w	r3, r2, r1
 8000e02:	40cd      	lsrs	r5, r1
 8000e04:	431f      	orrs	r7, r3
 8000e06:	e9c6 7500 	strd	r7, r5, [r6]
 8000e0a:	2100      	movs	r1, #0
 8000e0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e10:	f1c2 0320 	rsb	r3, r2, #32
 8000e14:	fa20 f103 	lsr.w	r1, r0, r3
 8000e18:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e1c:	fa25 f303 	lsr.w	r3, r5, r3
 8000e20:	4095      	lsls	r5, r2
 8000e22:	430d      	orrs	r5, r1
 8000e24:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e28:	fa1f fe8c 	uxth.w	lr, ip
 8000e2c:	fbb3 f1f7 	udiv	r1, r3, r7
 8000e30:	fb07 3011 	mls	r0, r7, r1, r3
 8000e34:	0c2b      	lsrs	r3, r5, #16
 8000e36:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8000e3a:	fb01 f00e 	mul.w	r0, r1, lr
 8000e3e:	4298      	cmp	r0, r3
 8000e40:	fa04 f402 	lsl.w	r4, r4, r2
 8000e44:	d908      	bls.n	8000e58 <__udivmoddi4+0x260>
 8000e46:	eb1c 0303 	adds.w	r3, ip, r3
 8000e4a:	f101 38ff 	add.w	r8, r1, #4294967295
 8000e4e:	d22f      	bcs.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e50:	4298      	cmp	r0, r3
 8000e52:	d92d      	bls.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e54:	3902      	subs	r1, #2
 8000e56:	4463      	add	r3, ip
 8000e58:	1a1b      	subs	r3, r3, r0
 8000e5a:	b2ad      	uxth	r5, r5
 8000e5c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e60:	fb07 3310 	mls	r3, r7, r0, r3
 8000e64:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000e68:	fb00 f30e 	mul.w	r3, r0, lr
 8000e6c:	42ab      	cmp	r3, r5
 8000e6e:	d908      	bls.n	8000e82 <__udivmoddi4+0x28a>
 8000e70:	eb1c 0505 	adds.w	r5, ip, r5
 8000e74:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e78:	d216      	bcs.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7a:	42ab      	cmp	r3, r5
 8000e7c:	d914      	bls.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7e:	3802      	subs	r0, #2
 8000e80:	4465      	add	r5, ip
 8000e82:	1aed      	subs	r5, r5, r3
 8000e84:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e88:	e738      	b.n	8000cfc <__udivmoddi4+0x104>
 8000e8a:	4631      	mov	r1, r6
 8000e8c:	4630      	mov	r0, r6
 8000e8e:	e707      	b.n	8000ca0 <__udivmoddi4+0xa8>
 8000e90:	4686      	mov	lr, r0
 8000e92:	e6e5      	b.n	8000c60 <__udivmoddi4+0x68>
 8000e94:	4618      	mov	r0, r3
 8000e96:	e6fa      	b.n	8000c8e <__udivmoddi4+0x96>
 8000e98:	454b      	cmp	r3, r9
 8000e9a:	d2a9      	bcs.n	8000df0 <__udivmoddi4+0x1f8>
 8000e9c:	ebb9 0802 	subs.w	r8, r9, r2
 8000ea0:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ea4:	3801      	subs	r0, #1
 8000ea6:	e7a3      	b.n	8000df0 <__udivmoddi4+0x1f8>
 8000ea8:	4640      	mov	r0, r8
 8000eaa:	e7ea      	b.n	8000e82 <__udivmoddi4+0x28a>
 8000eac:	4620      	mov	r0, r4
 8000eae:	e794      	b.n	8000dda <__udivmoddi4+0x1e2>
 8000eb0:	4641      	mov	r1, r8
 8000eb2:	e7d1      	b.n	8000e58 <__udivmoddi4+0x260>
 8000eb4:	46d0      	mov	r8, sl
 8000eb6:	e77b      	b.n	8000db0 <__udivmoddi4+0x1b8>
 8000eb8:	3b02      	subs	r3, #2
 8000eba:	4465      	add	r5, ip
 8000ebc:	e732      	b.n	8000d24 <__udivmoddi4+0x12c>
 8000ebe:	4608      	mov	r0, r1
 8000ec0:	e709      	b.n	8000cd6 <__udivmoddi4+0xde>
 8000ec2:	4464      	add	r4, ip
 8000ec4:	3802      	subs	r0, #2
 8000ec6:	e742      	b.n	8000d4e <__udivmoddi4+0x156>

08000ec8 <__aeabi_idiv0>:
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop

08000ecc <GPIO_Init>:
#include "stm32f407xx_gpio_driver.h"
#include"stm32f407xx_nvic_driver.h"


void GPIO_Init(GPIO_Handle_t GPIOHandle) {
 8000ecc:	b490      	push	{r4, r7}
 8000ece:	b082      	sub	sp, #8
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	463b      	mov	r3, r7
 8000ed4:	e883 0003 	stmia.w	r3, {r0, r1}
	//enable the peripheral clock

	RCC_AHB1_PER_CLK_CTRL(GPIOHandle.GPIOx, ENABLE);
 8000ed8:	4b3d      	ldr	r3, [pc, #244]	; (8000fd0 <GPIO_Init+0x104>)
 8000eda:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8000ede:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ee0:	783a      	ldrb	r2, [r7, #0]
 8000ee2:	4611      	mov	r1, r2
 8000ee4:	2201      	movs	r2, #1
 8000ee6:	408a      	lsls	r2, r1
 8000ee8:	4611      	mov	r1, r2
 8000eea:	4a39      	ldr	r2, [pc, #228]	; (8000fd0 <GPIO_Init+0x104>)
 8000eec:	f8d2 20f8 	ldr.w	r2, [r2, #248]	; 0xf8
 8000ef0:	430b      	orrs	r3, r1
 8000ef2:	6313      	str	r3, [r2, #48]	; 0x30

	//1 . configure the mode of gpio pin

	if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000ef4:	78bb      	ldrb	r3, [r7, #2]
 8000ef6:	2b03      	cmp	r3, #3
 8000ef8:	d828      	bhi.n	8000f4c <GPIO_Init+0x80>
		//the non interrupt mode
		MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->MODER, 2,
 8000efa:	783b      	ldrb	r3, [r7, #0]
 8000efc:	461a      	mov	r2, r3
 8000efe:	4b34      	ldr	r3, [pc, #208]	; (8000fd0 <GPIO_Init+0x104>)
 8000f00:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000f04:	681a      	ldr	r2, [r3, #0]
 8000f06:	4b33      	ldr	r3, [pc, #204]	; (8000fd4 <GPIO_Init+0x108>)
 8000f08:	6859      	ldr	r1, [r3, #4]
 8000f0a:	787b      	ldrb	r3, [r7, #1]
 8000f0c:	005b      	lsls	r3, r3, #1
 8000f0e:	fa01 f303 	lsl.w	r3, r1, r3
 8000f12:	43db      	mvns	r3, r3
 8000f14:	7839      	ldrb	r1, [r7, #0]
 8000f16:	4608      	mov	r0, r1
 8000f18:	492d      	ldr	r1, [pc, #180]	; (8000fd0 <GPIO_Init+0x104>)
 8000f1a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8000f1e:	4013      	ands	r3, r2
 8000f20:	600b      	str	r3, [r1, #0]
 8000f22:	783b      	ldrb	r3, [r7, #0]
 8000f24:	461a      	mov	r2, r3
 8000f26:	4b2a      	ldr	r3, [pc, #168]	; (8000fd0 <GPIO_Init+0x104>)
 8000f28:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000f2c:	681b      	ldr	r3, [r3, #0]
 8000f2e:	78ba      	ldrb	r2, [r7, #2]
 8000f30:	4611      	mov	r1, r2
 8000f32:	787a      	ldrb	r2, [r7, #1]
 8000f34:	0052      	lsls	r2, r2, #1
 8000f36:	fa01 f202 	lsl.w	r2, r1, r2
 8000f3a:	4611      	mov	r1, r2
 8000f3c:	783a      	ldrb	r2, [r7, #0]
 8000f3e:	4610      	mov	r0, r2
 8000f40:	4a23      	ldr	r2, [pc, #140]	; (8000fd0 <GPIO_Init+0x104>)
 8000f42:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8000f46:	430b      	orrs	r3, r1
 8000f48:	6013      	str	r3, [r2, #0]
 8000f4a:	e0be      	b.n	80010ca <GPIO_Init+0x1fe>
				MUL2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,1),
				GPIOHandle.GPIO_PinConfig.GPIO_PinMode); //setting

	} else {
		if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 8000f4c:	78bb      	ldrb	r3, [r7, #2]
 8000f4e:	2b04      	cmp	r3, #4
 8000f50:	d11d      	bne.n	8000f8e <GPIO_Init+0xc2>
			//1. configure the FTSR
			EXTI_FTSR_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 8000f52:	4b1f      	ldr	r3, [pc, #124]	; (8000fd0 <GPIO_Init+0x104>)
 8000f54:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000f58:	68db      	ldr	r3, [r3, #12]
 8000f5a:	787a      	ldrb	r2, [r7, #1]
 8000f5c:	4611      	mov	r1, r2
 8000f5e:	2201      	movs	r2, #1
 8000f60:	408a      	lsls	r2, r1
 8000f62:	4611      	mov	r1, r2
 8000f64:	4a1a      	ldr	r2, [pc, #104]	; (8000fd0 <GPIO_Init+0x104>)
 8000f66:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 8000f6a:	430b      	orrs	r3, r1
 8000f6c:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI_RTSR_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, DISABLE);
 8000f6e:	4b18      	ldr	r3, [pc, #96]	; (8000fd0 <GPIO_Init+0x104>)
 8000f70:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000f74:	689b      	ldr	r3, [r3, #8]
 8000f76:	787a      	ldrb	r2, [r7, #1]
 8000f78:	4611      	mov	r1, r2
 8000f7a:	2201      	movs	r2, #1
 8000f7c:	408a      	lsls	r2, r1
 8000f7e:	43d2      	mvns	r2, r2
 8000f80:	4611      	mov	r1, r2
 8000f82:	4a13      	ldr	r2, [pc, #76]	; (8000fd0 <GPIO_Init+0x104>)
 8000f84:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 8000f88:	400b      	ands	r3, r1
 8000f8a:	6093      	str	r3, [r2, #8]
 8000f8c:	e043      	b.n	8001016 <GPIO_Init+0x14a>

		} else if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT) {
 8000f8e:	78bb      	ldrb	r3, [r7, #2]
 8000f90:	2b05      	cmp	r3, #5
 8000f92:	d121      	bne.n	8000fd8 <GPIO_Init+0x10c>
			//1 . configure the RTSR
			EXTI_RTSR_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 8000f94:	4b0e      	ldr	r3, [pc, #56]	; (8000fd0 <GPIO_Init+0x104>)
 8000f96:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000f9a:	689b      	ldr	r3, [r3, #8]
 8000f9c:	787a      	ldrb	r2, [r7, #1]
 8000f9e:	4611      	mov	r1, r2
 8000fa0:	2201      	movs	r2, #1
 8000fa2:	408a      	lsls	r2, r1
 8000fa4:	4611      	mov	r1, r2
 8000fa6:	4a0a      	ldr	r2, [pc, #40]	; (8000fd0 <GPIO_Init+0x104>)
 8000fa8:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 8000fac:	430b      	orrs	r3, r1
 8000fae:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI_FTSR_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, DISABLE);
 8000fb0:	4b07      	ldr	r3, [pc, #28]	; (8000fd0 <GPIO_Init+0x104>)
 8000fb2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000fb6:	68db      	ldr	r3, [r3, #12]
 8000fb8:	787a      	ldrb	r2, [r7, #1]
 8000fba:	4611      	mov	r1, r2
 8000fbc:	2201      	movs	r2, #1
 8000fbe:	408a      	lsls	r2, r1
 8000fc0:	43d2      	mvns	r2, r2
 8000fc2:	4611      	mov	r1, r2
 8000fc4:	4a02      	ldr	r2, [pc, #8]	; (8000fd0 <GPIO_Init+0x104>)
 8000fc6:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 8000fca:	400b      	ands	r3, r1
 8000fcc:	60d3      	str	r3, [r2, #12]
 8000fce:	e022      	b.n	8001016 <GPIO_Init+0x14a>
 8000fd0:	20000000 	.word	0x20000000
 8000fd4:	2000016c 	.word	0x2000016c

		} else if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT) {
 8000fd8:	78bb      	ldrb	r3, [r7, #2]
 8000fda:	2b06      	cmp	r3, #6
 8000fdc:	d11b      	bne.n	8001016 <GPIO_Init+0x14a>
			//1. configure both FTSR and RTSR
			EXTI_RTSR_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 8000fde:	4ba2      	ldr	r3, [pc, #648]	; (8001268 <GPIO_Init+0x39c>)
 8000fe0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000fe4:	689b      	ldr	r3, [r3, #8]
 8000fe6:	787a      	ldrb	r2, [r7, #1]
 8000fe8:	4611      	mov	r1, r2
 8000fea:	2201      	movs	r2, #1
 8000fec:	408a      	lsls	r2, r1
 8000fee:	4611      	mov	r1, r2
 8000ff0:	4a9d      	ldr	r2, [pc, #628]	; (8001268 <GPIO_Init+0x39c>)
 8000ff2:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 8000ff6:	430b      	orrs	r3, r1
 8000ff8:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI_FTSR_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 8000ffa:	4b9b      	ldr	r3, [pc, #620]	; (8001268 <GPIO_Init+0x39c>)
 8000ffc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001000:	68db      	ldr	r3, [r3, #12]
 8001002:	787a      	ldrb	r2, [r7, #1]
 8001004:	4611      	mov	r1, r2
 8001006:	2201      	movs	r2, #1
 8001008:	408a      	lsls	r2, r1
 800100a:	4611      	mov	r1, r2
 800100c:	4a96      	ldr	r2, [pc, #600]	; (8001268 <GPIO_Init+0x39c>)
 800100e:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 8001012:	430b      	orrs	r3, r1
 8001014:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		SYSCFG_PCLK_EN();
 8001016:	4b94      	ldr	r3, [pc, #592]	; (8001268 <GPIO_Init+0x39c>)
 8001018:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800101c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800101e:	4a92      	ldr	r2, [pc, #584]	; (8001268 <GPIO_Init+0x39c>)
 8001020:	f8d2 20f8 	ldr.w	r2, [r2, #248]	; 0xf8
 8001024:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001028:	6413      	str	r3, [r2, #64]	; 0x40
		SYSCFG_EXTI_CNFG(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber);
 800102a:	4b8f      	ldr	r3, [pc, #572]	; (8001268 <GPIO_Init+0x39c>)
 800102c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8001030:	461a      	mov	r2, r3
 8001032:	787b      	ldrb	r3, [r7, #1]
 8001034:	089b      	lsrs	r3, r3, #2
 8001036:	b2db      	uxtb	r3, r3
 8001038:	3302      	adds	r3, #2
 800103a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800103e:	4b8b      	ldr	r3, [pc, #556]	; (800126c <GPIO_Init+0x3a0>)
 8001040:	68d9      	ldr	r1, [r3, #12]
 8001042:	787b      	ldrb	r3, [r7, #1]
 8001044:	4618      	mov	r0, r3
 8001046:	4b89      	ldr	r3, [pc, #548]	; (800126c <GPIO_Init+0x3a0>)
 8001048:	685b      	ldr	r3, [r3, #4]
 800104a:	4003      	ands	r3, r0
 800104c:	009b      	lsls	r3, r3, #2
 800104e:	fa01 f303 	lsl.w	r3, r1, r3
 8001052:	43db      	mvns	r3, r3
 8001054:	4984      	ldr	r1, [pc, #528]	; (8001268 <GPIO_Init+0x39c>)
 8001056:	f8d1 10ac 	ldr.w	r1, [r1, #172]	; 0xac
 800105a:	4608      	mov	r0, r1
 800105c:	7879      	ldrb	r1, [r7, #1]
 800105e:	0889      	lsrs	r1, r1, #2
 8001060:	b2c9      	uxtb	r1, r1
 8001062:	401a      	ands	r2, r3
 8001064:	1c8b      	adds	r3, r1, #2
 8001066:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800106a:	4b7f      	ldr	r3, [pc, #508]	; (8001268 <GPIO_Init+0x39c>)
 800106c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8001070:	461a      	mov	r2, r3
 8001072:	787b      	ldrb	r3, [r7, #1]
 8001074:	089b      	lsrs	r3, r3, #2
 8001076:	b2db      	uxtb	r3, r3
 8001078:	3302      	adds	r3, #2
 800107a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800107e:	787a      	ldrb	r2, [r7, #1]
 8001080:	4611      	mov	r1, r2
 8001082:	787a      	ldrb	r2, [r7, #1]
 8001084:	4610      	mov	r0, r2
 8001086:	4a79      	ldr	r2, [pc, #484]	; (800126c <GPIO_Init+0x3a0>)
 8001088:	6852      	ldr	r2, [r2, #4]
 800108a:	4002      	ands	r2, r0
 800108c:	0092      	lsls	r2, r2, #2
 800108e:	fa01 f202 	lsl.w	r2, r1, r2
 8001092:	4614      	mov	r4, r2
 8001094:	4a74      	ldr	r2, [pc, #464]	; (8001268 <GPIO_Init+0x39c>)
 8001096:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 800109a:	4611      	mov	r1, r2
 800109c:	787a      	ldrb	r2, [r7, #1]
 800109e:	0892      	lsrs	r2, r2, #2
 80010a0:	b2d2      	uxtb	r2, r2
 80010a2:	4610      	mov	r0, r2
 80010a4:	ea43 0204 	orr.w	r2, r3, r4
 80010a8:	1c83      	adds	r3, r0, #2
 80010aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		//3 . enable the exti interrupt delivery using IMR
		EXTI_MASK_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 80010ae:	4b6e      	ldr	r3, [pc, #440]	; (8001268 <GPIO_Init+0x39c>)
 80010b0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	787a      	ldrb	r2, [r7, #1]
 80010b8:	4611      	mov	r1, r2
 80010ba:	2201      	movs	r2, #1
 80010bc:	408a      	lsls	r2, r1
 80010be:	4611      	mov	r1, r2
 80010c0:	4a69      	ldr	r2, [pc, #420]	; (8001268 <GPIO_Init+0x39c>)
 80010c2:	f8d2 20b0 	ldr.w	r2, [r2, #176]	; 0xb0
 80010c6:	430b      	orrs	r3, r1
 80010c8:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed

	MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->OSPEEDR, 2,
 80010ca:	783b      	ldrb	r3, [r7, #0]
 80010cc:	461a      	mov	r2, r3
 80010ce:	4b66      	ldr	r3, [pc, #408]	; (8001268 <GPIO_Init+0x39c>)
 80010d0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80010d4:	689a      	ldr	r2, [r3, #8]
 80010d6:	4b65      	ldr	r3, [pc, #404]	; (800126c <GPIO_Init+0x3a0>)
 80010d8:	6859      	ldr	r1, [r3, #4]
 80010da:	787b      	ldrb	r3, [r7, #1]
 80010dc:	005b      	lsls	r3, r3, #1
 80010de:	fa01 f303 	lsl.w	r3, r1, r3
 80010e2:	43db      	mvns	r3, r3
 80010e4:	7839      	ldrb	r1, [r7, #0]
 80010e6:	4608      	mov	r0, r1
 80010e8:	495f      	ldr	r1, [pc, #380]	; (8001268 <GPIO_Init+0x39c>)
 80010ea:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80010ee:	4013      	ands	r3, r2
 80010f0:	608b      	str	r3, [r1, #8]
 80010f2:	783b      	ldrb	r3, [r7, #0]
 80010f4:	461a      	mov	r2, r3
 80010f6:	4b5c      	ldr	r3, [pc, #368]	; (8001268 <GPIO_Init+0x39c>)
 80010f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80010fc:	689b      	ldr	r3, [r3, #8]
 80010fe:	78fa      	ldrb	r2, [r7, #3]
 8001100:	4611      	mov	r1, r2
 8001102:	787a      	ldrb	r2, [r7, #1]
 8001104:	0052      	lsls	r2, r2, #1
 8001106:	fa01 f202 	lsl.w	r2, r1, r2
 800110a:	4611      	mov	r1, r2
 800110c:	783a      	ldrb	r2, [r7, #0]
 800110e:	4610      	mov	r0, r2
 8001110:	4a55      	ldr	r2, [pc, #340]	; (8001268 <GPIO_Init+0x39c>)
 8001112:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8001116:	430b      	orrs	r3, r1
 8001118:	6093      	str	r3, [r2, #8]
			MUL2PK (GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,1),
			GPIOHandle.GPIO_PinConfig.GPIO_PinSpeed);

	//3. configure the pupd settings

	MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->PUPDR, 2,
 800111a:	783b      	ldrb	r3, [r7, #0]
 800111c:	461a      	mov	r2, r3
 800111e:	4b52      	ldr	r3, [pc, #328]	; (8001268 <GPIO_Init+0x39c>)
 8001120:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001124:	68da      	ldr	r2, [r3, #12]
 8001126:	4b51      	ldr	r3, [pc, #324]	; (800126c <GPIO_Init+0x3a0>)
 8001128:	6859      	ldr	r1, [r3, #4]
 800112a:	787b      	ldrb	r3, [r7, #1]
 800112c:	005b      	lsls	r3, r3, #1
 800112e:	fa01 f303 	lsl.w	r3, r1, r3
 8001132:	43db      	mvns	r3, r3
 8001134:	7839      	ldrb	r1, [r7, #0]
 8001136:	4608      	mov	r0, r1
 8001138:	494b      	ldr	r1, [pc, #300]	; (8001268 <GPIO_Init+0x39c>)
 800113a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 800113e:	4013      	ands	r3, r2
 8001140:	60cb      	str	r3, [r1, #12]
 8001142:	783b      	ldrb	r3, [r7, #0]
 8001144:	461a      	mov	r2, r3
 8001146:	4b48      	ldr	r3, [pc, #288]	; (8001268 <GPIO_Init+0x39c>)
 8001148:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800114c:	68db      	ldr	r3, [r3, #12]
 800114e:	793a      	ldrb	r2, [r7, #4]
 8001150:	4611      	mov	r1, r2
 8001152:	787a      	ldrb	r2, [r7, #1]
 8001154:	0052      	lsls	r2, r2, #1
 8001156:	fa01 f202 	lsl.w	r2, r1, r2
 800115a:	4611      	mov	r1, r2
 800115c:	783a      	ldrb	r2, [r7, #0]
 800115e:	4610      	mov	r0, r2
 8001160:	4a41      	ldr	r2, [pc, #260]	; (8001268 <GPIO_Init+0x39c>)
 8001162:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8001166:	430b      	orrs	r3, r1
 8001168:	60d3      	str	r3, [r2, #12]
			MUL2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,1),
			GPIOHandle.GPIO_PinConfig.GPIO_PinPuPdControl);

	//4. configure the optype
	MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->OTYPER, 2,
 800116a:	783b      	ldrb	r3, [r7, #0]
 800116c:	461a      	mov	r2, r3
 800116e:	4b3e      	ldr	r3, [pc, #248]	; (8001268 <GPIO_Init+0x39c>)
 8001170:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001174:	685a      	ldr	r2, [r3, #4]
 8001176:	4b3d      	ldr	r3, [pc, #244]	; (800126c <GPIO_Init+0x3a0>)
 8001178:	685b      	ldr	r3, [r3, #4]
 800117a:	7879      	ldrb	r1, [r7, #1]
 800117c:	408b      	lsls	r3, r1
 800117e:	43db      	mvns	r3, r3
 8001180:	7839      	ldrb	r1, [r7, #0]
 8001182:	4608      	mov	r0, r1
 8001184:	4938      	ldr	r1, [pc, #224]	; (8001268 <GPIO_Init+0x39c>)
 8001186:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 800118a:	4013      	ands	r3, r2
 800118c:	604b      	str	r3, [r1, #4]
 800118e:	783b      	ldrb	r3, [r7, #0]
 8001190:	461a      	mov	r2, r3
 8001192:	4b35      	ldr	r3, [pc, #212]	; (8001268 <GPIO_Init+0x39c>)
 8001194:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001198:	685b      	ldr	r3, [r3, #4]
 800119a:	797a      	ldrb	r2, [r7, #5]
 800119c:	4611      	mov	r1, r2
 800119e:	787a      	ldrb	r2, [r7, #1]
 80011a0:	fa01 f202 	lsl.w	r2, r1, r2
 80011a4:	4611      	mov	r1, r2
 80011a6:	783a      	ldrb	r2, [r7, #0]
 80011a8:	4610      	mov	r0, r2
 80011aa:	4a2f      	ldr	r2, [pc, #188]	; (8001268 <GPIO_Init+0x39c>)
 80011ac:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 80011b0:	430b      	orrs	r3, r1
 80011b2:	6053      	str	r3, [r2, #4]
			GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,
			GPIOHandle.GPIO_PinConfig.GPIO_PinOPType);

	//5. configure the alt functionality
	if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 80011b4:	78bb      	ldrb	r3, [r7, #2]
 80011b6:	2b02      	cmp	r3, #2
 80011b8:	d150      	bne.n	800125c <GPIO_Init+0x390>
		//configure the alt function registers.
		MODIFY_KBITS(
 80011ba:	783b      	ldrb	r3, [r7, #0]
 80011bc:	461a      	mov	r2, r3
 80011be:	4b2a      	ldr	r3, [pc, #168]	; (8001268 <GPIO_Init+0x39c>)
 80011c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80011c4:	461a      	mov	r2, r3
 80011c6:	787b      	ldrb	r3, [r7, #1]
 80011c8:	08db      	lsrs	r3, r3, #3
 80011ca:	b2db      	uxtb	r3, r3
 80011cc:	3308      	adds	r3, #8
 80011ce:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80011d2:	4b26      	ldr	r3, [pc, #152]	; (800126c <GPIO_Init+0x3a0>)
 80011d4:	68d9      	ldr	r1, [r3, #12]
 80011d6:	787b      	ldrb	r3, [r7, #1]
 80011d8:	4618      	mov	r0, r3
 80011da:	4b24      	ldr	r3, [pc, #144]	; (800126c <GPIO_Init+0x3a0>)
 80011dc:	689b      	ldr	r3, [r3, #8]
 80011de:	4003      	ands	r3, r0
 80011e0:	fa01 f303 	lsl.w	r3, r1, r3
 80011e4:	43db      	mvns	r3, r3
 80011e6:	7839      	ldrb	r1, [r7, #0]
 80011e8:	4608      	mov	r0, r1
 80011ea:	491f      	ldr	r1, [pc, #124]	; (8001268 <GPIO_Init+0x39c>)
 80011ec:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80011f0:	4608      	mov	r0, r1
 80011f2:	7879      	ldrb	r1, [r7, #1]
 80011f4:	08c9      	lsrs	r1, r1, #3
 80011f6:	b2c9      	uxtb	r1, r1
 80011f8:	401a      	ands	r2, r3
 80011fa:	f101 0308 	add.w	r3, r1, #8
 80011fe:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8001202:	783b      	ldrb	r3, [r7, #0]
 8001204:	461a      	mov	r2, r3
 8001206:	4b18      	ldr	r3, [pc, #96]	; (8001268 <GPIO_Init+0x39c>)
 8001208:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800120c:	461a      	mov	r2, r3
 800120e:	787b      	ldrb	r3, [r7, #1]
 8001210:	08db      	lsrs	r3, r3, #3
 8001212:	b2db      	uxtb	r3, r3
 8001214:	3308      	adds	r3, #8
 8001216:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800121a:	79ba      	ldrb	r2, [r7, #6]
 800121c:	4611      	mov	r1, r2
 800121e:	787a      	ldrb	r2, [r7, #1]
 8001220:	4610      	mov	r0, r2
 8001222:	4a12      	ldr	r2, [pc, #72]	; (800126c <GPIO_Init+0x3a0>)
 8001224:	6892      	ldr	r2, [r2, #8]
 8001226:	4002      	ands	r2, r0
 8001228:	0092      	lsls	r2, r2, #2
 800122a:	4091      	lsls	r1, r2
 800122c:	787a      	ldrb	r2, [r7, #1]
 800122e:	4610      	mov	r0, r2
 8001230:	4a0e      	ldr	r2, [pc, #56]	; (800126c <GPIO_Init+0x3a0>)
 8001232:	6892      	ldr	r2, [r2, #8]
 8001234:	4002      	ands	r2, r0
 8001236:	fa01 f202 	lsl.w	r2, r1, r2
 800123a:	4614      	mov	r4, r2
 800123c:	783a      	ldrb	r2, [r7, #0]
 800123e:	4611      	mov	r1, r2
 8001240:	4a09      	ldr	r2, [pc, #36]	; (8001268 <GPIO_Init+0x39c>)
 8001242:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001246:	4611      	mov	r1, r2
 8001248:	787a      	ldrb	r2, [r7, #1]
 800124a:	08d2      	lsrs	r2, r2, #3
 800124c:	b2d2      	uxtb	r2, r2
 800124e:	4610      	mov	r0, r2
 8001250:	ea43 0204 	orr.w	r2, r3, r4
 8001254:	f100 0308 	add.w	r3, r0, #8
 8001258:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				4, MOD2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,3),
				(GPIOHandle.GPIO_PinConfig.GPIO_PinAltFunMode << MUL2PK(MOD2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,3),2)));

	}

}
 800125c:	bf00      	nop
 800125e:	3708      	adds	r7, #8
 8001260:	46bd      	mov	sp, r7
 8001262:	bc90      	pop	{r4, r7}
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	20000000 	.word	0x20000000
 800126c:	2000016c 	.word	0x2000016c

08001270 <GPIO_ReadFromInputPin>:
 * @return            -   0 or 1
 *
 * @Note              -

 */
uint8_t GPIO_ReadFromInputPin(uint8_t GPIOx, uint8_t PinNumber) {
 8001270:	b480      	push	{r7}
 8001272:	b083      	sub	sp, #12
 8001274:	af00      	add	r7, sp, #0
 8001276:	4603      	mov	r3, r0
 8001278:	460a      	mov	r2, r1
 800127a:	71fb      	strb	r3, [r7, #7]
 800127c:	4613      	mov	r3, r2
 800127e:	71bb      	strb	r3, [r7, #6]
	return (uint8_t) GET_BIT_N(GPIOx_ptr(GPIOx)->IDR, PinNumber);
 8001280:	79fb      	ldrb	r3, [r7, #7]
 8001282:	4a08      	ldr	r2, [pc, #32]	; (80012a4 <GPIO_ReadFromInputPin+0x34>)
 8001284:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001288:	691a      	ldr	r2, [r3, #16]
 800128a:	79bb      	ldrb	r3, [r7, #6]
 800128c:	fa22 f303 	lsr.w	r3, r2, r3
 8001290:	b2db      	uxtb	r3, r3
 8001292:	f003 0301 	and.w	r3, r3, #1
 8001296:	b2db      	uxtb	r3, r3
}
 8001298:	4618      	mov	r0, r3
 800129a:	370c      	adds	r7, #12
 800129c:	46bd      	mov	sp, r7
 800129e:	bc80      	pop	{r7}
 80012a0:	4770      	bx	lr
 80012a2:	bf00      	nop
 80012a4:	20000000 	.word	0x20000000

080012a8 <RCC_GetPCLK1Value>:
uint8_t APB1_PreScaler[4] = { 2, 4 , 8, 16};



uint32_t RCC_GetPCLK1Value(void)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	b084      	sub	sp, #16
 80012ac:	af00      	add	r7, sp, #0
	uint32_t pclk1,SystemClk;

	uint8_t clksrc,temp,ahbp,apb1p;

	clksrc = ((RCC_ptr->CFGR >> 2) & 0x3);
 80012ae:	4b28      	ldr	r3, [pc, #160]	; (8001350 <RCC_GetPCLK1Value+0xa8>)
 80012b0:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80012b4:	689b      	ldr	r3, [r3, #8]
 80012b6:	089b      	lsrs	r3, r3, #2
 80012b8:	b2db      	uxtb	r3, r3
 80012ba:	f003 0303 	and.w	r3, r3, #3
 80012be:	727b      	strb	r3, [r7, #9]

	if(clksrc == 0 )
 80012c0:	7a7b      	ldrb	r3, [r7, #9]
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d102      	bne.n	80012cc <RCC_GetPCLK1Value+0x24>
	{
		SystemClk = 16000000;
 80012c6:	4b23      	ldr	r3, [pc, #140]	; (8001354 <RCC_GetPCLK1Value+0xac>)
 80012c8:	60fb      	str	r3, [r7, #12]
 80012ca:	e00b      	b.n	80012e4 <RCC_GetPCLK1Value+0x3c>
	}else if(clksrc == 1)
 80012cc:	7a7b      	ldrb	r3, [r7, #9]
 80012ce:	2b01      	cmp	r3, #1
 80012d0:	d102      	bne.n	80012d8 <RCC_GetPCLK1Value+0x30>
	{
		SystemClk = 8000000;
 80012d2:	4b21      	ldr	r3, [pc, #132]	; (8001358 <RCC_GetPCLK1Value+0xb0>)
 80012d4:	60fb      	str	r3, [r7, #12]
 80012d6:	e005      	b.n	80012e4 <RCC_GetPCLK1Value+0x3c>
	}else if (clksrc == 2)
 80012d8:	7a7b      	ldrb	r3, [r7, #9]
 80012da:	2b02      	cmp	r3, #2
 80012dc:	d102      	bne.n	80012e4 <RCC_GetPCLK1Value+0x3c>
	{
		SystemClk = RCC_GetPLLOutputClock();
 80012de:	f000 f897 	bl	8001410 <RCC_GetPLLOutputClock>
 80012e2:	60f8      	str	r0, [r7, #12]
	}

	//for ahb
	temp = ((RCC_ptr->CFGR >> 4 ) & 0xF);
 80012e4:	4b1a      	ldr	r3, [pc, #104]	; (8001350 <RCC_GetPCLK1Value+0xa8>)
 80012e6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80012ea:	689b      	ldr	r3, [r3, #8]
 80012ec:	091b      	lsrs	r3, r3, #4
 80012ee:	b2db      	uxtb	r3, r3
 80012f0:	f003 030f 	and.w	r3, r3, #15
 80012f4:	723b      	strb	r3, [r7, #8]

	if(temp < 8)
 80012f6:	7a3b      	ldrb	r3, [r7, #8]
 80012f8:	2b07      	cmp	r3, #7
 80012fa:	d802      	bhi.n	8001302 <RCC_GetPCLK1Value+0x5a>
	{
		ahbp = 1;
 80012fc:	2301      	movs	r3, #1
 80012fe:	72fb      	strb	r3, [r7, #11]
 8001300:	e005      	b.n	800130e <RCC_GetPCLK1Value+0x66>
	}else
	{
		ahbp = AHB_PreScaler[temp-8];
 8001302:	7a3b      	ldrb	r3, [r7, #8]
 8001304:	3b08      	subs	r3, #8
 8001306:	4a15      	ldr	r2, [pc, #84]	; (800135c <RCC_GetPCLK1Value+0xb4>)
 8001308:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800130c:	72fb      	strb	r3, [r7, #11]
	}



	//apb1
	temp = ((RCC_ptr->CFGR >> 10 ) & 0x7);
 800130e:	4b10      	ldr	r3, [pc, #64]	; (8001350 <RCC_GetPCLK1Value+0xa8>)
 8001310:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8001314:	689b      	ldr	r3, [r3, #8]
 8001316:	0a9b      	lsrs	r3, r3, #10
 8001318:	b2db      	uxtb	r3, r3
 800131a:	f003 0307 	and.w	r3, r3, #7
 800131e:	723b      	strb	r3, [r7, #8]

	if(temp < 4)
 8001320:	7a3b      	ldrb	r3, [r7, #8]
 8001322:	2b03      	cmp	r3, #3
 8001324:	d802      	bhi.n	800132c <RCC_GetPCLK1Value+0x84>
	{
		apb1p = 1;
 8001326:	2301      	movs	r3, #1
 8001328:	72bb      	strb	r3, [r7, #10]
 800132a:	e004      	b.n	8001336 <RCC_GetPCLK1Value+0x8e>
	}else
	{
		apb1p = APB1_PreScaler[temp-4];
 800132c:	7a3b      	ldrb	r3, [r7, #8]
 800132e:	3b04      	subs	r3, #4
 8001330:	4a0b      	ldr	r2, [pc, #44]	; (8001360 <RCC_GetPCLK1Value+0xb8>)
 8001332:	5cd3      	ldrb	r3, [r2, r3]
 8001334:	72bb      	strb	r3, [r7, #10]
	}

	pclk1 =  (SystemClk / ahbp) /apb1p;
 8001336:	7afb      	ldrb	r3, [r7, #11]
 8001338:	68fa      	ldr	r2, [r7, #12]
 800133a:	fbb2 f2f3 	udiv	r2, r2, r3
 800133e:	7abb      	ldrb	r3, [r7, #10]
 8001340:	fbb2 f3f3 	udiv	r3, r2, r3
 8001344:	607b      	str	r3, [r7, #4]

	return pclk1;
 8001346:	687b      	ldr	r3, [r7, #4]
}
 8001348:	4618      	mov	r0, r3
 800134a:	3710      	adds	r7, #16
 800134c:	46bd      	mov	sp, r7
 800134e:	bd80      	pop	{r7, pc}
 8001350:	20000000 	.word	0x20000000
 8001354:	00f42400 	.word	0x00f42400
 8001358:	007a1200 	.word	0x007a1200
 800135c:	200001ec 	.word	0x200001ec
 8001360:	200001fc 	.word	0x200001fc

08001364 <RCC_GetPCLK2Value>:
 *
 * @Note              -

 */
uint32_t RCC_GetPCLK2Value(void)
{
 8001364:	b480      	push	{r7}
 8001366:	b085      	sub	sp, #20
 8001368:	af00      	add	r7, sp, #0
	uint32_t SystemClock=0,tmp,pclk2;
 800136a:	2300      	movs	r3, #0
 800136c:	60fb      	str	r3, [r7, #12]
	uint8_t clk_src = ( RCC_ptr->CFGR >> 2) & 0X3;
 800136e:	4b23      	ldr	r3, [pc, #140]	; (80013fc <RCC_GetPCLK2Value+0x98>)
 8001370:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8001374:	689b      	ldr	r3, [r3, #8]
 8001376:	089b      	lsrs	r3, r3, #2
 8001378:	b2db      	uxtb	r3, r3
 800137a:	f003 0303 	and.w	r3, r3, #3
 800137e:	727b      	strb	r3, [r7, #9]

	uint8_t ahbp,apb2p;

	if(clk_src == 0)
 8001380:	7a7b      	ldrb	r3, [r7, #9]
 8001382:	2b00      	cmp	r3, #0
 8001384:	d102      	bne.n	800138c <RCC_GetPCLK2Value+0x28>
	{
		SystemClock = 16000000;
 8001386:	4b1e      	ldr	r3, [pc, #120]	; (8001400 <RCC_GetPCLK2Value+0x9c>)
 8001388:	60fb      	str	r3, [r7, #12]
 800138a:	e001      	b.n	8001390 <RCC_GetPCLK2Value+0x2c>
	}else
	{
		SystemClock = 8000000;
 800138c:	4b1d      	ldr	r3, [pc, #116]	; (8001404 <RCC_GetPCLK2Value+0xa0>)
 800138e:	60fb      	str	r3, [r7, #12]
	}
	tmp = (RCC_ptr->CFGR >> 4 ) & 0xF;
 8001390:	4b1a      	ldr	r3, [pc, #104]	; (80013fc <RCC_GetPCLK2Value+0x98>)
 8001392:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8001396:	689b      	ldr	r3, [r3, #8]
 8001398:	091b      	lsrs	r3, r3, #4
 800139a:	f003 030f 	and.w	r3, r3, #15
 800139e:	607b      	str	r3, [r7, #4]

	if(tmp < 0x08)
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	2b07      	cmp	r3, #7
 80013a4:	d802      	bhi.n	80013ac <RCC_GetPCLK2Value+0x48>
	{
		ahbp = 1;
 80013a6:	2301      	movs	r3, #1
 80013a8:	72fb      	strb	r3, [r7, #11]
 80013aa:	e005      	b.n	80013b8 <RCC_GetPCLK2Value+0x54>
	}else
	{
       ahbp = AHB_PreScaler[tmp-8];
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	3b08      	subs	r3, #8
 80013b0:	4a15      	ldr	r2, [pc, #84]	; (8001408 <RCC_GetPCLK2Value+0xa4>)
 80013b2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80013b6:	72fb      	strb	r3, [r7, #11]
	}

	tmp = (RCC_ptr->CFGR >> 13 ) & 0x7;
 80013b8:	4b10      	ldr	r3, [pc, #64]	; (80013fc <RCC_GetPCLK2Value+0x98>)
 80013ba:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80013be:	689b      	ldr	r3, [r3, #8]
 80013c0:	0b5b      	lsrs	r3, r3, #13
 80013c2:	f003 0307 	and.w	r3, r3, #7
 80013c6:	607b      	str	r3, [r7, #4]
	if(tmp < 0x04)
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	2b03      	cmp	r3, #3
 80013cc:	d802      	bhi.n	80013d4 <RCC_GetPCLK2Value+0x70>
	{
		apb2p = 1;
 80013ce:	2301      	movs	r3, #1
 80013d0:	72bb      	strb	r3, [r7, #10]
 80013d2:	e004      	b.n	80013de <RCC_GetPCLK2Value+0x7a>
	}else
	{
		apb2p = APB1_PreScaler[tmp-4];
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	3b04      	subs	r3, #4
 80013d8:	4a0c      	ldr	r2, [pc, #48]	; (800140c <RCC_GetPCLK2Value+0xa8>)
 80013da:	5cd3      	ldrb	r3, [r2, r3]
 80013dc:	72bb      	strb	r3, [r7, #10]
	}

	pclk2 = (SystemClock / ahbp )/ apb2p;
 80013de:	7afb      	ldrb	r3, [r7, #11]
 80013e0:	68fa      	ldr	r2, [r7, #12]
 80013e2:	fbb2 f2f3 	udiv	r2, r2, r3
 80013e6:	7abb      	ldrb	r3, [r7, #10]
 80013e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80013ec:	603b      	str	r3, [r7, #0]

	return pclk2;
 80013ee:	683b      	ldr	r3, [r7, #0]
}
 80013f0:	4618      	mov	r0, r3
 80013f2:	3714      	adds	r7, #20
 80013f4:	46bd      	mov	sp, r7
 80013f6:	bc80      	pop	{r7}
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	20000000 	.word	0x20000000
 8001400:	00f42400 	.word	0x00f42400
 8001404:	007a1200 	.word	0x007a1200
 8001408:	200001ec 	.word	0x200001ec
 800140c:	200001fc 	.word	0x200001fc

08001410 <RCC_GetPLLOutputClock>:

uint32_t  RCC_GetPLLOutputClock()
{
 8001410:	b480      	push	{r7}
 8001412:	af00      	add	r7, sp, #0

	return 0;
 8001414:	2300      	movs	r3, #0
}
 8001416:	4618      	mov	r0, r3
 8001418:	46bd      	mov	sp, r7
 800141a:	bc80      	pop	{r7}
 800141c:	4770      	bx	lr
	...

08001420 <USART_SetBaudRate>:
 *
 * @Note              -

 */
void USART_SetBaudRate(uint8_t USARTx, uint32_t BaudRate)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b088      	sub	sp, #32
 8001424:	af00      	add	r7, sp, #0
 8001426:	4603      	mov	r3, r0
 8001428:	6039      	str	r1, [r7, #0]
 800142a:	71fb      	strb	r3, [r7, #7]
	uint32_t usartdiv;

	//variables to hold Mantissa and Fraction values
	uint32_t M_part,F_part;

  uint32_t tempreg=0;
 800142c:	2300      	movs	r3, #0
 800142e:	613b      	str	r3, [r7, #16]

  //Get the value of APB bus clock in to the variable PCLKx
  if(USARTx == USART1 || USARTx == USART6)
 8001430:	79fb      	ldrb	r3, [r7, #7]
 8001432:	2b23      	cmp	r3, #35	; 0x23
 8001434:	d002      	beq.n	800143c <USART_SetBaudRate+0x1c>
 8001436:	79fb      	ldrb	r3, [r7, #7]
 8001438:	2b24      	cmp	r3, #36	; 0x24
 800143a:	d103      	bne.n	8001444 <USART_SetBaudRate+0x24>
  {
	   //USART1 and USART6 are hanging on APB2 bus
	   PCLKx = RCC_GetPCLK2Value();
 800143c:	f7ff ff92 	bl	8001364 <RCC_GetPCLK2Value>
 8001440:	61f8      	str	r0, [r7, #28]
 8001442:	e002      	b.n	800144a <USART_SetBaudRate+0x2a>
  }else
  {
	   PCLKx = RCC_GetPCLK1Value();
 8001444:	f7ff ff30 	bl	80012a8 <RCC_GetPCLK1Value>
 8001448:	61f8      	str	r0, [r7, #28]
  }

  //Check for OVER8 configuration bit
  if(USARTx_ptr(USARTx)->CR1 & (1 << USART_CR1_OVER8))
 800144a:	79fb      	ldrb	r3, [r7, #7]
 800144c:	4a2e      	ldr	r2, [pc, #184]	; (8001508 <USART_SetBaudRate+0xe8>)
 800144e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001452:	68db      	ldr	r3, [r3, #12]
 8001454:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001458:	2b00      	cmp	r3, #0
 800145a:	d00b      	beq.n	8001474 <USART_SetBaudRate+0x54>
  {
	   //OVER8 = 1 , over sampling by 8
	   usartdiv = ((25 * PCLKx) / (2 *BaudRate));
 800145c:	69fa      	ldr	r2, [r7, #28]
 800145e:	4613      	mov	r3, r2
 8001460:	009b      	lsls	r3, r3, #2
 8001462:	4413      	add	r3, r2
 8001464:	009a      	lsls	r2, r3, #2
 8001466:	441a      	add	r2, r3
 8001468:	683b      	ldr	r3, [r7, #0]
 800146a:	005b      	lsls	r3, r3, #1
 800146c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001470:	61bb      	str	r3, [r7, #24]
 8001472:	e00a      	b.n	800148a <USART_SetBaudRate+0x6a>
  }else
  {
	   //over sampling by 16
	   usartdiv = ((25 * PCLKx) / (4 *BaudRate));
 8001474:	69fa      	ldr	r2, [r7, #28]
 8001476:	4613      	mov	r3, r2
 8001478:	009b      	lsls	r3, r3, #2
 800147a:	4413      	add	r3, r2
 800147c:	009a      	lsls	r2, r3, #2
 800147e:	441a      	add	r2, r3
 8001480:	683b      	ldr	r3, [r7, #0]
 8001482:	009b      	lsls	r3, r3, #2
 8001484:	fbb2 f3f3 	udiv	r3, r2, r3
 8001488:	61bb      	str	r3, [r7, #24]
  }

  //Calculate the Mantissa part
  M_part = usartdiv/100;
 800148a:	69bb      	ldr	r3, [r7, #24]
 800148c:	4a1f      	ldr	r2, [pc, #124]	; (800150c <USART_SetBaudRate+0xec>)
 800148e:	fba2 2303 	umull	r2, r3, r2, r3
 8001492:	095b      	lsrs	r3, r3, #5
 8001494:	60fb      	str	r3, [r7, #12]

  //Place the Mantissa part in appropriate bit position . refer USART_BRR
  tempreg |= M_part << 4;
 8001496:	68fb      	ldr	r3, [r7, #12]
 8001498:	011b      	lsls	r3, r3, #4
 800149a:	693a      	ldr	r2, [r7, #16]
 800149c:	4313      	orrs	r3, r2
 800149e:	613b      	str	r3, [r7, #16]

  //Extract the fraction part
  F_part = (usartdiv - (M_part * 100));
 80014a0:	68fb      	ldr	r3, [r7, #12]
 80014a2:	2264      	movs	r2, #100	; 0x64
 80014a4:	fb02 f303 	mul.w	r3, r2, r3
 80014a8:	69ba      	ldr	r2, [r7, #24]
 80014aa:	1ad3      	subs	r3, r2, r3
 80014ac:	617b      	str	r3, [r7, #20]

  //Calculate the final fractional
  if(USARTx_ptr(USARTx)->CR1 & ( 1 << USART_CR1_OVER8))
 80014ae:	79fb      	ldrb	r3, [r7, #7]
 80014b0:	4a15      	ldr	r2, [pc, #84]	; (8001508 <USART_SetBaudRate+0xe8>)
 80014b2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80014b6:	68db      	ldr	r3, [r3, #12]
 80014b8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d00a      	beq.n	80014d6 <USART_SetBaudRate+0xb6>
   {
	  //OVER8 = 1 , over sampling by 8
	  F_part = ((( F_part * 8)+ 50) / 100)& ((uint8_t)0x07);
 80014c0:	697b      	ldr	r3, [r7, #20]
 80014c2:	00db      	lsls	r3, r3, #3
 80014c4:	3332      	adds	r3, #50	; 0x32
 80014c6:	4a11      	ldr	r2, [pc, #68]	; (800150c <USART_SetBaudRate+0xec>)
 80014c8:	fba2 2303 	umull	r2, r3, r2, r3
 80014cc:	095b      	lsrs	r3, r3, #5
 80014ce:	f003 0307 	and.w	r3, r3, #7
 80014d2:	617b      	str	r3, [r7, #20]
 80014d4:	e009      	b.n	80014ea <USART_SetBaudRate+0xca>

   }else
   {
	   //over sampling by 16
	   F_part = ((( F_part * 16)+ 50) / 100) & ((uint8_t)0x0F);
 80014d6:	697b      	ldr	r3, [r7, #20]
 80014d8:	011b      	lsls	r3, r3, #4
 80014da:	3332      	adds	r3, #50	; 0x32
 80014dc:	4a0b      	ldr	r2, [pc, #44]	; (800150c <USART_SetBaudRate+0xec>)
 80014de:	fba2 2303 	umull	r2, r3, r2, r3
 80014e2:	095b      	lsrs	r3, r3, #5
 80014e4:	f003 030f 	and.w	r3, r3, #15
 80014e8:	617b      	str	r3, [r7, #20]

   }

  //Place the fractional part in appropriate bit position . refer USART_BRR
  tempreg |= F_part;
 80014ea:	693a      	ldr	r2, [r7, #16]
 80014ec:	697b      	ldr	r3, [r7, #20]
 80014ee:	4313      	orrs	r3, r2
 80014f0:	613b      	str	r3, [r7, #16]

  //copy the value of tempreg in to BRR register
  USARTx_ptr(USARTx)->BRR = tempreg;
 80014f2:	79fb      	ldrb	r3, [r7, #7]
 80014f4:	4a04      	ldr	r2, [pc, #16]	; (8001508 <USART_SetBaudRate+0xe8>)
 80014f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80014fa:	461a      	mov	r2, r3
 80014fc:	693b      	ldr	r3, [r7, #16]
 80014fe:	6093      	str	r3, [r2, #8]
}
 8001500:	bf00      	nop
 8001502:	3720      	adds	r7, #32
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}
 8001508:	20000000 	.word	0x20000000
 800150c:	51eb851f 	.word	0x51eb851f

08001510 <USART_Init>:
 *
 * @Note              -

 */
void USART_Init(USART_Handle_t USARTHandle)
{
 8001510:	b084      	sub	sp, #16
 8001512:	b580      	push	{r7, lr}
 8001514:	b082      	sub	sp, #8
 8001516:	af00      	add	r7, sp, #0
 8001518:	f107 0c10 	add.w	ip, r7, #16
 800151c:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}

	//Temporary variable
	uint32_t tempreg=0;
 8001520:	2300      	movs	r3, #0
 8001522:	607b      	str	r3, [r7, #4]

/******************************** Configuration of CR1******************************************/

	//Implement the code to enable the Clock for given USART peripheral
	 USART_PeriClockControl(USARTHandle.USARTx,ENABLE);
 8001524:	7c3b      	ldrb	r3, [r7, #16]
 8001526:	2101      	movs	r1, #1
 8001528:	4618      	mov	r0, r3
 800152a:	f000 f8a9 	bl	8001680 <USART_PeriClockControl>

	//Enable USART Tx and Rx engines according to the USART_Mode configuration item
	if ( USARTHandle.USART_Config.USART_Mode == USART_MODE_ONLY_RX)
 800152e:	7d3b      	ldrb	r3, [r7, #20]
 8001530:	2b01      	cmp	r3, #1
 8001532:	d104      	bne.n	800153e <USART_Init+0x2e>
	{
		//Implement the code to enable the Receiver bit field
		tempreg|= (1 << USART_CR1_RE);
 8001534:	687b      	ldr	r3, [r7, #4]
 8001536:	f043 0304 	orr.w	r3, r3, #4
 800153a:	607b      	str	r3, [r7, #4]
 800153c:	e00e      	b.n	800155c <USART_Init+0x4c>
	}else if (USARTHandle.USART_Config.USART_Mode == USART_MODE_ONLY_TX)
 800153e:	7d3b      	ldrb	r3, [r7, #20]
 8001540:	2b00      	cmp	r3, #0
 8001542:	d104      	bne.n	800154e <USART_Init+0x3e>
	{
		//Implement the code to enable the Transmitter bit field
		tempreg |= ( 1 << USART_CR1_TE );
 8001544:	687b      	ldr	r3, [r7, #4]
 8001546:	f043 0308 	orr.w	r3, r3, #8
 800154a:	607b      	str	r3, [r7, #4]
 800154c:	e006      	b.n	800155c <USART_Init+0x4c>

	}else if (USARTHandle.USART_Config.USART_Mode == USART_MODE_TXRX)
 800154e:	7d3b      	ldrb	r3, [r7, #20]
 8001550:	2b02      	cmp	r3, #2
 8001552:	d103      	bne.n	800155c <USART_Init+0x4c>
	{
		//Implement the code to enable the both Transmitter and Receiver bit fields
		tempreg |= ( ( 1 << USART_CR1_RE) | ( 1 << USART_CR1_TE) );
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	f043 030c 	orr.w	r3, r3, #12
 800155a:	607b      	str	r3, [r7, #4]
	}

    //Implement the code to configure the Word length configuration item
	tempreg |= USARTHandle.USART_Config.USART_WordLength << USART_CR1_M ;
 800155c:	7f7b      	ldrb	r3, [r7, #29]
 800155e:	031b      	lsls	r3, r3, #12
 8001560:	461a      	mov	r2, r3
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	4313      	orrs	r3, r2
 8001566:	607b      	str	r3, [r7, #4]


    //Configuration of parity control bit fields
	if ( USARTHandle.USART_Config.USART_ParityControl == USART_PARITY_EN_EVEN)
 8001568:	7fbb      	ldrb	r3, [r7, #30]
 800156a:	2b01      	cmp	r3, #1
 800156c:	d104      	bne.n	8001578 <USART_Init+0x68>
	{
		//Implement the code to enable the parity control
		tempreg |= ( 1 << USART_CR1_PCE);
 800156e:	687b      	ldr	r3, [r7, #4]
 8001570:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001574:	607b      	str	r3, [r7, #4]
 8001576:	e00a      	b.n	800158e <USART_Init+0x7e>

		//Implement the code to enable EVEN parity
		//Not required because by default EVEN parity will be selected once you enable the parity control

	}else if (USARTHandle.USART_Config.USART_ParityControl == USART_PARITY_EN_ODD )
 8001578:	7fbb      	ldrb	r3, [r7, #30]
 800157a:	2b02      	cmp	r3, #2
 800157c:	d107      	bne.n	800158e <USART_Init+0x7e>
	{
		//Implement the code to enable the parity control
	    tempreg |= ( 1 << USART_CR1_PCE);
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001584:	607b      	str	r3, [r7, #4]

	    //Implement the code to enable ODD parity
	    tempreg |= ( 1 << USART_CR1_PS);
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800158c:	607b      	str	r3, [r7, #4]

	}

   //Program the CR1 register
	USARTx_ptr(USARTHandle.USARTx)->CR1 = tempreg;
 800158e:	7c3b      	ldrb	r3, [r7, #16]
 8001590:	461a      	mov	r2, r3
 8001592:	4b24      	ldr	r3, [pc, #144]	; (8001624 <USART_Init+0x114>)
 8001594:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001598:	461a      	mov	r2, r3
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	60d3      	str	r3, [r2, #12]

/******************************** Configuration of CR2******************************************/

	tempreg=0;
 800159e:	2300      	movs	r3, #0
 80015a0:	607b      	str	r3, [r7, #4]

	//Implement the code to configure the number of stop bits inserted during USART frame transmission
	tempreg |= USARTHandle.USART_Config.USART_NoOfStopBits << USART_CR2_STOP;
 80015a2:	7f3b      	ldrb	r3, [r7, #28]
 80015a4:	031b      	lsls	r3, r3, #12
 80015a6:	461a      	mov	r2, r3
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	4313      	orrs	r3, r2
 80015ac:	607b      	str	r3, [r7, #4]

	//Program the CR2 register
	USARTx_ptr(USARTHandle.USARTx)->CR2 = tempreg;
 80015ae:	7c3b      	ldrb	r3, [r7, #16]
 80015b0:	461a      	mov	r2, r3
 80015b2:	4b1c      	ldr	r3, [pc, #112]	; (8001624 <USART_Init+0x114>)
 80015b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80015b8:	461a      	mov	r2, r3
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	6113      	str	r3, [r2, #16]

/******************************** Configuration of CR3******************************************/

	tempreg=0;
 80015be:	2300      	movs	r3, #0
 80015c0:	607b      	str	r3, [r7, #4]

	//Configuration of USART hardware flow control
	if ( USARTHandle.USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS)
 80015c2:	7ffb      	ldrb	r3, [r7, #31]
 80015c4:	2b01      	cmp	r3, #1
 80015c6:	d104      	bne.n	80015d2 <USART_Init+0xc2>
	{
		//Implement the code to enable CTS flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80015ce:	607b      	str	r3, [r7, #4]
 80015d0:	e012      	b.n	80015f8 <USART_Init+0xe8>


	}else if (USARTHandle.USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_RTS)
 80015d2:	7ffb      	ldrb	r3, [r7, #31]
 80015d4:	2b02      	cmp	r3, #2
 80015d6:	d104      	bne.n	80015e2 <USART_Init+0xd2>
	{
		//Implement the code to enable RTS flow control
		tempreg |= ( 1 << USART_CR3_RTSE);
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80015de:	607b      	str	r3, [r7, #4]
 80015e0:	e00a      	b.n	80015f8 <USART_Init+0xe8>

	}else if (USARTHandle.USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS_RTS)
 80015e2:	7ffb      	ldrb	r3, [r7, #31]
 80015e4:	2b03      	cmp	r3, #3
 80015e6:	d107      	bne.n	80015f8 <USART_Init+0xe8>
	{
		//Implement the code to enable both CTS and RTS Flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80015ee:	607b      	str	r3, [r7, #4]
		tempreg |= ( 1 << USART_CR3_RTSE);
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80015f6:	607b      	str	r3, [r7, #4]
	}


	USARTx_ptr(USARTHandle.USARTx)->CR3 = tempreg;
 80015f8:	7c3b      	ldrb	r3, [r7, #16]
 80015fa:	461a      	mov	r2, r3
 80015fc:	4b09      	ldr	r3, [pc, #36]	; (8001624 <USART_Init+0x114>)
 80015fe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001602:	461a      	mov	r2, r3
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	6153      	str	r3, [r2, #20]

/******************************** Configuration of BRR(Baudrate register)******************************************/

	//Implement the code to configure the baud rate
	//We will cover this in the lecture. No action required here
	USART_SetBaudRate(USARTHandle.USARTx,USARTHandle.USART_Config.USART_Baud);
 8001608:	7c3b      	ldrb	r3, [r7, #16]
 800160a:	69ba      	ldr	r2, [r7, #24]
 800160c:	4611      	mov	r1, r2
 800160e:	4618      	mov	r0, r3
 8001610:	f7ff ff06 	bl	8001420 <USART_SetBaudRate>

}
 8001614:	bf00      	nop
 8001616:	3708      	adds	r7, #8
 8001618:	46bd      	mov	sp, r7
 800161a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800161e:	b004      	add	sp, #16
 8001620:	4770      	bx	lr
 8001622:	bf00      	nop
 8001624:	20000000 	.word	0x20000000

08001628 <USART_PeripheralControl>:
 *
 * @Note              -

 */
void USART_PeripheralControl(uint8_t USARTx, uint8_t Cmd)
{
 8001628:	b480      	push	{r7}
 800162a:	b083      	sub	sp, #12
 800162c:	af00      	add	r7, sp, #0
 800162e:	4603      	mov	r3, r0
 8001630:	460a      	mov	r2, r1
 8001632:	71fb      	strb	r3, [r7, #7]
 8001634:	4613      	mov	r3, r2
 8001636:	71bb      	strb	r3, [r7, #6]
	if(Cmd == ENABLE)
 8001638:	79bb      	ldrb	r3, [r7, #6]
 800163a:	2b01      	cmp	r3, #1
 800163c:	d10c      	bne.n	8001658 <USART_PeripheralControl+0x30>
	{
		USARTx_ptr(USARTx)->CR1 |= (1 << 13);
 800163e:	79fb      	ldrb	r3, [r7, #7]
 8001640:	4a0e      	ldr	r2, [pc, #56]	; (800167c <USART_PeripheralControl+0x54>)
 8001642:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001646:	68db      	ldr	r3, [r3, #12]
 8001648:	79fa      	ldrb	r2, [r7, #7]
 800164a:	490c      	ldr	r1, [pc, #48]	; (800167c <USART_PeripheralControl+0x54>)
 800164c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001650:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001654:	60d3      	str	r3, [r2, #12]
	}else
	{
		USARTx_ptr(USARTx)->CR1 &= ~(1 << 13);
	}

}
 8001656:	e00b      	b.n	8001670 <USART_PeripheralControl+0x48>
		USARTx_ptr(USARTx)->CR1 &= ~(1 << 13);
 8001658:	79fb      	ldrb	r3, [r7, #7]
 800165a:	4a08      	ldr	r2, [pc, #32]	; (800167c <USART_PeripheralControl+0x54>)
 800165c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001660:	68db      	ldr	r3, [r3, #12]
 8001662:	79fa      	ldrb	r2, [r7, #7]
 8001664:	4905      	ldr	r1, [pc, #20]	; (800167c <USART_PeripheralControl+0x54>)
 8001666:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800166a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800166e:	60d3      	str	r3, [r2, #12]
}
 8001670:	bf00      	nop
 8001672:	370c      	adds	r7, #12
 8001674:	46bd      	mov	sp, r7
 8001676:	bc80      	pop	{r7}
 8001678:	4770      	bx	lr
 800167a:	bf00      	nop
 800167c:	20000000 	.word	0x20000000

08001680 <USART_PeriClockControl>:
 *
 * @Note              -

 */
void USART_PeriClockControl(uint8_t USARTx, uint8_t EnorDi)
{
 8001680:	b480      	push	{r7}
 8001682:	b083      	sub	sp, #12
 8001684:	af00      	add	r7, sp, #0
 8001686:	4603      	mov	r3, r0
 8001688:	460a      	mov	r2, r1
 800168a:	71fb      	strb	r3, [r7, #7]
 800168c:	4613      	mov	r3, r2
 800168e:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8001690:	79bb      	ldrb	r3, [r7, #6]
 8001692:	2b01      	cmp	r3, #1
 8001694:	d136      	bne.n	8001704 <USART_PeriClockControl+0x84>
	{
		if(USARTx == USART1)
 8001696:	79fb      	ldrb	r3, [r7, #7]
 8001698:	2b23      	cmp	r3, #35	; 0x23
 800169a:	d10a      	bne.n	80016b2 <USART_PeriClockControl+0x32>
		{
			USART1_PCCK_EN();
 800169c:	4b1c      	ldr	r3, [pc, #112]	; (8001710 <USART_PeriClockControl+0x90>)
 800169e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80016a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016a4:	4a1a      	ldr	r2, [pc, #104]	; (8001710 <USART_PeriClockControl+0x90>)
 80016a6:	f8d2 20f8 	ldr.w	r2, [r2, #248]	; 0xf8
 80016aa:	f043 0310 	orr.w	r3, r3, #16
 80016ae:	6453      	str	r3, [r2, #68]	; 0x44
	else
	{
		//TODO
	}

}
 80016b0:	e028      	b.n	8001704 <USART_PeriClockControl+0x84>
		}else if (USARTx == USART2)
 80016b2:	79fb      	ldrb	r3, [r7, #7]
 80016b4:	2b11      	cmp	r3, #17
 80016b6:	d10a      	bne.n	80016ce <USART_PeriClockControl+0x4e>
			USART2_PCCK_EN();
 80016b8:	4b15      	ldr	r3, [pc, #84]	; (8001710 <USART_PeriClockControl+0x90>)
 80016ba:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80016be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016c0:	4a13      	ldr	r2, [pc, #76]	; (8001710 <USART_PeriClockControl+0x90>)
 80016c2:	f8d2 20f8 	ldr.w	r2, [r2, #248]	; 0xf8
 80016c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80016ca:	6413      	str	r3, [r2, #64]	; 0x40
}
 80016cc:	e01a      	b.n	8001704 <USART_PeriClockControl+0x84>
		}else if (USARTx == USART3)
 80016ce:	79fb      	ldrb	r3, [r7, #7]
 80016d0:	2b12      	cmp	r3, #18
 80016d2:	d10a      	bne.n	80016ea <USART_PeriClockControl+0x6a>
			USART3_PCCK_EN();
 80016d4:	4b0e      	ldr	r3, [pc, #56]	; (8001710 <USART_PeriClockControl+0x90>)
 80016d6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80016da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016dc:	4a0c      	ldr	r2, [pc, #48]	; (8001710 <USART_PeriClockControl+0x90>)
 80016de:	f8d2 20f8 	ldr.w	r2, [r2, #248]	; 0xf8
 80016e2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80016e6:	6413      	str	r3, [r2, #64]	; 0x40
}
 80016e8:	e00c      	b.n	8001704 <USART_PeriClockControl+0x84>
		else if (USARTx == UART4)
 80016ea:	79fb      	ldrb	r3, [r7, #7]
 80016ec:	2b13      	cmp	r3, #19
 80016ee:	d109      	bne.n	8001704 <USART_PeriClockControl+0x84>
			UART4_PCCK_EN();
 80016f0:	4b07      	ldr	r3, [pc, #28]	; (8001710 <USART_PeriClockControl+0x90>)
 80016f2:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80016f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016f8:	4a05      	ldr	r2, [pc, #20]	; (8001710 <USART_PeriClockControl+0x90>)
 80016fa:	f8d2 20f8 	ldr.w	r2, [r2, #248]	; 0xf8
 80016fe:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001702:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001704:	bf00      	nop
 8001706:	370c      	adds	r7, #12
 8001708:	46bd      	mov	sp, r7
 800170a:	bc80      	pop	{r7}
 800170c:	4770      	bx	lr
 800170e:	bf00      	nop
 8001710:	20000000 	.word	0x20000000

08001714 <USART_GetFlagStatus>:
 *
 * @Note              -

 */
uint8_t USART_GetFlagStatus(uint8_t USARTx, uint8_t StatusFlagName)
{
 8001714:	b480      	push	{r7}
 8001716:	b083      	sub	sp, #12
 8001718:	af00      	add	r7, sp, #0
 800171a:	4603      	mov	r3, r0
 800171c:	460a      	mov	r2, r1
 800171e:	71fb      	strb	r3, [r7, #7]
 8001720:	4613      	mov	r3, r2
 8001722:	71bb      	strb	r3, [r7, #6]
    if(USARTx_ptr(USARTx)->SR & StatusFlagName)
 8001724:	79fb      	ldrb	r3, [r7, #7]
 8001726:	4a08      	ldr	r2, [pc, #32]	; (8001748 <USART_GetFlagStatus+0x34>)
 8001728:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800172c:	681a      	ldr	r2, [r3, #0]
 800172e:	79bb      	ldrb	r3, [r7, #6]
 8001730:	4013      	ands	r3, r2
 8001732:	2b00      	cmp	r3, #0
 8001734:	d001      	beq.n	800173a <USART_GetFlagStatus+0x26>
    {
    	return SET;
 8001736:	2301      	movs	r3, #1
 8001738:	e000      	b.n	800173c <USART_GetFlagStatus+0x28>
    }

   return RESET;
 800173a:	2300      	movs	r3, #0
}
 800173c:	4618      	mov	r0, r3
 800173e:	370c      	adds	r7, #12
 8001740:	46bd      	mov	sp, r7
 8001742:	bc80      	pop	{r7}
 8001744:	4770      	bx	lr
 8001746:	bf00      	nop
 8001748:	20000000 	.word	0x20000000

0800174c <USART_SendData>:
 *
 * @Note              - Resolve all the TODOs

 */
void USART_SendData(USART_Handle_t USARTHandle, uint8_t *pTxBuffer, uint32_t Len)
{
 800174c:	b084      	sub	sp, #16
 800174e:	b580      	push	{r7, lr}
 8001750:	b082      	sub	sp, #8
 8001752:	af00      	add	r7, sp, #0
 8001754:	f107 0c10 	add.w	ip, r7, #16
 8001758:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}

	uint16_t *pdata;

   //Loop over until "Len" number of bytes are transferred
	for(uint32_t i = 0 ; i < Len; i++)
 800175c:	2300      	movs	r3, #0
 800175e:	607b      	str	r3, [r7, #4]
 8001760:	e035      	b.n	80017ce <USART_SendData+0x82>
	{
		//Implement the code to wait until TXE flag is set in the SR
		while(! USART_GetFlagStatus(USARTHandle.USARTx,USART_FLAG_TXE));
 8001762:	bf00      	nop
 8001764:	7c3b      	ldrb	r3, [r7, #16]
 8001766:	2180      	movs	r1, #128	; 0x80
 8001768:	4618      	mov	r0, r3
 800176a:	f7ff ffd3 	bl	8001714 <USART_GetFlagStatus>
 800176e:	4603      	mov	r3, r0
 8001770:	2b00      	cmp	r3, #0
 8001772:	d0f7      	beq.n	8001764 <USART_SendData+0x18>

		//Check the USART_WordLength item for 9BIT or 8BIT in a frame
		if(USARTHandle.USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 8001774:	7f7b      	ldrb	r3, [r7, #29]
 8001776:	2b01      	cmp	r3, #1
 8001778:	d11b      	bne.n	80017b2 <USART_SendData+0x66>
		{
			//if 9BIT load the DR with 2bytes masking  the bits other than first 9 bits
			pdata = (uint16_t*) pTxBuffer;
 800177a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800177c:	603b      	str	r3, [r7, #0]
			USARTx_ptr(USARTHandle.USARTx)->DR = (*pdata & (uint16_t)0x01FF);
 800177e:	683b      	ldr	r3, [r7, #0]
 8001780:	881b      	ldrh	r3, [r3, #0]
 8001782:	4619      	mov	r1, r3
 8001784:	7c3b      	ldrb	r3, [r7, #16]
 8001786:	461a      	mov	r2, r3
 8001788:	4b1b      	ldr	r3, [pc, #108]	; (80017f8 <USART_SendData+0xac>)
 800178a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800178e:	461a      	mov	r2, r3
 8001790:	f3c1 0308 	ubfx	r3, r1, #0, #9
 8001794:	6053      	str	r3, [r2, #4]

			//check for USART_ParityControl
			if(USARTHandle.USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 8001796:	7fbb      	ldrb	r3, [r7, #30]
 8001798:	2b00      	cmp	r3, #0
 800179a:	d106      	bne.n	80017aa <USART_SendData+0x5e>
			{
				//No parity is used in this transfer , so 9bits of user data will be sent
				//Implement the code to increment pTxBuffer twice
				pTxBuffer++;
 800179c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800179e:	3301      	adds	r3, #1
 80017a0:	637b      	str	r3, [r7, #52]	; 0x34
				pTxBuffer++;
 80017a2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80017a4:	3301      	adds	r3, #1
 80017a6:	637b      	str	r3, [r7, #52]	; 0x34
 80017a8:	e00e      	b.n	80017c8 <USART_SendData+0x7c>
			}
			else
			{
				//Parity bit is used in this transfer . so 8bits of user data will be sent
				//The 9th bit will be replaced by parity bit by the hardware
				pTxBuffer++;
 80017aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80017ac:	3301      	adds	r3, #1
 80017ae:	637b      	str	r3, [r7, #52]	; 0x34
 80017b0:	e00a      	b.n	80017c8 <USART_SendData+0x7c>
			}
		}
		else
		{
			//This is 8bit data transfer
			USARTx_ptr(USARTHandle.USARTx)->DR = (*pTxBuffer  & (uint8_t)0xFF);
 80017b2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80017b4:	781a      	ldrb	r2, [r3, #0]
 80017b6:	7c3b      	ldrb	r3, [r7, #16]
 80017b8:	4619      	mov	r1, r3
 80017ba:	4b0f      	ldr	r3, [pc, #60]	; (80017f8 <USART_SendData+0xac>)
 80017bc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80017c0:	605a      	str	r2, [r3, #4]

			//Implement the code to increment the buffer address
			pTxBuffer++;
 80017c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80017c4:	3301      	adds	r3, #1
 80017c6:	637b      	str	r3, [r7, #52]	; 0x34
	for(uint32_t i = 0 ; i < Len; i++)
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	3301      	adds	r3, #1
 80017cc:	607b      	str	r3, [r7, #4]
 80017ce:	687a      	ldr	r2, [r7, #4]
 80017d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80017d2:	429a      	cmp	r2, r3
 80017d4:	d3c5      	bcc.n	8001762 <USART_SendData+0x16>
		}
	}

	//Implement the code to wait till TC flag is set in the SR
	while( ! USART_GetFlagStatus(USARTHandle.USARTx,USART_FLAG_TC));
 80017d6:	bf00      	nop
 80017d8:	7c3b      	ldrb	r3, [r7, #16]
 80017da:	2140      	movs	r1, #64	; 0x40
 80017dc:	4618      	mov	r0, r3
 80017de:	f7ff ff99 	bl	8001714 <USART_GetFlagStatus>
 80017e2:	4603      	mov	r3, r0
 80017e4:	2b00      	cmp	r3, #0
 80017e6:	d0f7      	beq.n	80017d8 <USART_SendData+0x8c>
}
 80017e8:	bf00      	nop
 80017ea:	bf00      	nop
 80017ec:	3708      	adds	r7, #8
 80017ee:	46bd      	mov	sp, r7
 80017f0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80017f4:	b004      	add	sp, #16
 80017f6:	4770      	bx	lr
 80017f8:	20000000 	.word	0x20000000

080017fc <USART_ReceiveDataIT>:
 *
 * @Note              -

 */
uint8_t USART_ReceiveDataIT(USART_Handle_t USARTHandle,uint8_t *pRxBuffer, uint32_t Len)
{
 80017fc:	b084      	sub	sp, #16
 80017fe:	b480      	push	{r7}
 8001800:	b083      	sub	sp, #12
 8001802:	af00      	add	r7, sp, #0
 8001804:	f107 0c10 	add.w	ip, r7, #16
 8001808:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	uint8_t rxstate = USARTHandle.RxBusyState;
 800180c:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
 8001810:	71fb      	strb	r3, [r7, #7]

	if(rxstate != USART_BUSY_IN_RX)
 8001812:	79fb      	ldrb	r3, [r7, #7]
 8001814:	2b01      	cmp	r3, #1
 8001816:	d01a      	beq.n	800184e <USART_ReceiveDataIT+0x52>
	{
		USARTHandle.RxLen = Len;
 8001818:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800181a:	62fb      	str	r3, [r7, #44]	; 0x2c
		USARTHandle.pRxBuffer = pRxBuffer;
 800181c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800181e:	627b      	str	r3, [r7, #36]	; 0x24
		USARTHandle.RxBusyState = USART_BUSY_IN_RX;
 8001820:	2301      	movs	r3, #1
 8001822:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31

		(void)USARTx_ptr(USARTHandle.USARTx)->DR;
 8001826:	7c3b      	ldrb	r3, [r7, #16]
 8001828:	461a      	mov	r2, r3
 800182a:	4b0c      	ldr	r3, [pc, #48]	; (800185c <USART_ReceiveDataIT+0x60>)
 800182c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001830:	685b      	ldr	r3, [r3, #4]

		//Implement the code to enable interrupt for RXNE
		USARTx_ptr(USARTHandle.USARTx)->CR1 |= ( 1 << USART_CR1_RXNEIE);
 8001832:	7c3b      	ldrb	r3, [r7, #16]
 8001834:	461a      	mov	r2, r3
 8001836:	4b09      	ldr	r3, [pc, #36]	; (800185c <USART_ReceiveDataIT+0x60>)
 8001838:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800183c:	68db      	ldr	r3, [r3, #12]
 800183e:	7c3a      	ldrb	r2, [r7, #16]
 8001840:	4611      	mov	r1, r2
 8001842:	4a06      	ldr	r2, [pc, #24]	; (800185c <USART_ReceiveDataIT+0x60>)
 8001844:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001848:	f043 0320 	orr.w	r3, r3, #32
 800184c:	60d3      	str	r3, [r2, #12]

	}

	return rxstate;
 800184e:	79fb      	ldrb	r3, [r7, #7]
}
 8001850:	4618      	mov	r0, r3
 8001852:	370c      	adds	r7, #12
 8001854:	46bd      	mov	sp, r7
 8001856:	bc80      	pop	{r7}
 8001858:	b004      	add	sp, #16
 800185a:	4770      	bx	lr
 800185c:	20000000 	.word	0x20000000

08001860 <USART_IRQInterruptConfig>:
 *
 * @Note              -

 */
void USART_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8001860:	b480      	push	{r7}
 8001862:	b083      	sub	sp, #12
 8001864:	af00      	add	r7, sp, #0
 8001866:	4603      	mov	r3, r0
 8001868:	460a      	mov	r2, r1
 800186a:	71fb      	strb	r3, [r7, #7]
 800186c:	4613      	mov	r3, r2
 800186e:	71bb      	strb	r3, [r7, #6]
//			//program ICER2 register
//			*NVIC_ICER3 |= ( 1 << (IRQNumber % 64) );
//		}
//	}

}
 8001870:	bf00      	nop
 8001872:	370c      	adds	r7, #12
 8001874:	46bd      	mov	sp, r7
 8001876:	bc80      	pop	{r7}
 8001878:	4770      	bx	lr
	...

0800187c <USART_IRQHandling>:
 *
 * @Note              -

 */
void USART_IRQHandling(USART_Handle_t USARTHandle)
{
 800187c:	b084      	sub	sp, #16
 800187e:	b5b0      	push	{r4, r5, r7, lr}
 8001880:	b08a      	sub	sp, #40	; 0x28
 8001882:	af06      	add	r7, sp, #24
 8001884:	f107 0420 	add.w	r4, r7, #32
 8001888:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	uint16_t *pdata;

/*************************Check for TC flag ********************************************/

    //Implement the code to check the state of TC bit in the SR
	temp1 = USARTx_ptr(USARTHandle.USARTx)->SR & ( 1 << USART_SR_TC);
 800188c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001890:	461a      	mov	r2, r3
 8001892:	4b86      	ldr	r3, [pc, #536]	; (8001aac <USART_IRQHandling+0x230>)
 8001894:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800189e:	60fb      	str	r3, [r7, #12]

	 //Implement the code to check the state of TCEIE bit
	temp2 = USARTx_ptr(USARTHandle.USARTx)->CR1 & ( 1 << USART_CR1_TCIE);
 80018a0:	f897 3020 	ldrb.w	r3, [r7, #32]
 80018a4:	461a      	mov	r2, r3
 80018a6:	4b81      	ldr	r3, [pc, #516]	; (8001aac <USART_IRQHandling+0x230>)
 80018a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80018ac:	68db      	ldr	r3, [r3, #12]
 80018ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80018b2:	60bb      	str	r3, [r7, #8]

	if(temp1 && temp2 )
 80018b4:	68fb      	ldr	r3, [r7, #12]
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d02e      	beq.n	8001918 <USART_IRQHandling+0x9c>
 80018ba:	68bb      	ldr	r3, [r7, #8]
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d02b      	beq.n	8001918 <USART_IRQHandling+0x9c>
	{
		//this interrupt is because of TC

		//close transmission and call application callback if TxLen is zero
		if ( USARTHandle.TxBusyState == USART_BUSY_IN_TX)
 80018c0:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 80018c4:	2b02      	cmp	r3, #2
 80018c6:	d127      	bne.n	8001918 <USART_IRQHandling+0x9c>
		{
			//Check the TxLen . If it is zero then close the data transmission
			if(! USARTHandle.TxLen )
 80018c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	d124      	bne.n	8001918 <USART_IRQHandling+0x9c>
			{
				//Implement the code to clear the TC flag
				USARTx_ptr(USARTHandle.USARTx)->SR &= ~( 1 << USART_SR_TC);
 80018ce:	f897 3020 	ldrb.w	r3, [r7, #32]
 80018d2:	461a      	mov	r2, r3
 80018d4:	4b75      	ldr	r3, [pc, #468]	; (8001aac <USART_IRQHandling+0x230>)
 80018d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	f897 2020 	ldrb.w	r2, [r7, #32]
 80018e0:	4611      	mov	r1, r2
 80018e2:	4a72      	ldr	r2, [pc, #456]	; (8001aac <USART_IRQHandling+0x230>)
 80018e4:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80018e8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80018ec:	6013      	str	r3, [r2, #0]

				//Implement the code to clear the TCIE control bit

				//Reset the application state
				USARTHandle.TxBusyState = USART_READY;
 80018ee:	2300      	movs	r3, #0
 80018f0:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40

				//Reset Buffer address to NULL
				USARTHandle.pTxBuffer = NULL;
 80018f4:	2300      	movs	r3, #0
 80018f6:	633b      	str	r3, [r7, #48]	; 0x30

				//Reset the length to zero
				USARTHandle.TxLen = 0;
 80018f8:	2300      	movs	r3, #0
 80018fa:	63bb      	str	r3, [r7, #56]	; 0x38

				//Call the application call back with event USART_EVENT_TX_CMPLT
				USART_ApplicationEventCallback(USARTHandle,USART_EVENT_TX_CMPLT);
 80018fc:	2300      	movs	r3, #0
 80018fe:	9305      	str	r3, [sp, #20]
 8001900:	466d      	mov	r5, sp
 8001902:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001906:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001908:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800190a:	6823      	ldr	r3, [r4, #0]
 800190c:	602b      	str	r3, [r5, #0]
 800190e:	f107 0320 	add.w	r3, r7, #32
 8001912:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001914:	f000 fb0a 	bl	8001f2c <USART_ApplicationEventCallback>
	}

/*************************Check for TXE flag ********************************************/

	//Implement the code to check the state of TXE bit in the SR
	temp1 = USARTx_ptr(USARTHandle.USARTx)->SR & ( 1 << USART_SR_TXE);
 8001918:	f897 3020 	ldrb.w	r3, [r7, #32]
 800191c:	461a      	mov	r2, r3
 800191e:	4b63      	ldr	r3, [pc, #396]	; (8001aac <USART_IRQHandling+0x230>)
 8001920:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800192a:	60fb      	str	r3, [r7, #12]

	//Implement the code to check the state of TXEIE bit in CR1
	temp2 = USARTx_ptr(USARTHandle.USARTx)->CR1 & ( 1 << USART_CR1_TXEIE);
 800192c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001930:	461a      	mov	r2, r3
 8001932:	4b5e      	ldr	r3, [pc, #376]	; (8001aac <USART_IRQHandling+0x230>)
 8001934:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001938:	68db      	ldr	r3, [r3, #12]
 800193a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800193e:	60bb      	str	r3, [r7, #8]


	if(temp1 && temp2 )
 8001940:	68fb      	ldr	r3, [r7, #12]
 8001942:	2b00      	cmp	r3, #0
 8001944:	d053      	beq.n	80019ee <USART_IRQHandling+0x172>
 8001946:	68bb      	ldr	r3, [r7, #8]
 8001948:	2b00      	cmp	r3, #0
 800194a:	d050      	beq.n	80019ee <USART_IRQHandling+0x172>
	{
		//this interrupt is because of TXE

		if(USARTHandle.TxBusyState == USART_BUSY_IN_TX)
 800194c:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8001950:	2b02      	cmp	r3, #2
 8001952:	d14c      	bne.n	80019ee <USART_IRQHandling+0x172>
		{
			//Keep sending data until Txlen reaches to zero
			if(USARTHandle.TxLen > 0)
 8001954:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001956:	2b00      	cmp	r3, #0
 8001958:	d036      	beq.n	80019c8 <USART_IRQHandling+0x14c>
			{
				//Check the USART_WordLength item for 9BIT or 8BIT in a frame
				if(USARTHandle.USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 800195a:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800195e:	2b01      	cmp	r3, #1
 8001960:	d123      	bne.n	80019aa <USART_IRQHandling+0x12e>
				{
					//if 9BIT load the DR with 2bytes masking  the bits other than first 9 bits
					pdata = (uint16_t*) USARTHandle.pTxBuffer;
 8001962:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001964:	607b      	str	r3, [r7, #4]
					USARTx_ptr(USARTHandle.USARTx)->DR = (*pdata & (uint16_t)0x01FF);
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	881b      	ldrh	r3, [r3, #0]
 800196a:	4619      	mov	r1, r3
 800196c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001970:	461a      	mov	r2, r3
 8001972:	4b4e      	ldr	r3, [pc, #312]	; (8001aac <USART_IRQHandling+0x230>)
 8001974:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001978:	461a      	mov	r2, r3
 800197a:	f3c1 0308 	ubfx	r3, r1, #0, #9
 800197e:	6053      	str	r3, [r2, #4]

					//check for USART_ParityControl
					if(USARTHandle.USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 8001980:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8001984:	2b00      	cmp	r3, #0
 8001986:	d109      	bne.n	800199c <USART_IRQHandling+0x120>
					{
						//No parity is used in this transfer , so 9bits of user data will be sent
						//Implement the code to increment pTxBuffer twice
						USARTHandle.pTxBuffer++;
 8001988:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800198a:	3301      	adds	r3, #1
 800198c:	633b      	str	r3, [r7, #48]	; 0x30
						USARTHandle.pTxBuffer++;
 800198e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001990:	3301      	adds	r3, #1
 8001992:	633b      	str	r3, [r7, #48]	; 0x30
						USARTHandle.TxLen-=2;
 8001994:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001996:	3b02      	subs	r3, #2
 8001998:	63bb      	str	r3, [r7, #56]	; 0x38
 800199a:	e015      	b.n	80019c8 <USART_IRQHandling+0x14c>
					}
					else
					{
						//Parity bit is used in this transfer . so 8bits of user data will be sent
						//The 9th bit will be replaced by parity bit by the hardware
						USARTHandle.pTxBuffer++;
 800199c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800199e:	3301      	adds	r3, #1
 80019a0:	633b      	str	r3, [r7, #48]	; 0x30
						USARTHandle.TxLen-=1;
 80019a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80019a4:	3b01      	subs	r3, #1
 80019a6:	63bb      	str	r3, [r7, #56]	; 0x38
 80019a8:	e00e      	b.n	80019c8 <USART_IRQHandling+0x14c>
					}
				}
				else
				{
					//This is 8bit data transfer
					USARTx_ptr(USARTHandle.USARTx)->DR = (*USARTHandle.pTxBuffer  & (uint8_t)0xFF);
 80019aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80019ac:	781a      	ldrb	r2, [r3, #0]
 80019ae:	f897 3020 	ldrb.w	r3, [r7, #32]
 80019b2:	4619      	mov	r1, r3
 80019b4:	4b3d      	ldr	r3, [pc, #244]	; (8001aac <USART_IRQHandling+0x230>)
 80019b6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80019ba:	605a      	str	r2, [r3, #4]

					//Implement the code to increment the buffer address
					USARTHandle.pTxBuffer++;
 80019bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80019be:	3301      	adds	r3, #1
 80019c0:	633b      	str	r3, [r7, #48]	; 0x30
					USARTHandle.TxLen-=1;
 80019c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80019c4:	3b01      	subs	r3, #1
 80019c6:	63bb      	str	r3, [r7, #56]	; 0x38
				}

			}
			if (USARTHandle.TxLen == 0 )
 80019c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d10f      	bne.n	80019ee <USART_IRQHandling+0x172>
			{
				//TxLen is zero
				//Implement the code to clear the TXEIE bit (disable interrupt for TXE flag )
				USARTx_ptr(USARTHandle.USARTx)->CR1 &= ~( 1 << USART_CR1_TXEIE);
 80019ce:	f897 3020 	ldrb.w	r3, [r7, #32]
 80019d2:	461a      	mov	r2, r3
 80019d4:	4b35      	ldr	r3, [pc, #212]	; (8001aac <USART_IRQHandling+0x230>)
 80019d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80019da:	68db      	ldr	r3, [r3, #12]
 80019dc:	f897 2020 	ldrb.w	r2, [r7, #32]
 80019e0:	4611      	mov	r1, r2
 80019e2:	4a32      	ldr	r2, [pc, #200]	; (8001aac <USART_IRQHandling+0x230>)
 80019e4:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80019e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80019ec:	60d3      	str	r3, [r2, #12]
		}
	}

/*************************Check for RXNE flag ********************************************/

	temp1 = USARTx_ptr(USARTHandle.USARTx)->SR & ( 1 << USART_SR_RXNE);
 80019ee:	f897 3020 	ldrb.w	r3, [r7, #32]
 80019f2:	461a      	mov	r2, r3
 80019f4:	4b2d      	ldr	r3, [pc, #180]	; (8001aac <USART_IRQHandling+0x230>)
 80019f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	f003 0320 	and.w	r3, r3, #32
 8001a00:	60fb      	str	r3, [r7, #12]
	temp2 = USARTx_ptr(USARTHandle.USARTx)->CR1 & ( 1 << USART_CR1_RXNEIE);
 8001a02:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001a06:	461a      	mov	r2, r3
 8001a08:	4b28      	ldr	r3, [pc, #160]	; (8001aac <USART_IRQHandling+0x230>)
 8001a0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a0e:	68db      	ldr	r3, [r3, #12]
 8001a10:	f003 0320 	and.w	r3, r3, #32
 8001a14:	60bb      	str	r3, [r7, #8]


	if(temp1 && temp2 )
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	d07e      	beq.n	8001b1a <USART_IRQHandling+0x29e>
 8001a1c:	68bb      	ldr	r3, [r7, #8]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d07b      	beq.n	8001b1a <USART_IRQHandling+0x29e>
	{
		//this interrupt is because of rxne
		if(USARTHandle.RxBusyState == USART_BUSY_IN_RX)
 8001a22:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8001a26:	2b01      	cmp	r3, #1
 8001a28:	d177      	bne.n	8001b1a <USART_IRQHandling+0x29e>
		{
			if(USARTHandle.RxLen > 0)
 8001a2a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001a2c:	2b00      	cmp	r3, #0
 8001a2e:	d050      	beq.n	8001ad2 <USART_IRQHandling+0x256>
			{
				//Check the USART_WordLength to decide whether we are going to receive 9bit of data in a frame or 8 bit
				if(USARTHandle.USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 8001a30:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001a34:	2b01      	cmp	r3, #1
 8001a36:	d12a      	bne.n	8001a8e <USART_IRQHandling+0x212>
				{
					//We are going to receive 9bit data in a frame

					//Now, check are we using USART_ParityControl control or not
					if(USARTHandle.USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 8001a38:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d116      	bne.n	8001a6e <USART_IRQHandling+0x1f2>
					{
						//No parity is used , so all 9bits will be of user data

						//read only first 9 bits so mask the DR with 0x01FF
						*((uint16_t*) USARTHandle.pRxBuffer) = (USARTx_ptr(USARTHandle.USARTx)->DR  & (uint16_t)0x01FF);
 8001a40:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001a44:	461a      	mov	r2, r3
 8001a46:	4b19      	ldr	r3, [pc, #100]	; (8001aac <USART_IRQHandling+0x230>)
 8001a48:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a4c:	685b      	ldr	r3, [r3, #4]
 8001a4e:	b29a      	uxth	r2, r3
 8001a50:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001a52:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001a56:	b292      	uxth	r2, r2
 8001a58:	801a      	strh	r2, [r3, #0]

						//Now increment the pRxBuffer two times
						USARTHandle.pRxBuffer++;
 8001a5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001a5c:	3301      	adds	r3, #1
 8001a5e:	637b      	str	r3, [r7, #52]	; 0x34
						USARTHandle.pRxBuffer++;
 8001a60:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001a62:	3301      	adds	r3, #1
 8001a64:	637b      	str	r3, [r7, #52]	; 0x34
						USARTHandle.RxLen-=2;
 8001a66:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001a68:	3b02      	subs	r3, #2
 8001a6a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001a6c:	e031      	b.n	8001ad2 <USART_IRQHandling+0x256>
					}
					else
					{
						//Parity is used, so 8bits will be of user data and 1 bit is parity
						 USARTHandle.pRxBuffer = (USARTx_ptr(USARTHandle.USARTx)->DR  & (uint8_t)0xFF);
 8001a6e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001a72:	461a      	mov	r2, r3
 8001a74:	4b0d      	ldr	r3, [pc, #52]	; (8001aac <USART_IRQHandling+0x230>)
 8001a76:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a7a:	685b      	ldr	r3, [r3, #4]
 8001a7c:	b2db      	uxtb	r3, r3
 8001a7e:	637b      	str	r3, [r7, #52]	; 0x34
						 USARTHandle.pRxBuffer++;
 8001a80:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001a82:	3301      	adds	r3, #1
 8001a84:	637b      	str	r3, [r7, #52]	; 0x34
						 USARTHandle.RxLen-=1;
 8001a86:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001a88:	3b01      	subs	r3, #1
 8001a8a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001a8c:	e021      	b.n	8001ad2 <USART_IRQHandling+0x256>
				else
				{
					//We are going to receive 8bit data in a frame

					//Now, check are we using USART_ParityControl control or not
					if(USARTHandle.USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 8001a8e:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8001a92:	2b00      	cmp	r3, #0
 8001a94:	d10c      	bne.n	8001ab0 <USART_IRQHandling+0x234>
					{
						//No parity is used , so all 8bits will be of user data

						//read 8 bits from DR
						 USARTHandle.pRxBuffer = (uint8_t) (USARTx_ptr(USARTHandle.USARTx)->DR  & (uint8_t)0xFF);
 8001a96:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001a9a:	461a      	mov	r2, r3
 8001a9c:	4b03      	ldr	r3, [pc, #12]	; (8001aac <USART_IRQHandling+0x230>)
 8001a9e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001aa2:	685b      	ldr	r3, [r3, #4]
 8001aa4:	b2db      	uxtb	r3, r3
 8001aa6:	637b      	str	r3, [r7, #52]	; 0x34
 8001aa8:	e00d      	b.n	8001ac6 <USART_IRQHandling+0x24a>
 8001aaa:	bf00      	nop
 8001aac:	20000000 	.word	0x20000000
					else
					{
						//Parity is used, so , 7 bits will be of user data and 1 bit is parity

						//read only 7 bits , hence mask the DR with 0X7F
						 USARTHandle.pRxBuffer = (uint8_t) (USARTx_ptr(USARTHandle.USARTx)->DR  & (uint8_t)0x7F);
 8001ab0:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001ab4:	461a      	mov	r2, r3
 8001ab6:	4b95      	ldr	r3, [pc, #596]	; (8001d0c <USART_IRQHandling+0x490>)
 8001ab8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001abc:	685b      	ldr	r3, [r3, #4]
 8001abe:	b2db      	uxtb	r3, r3
 8001ac0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001ac4:	637b      	str	r3, [r7, #52]	; 0x34

					}

					//Now , increment the pRxBuffer
					USARTHandle.pRxBuffer++;
 8001ac6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001ac8:	3301      	adds	r3, #1
 8001aca:	637b      	str	r3, [r7, #52]	; 0x34
					 USARTHandle.RxLen-=1;
 8001acc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001ace:	3b01      	subs	r3, #1
 8001ad0:	63fb      	str	r3, [r7, #60]	; 0x3c
				}


			}//if of >0

			if(! USARTHandle.RxLen)
 8001ad2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d120      	bne.n	8001b1a <USART_IRQHandling+0x29e>
			{
				//disable the rxne
				USARTx_ptr(USARTHandle.USARTx)->CR1 &= ~( 1 << USART_CR1_RXNEIE );
 8001ad8:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001adc:	461a      	mov	r2, r3
 8001ade:	4b8b      	ldr	r3, [pc, #556]	; (8001d0c <USART_IRQHandling+0x490>)
 8001ae0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ae4:	68db      	ldr	r3, [r3, #12]
 8001ae6:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001aea:	4611      	mov	r1, r2
 8001aec:	4a87      	ldr	r2, [pc, #540]	; (8001d0c <USART_IRQHandling+0x490>)
 8001aee:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001af2:	f023 0320 	bic.w	r3, r3, #32
 8001af6:	60d3      	str	r3, [r2, #12]
				USARTHandle.RxBusyState = USART_READY;
 8001af8:	2300      	movs	r3, #0
 8001afa:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
				USART_ApplicationEventCallback(USARTHandle,USART_EVENT_RX_CMPLT);
 8001afe:	2301      	movs	r3, #1
 8001b00:	9305      	str	r3, [sp, #20]
 8001b02:	466d      	mov	r5, sp
 8001b04:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001b08:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b0a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001b0c:	6823      	ldr	r3, [r4, #0]
 8001b0e:	602b      	str	r3, [r5, #0]
 8001b10:	f107 0320 	add.w	r3, r7, #32
 8001b14:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001b16:	f000 fa09 	bl	8001f2c <USART_ApplicationEventCallback>

/*************************Check for CTS flag ********************************************/
//Note : CTS feature is not applicable for UART4 and UART5

	//Implement the code to check the status of CTS bit in the SR
	temp1 = USARTx_ptr(USARTHandle.USARTx)->SR & ( 1 << USART_SR_CTS);
 8001b1a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001b1e:	461a      	mov	r2, r3
 8001b20:	4b7a      	ldr	r3, [pc, #488]	; (8001d0c <USART_IRQHandling+0x490>)
 8001b22:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b2c:	60fb      	str	r3, [r7, #12]

	//Implement the code to check the state of CTSE bit in CR1
	temp2 = USARTx_ptr(USARTHandle.USARTx)->CR3 & ( 1 << USART_CR3_CTSE);
 8001b2e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001b32:	461a      	mov	r2, r3
 8001b34:	4b75      	ldr	r3, [pc, #468]	; (8001d0c <USART_IRQHandling+0x490>)
 8001b36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b3a:	695b      	ldr	r3, [r3, #20]
 8001b3c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b40:	60bb      	str	r3, [r7, #8]

	//Implement the code to check the state of CTSIE bit in CR3 (This bit is not available for UART4 & UART5.)
	temp3 = USARTx_ptr(USARTHandle.USARTx)->CR3 & ( 1 << USART_CR3_CTSIE);
 8001b42:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001b46:	461a      	mov	r2, r3
 8001b48:	4b70      	ldr	r3, [pc, #448]	; (8001d0c <USART_IRQHandling+0x490>)
 8001b4a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b4e:	695b      	ldr	r3, [r3, #20]
 8001b50:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001b54:	603b      	str	r3, [r7, #0]


	if(temp1  && temp2 )
 8001b56:	68fb      	ldr	r3, [r7, #12]
 8001b58:	2b00      	cmp	r3, #0
 8001b5a:	d020      	beq.n	8001b9e <USART_IRQHandling+0x322>
 8001b5c:	68bb      	ldr	r3, [r7, #8]
 8001b5e:	2b00      	cmp	r3, #0
 8001b60:	d01d      	beq.n	8001b9e <USART_IRQHandling+0x322>
	{
		//Implement the code to clear the CTS flag in SR
		USARTx_ptr(USARTHandle.USARTx)->SR &=  ~( 1 << USART_SR_CTS);
 8001b62:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001b66:	461a      	mov	r2, r3
 8001b68:	4b68      	ldr	r3, [pc, #416]	; (8001d0c <USART_IRQHandling+0x490>)
 8001b6a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001b74:	4611      	mov	r1, r2
 8001b76:	4a65      	ldr	r2, [pc, #404]	; (8001d0c <USART_IRQHandling+0x490>)
 8001b78:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001b7c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001b80:	6013      	str	r3, [r2, #0]

		//this interrupt is because of cts
		USART_ApplicationEventCallback(USARTHandle,USART_EVENT_CTS);
 8001b82:	2303      	movs	r3, #3
 8001b84:	9305      	str	r3, [sp, #20]
 8001b86:	466d      	mov	r5, sp
 8001b88:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001b8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b8e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001b90:	6823      	ldr	r3, [r4, #0]
 8001b92:	602b      	str	r3, [r5, #0]
 8001b94:	f107 0320 	add.w	r3, r7, #32
 8001b98:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001b9a:	f000 f9c7 	bl	8001f2c <USART_ApplicationEventCallback>
	}

/*************************Check for IDLE detection flag ********************************************/

	//Implement the code to check the status of IDLE flag bit in the SR
	temp1 = USARTx_ptr(USARTHandle.USARTx)->SR & ( 1 << USART_SR_IDLE);
 8001b9e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001ba2:	461a      	mov	r2, r3
 8001ba4:	4b59      	ldr	r3, [pc, #356]	; (8001d0c <USART_IRQHandling+0x490>)
 8001ba6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	f003 0310 	and.w	r3, r3, #16
 8001bb0:	60fb      	str	r3, [r7, #12]

	//Implement the code to check the state of IDLEIE bit in CR1
	temp2 = USARTx_ptr(USARTHandle.USARTx)->CR1 & ( 1 << USART_CR1_IDLEIE);
 8001bb2:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001bb6:	461a      	mov	r2, r3
 8001bb8:	4b54      	ldr	r3, [pc, #336]	; (8001d0c <USART_IRQHandling+0x490>)
 8001bba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001bbe:	68db      	ldr	r3, [r3, #12]
 8001bc0:	f003 0310 	and.w	r3, r3, #16
 8001bc4:	60bb      	str	r3, [r7, #8]


	if(temp1 && temp2)
 8001bc6:	68fb      	ldr	r3, [r7, #12]
 8001bc8:	2b00      	cmp	r3, #0
 8001bca:	d021      	beq.n	8001c10 <USART_IRQHandling+0x394>
 8001bcc:	68bb      	ldr	r3, [r7, #8]
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d01e      	beq.n	8001c10 <USART_IRQHandling+0x394>
	{
		//Implement the code to clear the IDLE flag. Refer to the RM to understand the clear sequence
		temp1 = USARTx_ptr(USARTHandle.USARTx)->SR &= ~( 1 << USART_SR_IDLE);
 8001bd2:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001bd6:	461a      	mov	r2, r3
 8001bd8:	4b4c      	ldr	r3, [pc, #304]	; (8001d0c <USART_IRQHandling+0x490>)
 8001bda:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001be4:	4611      	mov	r1, r2
 8001be6:	4a49      	ldr	r2, [pc, #292]	; (8001d0c <USART_IRQHandling+0x490>)
 8001be8:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001bec:	f023 0310 	bic.w	r3, r3, #16
 8001bf0:	6013      	str	r3, [r2, #0]
 8001bf2:	60fb      	str	r3, [r7, #12]

		//this interrupt is because of idle
		USART_ApplicationEventCallback(USARTHandle,USART_EVENT_IDLE);
 8001bf4:	2302      	movs	r3, #2
 8001bf6:	9305      	str	r3, [sp, #20]
 8001bf8:	466d      	mov	r5, sp
 8001bfa:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001bfe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c00:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001c02:	6823      	ldr	r3, [r4, #0]
 8001c04:	602b      	str	r3, [r5, #0]
 8001c06:	f107 0320 	add.w	r3, r7, #32
 8001c0a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001c0c:	f000 f98e 	bl	8001f2c <USART_ApplicationEventCallback>
	}

/*************************Check for Overrun detection flag ********************************************/

	//Implement the code to check the status of ORE flag  in the SR
	temp1 = USARTx_ptr(USARTHandle.USARTx)->SR & USART_SR_ORE;
 8001c10:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001c14:	461a      	mov	r2, r3
 8001c16:	4b3d      	ldr	r3, [pc, #244]	; (8001d0c <USART_IRQHandling+0x490>)
 8001c18:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	f003 0303 	and.w	r3, r3, #3
 8001c22:	60fb      	str	r3, [r7, #12]

	//Implement the code to check the status of RXNEIE  bit in the CR1
	temp2 = USARTx_ptr(USARTHandle.USARTx)->CR1 & USART_CR1_RXNEIE;
 8001c24:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001c28:	461a      	mov	r2, r3
 8001c2a:	4b38      	ldr	r3, [pc, #224]	; (8001d0c <USART_IRQHandling+0x490>)
 8001c2c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c30:	68db      	ldr	r3, [r3, #12]
 8001c32:	f003 0305 	and.w	r3, r3, #5
 8001c36:	60bb      	str	r3, [r7, #8]


	if(temp1  && temp2 )
 8001c38:	68fb      	ldr	r3, [r7, #12]
 8001c3a:	2b00      	cmp	r3, #0
 8001c3c:	d010      	beq.n	8001c60 <USART_IRQHandling+0x3e4>
 8001c3e:	68bb      	ldr	r3, [r7, #8]
 8001c40:	2b00      	cmp	r3, #0
 8001c42:	d00d      	beq.n	8001c60 <USART_IRQHandling+0x3e4>
	{
		//Need not to clear the ORE flag here, instead give an api for the application to clear the ORE flag .

		//this interrupt is because of Overrun error
		USART_ApplicationEventCallback(USARTHandle,USART_ERR_ORE);
 8001c44:	2307      	movs	r3, #7
 8001c46:	9305      	str	r3, [sp, #20]
 8001c48:	466d      	mov	r5, sp
 8001c4a:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001c4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c50:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001c52:	6823      	ldr	r3, [r4, #0]
 8001c54:	602b      	str	r3, [r5, #0]
 8001c56:	f107 0320 	add.w	r3, r7, #32
 8001c5a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001c5c:	f000 f966 	bl	8001f2c <USART_ApplicationEventCallback>

//Noise Flag, Overrun error and Framing Error in multibuffer communication
//We dont discuss multibuffer communication in this course. please refer to the RM
//The blow code will get executed in only if multibuffer mode is used.

	temp2 =  USARTx_ptr(USARTHandle.USARTx)->CR3 & ( 1 << USART_CR3_EIE) ;
 8001c60:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001c64:	461a      	mov	r2, r3
 8001c66:	4b29      	ldr	r3, [pc, #164]	; (8001d0c <USART_IRQHandling+0x490>)
 8001c68:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c6c:	695b      	ldr	r3, [r3, #20]
 8001c6e:	f003 0301 	and.w	r3, r3, #1
 8001c72:	60bb      	str	r3, [r7, #8]

	if(temp2 )
 8001c74:	68bb      	ldr	r3, [r7, #8]
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	d040      	beq.n	8001cfc <USART_IRQHandling+0x480>
	{
		temp1 = USARTx_ptr(USARTHandle.USARTx)->SR;
 8001c7a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001c7e:	461a      	mov	r2, r3
 8001c80:	4b22      	ldr	r3, [pc, #136]	; (8001d0c <USART_IRQHandling+0x490>)
 8001c82:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	60fb      	str	r3, [r7, #12]
		if(temp1 & ( 1 << USART_SR_FE))
 8001c8a:	68fb      	ldr	r3, [r7, #12]
 8001c8c:	f003 0302 	and.w	r3, r3, #2
 8001c90:	2b00      	cmp	r3, #0
 8001c92:	d00d      	beq.n	8001cb0 <USART_IRQHandling+0x434>
			/*
				This bit is set by hardware when a de-synchronization, excessive noise or a break character
				is detected. It is cleared by a software sequence (an read to the USART_SR register
				followed by a read to the USART_DR register).
			*/
			USART_ApplicationEventCallback(USARTHandle,USART_ERR_FE);
 8001c94:	2305      	movs	r3, #5
 8001c96:	9305      	str	r3, [sp, #20]
 8001c98:	466d      	mov	r5, sp
 8001c9a:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001c9e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001ca0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001ca2:	6823      	ldr	r3, [r4, #0]
 8001ca4:	602b      	str	r3, [r5, #0]
 8001ca6:	f107 0320 	add.w	r3, r7, #32
 8001caa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cac:	f000 f93e 	bl	8001f2c <USART_ApplicationEventCallback>
		}

		if(temp1 & ( 1 << USART_SR_NE) )
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	f003 0304 	and.w	r3, r3, #4
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d00d      	beq.n	8001cd6 <USART_IRQHandling+0x45a>
			/*
				This bit is set by hardware when noise is detected on a received frame. It is cleared by a
				software sequence (an read to the USART_SR register followed by a read to the
				USART_DR register).
			*/
			USART_ApplicationEventCallback(USARTHandle,USART_ERR_NE);
 8001cba:	2306      	movs	r3, #6
 8001cbc:	9305      	str	r3, [sp, #20]
 8001cbe:	466d      	mov	r5, sp
 8001cc0:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001cc4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001cc6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001cc8:	6823      	ldr	r3, [r4, #0]
 8001cca:	602b      	str	r3, [r5, #0]
 8001ccc:	f107 0320 	add.w	r3, r7, #32
 8001cd0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cd2:	f000 f92b 	bl	8001f2c <USART_ApplicationEventCallback>
		}

		if(temp1 & ( 1 << USART_SR_ORE) )
 8001cd6:	68fb      	ldr	r3, [r7, #12]
 8001cd8:	f003 0308 	and.w	r3, r3, #8
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d00d      	beq.n	8001cfc <USART_IRQHandling+0x480>
		{
			USART_ApplicationEventCallback(USARTHandle,USART_ERR_ORE);
 8001ce0:	2307      	movs	r3, #7
 8001ce2:	9305      	str	r3, [sp, #20]
 8001ce4:	466d      	mov	r5, sp
 8001ce6:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001cea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001cec:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001cee:	6823      	ldr	r3, [r4, #0]
 8001cf0:	602b      	str	r3, [r5, #0]
 8001cf2:	f107 0320 	add.w	r3, r7, #32
 8001cf6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cf8:	f000 f918 	bl	8001f2c <USART_ApplicationEventCallback>
		}
	}


}
 8001cfc:	bf00      	nop
 8001cfe:	3710      	adds	r7, #16
 8001d00:	46bd      	mov	sp, r7
 8001d02:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001d06:	b004      	add	sp, #16
 8001d08:	4770      	bx	lr
 8001d0a:	bf00      	nop
 8001d0c:	20000000 	.word	0x20000000

08001d10 <USART2_Init>:
uint8_t g_data = 0;

extern void initialise_monitor_handles();

void USART2_Init(void)
{
 8001d10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d12:	b087      	sub	sp, #28
 8001d14:	af06      	add	r7, sp, #24
	usart2_handle.USARTx = USART2;
 8001d16:	4b13      	ldr	r3, [pc, #76]	; (8001d64 <USART2_Init+0x54>)
 8001d18:	2211      	movs	r2, #17
 8001d1a:	701a      	strb	r2, [r3, #0]
	usart2_handle.USART_Config.USART_Baud = USART_STD_BAUD_115200;
 8001d1c:	4b11      	ldr	r3, [pc, #68]	; (8001d64 <USART2_Init+0x54>)
 8001d1e:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001d22:	609a      	str	r2, [r3, #8]
	usart2_handle.USART_Config.USART_HWFlowControl = USART_HW_FLOW_CTRL_NONE;
 8001d24:	4b0f      	ldr	r3, [pc, #60]	; (8001d64 <USART2_Init+0x54>)
 8001d26:	2200      	movs	r2, #0
 8001d28:	73da      	strb	r2, [r3, #15]
	usart2_handle.USART_Config.USART_Mode = USART_MODE_TXRX;
 8001d2a:	4b0e      	ldr	r3, [pc, #56]	; (8001d64 <USART2_Init+0x54>)
 8001d2c:	2202      	movs	r2, #2
 8001d2e:	711a      	strb	r2, [r3, #4]
	usart2_handle.USART_Config.USART_NoOfStopBits = USART_STOPBITS_1;
 8001d30:	4b0c      	ldr	r3, [pc, #48]	; (8001d64 <USART2_Init+0x54>)
 8001d32:	2200      	movs	r2, #0
 8001d34:	731a      	strb	r2, [r3, #12]
	usart2_handle.USART_Config.USART_WordLength = USART_WORDLEN_8BITS;
 8001d36:	4b0b      	ldr	r3, [pc, #44]	; (8001d64 <USART2_Init+0x54>)
 8001d38:	2200      	movs	r2, #0
 8001d3a:	735a      	strb	r2, [r3, #13]
	usart2_handle.USART_Config.USART_ParityControl = USART_PARITY_DISABLE;
 8001d3c:	4b09      	ldr	r3, [pc, #36]	; (8001d64 <USART2_Init+0x54>)
 8001d3e:	2200      	movs	r2, #0
 8001d40:	739a      	strb	r2, [r3, #14]
	USART_Init(usart2_handle);
 8001d42:	4e08      	ldr	r6, [pc, #32]	; (8001d64 <USART2_Init+0x54>)
 8001d44:	466d      	mov	r5, sp
 8001d46:	f106 0410 	add.w	r4, r6, #16
 8001d4a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001d4c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001d4e:	6823      	ldr	r3, [r4, #0]
 8001d50:	602b      	str	r3, [r5, #0]
 8001d52:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001d56:	f7ff fbdb 	bl	8001510 <USART_Init>
}
 8001d5a:	bf00      	nop
 8001d5c:	3704      	adds	r7, #4
 8001d5e:	46bd      	mov	sp, r7
 8001d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d62:	bf00      	nop
 8001d64:	20000fe0 	.word	0x20000fe0

08001d68 <USART2_GPIOInit>:

void 	USART2_GPIOInit(void)
{
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b082      	sub	sp, #8
 8001d6c:	af00      	add	r7, sp, #0
	GPIO_Handle_t usart_gpios;

	usart_gpios.GPIOx = GPIOA;
 8001d6e:	2332      	movs	r3, #50	; 0x32
 8001d70:	703b      	strb	r3, [r7, #0]
	usart_gpios.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8001d72:	2302      	movs	r3, #2
 8001d74:	70bb      	strb	r3, [r7, #2]
	usart_gpios.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8001d76:	2300      	movs	r3, #0
 8001d78:	717b      	strb	r3, [r7, #5]
	usart_gpios.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8001d7a:	2301      	movs	r3, #1
 8001d7c:	713b      	strb	r3, [r7, #4]
	usart_gpios.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8001d7e:	2302      	movs	r3, #2
 8001d80:	70fb      	strb	r3, [r7, #3]
	usart_gpios.GPIO_PinConfig.GPIO_PinAltFunMode =7;
 8001d82:	2307      	movs	r3, #7
 8001d84:	71bb      	strb	r3, [r7, #6]

	usart_gpios.GPIO_PinConfig.GPIO_PinNumber  = GPIO_PIN_NO_2;
 8001d86:	2302      	movs	r3, #2
 8001d88:	707b      	strb	r3, [r7, #1]
	GPIO_Init(usart_gpios);
 8001d8a:	463b      	mov	r3, r7
 8001d8c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001d90:	f7ff f89c 	bl	8000ecc <GPIO_Init>

	usart_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
 8001d94:	2303      	movs	r3, #3
 8001d96:	707b      	strb	r3, [r7, #1]
	GPIO_Init(usart_gpios);
 8001d98:	463b      	mov	r3, r7
 8001d9a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001d9e:	f7ff f895 	bl	8000ecc <GPIO_Init>

}
 8001da2:	bf00      	nop
 8001da4:	3708      	adds	r7, #8
 8001da6:	46bd      	mov	sp, r7
 8001da8:	bd80      	pop	{r7, pc}
	...

08001dac <delay>:
	GPIO_Init(GpioLed);

}

void delay(void)
{
 8001dac:	b480      	push	{r7}
 8001dae:	b083      	sub	sp, #12
 8001db0:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 8001db2:	2300      	movs	r3, #0
 8001db4:	607b      	str	r3, [r7, #4]
 8001db6:	e002      	b.n	8001dbe <delay+0x12>
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	3301      	adds	r3, #1
 8001dbc:	607b      	str	r3, [r7, #4]
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	4a04      	ldr	r2, [pc, #16]	; (8001dd4 <delay+0x28>)
 8001dc2:	4293      	cmp	r3, r2
 8001dc4:	d9f8      	bls.n	8001db8 <delay+0xc>
}
 8001dc6:	bf00      	nop
 8001dc8:	bf00      	nop
 8001dca:	370c      	adds	r7, #12
 8001dcc:	46bd      	mov	sp, r7
 8001dce:	bc80      	pop	{r7}
 8001dd0:	4770      	bx	lr
 8001dd2:	bf00      	nop
 8001dd4:	0003d08f 	.word	0x0003d08f

08001dd8 <main>:
int main(void)
{
 8001dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dda:	b08b      	sub	sp, #44	; 0x2c
 8001ddc:	af08      	add	r7, sp, #32
	uint32_t cnt = 0;
 8001dde:	2300      	movs	r3, #0
 8001de0:	607b      	str	r3, [r7, #4]


	initialise_monitor_handles();
 8001de2:	f005 f87d 	bl	8006ee0 <initialise_monitor_handles>

	USART2_GPIOInit();
 8001de6:	f7ff ffbf 	bl	8001d68 <USART2_GPIOInit>
    USART2_Init();
 8001dea:	f7ff ff91 	bl	8001d10 <USART2_Init>

    USART_IRQInterruptConfig(IRQ_NO_USART2,ENABLE);
 8001dee:	2101      	movs	r1, #1
 8001df0:	2026      	movs	r0, #38	; 0x26
 8001df2:	f7ff fd35 	bl	8001860 <USART_IRQInterruptConfig>

    USART_PeripheralControl(USART2,ENABLE);
 8001df6:	2101      	movs	r1, #1
 8001df8:	2011      	movs	r0, #17
 8001dfa:	f7ff fc15 	bl	8001628 <USART_PeripheralControl>

    printf("Application is running\n");
 8001dfe:	4838      	ldr	r0, [pc, #224]	; (8001ee0 <main+0x108>)
 8001e00:	f000 f958 	bl	80020b4 <puts>

    //do forever
    while(1)
    {
		//wait till button is pressed
		while( ! GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) );
 8001e04:	bf00      	nop
 8001e06:	2100      	movs	r1, #0
 8001e08:	2032      	movs	r0, #50	; 0x32
 8001e0a:	f7ff fa31 	bl	8001270 <GPIO_ReadFromInputPin>
 8001e0e:	4603      	mov	r3, r0
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	d0f8      	beq.n	8001e06 <main+0x2e>

		//to avoid button de-bouncing related issues 200ms of delay
		delay();
 8001e14:	f7ff ffca 	bl	8001dac <delay>

		// Next message index ; make sure that cnt value doesn't cross 2
		cnt = cnt % 3;
 8001e18:	687a      	ldr	r2, [r7, #4]
 8001e1a:	4b32      	ldr	r3, [pc, #200]	; (8001ee4 <main+0x10c>)
 8001e1c:	fba3 1302 	umull	r1, r3, r3, r2
 8001e20:	0859      	lsrs	r1, r3, #1
 8001e22:	460b      	mov	r3, r1
 8001e24:	005b      	lsls	r3, r3, #1
 8001e26:	440b      	add	r3, r1
 8001e28:	1ad3      	subs	r3, r2, r3
 8001e2a:	607b      	str	r3, [r7, #4]

		//First lets enable the reception in interrupt mode
		//this code enables the receive interrupt
		while ( USART_ReceiveDataIT(usart2_handle,rx_buf,strlen(msg[cnt])) != USART_READY );
 8001e2c:	bf00      	nop
 8001e2e:	4a2e      	ldr	r2, [pc, #184]	; (8001ee8 <main+0x110>)
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e36:	4618      	mov	r0, r3
 8001e38:	f7fe f9da 	bl	80001f0 <strlen>
 8001e3c:	4603      	mov	r3, r0
 8001e3e:	4e2b      	ldr	r6, [pc, #172]	; (8001eec <main+0x114>)
 8001e40:	9306      	str	r3, [sp, #24]
 8001e42:	4b2b      	ldr	r3, [pc, #172]	; (8001ef0 <main+0x118>)
 8001e44:	9305      	str	r3, [sp, #20]
 8001e46:	466d      	mov	r5, sp
 8001e48:	f106 0410 	add.w	r4, r6, #16
 8001e4c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001e4e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001e50:	6823      	ldr	r3, [r4, #0]
 8001e52:	602b      	str	r3, [r5, #0]
 8001e54:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001e58:	f7ff fcd0 	bl	80017fc <USART_ReceiveDataIT>
 8001e5c:	4603      	mov	r3, r0
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d1e5      	bne.n	8001e2e <main+0x56>

		//Send the msg indexed by cnt in blocking mode
    	USART_SendData(usart2_handle,(uint8_t*)msg[cnt],strlen(msg[cnt]));
 8001e62:	4a21      	ldr	r2, [pc, #132]	; (8001ee8 <main+0x110>)
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8001e6a:	4a1f      	ldr	r2, [pc, #124]	; (8001ee8 <main+0x110>)
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e72:	4618      	mov	r0, r3
 8001e74:	f7fe f9bc 	bl	80001f0 <strlen>
 8001e78:	4603      	mov	r3, r0
 8001e7a:	4e1c      	ldr	r6, [pc, #112]	; (8001eec <main+0x114>)
 8001e7c:	9306      	str	r3, [sp, #24]
 8001e7e:	9405      	str	r4, [sp, #20]
 8001e80:	466d      	mov	r5, sp
 8001e82:	f106 0410 	add.w	r4, r6, #16
 8001e86:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001e88:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001e8a:	6823      	ldr	r3, [r4, #0]
 8001e8c:	602b      	str	r3, [r5, #0]
 8001e8e:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001e92:	f7ff fc5b 	bl	800174c <USART_SendData>

    	printf("Transmitted : %s\n",msg[cnt]);
 8001e96:	4a14      	ldr	r2, [pc, #80]	; (8001ee8 <main+0x110>)
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e9e:	4619      	mov	r1, r3
 8001ea0:	4814      	ldr	r0, [pc, #80]	; (8001ef4 <main+0x11c>)
 8001ea2:	f000 f8af 	bl	8002004 <printf>


    	//Now lets wait until all the bytes are received from the arduino .
    	//When all the bytes are received rxCmplt will be SET in application callback
    	while(rxCmplt != SET);
 8001ea6:	bf00      	nop
 8001ea8:	4b13      	ldr	r3, [pc, #76]	; (8001ef8 <main+0x120>)
 8001eaa:	781b      	ldrb	r3, [r3, #0]
 8001eac:	2b01      	cmp	r3, #1
 8001eae:	d1fb      	bne.n	8001ea8 <main+0xd0>

    	//just make sure that last byte should be null otherwise %s fails while printing
    	rx_buf[strlen(msg[cnt])+ 1] = '\0';
 8001eb0:	4a0d      	ldr	r2, [pc, #52]	; (8001ee8 <main+0x110>)
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001eb8:	4618      	mov	r0, r3
 8001eba:	f7fe f999 	bl	80001f0 <strlen>
 8001ebe:	4603      	mov	r3, r0
 8001ec0:	3301      	adds	r3, #1
 8001ec2:	4a0b      	ldr	r2, [pc, #44]	; (8001ef0 <main+0x118>)
 8001ec4:	2100      	movs	r1, #0
 8001ec6:	54d1      	strb	r1, [r2, r3]

    	//Print what we received from the arduino
    	printf("Received    : %s\n",rx_buf);
 8001ec8:	4909      	ldr	r1, [pc, #36]	; (8001ef0 <main+0x118>)
 8001eca:	480c      	ldr	r0, [pc, #48]	; (8001efc <main+0x124>)
 8001ecc:	f000 f89a 	bl	8002004 <printf>

    	//invalidate the flag
    	rxCmplt = RESET;
 8001ed0:	4b09      	ldr	r3, [pc, #36]	; (8001ef8 <main+0x120>)
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	701a      	strb	r2, [r3, #0]

    	//move on to next message indexed in msg[]
    	cnt ++;
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	3301      	adds	r3, #1
 8001eda:	607b      	str	r3, [r7, #4]
		while( ! GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) );
 8001edc:	e792      	b.n	8001e04 <main+0x2c>
 8001ede:	bf00      	nop
 8001ee0:	08007080 	.word	0x08007080
 8001ee4:	aaaaaaab 	.word	0xaaaaaaab
 8001ee8:	20000200 	.word	0x20000200
 8001eec:	20000fe0 	.word	0x20000fe0
 8001ef0:	20000be0 	.word	0x20000be0
 8001ef4:	08007098 	.word	0x08007098
 8001ef8:	20001004 	.word	0x20001004
 8001efc:	080070ac 	.word	0x080070ac

08001f00 <USART2_IRQHandler>:
	return 0;
}


void USART2_IRQHandler(void)
{
 8001f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f02:	b087      	sub	sp, #28
 8001f04:	af06      	add	r7, sp, #24
	USART_IRQHandling(usart2_handle);
 8001f06:	4e08      	ldr	r6, [pc, #32]	; (8001f28 <USART2_IRQHandler+0x28>)
 8001f08:	466d      	mov	r5, sp
 8001f0a:	f106 0410 	add.w	r4, r6, #16
 8001f0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001f10:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001f12:	6823      	ldr	r3, [r4, #0]
 8001f14:	602b      	str	r3, [r5, #0]
 8001f16:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001f1a:	f7ff fcaf 	bl	800187c <USART_IRQHandling>
}
 8001f1e:	bf00      	nop
 8001f20:	3704      	adds	r7, #4
 8001f22:	46bd      	mov	sp, r7
 8001f24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f26:	bf00      	nop
 8001f28:	20000fe0 	.word	0x20000fe0

08001f2c <USART_ApplicationEventCallback>:




void USART_ApplicationEventCallback( USART_Handle_t USARTHandle,uint8_t ApEv)
{
 8001f2c:	b084      	sub	sp, #16
 8001f2e:	b490      	push	{r4, r7}
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	f107 0408 	add.w	r4, r7, #8
 8001f36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   if(ApEv == USART_EVENT_RX_CMPLT)
 8001f3a:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001f3e:	2b01      	cmp	r3, #1
 8001f40:	d102      	bne.n	8001f48 <USART_ApplicationEventCallback+0x1c>
   {
			rxCmplt = SET;
 8001f42:	4b04      	ldr	r3, [pc, #16]	; (8001f54 <USART_ApplicationEventCallback+0x28>)
 8001f44:	2201      	movs	r2, #1
 8001f46:	701a      	strb	r2, [r3, #0]

   }else if (ApEv == USART_EVENT_TX_CMPLT)
   {
	   ;
   }
}
 8001f48:	bf00      	nop
 8001f4a:	46bd      	mov	sp, r7
 8001f4c:	bc90      	pop	{r4, r7}
 8001f4e:	b004      	add	sp, #16
 8001f50:	4770      	bx	lr
 8001f52:	bf00      	nop
 8001f54:	20001004 	.word	0x20001004

08001f58 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001f58:	480d      	ldr	r0, [pc, #52]	; (8001f90 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001f5a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001f5c:	480d      	ldr	r0, [pc, #52]	; (8001f94 <LoopForever+0x6>)
  ldr r1, =_edata
 8001f5e:	490e      	ldr	r1, [pc, #56]	; (8001f98 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001f60:	4a0e      	ldr	r2, [pc, #56]	; (8001f9c <LoopForever+0xe>)
  movs r3, #0
 8001f62:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001f64:	e002      	b.n	8001f6c <LoopCopyDataInit>

08001f66 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001f66:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001f68:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001f6a:	3304      	adds	r3, #4

08001f6c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001f6c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001f6e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001f70:	d3f9      	bcc.n	8001f66 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001f72:	4a0b      	ldr	r2, [pc, #44]	; (8001fa0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001f74:	4c0b      	ldr	r4, [pc, #44]	; (8001fa4 <LoopForever+0x16>)
  movs r3, #0
 8001f76:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001f78:	e001      	b.n	8001f7e <LoopFillZerobss>

08001f7a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001f7a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001f7c:	3204      	adds	r2, #4

08001f7e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001f7e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001f80:	d3fb      	bcc.n	8001f7a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001f82:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8001f86:	f000 f811 	bl	8001fac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001f8a:	f7ff ff25 	bl	8001dd8 <main>

08001f8e <LoopForever>:

LoopForever:
    b LoopForever
 8001f8e:	e7fe      	b.n	8001f8e <LoopForever>
  ldr   r0, =_estack
 8001f90:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001f94:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001f98:	20000bc4 	.word	0x20000bc4
  ldr r2, =_sidata
 8001f9c:	08007484 	.word	0x08007484
  ldr r2, =_sbss
 8001fa0:	20000bc4 	.word	0x20000bc4
  ldr r4, =_ebss
 8001fa4:	200010f4 	.word	0x200010f4

08001fa8 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001fa8:	e7fe      	b.n	8001fa8 <ADC_IRQHandler>
	...

08001fac <__libc_init_array>:
 8001fac:	b570      	push	{r4, r5, r6, lr}
 8001fae:	4d0d      	ldr	r5, [pc, #52]	; (8001fe4 <__libc_init_array+0x38>)
 8001fb0:	4c0d      	ldr	r4, [pc, #52]	; (8001fe8 <__libc_init_array+0x3c>)
 8001fb2:	1b64      	subs	r4, r4, r5
 8001fb4:	10a4      	asrs	r4, r4, #2
 8001fb6:	2600      	movs	r6, #0
 8001fb8:	42a6      	cmp	r6, r4
 8001fba:	d109      	bne.n	8001fd0 <__libc_init_array+0x24>
 8001fbc:	4d0b      	ldr	r5, [pc, #44]	; (8001fec <__libc_init_array+0x40>)
 8001fbe:	4c0c      	ldr	r4, [pc, #48]	; (8001ff0 <__libc_init_array+0x44>)
 8001fc0:	f005 f834 	bl	800702c <_init>
 8001fc4:	1b64      	subs	r4, r4, r5
 8001fc6:	10a4      	asrs	r4, r4, #2
 8001fc8:	2600      	movs	r6, #0
 8001fca:	42a6      	cmp	r6, r4
 8001fcc:	d105      	bne.n	8001fda <__libc_init_array+0x2e>
 8001fce:	bd70      	pop	{r4, r5, r6, pc}
 8001fd0:	f855 3b04 	ldr.w	r3, [r5], #4
 8001fd4:	4798      	blx	r3
 8001fd6:	3601      	adds	r6, #1
 8001fd8:	e7ee      	b.n	8001fb8 <__libc_init_array+0xc>
 8001fda:	f855 3b04 	ldr.w	r3, [r5], #4
 8001fde:	4798      	blx	r3
 8001fe0:	3601      	adds	r6, #1
 8001fe2:	e7f2      	b.n	8001fca <__libc_init_array+0x1e>
 8001fe4:	08007478 	.word	0x08007478
 8001fe8:	08007478 	.word	0x08007478
 8001fec:	08007478 	.word	0x08007478
 8001ff0:	08007480 	.word	0x08007480

08001ff4 <memset>:
 8001ff4:	4402      	add	r2, r0
 8001ff6:	4603      	mov	r3, r0
 8001ff8:	4293      	cmp	r3, r2
 8001ffa:	d100      	bne.n	8001ffe <memset+0xa>
 8001ffc:	4770      	bx	lr
 8001ffe:	f803 1b01 	strb.w	r1, [r3], #1
 8002002:	e7f9      	b.n	8001ff8 <memset+0x4>

08002004 <printf>:
 8002004:	b40f      	push	{r0, r1, r2, r3}
 8002006:	b507      	push	{r0, r1, r2, lr}
 8002008:	4906      	ldr	r1, [pc, #24]	; (8002024 <printf+0x20>)
 800200a:	ab04      	add	r3, sp, #16
 800200c:	6808      	ldr	r0, [r1, #0]
 800200e:	f853 2b04 	ldr.w	r2, [r3], #4
 8002012:	6881      	ldr	r1, [r0, #8]
 8002014:	9301      	str	r3, [sp, #4]
 8002016:	f000 f855 	bl	80020c4 <_vfprintf_r>
 800201a:	b003      	add	sp, #12
 800201c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002020:	b004      	add	sp, #16
 8002022:	4770      	bx	lr
 8002024:	2000020c 	.word	0x2000020c

08002028 <_puts_r>:
 8002028:	b530      	push	{r4, r5, lr}
 800202a:	4605      	mov	r5, r0
 800202c:	b089      	sub	sp, #36	; 0x24
 800202e:	4608      	mov	r0, r1
 8002030:	460c      	mov	r4, r1
 8002032:	f7fe f8dd 	bl	80001f0 <strlen>
 8002036:	4b1e      	ldr	r3, [pc, #120]	; (80020b0 <_puts_r+0x88>)
 8002038:	9306      	str	r3, [sp, #24]
 800203a:	2301      	movs	r3, #1
 800203c:	e9cd 4004 	strd	r4, r0, [sp, #16]
 8002040:	9307      	str	r3, [sp, #28]
 8002042:	4418      	add	r0, r3
 8002044:	ab04      	add	r3, sp, #16
 8002046:	9301      	str	r3, [sp, #4]
 8002048:	2302      	movs	r3, #2
 800204a:	9302      	str	r3, [sp, #8]
 800204c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800204e:	68ac      	ldr	r4, [r5, #8]
 8002050:	9003      	str	r0, [sp, #12]
 8002052:	b913      	cbnz	r3, 800205a <_puts_r+0x32>
 8002054:	4628      	mov	r0, r5
 8002056:	f002 fa2f 	bl	80044b8 <__sinit>
 800205a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800205c:	07db      	lsls	r3, r3, #31
 800205e:	d405      	bmi.n	800206c <_puts_r+0x44>
 8002060:	89a3      	ldrh	r3, [r4, #12]
 8002062:	0598      	lsls	r0, r3, #22
 8002064:	d402      	bmi.n	800206c <_puts_r+0x44>
 8002066:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002068:	f002 fce4 	bl	8004a34 <__retarget_lock_acquire_recursive>
 800206c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002070:	0499      	lsls	r1, r3, #18
 8002072:	d406      	bmi.n	8002082 <_puts_r+0x5a>
 8002074:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002078:	81a3      	strh	r3, [r4, #12]
 800207a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800207c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002080:	6663      	str	r3, [r4, #100]	; 0x64
 8002082:	4628      	mov	r0, r5
 8002084:	aa01      	add	r2, sp, #4
 8002086:	4621      	mov	r1, r4
 8002088:	f002 fb66 	bl	8004758 <__sfvwrite_r>
 800208c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800208e:	2800      	cmp	r0, #0
 8002090:	bf14      	ite	ne
 8002092:	f04f 35ff 	movne.w	r5, #4294967295
 8002096:	250a      	moveq	r5, #10
 8002098:	07da      	lsls	r2, r3, #31
 800209a:	d405      	bmi.n	80020a8 <_puts_r+0x80>
 800209c:	89a3      	ldrh	r3, [r4, #12]
 800209e:	059b      	lsls	r3, r3, #22
 80020a0:	d402      	bmi.n	80020a8 <_puts_r+0x80>
 80020a2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80020a4:	f002 fcc7 	bl	8004a36 <__retarget_lock_release_recursive>
 80020a8:	4628      	mov	r0, r5
 80020aa:	b009      	add	sp, #36	; 0x24
 80020ac:	bd30      	pop	{r4, r5, pc}
 80020ae:	bf00      	nop
 80020b0:	08007346 	.word	0x08007346

080020b4 <puts>:
 80020b4:	4b02      	ldr	r3, [pc, #8]	; (80020c0 <puts+0xc>)
 80020b6:	4601      	mov	r1, r0
 80020b8:	6818      	ldr	r0, [r3, #0]
 80020ba:	f7ff bfb5 	b.w	8002028 <_puts_r>
 80020be:	bf00      	nop
 80020c0:	2000020c 	.word	0x2000020c

080020c4 <_vfprintf_r>:
 80020c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020c8:	b0d3      	sub	sp, #332	; 0x14c
 80020ca:	468a      	mov	sl, r1
 80020cc:	4691      	mov	r9, r2
 80020ce:	461c      	mov	r4, r3
 80020d0:	461e      	mov	r6, r3
 80020d2:	4680      	mov	r8, r0
 80020d4:	f002 fca8 	bl	8004a28 <_localeconv_r>
 80020d8:	6803      	ldr	r3, [r0, #0]
 80020da:	9317      	str	r3, [sp, #92]	; 0x5c
 80020dc:	4618      	mov	r0, r3
 80020de:	f7fe f887 	bl	80001f0 <strlen>
 80020e2:	9012      	str	r0, [sp, #72]	; 0x48
 80020e4:	f1b8 0f00 	cmp.w	r8, #0
 80020e8:	d005      	beq.n	80020f6 <_vfprintf_r+0x32>
 80020ea:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 80020ee:	b913      	cbnz	r3, 80020f6 <_vfprintf_r+0x32>
 80020f0:	4640      	mov	r0, r8
 80020f2:	f002 f9e1 	bl	80044b8 <__sinit>
 80020f6:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 80020fa:	07d8      	lsls	r0, r3, #31
 80020fc:	d407      	bmi.n	800210e <_vfprintf_r+0x4a>
 80020fe:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002102:	0599      	lsls	r1, r3, #22
 8002104:	d403      	bmi.n	800210e <_vfprintf_r+0x4a>
 8002106:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 800210a:	f002 fc93 	bl	8004a34 <__retarget_lock_acquire_recursive>
 800210e:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 8002112:	049a      	lsls	r2, r3, #18
 8002114:	d409      	bmi.n	800212a <_vfprintf_r+0x66>
 8002116:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800211a:	f8aa 300c 	strh.w	r3, [sl, #12]
 800211e:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 8002122:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002126:	f8ca 3064 	str.w	r3, [sl, #100]	; 0x64
 800212a:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800212e:	071b      	lsls	r3, r3, #28
 8002130:	d502      	bpl.n	8002138 <_vfprintf_r+0x74>
 8002132:	f8da 3010 	ldr.w	r3, [sl, #16]
 8002136:	b9c3      	cbnz	r3, 800216a <_vfprintf_r+0xa6>
 8002138:	4651      	mov	r1, sl
 800213a:	4640      	mov	r0, r8
 800213c:	f001 fa20 	bl	8003580 <__swsetup_r>
 8002140:	b198      	cbz	r0, 800216a <_vfprintf_r+0xa6>
 8002142:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 8002146:	07df      	lsls	r7, r3, #31
 8002148:	d506      	bpl.n	8002158 <_vfprintf_r+0x94>
 800214a:	f04f 33ff 	mov.w	r3, #4294967295
 800214e:	9313      	str	r3, [sp, #76]	; 0x4c
 8002150:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8002152:	b053      	add	sp, #332	; 0x14c
 8002154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002158:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800215c:	059e      	lsls	r6, r3, #22
 800215e:	d4f4      	bmi.n	800214a <_vfprintf_r+0x86>
 8002160:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 8002164:	f002 fc67 	bl	8004a36 <__retarget_lock_release_recursive>
 8002168:	e7ef      	b.n	800214a <_vfprintf_r+0x86>
 800216a:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800216e:	f003 021a 	and.w	r2, r3, #26
 8002172:	2a0a      	cmp	r2, #10
 8002174:	d116      	bne.n	80021a4 <_vfprintf_r+0xe0>
 8002176:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
 800217a:	2a00      	cmp	r2, #0
 800217c:	db12      	blt.n	80021a4 <_vfprintf_r+0xe0>
 800217e:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
 8002182:	07d5      	lsls	r5, r2, #31
 8002184:	d405      	bmi.n	8002192 <_vfprintf_r+0xce>
 8002186:	0598      	lsls	r0, r3, #22
 8002188:	d403      	bmi.n	8002192 <_vfprintf_r+0xce>
 800218a:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 800218e:	f002 fc52 	bl	8004a36 <__retarget_lock_release_recursive>
 8002192:	4623      	mov	r3, r4
 8002194:	464a      	mov	r2, r9
 8002196:	4651      	mov	r1, sl
 8002198:	4640      	mov	r0, r8
 800219a:	b053      	add	sp, #332	; 0x14c
 800219c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021a0:	f001 b9ae 	b.w	8003500 <__sbprintf>
 80021a4:	2500      	movs	r5, #0
 80021a6:	2200      	movs	r2, #0
 80021a8:	2300      	movs	r3, #0
 80021aa:	e9cd 5527 	strd	r5, r5, [sp, #156]	; 0x9c
 80021ae:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80021b2:	e9cd 5519 	strd	r5, r5, [sp, #100]	; 0x64
 80021b6:	ac29      	add	r4, sp, #164	; 0xa4
 80021b8:	9426      	str	r4, [sp, #152]	; 0x98
 80021ba:	9509      	str	r5, [sp, #36]	; 0x24
 80021bc:	950e      	str	r5, [sp, #56]	; 0x38
 80021be:	9516      	str	r5, [sp, #88]	; 0x58
 80021c0:	9518      	str	r5, [sp, #96]	; 0x60
 80021c2:	9513      	str	r5, [sp, #76]	; 0x4c
 80021c4:	464b      	mov	r3, r9
 80021c6:	461d      	mov	r5, r3
 80021c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80021cc:	b10a      	cbz	r2, 80021d2 <_vfprintf_r+0x10e>
 80021ce:	2a25      	cmp	r2, #37	; 0x25
 80021d0:	d1f9      	bne.n	80021c6 <_vfprintf_r+0x102>
 80021d2:	ebb5 0709 	subs.w	r7, r5, r9
 80021d6:	d00d      	beq.n	80021f4 <_vfprintf_r+0x130>
 80021d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80021da:	443b      	add	r3, r7
 80021dc:	9328      	str	r3, [sp, #160]	; 0xa0
 80021de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80021e0:	3301      	adds	r3, #1
 80021e2:	2b07      	cmp	r3, #7
 80021e4:	e9c4 9700 	strd	r9, r7, [r4]
 80021e8:	9327      	str	r3, [sp, #156]	; 0x9c
 80021ea:	dc79      	bgt.n	80022e0 <_vfprintf_r+0x21c>
 80021ec:	3408      	adds	r4, #8
 80021ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80021f0:	443b      	add	r3, r7
 80021f2:	9313      	str	r3, [sp, #76]	; 0x4c
 80021f4:	782b      	ldrb	r3, [r5, #0]
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	f001 813e 	beq.w	8003478 <_vfprintf_r+0x13b4>
 80021fc:	2300      	movs	r3, #0
 80021fe:	f04f 32ff 	mov.w	r2, #4294967295
 8002202:	3501      	adds	r5, #1
 8002204:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002208:	9207      	str	r2, [sp, #28]
 800220a:	9314      	str	r3, [sp, #80]	; 0x50
 800220c:	469b      	mov	fp, r3
 800220e:	270a      	movs	r7, #10
 8002210:	212b      	movs	r1, #43	; 0x2b
 8002212:	462b      	mov	r3, r5
 8002214:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002218:	920a      	str	r2, [sp, #40]	; 0x28
 800221a:	930f      	str	r3, [sp, #60]	; 0x3c
 800221c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800221e:	3b20      	subs	r3, #32
 8002220:	2b5a      	cmp	r3, #90	; 0x5a
 8002222:	f200 85b3 	bhi.w	8002d8c <_vfprintf_r+0xcc8>
 8002226:	e8df f013 	tbh	[pc, r3, lsl #1]
 800222a:	007e      	.short	0x007e
 800222c:	05b105b1 	.word	0x05b105b1
 8002230:	05b10086 	.word	0x05b10086
 8002234:	05b105b1 	.word	0x05b105b1
 8002238:	05b10065 	.word	0x05b10065
 800223c:	008905b1 	.word	0x008905b1
 8002240:	05b10093 	.word	0x05b10093
 8002244:	00960090 	.word	0x00960090
 8002248:	00b205b1 	.word	0x00b205b1
 800224c:	00b500b5 	.word	0x00b500b5
 8002250:	00b500b5 	.word	0x00b500b5
 8002254:	00b500b5 	.word	0x00b500b5
 8002258:	00b500b5 	.word	0x00b500b5
 800225c:	05b100b5 	.word	0x05b100b5
 8002260:	05b105b1 	.word	0x05b105b1
 8002264:	05b105b1 	.word	0x05b105b1
 8002268:	05b105b1 	.word	0x05b105b1
 800226c:	05b10125 	.word	0x05b10125
 8002270:	00f500e2 	.word	0x00f500e2
 8002274:	01250125 	.word	0x01250125
 8002278:	05b10125 	.word	0x05b10125
 800227c:	05b105b1 	.word	0x05b105b1
 8002280:	00c505b1 	.word	0x00c505b1
 8002284:	05b105b1 	.word	0x05b105b1
 8002288:	05b1048b 	.word	0x05b1048b
 800228c:	05b105b1 	.word	0x05b105b1
 8002290:	05b104d5 	.word	0x05b104d5
 8002294:	05b104f6 	.word	0x05b104f6
 8002298:	051805b1 	.word	0x051805b1
 800229c:	05b105b1 	.word	0x05b105b1
 80022a0:	05b105b1 	.word	0x05b105b1
 80022a4:	05b105b1 	.word	0x05b105b1
 80022a8:	05b105b1 	.word	0x05b105b1
 80022ac:	05b10125 	.word	0x05b10125
 80022b0:	00f700e2 	.word	0x00f700e2
 80022b4:	01250125 	.word	0x01250125
 80022b8:	00c80125 	.word	0x00c80125
 80022bc:	00dc00f7 	.word	0x00dc00f7
 80022c0:	00d505b1 	.word	0x00d505b1
 80022c4:	046605b1 	.word	0x046605b1
 80022c8:	04c3048d 	.word	0x04c3048d
 80022cc:	05b100dc 	.word	0x05b100dc
 80022d0:	007c04d5 	.word	0x007c04d5
 80022d4:	05b104f8 	.word	0x05b104f8
 80022d8:	053705b1 	.word	0x053705b1
 80022dc:	007c05b1 	.word	0x007c05b1
 80022e0:	aa26      	add	r2, sp, #152	; 0x98
 80022e2:	4651      	mov	r1, sl
 80022e4:	4640      	mov	r0, r8
 80022e6:	f003 fbfe 	bl	8005ae6 <__sprint_r>
 80022ea:	2800      	cmp	r0, #0
 80022ec:	f040 812d 	bne.w	800254a <_vfprintf_r+0x486>
 80022f0:	ac29      	add	r4, sp, #164	; 0xa4
 80022f2:	e77c      	b.n	80021ee <_vfprintf_r+0x12a>
 80022f4:	4640      	mov	r0, r8
 80022f6:	f002 fb97 	bl	8004a28 <_localeconv_r>
 80022fa:	6843      	ldr	r3, [r0, #4]
 80022fc:	9318      	str	r3, [sp, #96]	; 0x60
 80022fe:	4618      	mov	r0, r3
 8002300:	f7fd ff76 	bl	80001f0 <strlen>
 8002304:	9016      	str	r0, [sp, #88]	; 0x58
 8002306:	4640      	mov	r0, r8
 8002308:	f002 fb8e 	bl	8004a28 <_localeconv_r>
 800230c:	6883      	ldr	r3, [r0, #8]
 800230e:	930e      	str	r3, [sp, #56]	; 0x38
 8002310:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002312:	212b      	movs	r1, #43	; 0x2b
 8002314:	b12b      	cbz	r3, 8002322 <_vfprintf_r+0x25e>
 8002316:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002318:	b11b      	cbz	r3, 8002322 <_vfprintf_r+0x25e>
 800231a:	781b      	ldrb	r3, [r3, #0]
 800231c:	b10b      	cbz	r3, 8002322 <_vfprintf_r+0x25e>
 800231e:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
 8002322:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002324:	e775      	b.n	8002212 <_vfprintf_r+0x14e>
 8002326:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800232a:	2b00      	cmp	r3, #0
 800232c:	d1f9      	bne.n	8002322 <_vfprintf_r+0x25e>
 800232e:	2320      	movs	r3, #32
 8002330:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002334:	e7f5      	b.n	8002322 <_vfprintf_r+0x25e>
 8002336:	f04b 0b01 	orr.w	fp, fp, #1
 800233a:	e7f2      	b.n	8002322 <_vfprintf_r+0x25e>
 800233c:	f856 3b04 	ldr.w	r3, [r6], #4
 8002340:	9314      	str	r3, [sp, #80]	; 0x50
 8002342:	2b00      	cmp	r3, #0
 8002344:	daed      	bge.n	8002322 <_vfprintf_r+0x25e>
 8002346:	425b      	negs	r3, r3
 8002348:	9314      	str	r3, [sp, #80]	; 0x50
 800234a:	f04b 0b04 	orr.w	fp, fp, #4
 800234e:	e7e8      	b.n	8002322 <_vfprintf_r+0x25e>
 8002350:	f88d 107b 	strb.w	r1, [sp, #123]	; 0x7b
 8002354:	e7e5      	b.n	8002322 <_vfprintf_r+0x25e>
 8002356:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002358:	f813 2b01 	ldrb.w	r2, [r3], #1
 800235c:	920a      	str	r2, [sp, #40]	; 0x28
 800235e:	2a2a      	cmp	r2, #42	; 0x2a
 8002360:	d112      	bne.n	8002388 <_vfprintf_r+0x2c4>
 8002362:	f856 0b04 	ldr.w	r0, [r6], #4
 8002366:	930f      	str	r3, [sp, #60]	; 0x3c
 8002368:	ea40 72e0 	orr.w	r2, r0, r0, asr #31
 800236c:	9207      	str	r2, [sp, #28]
 800236e:	e7d8      	b.n	8002322 <_vfprintf_r+0x25e>
 8002370:	9807      	ldr	r0, [sp, #28]
 8002372:	fb07 2200 	mla	r2, r7, r0, r2
 8002376:	9207      	str	r2, [sp, #28]
 8002378:	f813 2b01 	ldrb.w	r2, [r3], #1
 800237c:	920a      	str	r2, [sp, #40]	; 0x28
 800237e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002380:	3a30      	subs	r2, #48	; 0x30
 8002382:	2a09      	cmp	r2, #9
 8002384:	d9f4      	bls.n	8002370 <_vfprintf_r+0x2ac>
 8002386:	e748      	b.n	800221a <_vfprintf_r+0x156>
 8002388:	2200      	movs	r2, #0
 800238a:	9207      	str	r2, [sp, #28]
 800238c:	e7f7      	b.n	800237e <_vfprintf_r+0x2ba>
 800238e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
 8002392:	e7c6      	b.n	8002322 <_vfprintf_r+0x25e>
 8002394:	2200      	movs	r2, #0
 8002396:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002398:	9214      	str	r2, [sp, #80]	; 0x50
 800239a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800239c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800239e:	3a30      	subs	r2, #48	; 0x30
 80023a0:	fb07 2200 	mla	r2, r7, r0, r2
 80023a4:	9214      	str	r2, [sp, #80]	; 0x50
 80023a6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80023aa:	920a      	str	r2, [sp, #40]	; 0x28
 80023ac:	3a30      	subs	r2, #48	; 0x30
 80023ae:	2a09      	cmp	r2, #9
 80023b0:	d9f3      	bls.n	800239a <_vfprintf_r+0x2d6>
 80023b2:	e732      	b.n	800221a <_vfprintf_r+0x156>
 80023b4:	f04b 0b08 	orr.w	fp, fp, #8
 80023b8:	e7b3      	b.n	8002322 <_vfprintf_r+0x25e>
 80023ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80023bc:	781b      	ldrb	r3, [r3, #0]
 80023be:	2b68      	cmp	r3, #104	; 0x68
 80023c0:	bf01      	itttt	eq
 80023c2:	9b0f      	ldreq	r3, [sp, #60]	; 0x3c
 80023c4:	3301      	addeq	r3, #1
 80023c6:	930f      	streq	r3, [sp, #60]	; 0x3c
 80023c8:	f44b 7b00 	orreq.w	fp, fp, #512	; 0x200
 80023cc:	bf18      	it	ne
 80023ce:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
 80023d2:	e7a6      	b.n	8002322 <_vfprintf_r+0x25e>
 80023d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80023d6:	781b      	ldrb	r3, [r3, #0]
 80023d8:	2b6c      	cmp	r3, #108	; 0x6c
 80023da:	d105      	bne.n	80023e8 <_vfprintf_r+0x324>
 80023dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80023de:	3301      	adds	r3, #1
 80023e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80023e2:	f04b 0b20 	orr.w	fp, fp, #32
 80023e6:	e79c      	b.n	8002322 <_vfprintf_r+0x25e>
 80023e8:	f04b 0b10 	orr.w	fp, fp, #16
 80023ec:	e799      	b.n	8002322 <_vfprintf_r+0x25e>
 80023ee:	4632      	mov	r2, r6
 80023f0:	2000      	movs	r0, #0
 80023f2:	f852 3b04 	ldr.w	r3, [r2], #4
 80023f6:	920b      	str	r2, [sp, #44]	; 0x2c
 80023f8:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 80023fc:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 8002400:	2301      	movs	r3, #1
 8002402:	e9cd 000c 	strd	r0, r0, [sp, #48]	; 0x30
 8002406:	9008      	str	r0, [sp, #32]
 8002408:	9307      	str	r3, [sp, #28]
 800240a:	4606      	mov	r6, r0
 800240c:	4605      	mov	r5, r0
 800240e:	f10d 09e4 	add.w	r9, sp, #228	; 0xe4
 8002412:	e1ba      	b.n	800278a <_vfprintf_r+0x6c6>
 8002414:	f04b 0b10 	orr.w	fp, fp, #16
 8002418:	f01b 0f20 	tst.w	fp, #32
 800241c:	d012      	beq.n	8002444 <_vfprintf_r+0x380>
 800241e:	3607      	adds	r6, #7
 8002420:	f026 0307 	bic.w	r3, r6, #7
 8002424:	461a      	mov	r2, r3
 8002426:	685d      	ldr	r5, [r3, #4]
 8002428:	f852 6b08 	ldr.w	r6, [r2], #8
 800242c:	920b      	str	r2, [sp, #44]	; 0x2c
 800242e:	2d00      	cmp	r5, #0
 8002430:	da06      	bge.n	8002440 <_vfprintf_r+0x37c>
 8002432:	4276      	negs	r6, r6
 8002434:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8002438:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 800243c:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002440:	2301      	movs	r3, #1
 8002442:	e390      	b.n	8002b66 <_vfprintf_r+0xaa2>
 8002444:	4633      	mov	r3, r6
 8002446:	f01b 0f10 	tst.w	fp, #16
 800244a:	f853 5b04 	ldr.w	r5, [r3], #4
 800244e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002450:	d002      	beq.n	8002458 <_vfprintf_r+0x394>
 8002452:	462e      	mov	r6, r5
 8002454:	17ed      	asrs	r5, r5, #31
 8002456:	e7ea      	b.n	800242e <_vfprintf_r+0x36a>
 8002458:	f01b 0f40 	tst.w	fp, #64	; 0x40
 800245c:	d003      	beq.n	8002466 <_vfprintf_r+0x3a2>
 800245e:	b22e      	sxth	r6, r5
 8002460:	f345 35c0 	sbfx	r5, r5, #15, #1
 8002464:	e7e3      	b.n	800242e <_vfprintf_r+0x36a>
 8002466:	f41b 7f00 	tst.w	fp, #512	; 0x200
 800246a:	d0f2      	beq.n	8002452 <_vfprintf_r+0x38e>
 800246c:	b26e      	sxtb	r6, r5
 800246e:	f345 15c0 	sbfx	r5, r5, #7, #1
 8002472:	e7dc      	b.n	800242e <_vfprintf_r+0x36a>
 8002474:	3607      	adds	r6, #7
 8002476:	f026 0307 	bic.w	r3, r6, #7
 800247a:	4619      	mov	r1, r3
 800247c:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 8002480:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8002484:	e9dd 6310 	ldrd	r6, r3, [sp, #64]	; 0x40
 8002488:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 800248c:	910b      	str	r1, [sp, #44]	; 0x2c
 800248e:	4b40      	ldr	r3, [pc, #256]	; (8002590 <_vfprintf_r+0x4cc>)
 8002490:	f04f 32ff 	mov.w	r2, #4294967295
 8002494:	4630      	mov	r0, r6
 8002496:	4629      	mov	r1, r5
 8002498:	f7fe fb58 	bl	8000b4c <__aeabi_dcmpun>
 800249c:	bb10      	cbnz	r0, 80024e4 <_vfprintf_r+0x420>
 800249e:	4b3c      	ldr	r3, [pc, #240]	; (8002590 <_vfprintf_r+0x4cc>)
 80024a0:	f04f 32ff 	mov.w	r2, #4294967295
 80024a4:	4630      	mov	r0, r6
 80024a6:	4629      	mov	r1, r5
 80024a8:	f7fe fb32 	bl	8000b10 <__aeabi_dcmple>
 80024ac:	b9d0      	cbnz	r0, 80024e4 <_vfprintf_r+0x420>
 80024ae:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80024b2:	2200      	movs	r2, #0
 80024b4:	2300      	movs	r3, #0
 80024b6:	f7fe fb21 	bl	8000afc <__aeabi_dcmplt>
 80024ba:	b110      	cbz	r0, 80024c2 <_vfprintf_r+0x3fe>
 80024bc:	232d      	movs	r3, #45	; 0x2d
 80024be:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 80024c2:	4a34      	ldr	r2, [pc, #208]	; (8002594 <_vfprintf_r+0x4d0>)
 80024c4:	4834      	ldr	r0, [pc, #208]	; (8002598 <_vfprintf_r+0x4d4>)
 80024c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024c8:	2100      	movs	r1, #0
 80024ca:	2b47      	cmp	r3, #71	; 0x47
 80024cc:	bfd4      	ite	le
 80024ce:	4691      	movle	r9, r2
 80024d0:	4681      	movgt	r9, r0
 80024d2:	2303      	movs	r3, #3
 80024d4:	e9cd 3107 	strd	r3, r1, [sp, #28]
 80024d8:	f02b 0b80 	bic.w	fp, fp, #128	; 0x80
 80024dc:	2600      	movs	r6, #0
 80024de:	4633      	mov	r3, r6
 80024e0:	f001 b804 	b.w	80034ec <_vfprintf_r+0x1428>
 80024e4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80024e8:	4610      	mov	r0, r2
 80024ea:	4619      	mov	r1, r3
 80024ec:	f7fe fb2e 	bl	8000b4c <__aeabi_dcmpun>
 80024f0:	b140      	cbz	r0, 8002504 <_vfprintf_r+0x440>
 80024f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80024f4:	4a29      	ldr	r2, [pc, #164]	; (800259c <_vfprintf_r+0x4d8>)
 80024f6:	482a      	ldr	r0, [pc, #168]	; (80025a0 <_vfprintf_r+0x4dc>)
 80024f8:	2b00      	cmp	r3, #0
 80024fa:	bfbc      	itt	lt
 80024fc:	232d      	movlt	r3, #45	; 0x2d
 80024fe:	f88d 307b 	strblt.w	r3, [sp, #123]	; 0x7b
 8002502:	e7e0      	b.n	80024c6 <_vfprintf_r+0x402>
 8002504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002506:	f023 0320 	bic.w	r3, r3, #32
 800250a:	2b41      	cmp	r3, #65	; 0x41
 800250c:	930c      	str	r3, [sp, #48]	; 0x30
 800250e:	d12e      	bne.n	800256e <_vfprintf_r+0x4aa>
 8002510:	2330      	movs	r3, #48	; 0x30
 8002512:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8002516:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002518:	2b61      	cmp	r3, #97	; 0x61
 800251a:	bf0c      	ite	eq
 800251c:	2378      	moveq	r3, #120	; 0x78
 800251e:	2358      	movne	r3, #88	; 0x58
 8002520:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 8002524:	9b07      	ldr	r3, [sp, #28]
 8002526:	2b63      	cmp	r3, #99	; 0x63
 8002528:	f04b 0b02 	orr.w	fp, fp, #2
 800252c:	dd3a      	ble.n	80025a4 <_vfprintf_r+0x4e0>
 800252e:	1c59      	adds	r1, r3, #1
 8002530:	4640      	mov	r0, r8
 8002532:	f002 faed 	bl	8004b10 <_malloc_r>
 8002536:	4681      	mov	r9, r0
 8002538:	2800      	cmp	r0, #0
 800253a:	f040 81fd 	bne.w	8002938 <_vfprintf_r+0x874>
 800253e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002542:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002546:	f8aa 300c 	strh.w	r3, [sl, #12]
 800254a:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 800254e:	07d9      	lsls	r1, r3, #31
 8002550:	d407      	bmi.n	8002562 <_vfprintf_r+0x49e>
 8002552:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002556:	059a      	lsls	r2, r3, #22
 8002558:	d403      	bmi.n	8002562 <_vfprintf_r+0x49e>
 800255a:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 800255e:	f002 fa6a 	bl	8004a36 <__retarget_lock_release_recursive>
 8002562:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002566:	065b      	lsls	r3, r3, #25
 8002568:	f57f adf2 	bpl.w	8002150 <_vfprintf_r+0x8c>
 800256c:	e5ed      	b.n	800214a <_vfprintf_r+0x86>
 800256e:	9b07      	ldr	r3, [sp, #28]
 8002570:	3301      	adds	r3, #1
 8002572:	f000 81e3 	beq.w	800293c <_vfprintf_r+0x878>
 8002576:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002578:	2b47      	cmp	r3, #71	; 0x47
 800257a:	f040 81e2 	bne.w	8002942 <_vfprintf_r+0x87e>
 800257e:	9b07      	ldr	r3, [sp, #28]
 8002580:	2b00      	cmp	r3, #0
 8002582:	f040 81de 	bne.w	8002942 <_vfprintf_r+0x87e>
 8002586:	9308      	str	r3, [sp, #32]
 8002588:	2301      	movs	r3, #1
 800258a:	9307      	str	r3, [sp, #28]
 800258c:	e00d      	b.n	80025aa <_vfprintf_r+0x4e6>
 800258e:	bf00      	nop
 8002590:	7fefffff 	.word	0x7fefffff
 8002594:	080070c4 	.word	0x080070c4
 8002598:	080070c8 	.word	0x080070c8
 800259c:	080070cc 	.word	0x080070cc
 80025a0:	080070d0 	.word	0x080070d0
 80025a4:	9008      	str	r0, [sp, #32]
 80025a6:	f10d 09e4 	add.w	r9, sp, #228	; 0xe4
 80025aa:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
 80025ae:	9315      	str	r3, [sp, #84]	; 0x54
 80025b0:	e9dd 7310 	ldrd	r7, r3, [sp, #64]	; 0x40
 80025b4:	1e1d      	subs	r5, r3, #0
 80025b6:	bfb6      	itet	lt
 80025b8:	f103 4500 	addlt.w	r5, r3, #2147483648	; 0x80000000
 80025bc:	2300      	movge	r3, #0
 80025be:	232d      	movlt	r3, #45	; 0x2d
 80025c0:	931c      	str	r3, [sp, #112]	; 0x70
 80025c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80025c4:	2b41      	cmp	r3, #65	; 0x41
 80025c6:	f040 81d4 	bne.w	8002972 <_vfprintf_r+0x8ae>
 80025ca:	aa20      	add	r2, sp, #128	; 0x80
 80025cc:	4638      	mov	r0, r7
 80025ce:	4629      	mov	r1, r5
 80025d0:	f003 f9e2 	bl	8005998 <frexp>
 80025d4:	2200      	movs	r2, #0
 80025d6:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80025da:	f7fe f81d 	bl	8000618 <__aeabi_dmul>
 80025de:	2200      	movs	r2, #0
 80025e0:	2300      	movs	r3, #0
 80025e2:	4606      	mov	r6, r0
 80025e4:	460f      	mov	r7, r1
 80025e6:	f7fe fa7f 	bl	8000ae8 <__aeabi_dcmpeq>
 80025ea:	b108      	cbz	r0, 80025f0 <_vfprintf_r+0x52c>
 80025ec:	2301      	movs	r3, #1
 80025ee:	9320      	str	r3, [sp, #128]	; 0x80
 80025f0:	4ba6      	ldr	r3, [pc, #664]	; (800288c <_vfprintf_r+0x7c8>)
 80025f2:	4aa7      	ldr	r2, [pc, #668]	; (8002890 <_vfprintf_r+0x7cc>)
 80025f4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80025f6:	2961      	cmp	r1, #97	; 0x61
 80025f8:	bf18      	it	ne
 80025fa:	461a      	movne	r2, r3
 80025fc:	9b07      	ldr	r3, [sp, #28]
 80025fe:	921b      	str	r2, [sp, #108]	; 0x6c
 8002600:	3b01      	subs	r3, #1
 8002602:	9309      	str	r3, [sp, #36]	; 0x24
 8002604:	464d      	mov	r5, r9
 8002606:	4ba3      	ldr	r3, [pc, #652]	; (8002894 <_vfprintf_r+0x7d0>)
 8002608:	2200      	movs	r2, #0
 800260a:	4630      	mov	r0, r6
 800260c:	4639      	mov	r1, r7
 800260e:	f7fe f803 	bl	8000618 <__aeabi_dmul>
 8002612:	460f      	mov	r7, r1
 8002614:	4606      	mov	r6, r0
 8002616:	f7fe faaf 	bl	8000b78 <__aeabi_d2iz>
 800261a:	901d      	str	r0, [sp, #116]	; 0x74
 800261c:	f7fd ff92 	bl	8000544 <__aeabi_i2d>
 8002620:	4602      	mov	r2, r0
 8002622:	460b      	mov	r3, r1
 8002624:	4630      	mov	r0, r6
 8002626:	4639      	mov	r1, r7
 8002628:	f7fd fe3e 	bl	80002a8 <__aeabi_dsub>
 800262c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800262e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002630:	5c9b      	ldrb	r3, [r3, r2]
 8002632:	f805 3b01 	strb.w	r3, [r5], #1
 8002636:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002638:	930d      	str	r3, [sp, #52]	; 0x34
 800263a:	1c5a      	adds	r2, r3, #1
 800263c:	4606      	mov	r6, r0
 800263e:	460f      	mov	r7, r1
 8002640:	d007      	beq.n	8002652 <_vfprintf_r+0x58e>
 8002642:	3b01      	subs	r3, #1
 8002644:	9309      	str	r3, [sp, #36]	; 0x24
 8002646:	2200      	movs	r2, #0
 8002648:	2300      	movs	r3, #0
 800264a:	f7fe fa4d 	bl	8000ae8 <__aeabi_dcmpeq>
 800264e:	2800      	cmp	r0, #0
 8002650:	d0d9      	beq.n	8002606 <_vfprintf_r+0x542>
 8002652:	4b91      	ldr	r3, [pc, #580]	; (8002898 <_vfprintf_r+0x7d4>)
 8002654:	2200      	movs	r2, #0
 8002656:	4630      	mov	r0, r6
 8002658:	4639      	mov	r1, r7
 800265a:	f7fe fa6d 	bl	8000b38 <__aeabi_dcmpgt>
 800265e:	b960      	cbnz	r0, 800267a <_vfprintf_r+0x5b6>
 8002660:	4b8d      	ldr	r3, [pc, #564]	; (8002898 <_vfprintf_r+0x7d4>)
 8002662:	2200      	movs	r2, #0
 8002664:	4630      	mov	r0, r6
 8002666:	4639      	mov	r1, r7
 8002668:	f7fe fa3e 	bl	8000ae8 <__aeabi_dcmpeq>
 800266c:	2800      	cmp	r0, #0
 800266e:	f000 817b 	beq.w	8002968 <_vfprintf_r+0x8a4>
 8002672:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002674:	07da      	lsls	r2, r3, #31
 8002676:	f140 8177 	bpl.w	8002968 <_vfprintf_r+0x8a4>
 800267a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800267c:	9524      	str	r5, [sp, #144]	; 0x90
 800267e:	7bd9      	ldrb	r1, [r3, #15]
 8002680:	2030      	movs	r0, #48	; 0x30
 8002682:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002684:	1e53      	subs	r3, r2, #1
 8002686:	9324      	str	r3, [sp, #144]	; 0x90
 8002688:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 800268c:	428b      	cmp	r3, r1
 800268e:	f000 815a 	beq.w	8002946 <_vfprintf_r+0x882>
 8002692:	2b39      	cmp	r3, #57	; 0x39
 8002694:	bf0b      	itete	eq
 8002696:	9b1b      	ldreq	r3, [sp, #108]	; 0x6c
 8002698:	3301      	addne	r3, #1
 800269a:	7a9b      	ldrbeq	r3, [r3, #10]
 800269c:	b2db      	uxtbne	r3, r3
 800269e:	f802 3c01 	strb.w	r3, [r2, #-1]
 80026a2:	eba5 0309 	sub.w	r3, r5, r9
 80026a6:	9309      	str	r3, [sp, #36]	; 0x24
 80026a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80026aa:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80026ac:	2b47      	cmp	r3, #71	; 0x47
 80026ae:	f040 81ad 	bne.w	8002a0c <_vfprintf_r+0x948>
 80026b2:	1ceb      	adds	r3, r5, #3
 80026b4:	db03      	blt.n	80026be <_vfprintf_r+0x5fa>
 80026b6:	9b07      	ldr	r3, [sp, #28]
 80026b8:	42ab      	cmp	r3, r5
 80026ba:	f280 81d2 	bge.w	8002a62 <_vfprintf_r+0x99e>
 80026be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80026c0:	3b02      	subs	r3, #2
 80026c2:	930a      	str	r3, [sp, #40]	; 0x28
 80026c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80026c6:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 80026ca:	f021 0120 	bic.w	r1, r1, #32
 80026ce:	2941      	cmp	r1, #65	; 0x41
 80026d0:	bf08      	it	eq
 80026d2:	320f      	addeq	r2, #15
 80026d4:	f105 33ff 	add.w	r3, r5, #4294967295
 80026d8:	bf06      	itte	eq
 80026da:	b2d2      	uxtbeq	r2, r2
 80026dc:	2101      	moveq	r1, #1
 80026de:	2100      	movne	r1, #0
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	9320      	str	r3, [sp, #128]	; 0x80
 80026e4:	bfb8      	it	lt
 80026e6:	f1c5 0301 	rsblt	r3, r5, #1
 80026ea:	f88d 2088 	strb.w	r2, [sp, #136]	; 0x88
 80026ee:	bfb4      	ite	lt
 80026f0:	222d      	movlt	r2, #45	; 0x2d
 80026f2:	222b      	movge	r2, #43	; 0x2b
 80026f4:	2b09      	cmp	r3, #9
 80026f6:	f88d 2089 	strb.w	r2, [sp, #137]	; 0x89
 80026fa:	f340 81a0 	ble.w	8002a3e <_vfprintf_r+0x97a>
 80026fe:	f10d 0297 	add.w	r2, sp, #151	; 0x97
 8002702:	260a      	movs	r6, #10
 8002704:	4611      	mov	r1, r2
 8002706:	fb93 f5f6 	sdiv	r5, r3, r6
 800270a:	fb06 3015 	mls	r0, r6, r5, r3
 800270e:	3030      	adds	r0, #48	; 0x30
 8002710:	f801 0c01 	strb.w	r0, [r1, #-1]
 8002714:	4618      	mov	r0, r3
 8002716:	2863      	cmp	r0, #99	; 0x63
 8002718:	f102 32ff 	add.w	r2, r2, #4294967295
 800271c:	462b      	mov	r3, r5
 800271e:	dcf1      	bgt.n	8002704 <_vfprintf_r+0x640>
 8002720:	3330      	adds	r3, #48	; 0x30
 8002722:	1e88      	subs	r0, r1, #2
 8002724:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002728:	f10d 0597 	add.w	r5, sp, #151	; 0x97
 800272c:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 8002730:	4603      	mov	r3, r0
 8002732:	42ab      	cmp	r3, r5
 8002734:	f0c0 817e 	bcc.w	8002a34 <_vfprintf_r+0x970>
 8002738:	f10d 0299 	add.w	r2, sp, #153	; 0x99
 800273c:	1a52      	subs	r2, r2, r1
 800273e:	42a8      	cmp	r0, r5
 8002740:	bf88      	it	hi
 8002742:	2200      	movhi	r2, #0
 8002744:	f10d 038a 	add.w	r3, sp, #138	; 0x8a
 8002748:	441a      	add	r2, r3
 800274a:	ab22      	add	r3, sp, #136	; 0x88
 800274c:	1ad3      	subs	r3, r2, r3
 800274e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002750:	9319      	str	r3, [sp, #100]	; 0x64
 8002752:	2a01      	cmp	r2, #1
 8002754:	4413      	add	r3, r2
 8002756:	9307      	str	r3, [sp, #28]
 8002758:	dc02      	bgt.n	8002760 <_vfprintf_r+0x69c>
 800275a:	f01b 0f01 	tst.w	fp, #1
 800275e:	d003      	beq.n	8002768 <_vfprintf_r+0x6a4>
 8002760:	9b07      	ldr	r3, [sp, #28]
 8002762:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002764:	4413      	add	r3, r2
 8002766:	9307      	str	r3, [sp, #28]
 8002768:	f42b 6380 	bic.w	r3, fp, #1024	; 0x400
 800276c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002770:	9315      	str	r3, [sp, #84]	; 0x54
 8002772:	2300      	movs	r3, #0
 8002774:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 8002778:	461d      	mov	r5, r3
 800277a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800277c:	b113      	cbz	r3, 8002784 <_vfprintf_r+0x6c0>
 800277e:	232d      	movs	r3, #45	; 0x2d
 8002780:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002784:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
 8002788:	2600      	movs	r6, #0
 800278a:	9b07      	ldr	r3, [sp, #28]
 800278c:	42b3      	cmp	r3, r6
 800278e:	bfb8      	it	lt
 8002790:	4633      	movlt	r3, r6
 8002792:	9315      	str	r3, [sp, #84]	; 0x54
 8002794:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 8002798:	b113      	cbz	r3, 80027a0 <_vfprintf_r+0x6dc>
 800279a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800279c:	3301      	adds	r3, #1
 800279e:	9315      	str	r3, [sp, #84]	; 0x54
 80027a0:	f01b 0302 	ands.w	r3, fp, #2
 80027a4:	931b      	str	r3, [sp, #108]	; 0x6c
 80027a6:	bf1e      	ittt	ne
 80027a8:	9b15      	ldrne	r3, [sp, #84]	; 0x54
 80027aa:	3302      	addne	r3, #2
 80027ac:	9315      	strne	r3, [sp, #84]	; 0x54
 80027ae:	f01b 0384 	ands.w	r3, fp, #132	; 0x84
 80027b2:	931c      	str	r3, [sp, #112]	; 0x70
 80027b4:	d11f      	bne.n	80027f6 <_vfprintf_r+0x732>
 80027b6:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 80027ba:	1a9f      	subs	r7, r3, r2
 80027bc:	2f00      	cmp	r7, #0
 80027be:	dd1a      	ble.n	80027f6 <_vfprintf_r+0x732>
 80027c0:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80027c4:	4835      	ldr	r0, [pc, #212]	; (800289c <_vfprintf_r+0x7d8>)
 80027c6:	6020      	str	r0, [r4, #0]
 80027c8:	2f10      	cmp	r7, #16
 80027ca:	f103 0301 	add.w	r3, r3, #1
 80027ce:	f104 0108 	add.w	r1, r4, #8
 80027d2:	f300 82ea 	bgt.w	8002daa <_vfprintf_r+0xce6>
 80027d6:	443a      	add	r2, r7
 80027d8:	2b07      	cmp	r3, #7
 80027da:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80027de:	6067      	str	r7, [r4, #4]
 80027e0:	f340 82f6 	ble.w	8002dd0 <_vfprintf_r+0xd0c>
 80027e4:	aa26      	add	r2, sp, #152	; 0x98
 80027e6:	4651      	mov	r1, sl
 80027e8:	4640      	mov	r0, r8
 80027ea:	f003 f97c 	bl	8005ae6 <__sprint_r>
 80027ee:	2800      	cmp	r0, #0
 80027f0:	f040 8620 	bne.w	8003434 <_vfprintf_r+0x1370>
 80027f4:	ac29      	add	r4, sp, #164	; 0xa4
 80027f6:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 80027fa:	b173      	cbz	r3, 800281a <_vfprintf_r+0x756>
 80027fc:	f10d 037b 	add.w	r3, sp, #123	; 0x7b
 8002800:	6023      	str	r3, [r4, #0]
 8002802:	2301      	movs	r3, #1
 8002804:	6063      	str	r3, [r4, #4]
 8002806:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002808:	3301      	adds	r3, #1
 800280a:	9328      	str	r3, [sp, #160]	; 0xa0
 800280c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800280e:	3301      	adds	r3, #1
 8002810:	2b07      	cmp	r3, #7
 8002812:	9327      	str	r3, [sp, #156]	; 0x9c
 8002814:	f300 82de 	bgt.w	8002dd4 <_vfprintf_r+0xd10>
 8002818:	3408      	adds	r4, #8
 800281a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800281c:	b16b      	cbz	r3, 800283a <_vfprintf_r+0x776>
 800281e:	ab1f      	add	r3, sp, #124	; 0x7c
 8002820:	6023      	str	r3, [r4, #0]
 8002822:	2302      	movs	r3, #2
 8002824:	6063      	str	r3, [r4, #4]
 8002826:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002828:	3302      	adds	r3, #2
 800282a:	9328      	str	r3, [sp, #160]	; 0xa0
 800282c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800282e:	3301      	adds	r3, #1
 8002830:	2b07      	cmp	r3, #7
 8002832:	9327      	str	r3, [sp, #156]	; 0x9c
 8002834:	f300 82d8 	bgt.w	8002de8 <_vfprintf_r+0xd24>
 8002838:	3408      	adds	r4, #8
 800283a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800283c:	2b80      	cmp	r3, #128	; 0x80
 800283e:	d11f      	bne.n	8002880 <_vfprintf_r+0x7bc>
 8002840:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 8002844:	1a9f      	subs	r7, r3, r2
 8002846:	2f00      	cmp	r7, #0
 8002848:	dd1a      	ble.n	8002880 <_vfprintf_r+0x7bc>
 800284a:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800284e:	4814      	ldr	r0, [pc, #80]	; (80028a0 <_vfprintf_r+0x7dc>)
 8002850:	6020      	str	r0, [r4, #0]
 8002852:	2f10      	cmp	r7, #16
 8002854:	f103 0301 	add.w	r3, r3, #1
 8002858:	f104 0108 	add.w	r1, r4, #8
 800285c:	f300 82ce 	bgt.w	8002dfc <_vfprintf_r+0xd38>
 8002860:	6067      	str	r7, [r4, #4]
 8002862:	2b07      	cmp	r3, #7
 8002864:	4417      	add	r7, r2
 8002866:	e9cd 3727 	strd	r3, r7, [sp, #156]	; 0x9c
 800286a:	f340 82da 	ble.w	8002e22 <_vfprintf_r+0xd5e>
 800286e:	aa26      	add	r2, sp, #152	; 0x98
 8002870:	4651      	mov	r1, sl
 8002872:	4640      	mov	r0, r8
 8002874:	f003 f937 	bl	8005ae6 <__sprint_r>
 8002878:	2800      	cmp	r0, #0
 800287a:	f040 85db 	bne.w	8003434 <_vfprintf_r+0x1370>
 800287e:	ac29      	add	r4, sp, #164	; 0xa4
 8002880:	9b07      	ldr	r3, [sp, #28]
 8002882:	1af6      	subs	r6, r6, r3
 8002884:	2e00      	cmp	r6, #0
 8002886:	dd27      	ble.n	80028d8 <_vfprintf_r+0x814>
 8002888:	4f05      	ldr	r7, [pc, #20]	; (80028a0 <_vfprintf_r+0x7dc>)
 800288a:	e00b      	b.n	80028a4 <_vfprintf_r+0x7e0>
 800288c:	080070e5 	.word	0x080070e5
 8002890:	080070d4 	.word	0x080070d4
 8002894:	40300000 	.word	0x40300000
 8002898:	3fe00000 	.word	0x3fe00000
 800289c:	080070f8 	.word	0x080070f8
 80028a0:	08007108 	.word	0x08007108
 80028a4:	6027      	str	r7, [r4, #0]
 80028a6:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80028aa:	2e10      	cmp	r6, #16
 80028ac:	f103 0301 	add.w	r3, r3, #1
 80028b0:	f104 0108 	add.w	r1, r4, #8
 80028b4:	f300 82b7 	bgt.w	8002e26 <_vfprintf_r+0xd62>
 80028b8:	6066      	str	r6, [r4, #4]
 80028ba:	2b07      	cmp	r3, #7
 80028bc:	4416      	add	r6, r2
 80028be:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80028c2:	f340 82c3 	ble.w	8002e4c <_vfprintf_r+0xd88>
 80028c6:	aa26      	add	r2, sp, #152	; 0x98
 80028c8:	4651      	mov	r1, sl
 80028ca:	4640      	mov	r0, r8
 80028cc:	f003 f90b 	bl	8005ae6 <__sprint_r>
 80028d0:	2800      	cmp	r0, #0
 80028d2:	f040 85af 	bne.w	8003434 <_vfprintf_r+0x1370>
 80028d6:	ac29      	add	r4, sp, #164	; 0xa4
 80028d8:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80028dc:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 80028de:	f040 82bb 	bne.w	8002e58 <_vfprintf_r+0xd94>
 80028e2:	9b07      	ldr	r3, [sp, #28]
 80028e4:	f8c4 9000 	str.w	r9, [r4]
 80028e8:	441e      	add	r6, r3
 80028ea:	6063      	str	r3, [r4, #4]
 80028ec:	9628      	str	r6, [sp, #160]	; 0xa0
 80028ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80028f0:	3301      	adds	r3, #1
 80028f2:	2b07      	cmp	r3, #7
 80028f4:	9327      	str	r3, [sp, #156]	; 0x9c
 80028f6:	f300 82f4 	bgt.w	8002ee2 <_vfprintf_r+0xe1e>
 80028fa:	3408      	adds	r4, #8
 80028fc:	f01b 0f04 	tst.w	fp, #4
 8002900:	f040 857a 	bne.w	80033f8 <_vfprintf_r+0x1334>
 8002904:	e9dd 3213 	ldrd	r3, r2, [sp, #76]	; 0x4c
 8002908:	9915      	ldr	r1, [sp, #84]	; 0x54
 800290a:	428a      	cmp	r2, r1
 800290c:	bfac      	ite	ge
 800290e:	189b      	addge	r3, r3, r2
 8002910:	185b      	addlt	r3, r3, r1
 8002912:	9313      	str	r3, [sp, #76]	; 0x4c
 8002914:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002916:	b13b      	cbz	r3, 8002928 <_vfprintf_r+0x864>
 8002918:	aa26      	add	r2, sp, #152	; 0x98
 800291a:	4651      	mov	r1, sl
 800291c:	4640      	mov	r0, r8
 800291e:	f003 f8e2 	bl	8005ae6 <__sprint_r>
 8002922:	2800      	cmp	r0, #0
 8002924:	f040 8586 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002928:	2300      	movs	r3, #0
 800292a:	9327      	str	r3, [sp, #156]	; 0x9c
 800292c:	9b08      	ldr	r3, [sp, #32]
 800292e:	2b00      	cmp	r3, #0
 8002930:	f040 859c 	bne.w	800346c <_vfprintf_r+0x13a8>
 8002934:	ac29      	add	r4, sp, #164	; 0xa4
 8002936:	e0e9      	b.n	8002b0c <_vfprintf_r+0xa48>
 8002938:	9008      	str	r0, [sp, #32]
 800293a:	e636      	b.n	80025aa <_vfprintf_r+0x4e6>
 800293c:	9008      	str	r0, [sp, #32]
 800293e:	2306      	movs	r3, #6
 8002940:	e623      	b.n	800258a <_vfprintf_r+0x4c6>
 8002942:	9008      	str	r0, [sp, #32]
 8002944:	e631      	b.n	80025aa <_vfprintf_r+0x4e6>
 8002946:	f802 0c01 	strb.w	r0, [r2, #-1]
 800294a:	e69a      	b.n	8002682 <_vfprintf_r+0x5be>
 800294c:	f803 0b01 	strb.w	r0, [r3], #1
 8002950:	1aca      	subs	r2, r1, r3
 8002952:	2a00      	cmp	r2, #0
 8002954:	dafa      	bge.n	800294c <_vfprintf_r+0x888>
 8002956:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002958:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800295a:	3201      	adds	r2, #1
 800295c:	f103 0301 	add.w	r3, r3, #1
 8002960:	bfb8      	it	lt
 8002962:	2300      	movlt	r3, #0
 8002964:	441d      	add	r5, r3
 8002966:	e69c      	b.n	80026a2 <_vfprintf_r+0x5de>
 8002968:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800296a:	462b      	mov	r3, r5
 800296c:	18a9      	adds	r1, r5, r2
 800296e:	2030      	movs	r0, #48	; 0x30
 8002970:	e7ee      	b.n	8002950 <_vfprintf_r+0x88c>
 8002972:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002974:	2b46      	cmp	r3, #70	; 0x46
 8002976:	d005      	beq.n	8002984 <_vfprintf_r+0x8c0>
 8002978:	2b45      	cmp	r3, #69	; 0x45
 800297a:	d11b      	bne.n	80029b4 <_vfprintf_r+0x8f0>
 800297c:	9b07      	ldr	r3, [sp, #28]
 800297e:	1c5e      	adds	r6, r3, #1
 8002980:	2302      	movs	r3, #2
 8002982:	e001      	b.n	8002988 <_vfprintf_r+0x8c4>
 8002984:	9e07      	ldr	r6, [sp, #28]
 8002986:	2303      	movs	r3, #3
 8002988:	aa24      	add	r2, sp, #144	; 0x90
 800298a:	9204      	str	r2, [sp, #16]
 800298c:	aa21      	add	r2, sp, #132	; 0x84
 800298e:	9203      	str	r2, [sp, #12]
 8002990:	aa20      	add	r2, sp, #128	; 0x80
 8002992:	e9cd 6201 	strd	r6, r2, [sp, #4]
 8002996:	9300      	str	r3, [sp, #0]
 8002998:	463a      	mov	r2, r7
 800299a:	462b      	mov	r3, r5
 800299c:	4640      	mov	r0, r8
 800299e:	f000 fedf 	bl	8003760 <_dtoa_r>
 80029a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80029a4:	2b47      	cmp	r3, #71	; 0x47
 80029a6:	4681      	mov	r9, r0
 80029a8:	d106      	bne.n	80029b8 <_vfprintf_r+0x8f4>
 80029aa:	f01b 0f01 	tst.w	fp, #1
 80029ae:	d103      	bne.n	80029b8 <_vfprintf_r+0x8f4>
 80029b0:	9d24      	ldr	r5, [sp, #144]	; 0x90
 80029b2:	e676      	b.n	80026a2 <_vfprintf_r+0x5de>
 80029b4:	9e07      	ldr	r6, [sp, #28]
 80029b6:	e7e3      	b.n	8002980 <_vfprintf_r+0x8bc>
 80029b8:	eb09 0306 	add.w	r3, r9, r6
 80029bc:	9309      	str	r3, [sp, #36]	; 0x24
 80029be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80029c0:	2b46      	cmp	r3, #70	; 0x46
 80029c2:	d111      	bne.n	80029e8 <_vfprintf_r+0x924>
 80029c4:	f899 3000 	ldrb.w	r3, [r9]
 80029c8:	2b30      	cmp	r3, #48	; 0x30
 80029ca:	d109      	bne.n	80029e0 <_vfprintf_r+0x91c>
 80029cc:	2200      	movs	r2, #0
 80029ce:	2300      	movs	r3, #0
 80029d0:	4638      	mov	r0, r7
 80029d2:	4629      	mov	r1, r5
 80029d4:	f7fe f888 	bl	8000ae8 <__aeabi_dcmpeq>
 80029d8:	b910      	cbnz	r0, 80029e0 <_vfprintf_r+0x91c>
 80029da:	f1c6 0601 	rsb	r6, r6, #1
 80029de:	9620      	str	r6, [sp, #128]	; 0x80
 80029e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80029e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80029e4:	441a      	add	r2, r3
 80029e6:	9209      	str	r2, [sp, #36]	; 0x24
 80029e8:	2200      	movs	r2, #0
 80029ea:	2300      	movs	r3, #0
 80029ec:	4638      	mov	r0, r7
 80029ee:	4629      	mov	r1, r5
 80029f0:	f7fe f87a 	bl	8000ae8 <__aeabi_dcmpeq>
 80029f4:	b108      	cbz	r0, 80029fa <_vfprintf_r+0x936>
 80029f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80029f8:	9324      	str	r3, [sp, #144]	; 0x90
 80029fa:	2230      	movs	r2, #48	; 0x30
 80029fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80029fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002a00:	4299      	cmp	r1, r3
 8002a02:	d9d5      	bls.n	80029b0 <_vfprintf_r+0x8ec>
 8002a04:	1c59      	adds	r1, r3, #1
 8002a06:	9124      	str	r1, [sp, #144]	; 0x90
 8002a08:	701a      	strb	r2, [r3, #0]
 8002a0a:	e7f7      	b.n	80029fc <_vfprintf_r+0x938>
 8002a0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a0e:	2b46      	cmp	r3, #70	; 0x46
 8002a10:	f47f ae58 	bne.w	80026c4 <_vfprintf_r+0x600>
 8002a14:	9a07      	ldr	r2, [sp, #28]
 8002a16:	f00b 0301 	and.w	r3, fp, #1
 8002a1a:	2d00      	cmp	r5, #0
 8002a1c:	ea43 0302 	orr.w	r3, r3, r2
 8002a20:	dd1a      	ble.n	8002a58 <_vfprintf_r+0x994>
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d034      	beq.n	8002a90 <_vfprintf_r+0x9cc>
 8002a26:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a28:	18eb      	adds	r3, r5, r3
 8002a2a:	441a      	add	r2, r3
 8002a2c:	9207      	str	r2, [sp, #28]
 8002a2e:	2366      	movs	r3, #102	; 0x66
 8002a30:	930a      	str	r3, [sp, #40]	; 0x28
 8002a32:	e033      	b.n	8002a9c <_vfprintf_r+0x9d8>
 8002a34:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002a38:	f802 6b01 	strb.w	r6, [r2], #1
 8002a3c:	e679      	b.n	8002732 <_vfprintf_r+0x66e>
 8002a3e:	b941      	cbnz	r1, 8002a52 <_vfprintf_r+0x98e>
 8002a40:	2230      	movs	r2, #48	; 0x30
 8002a42:	f88d 208a 	strb.w	r2, [sp, #138]	; 0x8a
 8002a46:	f10d 028b 	add.w	r2, sp, #139	; 0x8b
 8002a4a:	3330      	adds	r3, #48	; 0x30
 8002a4c:	f802 3b01 	strb.w	r3, [r2], #1
 8002a50:	e67b      	b.n	800274a <_vfprintf_r+0x686>
 8002a52:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 8002a56:	e7f8      	b.n	8002a4a <_vfprintf_r+0x986>
 8002a58:	b1e3      	cbz	r3, 8002a94 <_vfprintf_r+0x9d0>
 8002a5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a5c:	9a07      	ldr	r2, [sp, #28]
 8002a5e:	3301      	adds	r3, #1
 8002a60:	e7e3      	b.n	8002a2a <_vfprintf_r+0x966>
 8002a62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a64:	42ab      	cmp	r3, r5
 8002a66:	dc07      	bgt.n	8002a78 <_vfprintf_r+0x9b4>
 8002a68:	f01b 0f01 	tst.w	fp, #1
 8002a6c:	d02d      	beq.n	8002aca <_vfprintf_r+0xa06>
 8002a6e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a70:	18eb      	adds	r3, r5, r3
 8002a72:	9307      	str	r3, [sp, #28]
 8002a74:	2367      	movs	r3, #103	; 0x67
 8002a76:	e7db      	b.n	8002a30 <_vfprintf_r+0x96c>
 8002a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002a7c:	2d00      	cmp	r5, #0
 8002a7e:	4413      	add	r3, r2
 8002a80:	9307      	str	r3, [sp, #28]
 8002a82:	dcf7      	bgt.n	8002a74 <_vfprintf_r+0x9b0>
 8002a84:	9a07      	ldr	r2, [sp, #28]
 8002a86:	f1c5 0301 	rsb	r3, r5, #1
 8002a8a:	441a      	add	r2, r3
 8002a8c:	9207      	str	r2, [sp, #28]
 8002a8e:	e7f1      	b.n	8002a74 <_vfprintf_r+0x9b0>
 8002a90:	9507      	str	r5, [sp, #28]
 8002a92:	e7cc      	b.n	8002a2e <_vfprintf_r+0x96a>
 8002a94:	2366      	movs	r3, #102	; 0x66
 8002a96:	930a      	str	r3, [sp, #40]	; 0x28
 8002a98:	2301      	movs	r3, #1
 8002a9a:	9307      	str	r3, [sp, #28]
 8002a9c:	f41b 6380 	ands.w	r3, fp, #1024	; 0x400
 8002aa0:	930d      	str	r3, [sp, #52]	; 0x34
 8002aa2:	d025      	beq.n	8002af0 <_vfprintf_r+0xa2c>
 8002aa4:	2300      	movs	r3, #0
 8002aa6:	2d00      	cmp	r5, #0
 8002aa8:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 8002aac:	f77f ae65 	ble.w	800277a <_vfprintf_r+0x6b6>
 8002ab0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002ab2:	781b      	ldrb	r3, [r3, #0]
 8002ab4:	2bff      	cmp	r3, #255	; 0xff
 8002ab6:	d10a      	bne.n	8002ace <_vfprintf_r+0xa0a>
 8002ab8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002abc:	9916      	ldr	r1, [sp, #88]	; 0x58
 8002abe:	4413      	add	r3, r2
 8002ac0:	9a07      	ldr	r2, [sp, #28]
 8002ac2:	fb01 2303 	mla	r3, r1, r3, r2
 8002ac6:	9307      	str	r3, [sp, #28]
 8002ac8:	e657      	b.n	800277a <_vfprintf_r+0x6b6>
 8002aca:	9507      	str	r5, [sp, #28]
 8002acc:	e7d2      	b.n	8002a74 <_vfprintf_r+0x9b0>
 8002ace:	42ab      	cmp	r3, r5
 8002ad0:	daf2      	bge.n	8002ab8 <_vfprintf_r+0x9f4>
 8002ad2:	1aed      	subs	r5, r5, r3
 8002ad4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002ad6:	785b      	ldrb	r3, [r3, #1]
 8002ad8:	b133      	cbz	r3, 8002ae8 <_vfprintf_r+0xa24>
 8002ada:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002adc:	3301      	adds	r3, #1
 8002ade:	930d      	str	r3, [sp, #52]	; 0x34
 8002ae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002ae2:	3301      	adds	r3, #1
 8002ae4:	930e      	str	r3, [sp, #56]	; 0x38
 8002ae6:	e7e3      	b.n	8002ab0 <_vfprintf_r+0x9ec>
 8002ae8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002aea:	3301      	adds	r3, #1
 8002aec:	930c      	str	r3, [sp, #48]	; 0x30
 8002aee:	e7df      	b.n	8002ab0 <_vfprintf_r+0x9ec>
 8002af0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002af2:	930c      	str	r3, [sp, #48]	; 0x30
 8002af4:	e641      	b.n	800277a <_vfprintf_r+0x6b6>
 8002af6:	1d33      	adds	r3, r6, #4
 8002af8:	f01b 0f20 	tst.w	fp, #32
 8002afc:	930b      	str	r3, [sp, #44]	; 0x2c
 8002afe:	d00a      	beq.n	8002b16 <_vfprintf_r+0xa52>
 8002b00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002b02:	6833      	ldr	r3, [r6, #0]
 8002b04:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8002b06:	17d2      	asrs	r2, r2, #31
 8002b08:	e9c3 1200 	strd	r1, r2, [r3]
 8002b0c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8002b0e:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8002b12:	f7ff bb57 	b.w	80021c4 <_vfprintf_r+0x100>
 8002b16:	f01b 0f10 	tst.w	fp, #16
 8002b1a:	d003      	beq.n	8002b24 <_vfprintf_r+0xa60>
 8002b1c:	6833      	ldr	r3, [r6, #0]
 8002b1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002b20:	601a      	str	r2, [r3, #0]
 8002b22:	e7f3      	b.n	8002b0c <_vfprintf_r+0xa48>
 8002b24:	f01b 0f40 	tst.w	fp, #64	; 0x40
 8002b28:	d003      	beq.n	8002b32 <_vfprintf_r+0xa6e>
 8002b2a:	6833      	ldr	r3, [r6, #0]
 8002b2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002b2e:	801a      	strh	r2, [r3, #0]
 8002b30:	e7ec      	b.n	8002b0c <_vfprintf_r+0xa48>
 8002b32:	f41b 7f00 	tst.w	fp, #512	; 0x200
 8002b36:	d0f1      	beq.n	8002b1c <_vfprintf_r+0xa58>
 8002b38:	6833      	ldr	r3, [r6, #0]
 8002b3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002b3c:	701a      	strb	r2, [r3, #0]
 8002b3e:	e7e5      	b.n	8002b0c <_vfprintf_r+0xa48>
 8002b40:	f04b 0b10 	orr.w	fp, fp, #16
 8002b44:	f01b 0320 	ands.w	r3, fp, #32
 8002b48:	d01f      	beq.n	8002b8a <_vfprintf_r+0xac6>
 8002b4a:	3607      	adds	r6, #7
 8002b4c:	f026 0307 	bic.w	r3, r6, #7
 8002b50:	461a      	mov	r2, r3
 8002b52:	685d      	ldr	r5, [r3, #4]
 8002b54:	f852 6b08 	ldr.w	r6, [r2], #8
 8002b58:	920b      	str	r2, [sp, #44]	; 0x2c
 8002b5a:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 8002b5e:	2300      	movs	r3, #0
 8002b60:	2200      	movs	r2, #0
 8002b62:	f88d 207b 	strb.w	r2, [sp, #123]	; 0x7b
 8002b66:	9a07      	ldr	r2, [sp, #28]
 8002b68:	3201      	adds	r2, #1
 8002b6a:	f000 8494 	beq.w	8003496 <_vfprintf_r+0x13d2>
 8002b6e:	ea56 0205 	orrs.w	r2, r6, r5
 8002b72:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
 8002b76:	f040 8493 	bne.w	80034a0 <_vfprintf_r+0x13dc>
 8002b7a:	9a07      	ldr	r2, [sp, #28]
 8002b7c:	2a00      	cmp	r2, #0
 8002b7e:	f000 80fa 	beq.w	8002d76 <_vfprintf_r+0xcb2>
 8002b82:	2b01      	cmp	r3, #1
 8002b84:	f040 848f 	bne.w	80034a6 <_vfprintf_r+0x13e2>
 8002b88:	e09f      	b.n	8002cca <_vfprintf_r+0xc06>
 8002b8a:	4632      	mov	r2, r6
 8002b8c:	f01b 0510 	ands.w	r5, fp, #16
 8002b90:	f852 6b04 	ldr.w	r6, [r2], #4
 8002b94:	920b      	str	r2, [sp, #44]	; 0x2c
 8002b96:	d001      	beq.n	8002b9c <_vfprintf_r+0xad8>
 8002b98:	461d      	mov	r5, r3
 8002b9a:	e7de      	b.n	8002b5a <_vfprintf_r+0xa96>
 8002b9c:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 8002ba0:	d001      	beq.n	8002ba6 <_vfprintf_r+0xae2>
 8002ba2:	b2b6      	uxth	r6, r6
 8002ba4:	e7d9      	b.n	8002b5a <_vfprintf_r+0xa96>
 8002ba6:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 8002baa:	d0d6      	beq.n	8002b5a <_vfprintf_r+0xa96>
 8002bac:	b2f6      	uxtb	r6, r6
 8002bae:	e7f3      	b.n	8002b98 <_vfprintf_r+0xad4>
 8002bb0:	4633      	mov	r3, r6
 8002bb2:	2278      	movs	r2, #120	; 0x78
 8002bb4:	f853 6b04 	ldr.w	r6, [r3], #4
 8002bb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8002bba:	2330      	movs	r3, #48	; 0x30
 8002bbc:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8002bc0:	4ba3      	ldr	r3, [pc, #652]	; (8002e50 <_vfprintf_r+0xd8c>)
 8002bc2:	931a      	str	r3, [sp, #104]	; 0x68
 8002bc4:	2500      	movs	r5, #0
 8002bc6:	f04b 0b02 	orr.w	fp, fp, #2
 8002bca:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
 8002bce:	2302      	movs	r3, #2
 8002bd0:	920a      	str	r2, [sp, #40]	; 0x28
 8002bd2:	e7c5      	b.n	8002b60 <_vfprintf_r+0xa9c>
 8002bd4:	4633      	mov	r3, r6
 8002bd6:	2500      	movs	r5, #0
 8002bd8:	f853 9b04 	ldr.w	r9, [r3], #4
 8002bdc:	930b      	str	r3, [sp, #44]	; 0x2c
 8002bde:	9b07      	ldr	r3, [sp, #28]
 8002be0:	f88d 507b 	strb.w	r5, [sp, #123]	; 0x7b
 8002be4:	1c5e      	adds	r6, r3, #1
 8002be6:	d010      	beq.n	8002c0a <_vfprintf_r+0xb46>
 8002be8:	461a      	mov	r2, r3
 8002bea:	4629      	mov	r1, r5
 8002bec:	4648      	mov	r0, r9
 8002bee:	f7fd fb07 	bl	8000200 <memchr>
 8002bf2:	9008      	str	r0, [sp, #32]
 8002bf4:	2800      	cmp	r0, #0
 8002bf6:	f000 80d5 	beq.w	8002da4 <_vfprintf_r+0xce0>
 8002bfa:	eba0 0309 	sub.w	r3, r0, r9
 8002bfe:	e9cd 3507 	strd	r3, r5, [sp, #28]
 8002c02:	e9cd 550c 	strd	r5, r5, [sp, #48]	; 0x30
 8002c06:	462e      	mov	r6, r5
 8002c08:	e5bf      	b.n	800278a <_vfprintf_r+0x6c6>
 8002c0a:	4648      	mov	r0, r9
 8002c0c:	f7fd faf0 	bl	80001f0 <strlen>
 8002c10:	e9cd 0507 	strd	r0, r5, [sp, #28]
 8002c14:	e462      	b.n	80024dc <_vfprintf_r+0x418>
 8002c16:	f04b 0b10 	orr.w	fp, fp, #16
 8002c1a:	f01b 0320 	ands.w	r3, fp, #32
 8002c1e:	d009      	beq.n	8002c34 <_vfprintf_r+0xb70>
 8002c20:	3607      	adds	r6, #7
 8002c22:	f026 0307 	bic.w	r3, r6, #7
 8002c26:	461a      	mov	r2, r3
 8002c28:	685d      	ldr	r5, [r3, #4]
 8002c2a:	f852 6b08 	ldr.w	r6, [r2], #8
 8002c2e:	920b      	str	r2, [sp, #44]	; 0x2c
 8002c30:	2301      	movs	r3, #1
 8002c32:	e795      	b.n	8002b60 <_vfprintf_r+0xa9c>
 8002c34:	4632      	mov	r2, r6
 8002c36:	f01b 0510 	ands.w	r5, fp, #16
 8002c3a:	f852 6b04 	ldr.w	r6, [r2], #4
 8002c3e:	920b      	str	r2, [sp, #44]	; 0x2c
 8002c40:	d001      	beq.n	8002c46 <_vfprintf_r+0xb82>
 8002c42:	461d      	mov	r5, r3
 8002c44:	e7f4      	b.n	8002c30 <_vfprintf_r+0xb6c>
 8002c46:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 8002c4a:	d001      	beq.n	8002c50 <_vfprintf_r+0xb8c>
 8002c4c:	b2b6      	uxth	r6, r6
 8002c4e:	e7ef      	b.n	8002c30 <_vfprintf_r+0xb6c>
 8002c50:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 8002c54:	d0ec      	beq.n	8002c30 <_vfprintf_r+0xb6c>
 8002c56:	b2f6      	uxtb	r6, r6
 8002c58:	e7f3      	b.n	8002c42 <_vfprintf_r+0xb7e>
 8002c5a:	4b7e      	ldr	r3, [pc, #504]	; (8002e54 <_vfprintf_r+0xd90>)
 8002c5c:	931a      	str	r3, [sp, #104]	; 0x68
 8002c5e:	f01b 0320 	ands.w	r3, fp, #32
 8002c62:	d01b      	beq.n	8002c9c <_vfprintf_r+0xbd8>
 8002c64:	3607      	adds	r6, #7
 8002c66:	f026 0307 	bic.w	r3, r6, #7
 8002c6a:	461a      	mov	r2, r3
 8002c6c:	685d      	ldr	r5, [r3, #4]
 8002c6e:	f852 6b08 	ldr.w	r6, [r2], #8
 8002c72:	920b      	str	r2, [sp, #44]	; 0x2c
 8002c74:	f01b 0f01 	tst.w	fp, #1
 8002c78:	d00a      	beq.n	8002c90 <_vfprintf_r+0xbcc>
 8002c7a:	ea56 0305 	orrs.w	r3, r6, r5
 8002c7e:	d007      	beq.n	8002c90 <_vfprintf_r+0xbcc>
 8002c80:	2330      	movs	r3, #48	; 0x30
 8002c82:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8002c86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002c88:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 8002c8c:	f04b 0b02 	orr.w	fp, fp, #2
 8002c90:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 8002c94:	2302      	movs	r3, #2
 8002c96:	e763      	b.n	8002b60 <_vfprintf_r+0xa9c>
 8002c98:	4b6d      	ldr	r3, [pc, #436]	; (8002e50 <_vfprintf_r+0xd8c>)
 8002c9a:	e7df      	b.n	8002c5c <_vfprintf_r+0xb98>
 8002c9c:	4632      	mov	r2, r6
 8002c9e:	f01b 0510 	ands.w	r5, fp, #16
 8002ca2:	f852 6b04 	ldr.w	r6, [r2], #4
 8002ca6:	920b      	str	r2, [sp, #44]	; 0x2c
 8002ca8:	d001      	beq.n	8002cae <_vfprintf_r+0xbea>
 8002caa:	461d      	mov	r5, r3
 8002cac:	e7e2      	b.n	8002c74 <_vfprintf_r+0xbb0>
 8002cae:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 8002cb2:	d001      	beq.n	8002cb8 <_vfprintf_r+0xbf4>
 8002cb4:	b2b6      	uxth	r6, r6
 8002cb6:	e7dd      	b.n	8002c74 <_vfprintf_r+0xbb0>
 8002cb8:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 8002cbc:	d0da      	beq.n	8002c74 <_vfprintf_r+0xbb0>
 8002cbe:	b2f6      	uxtb	r6, r6
 8002cc0:	e7f3      	b.n	8002caa <_vfprintf_r+0xbe6>
 8002cc2:	2e0a      	cmp	r6, #10
 8002cc4:	f175 0300 	sbcs.w	r3, r5, #0
 8002cc8:	d206      	bcs.n	8002cd8 <_vfprintf_r+0xc14>
 8002cca:	3630      	adds	r6, #48	; 0x30
 8002ccc:	f88d 6147 	strb.w	r6, [sp, #327]	; 0x147
 8002cd0:	f20d 1947 	addw	r9, sp, #327	; 0x147
 8002cd4:	f000 bc02 	b.w	80034dc <_vfprintf_r+0x1418>
 8002cd8:	2300      	movs	r3, #0
 8002cda:	9309      	str	r3, [sp, #36]	; 0x24
 8002cdc:	f407 6380 	and.w	r3, r7, #1024	; 0x400
 8002ce0:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 8002ce4:	9308      	str	r3, [sp, #32]
 8002ce6:	220a      	movs	r2, #10
 8002ce8:	2300      	movs	r3, #0
 8002cea:	4630      	mov	r0, r6
 8002cec:	4629      	mov	r1, r5
 8002cee:	f7fd ff6b 	bl	8000bc8 <__aeabi_uldivmod>
 8002cf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002cf4:	3301      	adds	r3, #1
 8002cf6:	9309      	str	r3, [sp, #36]	; 0x24
 8002cf8:	9b08      	ldr	r3, [sp, #32]
 8002cfa:	3230      	adds	r2, #48	; 0x30
 8002cfc:	f10b 39ff 	add.w	r9, fp, #4294967295
 8002d00:	f80b 2c01 	strb.w	r2, [fp, #-1]
 8002d04:	b1d3      	cbz	r3, 8002d3c <_vfprintf_r+0xc78>
 8002d06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002d08:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002d0a:	781b      	ldrb	r3, [r3, #0]
 8002d0c:	429a      	cmp	r2, r3
 8002d0e:	d115      	bne.n	8002d3c <_vfprintf_r+0xc78>
 8002d10:	2aff      	cmp	r2, #255	; 0xff
 8002d12:	d013      	beq.n	8002d3c <_vfprintf_r+0xc78>
 8002d14:	2e0a      	cmp	r6, #10
 8002d16:	f175 0300 	sbcs.w	r3, r5, #0
 8002d1a:	d30f      	bcc.n	8002d3c <_vfprintf_r+0xc78>
 8002d1c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002d1e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8002d20:	eba9 0903 	sub.w	r9, r9, r3
 8002d24:	461a      	mov	r2, r3
 8002d26:	4648      	mov	r0, r9
 8002d28:	f002 febd 	bl	8005aa6 <strncpy>
 8002d2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002d2e:	785b      	ldrb	r3, [r3, #1]
 8002d30:	b11b      	cbz	r3, 8002d3a <_vfprintf_r+0xc76>
 8002d32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002d34:	3301      	adds	r3, #1
 8002d36:	930e      	str	r3, [sp, #56]	; 0x38
 8002d38:	2300      	movs	r3, #0
 8002d3a:	9309      	str	r3, [sp, #36]	; 0x24
 8002d3c:	2300      	movs	r3, #0
 8002d3e:	220a      	movs	r2, #10
 8002d40:	4630      	mov	r0, r6
 8002d42:	4629      	mov	r1, r5
 8002d44:	f7fd ff40 	bl	8000bc8 <__aeabi_uldivmod>
 8002d48:	2e0a      	cmp	r6, #10
 8002d4a:	f175 0300 	sbcs.w	r3, r5, #0
 8002d4e:	f0c0 83c5 	bcc.w	80034dc <_vfprintf_r+0x1418>
 8002d52:	4606      	mov	r6, r0
 8002d54:	460d      	mov	r5, r1
 8002d56:	46cb      	mov	fp, r9
 8002d58:	e7c5      	b.n	8002ce6 <_vfprintf_r+0xc22>
 8002d5a:	f006 030f 	and.w	r3, r6, #15
 8002d5e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8002d60:	0936      	lsrs	r6, r6, #4
 8002d62:	5cd3      	ldrb	r3, [r2, r3]
 8002d64:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8002d68:	ea46 7605 	orr.w	r6, r6, r5, lsl #28
 8002d6c:	092d      	lsrs	r5, r5, #4
 8002d6e:	ea56 0305 	orrs.w	r3, r6, r5
 8002d72:	d1f2      	bne.n	8002d5a <_vfprintf_r+0xc96>
 8002d74:	e3b2      	b.n	80034dc <_vfprintf_r+0x1418>
 8002d76:	b933      	cbnz	r3, 8002d86 <_vfprintf_r+0xcc2>
 8002d78:	f01b 0f01 	tst.w	fp, #1
 8002d7c:	d003      	beq.n	8002d86 <_vfprintf_r+0xcc2>
 8002d7e:	2330      	movs	r3, #48	; 0x30
 8002d80:	f88d 3147 	strb.w	r3, [sp, #327]	; 0x147
 8002d84:	e7a4      	b.n	8002cd0 <_vfprintf_r+0xc0c>
 8002d86:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 8002d8a:	e3a7      	b.n	80034dc <_vfprintf_r+0x1418>
 8002d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	f000 8372 	beq.w	8003478 <_vfprintf_r+0x13b4>
 8002d94:	2000      	movs	r0, #0
 8002d96:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 8002d9a:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 8002d9e:	960b      	str	r6, [sp, #44]	; 0x2c
 8002da0:	f7ff bb2e 	b.w	8002400 <_vfprintf_r+0x33c>
 8002da4:	9e08      	ldr	r6, [sp, #32]
 8002da6:	f7ff bb9a 	b.w	80024de <_vfprintf_r+0x41a>
 8002daa:	2010      	movs	r0, #16
 8002dac:	4402      	add	r2, r0
 8002dae:	2b07      	cmp	r3, #7
 8002db0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002db4:	6060      	str	r0, [r4, #4]
 8002db6:	dd08      	ble.n	8002dca <_vfprintf_r+0xd06>
 8002db8:	aa26      	add	r2, sp, #152	; 0x98
 8002dba:	4651      	mov	r1, sl
 8002dbc:	4640      	mov	r0, r8
 8002dbe:	f002 fe92 	bl	8005ae6 <__sprint_r>
 8002dc2:	2800      	cmp	r0, #0
 8002dc4:	f040 8336 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002dc8:	a929      	add	r1, sp, #164	; 0xa4
 8002dca:	3f10      	subs	r7, #16
 8002dcc:	460c      	mov	r4, r1
 8002dce:	e4f7      	b.n	80027c0 <_vfprintf_r+0x6fc>
 8002dd0:	460c      	mov	r4, r1
 8002dd2:	e510      	b.n	80027f6 <_vfprintf_r+0x732>
 8002dd4:	aa26      	add	r2, sp, #152	; 0x98
 8002dd6:	4651      	mov	r1, sl
 8002dd8:	4640      	mov	r0, r8
 8002dda:	f002 fe84 	bl	8005ae6 <__sprint_r>
 8002dde:	2800      	cmp	r0, #0
 8002de0:	f040 8328 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002de4:	ac29      	add	r4, sp, #164	; 0xa4
 8002de6:	e518      	b.n	800281a <_vfprintf_r+0x756>
 8002de8:	aa26      	add	r2, sp, #152	; 0x98
 8002dea:	4651      	mov	r1, sl
 8002dec:	4640      	mov	r0, r8
 8002dee:	f002 fe7a 	bl	8005ae6 <__sprint_r>
 8002df2:	2800      	cmp	r0, #0
 8002df4:	f040 831e 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002df8:	ac29      	add	r4, sp, #164	; 0xa4
 8002dfa:	e51e      	b.n	800283a <_vfprintf_r+0x776>
 8002dfc:	2010      	movs	r0, #16
 8002dfe:	4402      	add	r2, r0
 8002e00:	2b07      	cmp	r3, #7
 8002e02:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002e06:	6060      	str	r0, [r4, #4]
 8002e08:	dd08      	ble.n	8002e1c <_vfprintf_r+0xd58>
 8002e0a:	aa26      	add	r2, sp, #152	; 0x98
 8002e0c:	4651      	mov	r1, sl
 8002e0e:	4640      	mov	r0, r8
 8002e10:	f002 fe69 	bl	8005ae6 <__sprint_r>
 8002e14:	2800      	cmp	r0, #0
 8002e16:	f040 830d 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002e1a:	a929      	add	r1, sp, #164	; 0xa4
 8002e1c:	3f10      	subs	r7, #16
 8002e1e:	460c      	mov	r4, r1
 8002e20:	e513      	b.n	800284a <_vfprintf_r+0x786>
 8002e22:	460c      	mov	r4, r1
 8002e24:	e52c      	b.n	8002880 <_vfprintf_r+0x7bc>
 8002e26:	2010      	movs	r0, #16
 8002e28:	4402      	add	r2, r0
 8002e2a:	2b07      	cmp	r3, #7
 8002e2c:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002e30:	6060      	str	r0, [r4, #4]
 8002e32:	dd08      	ble.n	8002e46 <_vfprintf_r+0xd82>
 8002e34:	aa26      	add	r2, sp, #152	; 0x98
 8002e36:	4651      	mov	r1, sl
 8002e38:	4640      	mov	r0, r8
 8002e3a:	f002 fe54 	bl	8005ae6 <__sprint_r>
 8002e3e:	2800      	cmp	r0, #0
 8002e40:	f040 82f8 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002e44:	a929      	add	r1, sp, #164	; 0xa4
 8002e46:	3e10      	subs	r6, #16
 8002e48:	460c      	mov	r4, r1
 8002e4a:	e52b      	b.n	80028a4 <_vfprintf_r+0x7e0>
 8002e4c:	460c      	mov	r4, r1
 8002e4e:	e543      	b.n	80028d8 <_vfprintf_r+0x814>
 8002e50:	080070d4 	.word	0x080070d4
 8002e54:	080070e5 	.word	0x080070e5
 8002e58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e5a:	2b65      	cmp	r3, #101	; 0x65
 8002e5c:	f340 8232 	ble.w	80032c4 <_vfprintf_r+0x1200>
 8002e60:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002e64:	2200      	movs	r2, #0
 8002e66:	2300      	movs	r3, #0
 8002e68:	f7fd fe3e 	bl	8000ae8 <__aeabi_dcmpeq>
 8002e6c:	2800      	cmp	r0, #0
 8002e6e:	d068      	beq.n	8002f42 <_vfprintf_r+0xe7e>
 8002e70:	4b6d      	ldr	r3, [pc, #436]	; (8003028 <_vfprintf_r+0xf64>)
 8002e72:	6023      	str	r3, [r4, #0]
 8002e74:	2301      	movs	r3, #1
 8002e76:	441e      	add	r6, r3
 8002e78:	6063      	str	r3, [r4, #4]
 8002e7a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002e7c:	9628      	str	r6, [sp, #160]	; 0xa0
 8002e7e:	3301      	adds	r3, #1
 8002e80:	2b07      	cmp	r3, #7
 8002e82:	9327      	str	r3, [sp, #156]	; 0x9c
 8002e84:	dc37      	bgt.n	8002ef6 <_vfprintf_r+0xe32>
 8002e86:	3408      	adds	r4, #8
 8002e88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002e8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002e8c:	4293      	cmp	r3, r2
 8002e8e:	db03      	blt.n	8002e98 <_vfprintf_r+0xdd4>
 8002e90:	f01b 0f01 	tst.w	fp, #1
 8002e94:	f43f ad32 	beq.w	80028fc <_vfprintf_r+0x838>
 8002e98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002e9a:	6023      	str	r3, [r4, #0]
 8002e9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002e9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002ea0:	6063      	str	r3, [r4, #4]
 8002ea2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002ea4:	4413      	add	r3, r2
 8002ea6:	9328      	str	r3, [sp, #160]	; 0xa0
 8002ea8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002eaa:	3301      	adds	r3, #1
 8002eac:	2b07      	cmp	r3, #7
 8002eae:	9327      	str	r3, [sp, #156]	; 0x9c
 8002eb0:	dc2b      	bgt.n	8002f0a <_vfprintf_r+0xe46>
 8002eb2:	3408      	adds	r4, #8
 8002eb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002eb6:	1e5d      	subs	r5, r3, #1
 8002eb8:	2d00      	cmp	r5, #0
 8002eba:	f77f ad1f 	ble.w	80028fc <_vfprintf_r+0x838>
 8002ebe:	4e5b      	ldr	r6, [pc, #364]	; (800302c <_vfprintf_r+0xf68>)
 8002ec0:	2710      	movs	r7, #16
 8002ec2:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8002ec6:	2d10      	cmp	r5, #16
 8002ec8:	f103 0301 	add.w	r3, r3, #1
 8002ecc:	f104 0108 	add.w	r1, r4, #8
 8002ed0:	6026      	str	r6, [r4, #0]
 8002ed2:	dc24      	bgt.n	8002f1e <_vfprintf_r+0xe5a>
 8002ed4:	442a      	add	r2, r5
 8002ed6:	6065      	str	r5, [r4, #4]
 8002ed8:	9228      	str	r2, [sp, #160]	; 0xa0
 8002eda:	2b07      	cmp	r3, #7
 8002edc:	9327      	str	r3, [sp, #156]	; 0x9c
 8002ede:	f340 8288 	ble.w	80033f2 <_vfprintf_r+0x132e>
 8002ee2:	aa26      	add	r2, sp, #152	; 0x98
 8002ee4:	4651      	mov	r1, sl
 8002ee6:	4640      	mov	r0, r8
 8002ee8:	f002 fdfd 	bl	8005ae6 <__sprint_r>
 8002eec:	2800      	cmp	r0, #0
 8002eee:	f040 82a1 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002ef2:	ac29      	add	r4, sp, #164	; 0xa4
 8002ef4:	e502      	b.n	80028fc <_vfprintf_r+0x838>
 8002ef6:	aa26      	add	r2, sp, #152	; 0x98
 8002ef8:	4651      	mov	r1, sl
 8002efa:	4640      	mov	r0, r8
 8002efc:	f002 fdf3 	bl	8005ae6 <__sprint_r>
 8002f00:	2800      	cmp	r0, #0
 8002f02:	f040 8297 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002f06:	ac29      	add	r4, sp, #164	; 0xa4
 8002f08:	e7be      	b.n	8002e88 <_vfprintf_r+0xdc4>
 8002f0a:	aa26      	add	r2, sp, #152	; 0x98
 8002f0c:	4651      	mov	r1, sl
 8002f0e:	4640      	mov	r0, r8
 8002f10:	f002 fde9 	bl	8005ae6 <__sprint_r>
 8002f14:	2800      	cmp	r0, #0
 8002f16:	f040 828d 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002f1a:	ac29      	add	r4, sp, #164	; 0xa4
 8002f1c:	e7ca      	b.n	8002eb4 <_vfprintf_r+0xdf0>
 8002f1e:	3210      	adds	r2, #16
 8002f20:	2b07      	cmp	r3, #7
 8002f22:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002f26:	6067      	str	r7, [r4, #4]
 8002f28:	dd08      	ble.n	8002f3c <_vfprintf_r+0xe78>
 8002f2a:	aa26      	add	r2, sp, #152	; 0x98
 8002f2c:	4651      	mov	r1, sl
 8002f2e:	4640      	mov	r0, r8
 8002f30:	f002 fdd9 	bl	8005ae6 <__sprint_r>
 8002f34:	2800      	cmp	r0, #0
 8002f36:	f040 827d 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002f3a:	a929      	add	r1, sp, #164	; 0xa4
 8002f3c:	3d10      	subs	r5, #16
 8002f3e:	460c      	mov	r4, r1
 8002f40:	e7bf      	b.n	8002ec2 <_vfprintf_r+0xdfe>
 8002f42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	dc73      	bgt.n	8003030 <_vfprintf_r+0xf6c>
 8002f48:	4b37      	ldr	r3, [pc, #220]	; (8003028 <_vfprintf_r+0xf64>)
 8002f4a:	6023      	str	r3, [r4, #0]
 8002f4c:	2301      	movs	r3, #1
 8002f4e:	441e      	add	r6, r3
 8002f50:	6063      	str	r3, [r4, #4]
 8002f52:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002f54:	9628      	str	r6, [sp, #160]	; 0xa0
 8002f56:	3301      	adds	r3, #1
 8002f58:	2b07      	cmp	r3, #7
 8002f5a:	9327      	str	r3, [sp, #156]	; 0x9c
 8002f5c:	dc3d      	bgt.n	8002fda <_vfprintf_r+0xf16>
 8002f5e:	3408      	adds	r4, #8
 8002f60:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002f62:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002f64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002f66:	430a      	orrs	r2, r1
 8002f68:	f00b 0101 	and.w	r1, fp, #1
 8002f6c:	430a      	orrs	r2, r1
 8002f6e:	f43f acc5 	beq.w	80028fc <_vfprintf_r+0x838>
 8002f72:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8002f74:	6022      	str	r2, [r4, #0]
 8002f76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002f78:	6062      	str	r2, [r4, #4]
 8002f7a:	4413      	add	r3, r2
 8002f7c:	9328      	str	r3, [sp, #160]	; 0xa0
 8002f7e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002f80:	3301      	adds	r3, #1
 8002f82:	2b07      	cmp	r3, #7
 8002f84:	9327      	str	r3, [sp, #156]	; 0x9c
 8002f86:	dc32      	bgt.n	8002fee <_vfprintf_r+0xf2a>
 8002f88:	3408      	adds	r4, #8
 8002f8a:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8002f8c:	2d00      	cmp	r5, #0
 8002f8e:	da1b      	bge.n	8002fc8 <_vfprintf_r+0xf04>
 8002f90:	4e26      	ldr	r6, [pc, #152]	; (800302c <_vfprintf_r+0xf68>)
 8002f92:	426d      	negs	r5, r5
 8002f94:	4623      	mov	r3, r4
 8002f96:	2710      	movs	r7, #16
 8002f98:	e9dd 2127 	ldrd	r2, r1, [sp, #156]	; 0x9c
 8002f9c:	2d10      	cmp	r5, #16
 8002f9e:	f102 0201 	add.w	r2, r2, #1
 8002fa2:	f104 0408 	add.w	r4, r4, #8
 8002fa6:	601e      	str	r6, [r3, #0]
 8002fa8:	dc2b      	bgt.n	8003002 <_vfprintf_r+0xf3e>
 8002faa:	605d      	str	r5, [r3, #4]
 8002fac:	2a07      	cmp	r2, #7
 8002fae:	440d      	add	r5, r1
 8002fb0:	e9cd 2527 	strd	r2, r5, [sp, #156]	; 0x9c
 8002fb4:	dd08      	ble.n	8002fc8 <_vfprintf_r+0xf04>
 8002fb6:	aa26      	add	r2, sp, #152	; 0x98
 8002fb8:	4651      	mov	r1, sl
 8002fba:	4640      	mov	r0, r8
 8002fbc:	f002 fd93 	bl	8005ae6 <__sprint_r>
 8002fc0:	2800      	cmp	r0, #0
 8002fc2:	f040 8237 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002fc6:	ac29      	add	r4, sp, #164	; 0xa4
 8002fc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002fca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002fcc:	6063      	str	r3, [r4, #4]
 8002fce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002fd0:	f8c4 9000 	str.w	r9, [r4]
 8002fd4:	4413      	add	r3, r2
 8002fd6:	9328      	str	r3, [sp, #160]	; 0xa0
 8002fd8:	e489      	b.n	80028ee <_vfprintf_r+0x82a>
 8002fda:	aa26      	add	r2, sp, #152	; 0x98
 8002fdc:	4651      	mov	r1, sl
 8002fde:	4640      	mov	r0, r8
 8002fe0:	f002 fd81 	bl	8005ae6 <__sprint_r>
 8002fe4:	2800      	cmp	r0, #0
 8002fe6:	f040 8225 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002fea:	ac29      	add	r4, sp, #164	; 0xa4
 8002fec:	e7b8      	b.n	8002f60 <_vfprintf_r+0xe9c>
 8002fee:	aa26      	add	r2, sp, #152	; 0x98
 8002ff0:	4651      	mov	r1, sl
 8002ff2:	4640      	mov	r0, r8
 8002ff4:	f002 fd77 	bl	8005ae6 <__sprint_r>
 8002ff8:	2800      	cmp	r0, #0
 8002ffa:	f040 821b 	bne.w	8003434 <_vfprintf_r+0x1370>
 8002ffe:	ac29      	add	r4, sp, #164	; 0xa4
 8003000:	e7c3      	b.n	8002f8a <_vfprintf_r+0xec6>
 8003002:	3110      	adds	r1, #16
 8003004:	2a07      	cmp	r2, #7
 8003006:	e9cd 2127 	strd	r2, r1, [sp, #156]	; 0x9c
 800300a:	605f      	str	r7, [r3, #4]
 800300c:	dd08      	ble.n	8003020 <_vfprintf_r+0xf5c>
 800300e:	aa26      	add	r2, sp, #152	; 0x98
 8003010:	4651      	mov	r1, sl
 8003012:	4640      	mov	r0, r8
 8003014:	f002 fd67 	bl	8005ae6 <__sprint_r>
 8003018:	2800      	cmp	r0, #0
 800301a:	f040 820b 	bne.w	8003434 <_vfprintf_r+0x1370>
 800301e:	ac29      	add	r4, sp, #164	; 0xa4
 8003020:	3d10      	subs	r5, #16
 8003022:	4623      	mov	r3, r4
 8003024:	e7b8      	b.n	8002f98 <_vfprintf_r+0xed4>
 8003026:	bf00      	nop
 8003028:	080070f6 	.word	0x080070f6
 800302c:	08007108 	.word	0x08007108
 8003030:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8003032:	42af      	cmp	r7, r5
 8003034:	bfa8      	it	ge
 8003036:	462f      	movge	r7, r5
 8003038:	2f00      	cmp	r7, #0
 800303a:	dd09      	ble.n	8003050 <_vfprintf_r+0xf8c>
 800303c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800303e:	3301      	adds	r3, #1
 8003040:	443e      	add	r6, r7
 8003042:	2b07      	cmp	r3, #7
 8003044:	e9c4 9700 	strd	r9, r7, [r4]
 8003048:	9628      	str	r6, [sp, #160]	; 0xa0
 800304a:	9327      	str	r3, [sp, #156]	; 0x9c
 800304c:	dc75      	bgt.n	800313a <_vfprintf_r+0x1076>
 800304e:	3408      	adds	r4, #8
 8003050:	2f00      	cmp	r7, #0
 8003052:	bfac      	ite	ge
 8003054:	1bee      	subge	r6, r5, r7
 8003056:	462e      	movlt	r6, r5
 8003058:	2e00      	cmp	r6, #0
 800305a:	dd18      	ble.n	800308e <_vfprintf_r+0xfca>
 800305c:	4f98      	ldr	r7, [pc, #608]	; (80032c0 <_vfprintf_r+0x11fc>)
 800305e:	6027      	str	r7, [r4, #0]
 8003060:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003064:	2e10      	cmp	r6, #16
 8003066:	f103 0301 	add.w	r3, r3, #1
 800306a:	f104 0108 	add.w	r1, r4, #8
 800306e:	dc6e      	bgt.n	800314e <_vfprintf_r+0x108a>
 8003070:	6066      	str	r6, [r4, #4]
 8003072:	2b07      	cmp	r3, #7
 8003074:	4416      	add	r6, r2
 8003076:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 800307a:	dd7b      	ble.n	8003174 <_vfprintf_r+0x10b0>
 800307c:	aa26      	add	r2, sp, #152	; 0x98
 800307e:	4651      	mov	r1, sl
 8003080:	4640      	mov	r0, r8
 8003082:	f002 fd30 	bl	8005ae6 <__sprint_r>
 8003086:	2800      	cmp	r0, #0
 8003088:	f040 81d4 	bne.w	8003434 <_vfprintf_r+0x1370>
 800308c:	ac29      	add	r4, sp, #164	; 0xa4
 800308e:	f41b 6f80 	tst.w	fp, #1024	; 0x400
 8003092:	444d      	add	r5, r9
 8003094:	d00a      	beq.n	80030ac <_vfprintf_r+0xfe8>
 8003096:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003098:	2b00      	cmp	r3, #0
 800309a:	d16d      	bne.n	8003178 <_vfprintf_r+0x10b4>
 800309c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d16d      	bne.n	800317e <_vfprintf_r+0x10ba>
 80030a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80030a4:	444b      	add	r3, r9
 80030a6:	429d      	cmp	r5, r3
 80030a8:	bf28      	it	cs
 80030aa:	461d      	movcs	r5, r3
 80030ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80030ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80030b0:	4293      	cmp	r3, r2
 80030b2:	db02      	blt.n	80030ba <_vfprintf_r+0xff6>
 80030b4:	f01b 0f01 	tst.w	fp, #1
 80030b8:	d00e      	beq.n	80030d8 <_vfprintf_r+0x1014>
 80030ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80030bc:	6023      	str	r3, [r4, #0]
 80030be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80030c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80030c2:	6063      	str	r3, [r4, #4]
 80030c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80030c6:	4413      	add	r3, r2
 80030c8:	9328      	str	r3, [sp, #160]	; 0xa0
 80030ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80030cc:	3301      	adds	r3, #1
 80030ce:	2b07      	cmp	r3, #7
 80030d0:	9327      	str	r3, [sp, #156]	; 0x9c
 80030d2:	f300 80cf 	bgt.w	8003274 <_vfprintf_r+0x11b0>
 80030d6:	3408      	adds	r4, #8
 80030d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80030da:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80030dc:	eb09 0203 	add.w	r2, r9, r3
 80030e0:	1b9e      	subs	r6, r3, r6
 80030e2:	1b52      	subs	r2, r2, r5
 80030e4:	4296      	cmp	r6, r2
 80030e6:	bfa8      	it	ge
 80030e8:	4616      	movge	r6, r2
 80030ea:	2e00      	cmp	r6, #0
 80030ec:	dd0b      	ble.n	8003106 <_vfprintf_r+0x1042>
 80030ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80030f0:	4433      	add	r3, r6
 80030f2:	9328      	str	r3, [sp, #160]	; 0xa0
 80030f4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80030f6:	3301      	adds	r3, #1
 80030f8:	2b07      	cmp	r3, #7
 80030fa:	e9c4 5600 	strd	r5, r6, [r4]
 80030fe:	9327      	str	r3, [sp, #156]	; 0x9c
 8003100:	f300 80c2 	bgt.w	8003288 <_vfprintf_r+0x11c4>
 8003104:	3408      	adds	r4, #8
 8003106:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8003108:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800310a:	2e00      	cmp	r6, #0
 800310c:	eba3 0505 	sub.w	r5, r3, r5
 8003110:	bfa8      	it	ge
 8003112:	1bad      	subge	r5, r5, r6
 8003114:	2d00      	cmp	r5, #0
 8003116:	f77f abf1 	ble.w	80028fc <_vfprintf_r+0x838>
 800311a:	4e69      	ldr	r6, [pc, #420]	; (80032c0 <_vfprintf_r+0x11fc>)
 800311c:	2710      	movs	r7, #16
 800311e:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003122:	2d10      	cmp	r5, #16
 8003124:	f103 0301 	add.w	r3, r3, #1
 8003128:	f104 0108 	add.w	r1, r4, #8
 800312c:	6026      	str	r6, [r4, #0]
 800312e:	f300 80b5 	bgt.w	800329c <_vfprintf_r+0x11d8>
 8003132:	6065      	str	r5, [r4, #4]
 8003134:	4415      	add	r5, r2
 8003136:	9528      	str	r5, [sp, #160]	; 0xa0
 8003138:	e6cf      	b.n	8002eda <_vfprintf_r+0xe16>
 800313a:	aa26      	add	r2, sp, #152	; 0x98
 800313c:	4651      	mov	r1, sl
 800313e:	4640      	mov	r0, r8
 8003140:	f002 fcd1 	bl	8005ae6 <__sprint_r>
 8003144:	2800      	cmp	r0, #0
 8003146:	f040 8175 	bne.w	8003434 <_vfprintf_r+0x1370>
 800314a:	ac29      	add	r4, sp, #164	; 0xa4
 800314c:	e780      	b.n	8003050 <_vfprintf_r+0xf8c>
 800314e:	2010      	movs	r0, #16
 8003150:	4402      	add	r2, r0
 8003152:	2b07      	cmp	r3, #7
 8003154:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003158:	6060      	str	r0, [r4, #4]
 800315a:	dd08      	ble.n	800316e <_vfprintf_r+0x10aa>
 800315c:	aa26      	add	r2, sp, #152	; 0x98
 800315e:	4651      	mov	r1, sl
 8003160:	4640      	mov	r0, r8
 8003162:	f002 fcc0 	bl	8005ae6 <__sprint_r>
 8003166:	2800      	cmp	r0, #0
 8003168:	f040 8164 	bne.w	8003434 <_vfprintf_r+0x1370>
 800316c:	a929      	add	r1, sp, #164	; 0xa4
 800316e:	3e10      	subs	r6, #16
 8003170:	460c      	mov	r4, r1
 8003172:	e774      	b.n	800305e <_vfprintf_r+0xf9a>
 8003174:	460c      	mov	r4, r1
 8003176:	e78a      	b.n	800308e <_vfprintf_r+0xfca>
 8003178:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800317a:	2b00      	cmp	r3, #0
 800317c:	d04a      	beq.n	8003214 <_vfprintf_r+0x1150>
 800317e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003180:	3b01      	subs	r3, #1
 8003182:	930c      	str	r3, [sp, #48]	; 0x30
 8003184:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8003186:	6023      	str	r3, [r4, #0]
 8003188:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800318a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800318c:	6063      	str	r3, [r4, #4]
 800318e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003190:	4413      	add	r3, r2
 8003192:	9328      	str	r3, [sp, #160]	; 0xa0
 8003194:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003196:	3301      	adds	r3, #1
 8003198:	2b07      	cmp	r3, #7
 800319a:	9327      	str	r3, [sp, #156]	; 0x9c
 800319c:	dc41      	bgt.n	8003222 <_vfprintf_r+0x115e>
 800319e:	3408      	adds	r4, #8
 80031a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80031a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80031a4:	eb09 0703 	add.w	r7, r9, r3
 80031a8:	1b7b      	subs	r3, r7, r5
 80031aa:	7817      	ldrb	r7, [r2, #0]
 80031ac:	429f      	cmp	r7, r3
 80031ae:	bfa8      	it	ge
 80031b0:	461f      	movge	r7, r3
 80031b2:	2f00      	cmp	r7, #0
 80031b4:	dd0a      	ble.n	80031cc <_vfprintf_r+0x1108>
 80031b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80031b8:	443b      	add	r3, r7
 80031ba:	9328      	str	r3, [sp, #160]	; 0xa0
 80031bc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80031be:	3301      	adds	r3, #1
 80031c0:	2b07      	cmp	r3, #7
 80031c2:	e9c4 5700 	strd	r5, r7, [r4]
 80031c6:	9327      	str	r3, [sp, #156]	; 0x9c
 80031c8:	dc35      	bgt.n	8003236 <_vfprintf_r+0x1172>
 80031ca:	3408      	adds	r4, #8
 80031cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80031ce:	781e      	ldrb	r6, [r3, #0]
 80031d0:	2f00      	cmp	r7, #0
 80031d2:	bfa8      	it	ge
 80031d4:	1bf6      	subge	r6, r6, r7
 80031d6:	2e00      	cmp	r6, #0
 80031d8:	dd18      	ble.n	800320c <_vfprintf_r+0x1148>
 80031da:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80031de:	4838      	ldr	r0, [pc, #224]	; (80032c0 <_vfprintf_r+0x11fc>)
 80031e0:	6020      	str	r0, [r4, #0]
 80031e2:	2e10      	cmp	r6, #16
 80031e4:	f103 0301 	add.w	r3, r3, #1
 80031e8:	f104 0108 	add.w	r1, r4, #8
 80031ec:	dc2d      	bgt.n	800324a <_vfprintf_r+0x1186>
 80031ee:	6066      	str	r6, [r4, #4]
 80031f0:	2b07      	cmp	r3, #7
 80031f2:	4416      	add	r6, r2
 80031f4:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80031f8:	dd3a      	ble.n	8003270 <_vfprintf_r+0x11ac>
 80031fa:	aa26      	add	r2, sp, #152	; 0x98
 80031fc:	4651      	mov	r1, sl
 80031fe:	4640      	mov	r0, r8
 8003200:	f002 fc71 	bl	8005ae6 <__sprint_r>
 8003204:	2800      	cmp	r0, #0
 8003206:	f040 8115 	bne.w	8003434 <_vfprintf_r+0x1370>
 800320a:	ac29      	add	r4, sp, #164	; 0xa4
 800320c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800320e:	781b      	ldrb	r3, [r3, #0]
 8003210:	441d      	add	r5, r3
 8003212:	e740      	b.n	8003096 <_vfprintf_r+0xfd2>
 8003214:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003216:	3b01      	subs	r3, #1
 8003218:	930e      	str	r3, [sp, #56]	; 0x38
 800321a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800321c:	3b01      	subs	r3, #1
 800321e:	930d      	str	r3, [sp, #52]	; 0x34
 8003220:	e7b0      	b.n	8003184 <_vfprintf_r+0x10c0>
 8003222:	aa26      	add	r2, sp, #152	; 0x98
 8003224:	4651      	mov	r1, sl
 8003226:	4640      	mov	r0, r8
 8003228:	f002 fc5d 	bl	8005ae6 <__sprint_r>
 800322c:	2800      	cmp	r0, #0
 800322e:	f040 8101 	bne.w	8003434 <_vfprintf_r+0x1370>
 8003232:	ac29      	add	r4, sp, #164	; 0xa4
 8003234:	e7b4      	b.n	80031a0 <_vfprintf_r+0x10dc>
 8003236:	aa26      	add	r2, sp, #152	; 0x98
 8003238:	4651      	mov	r1, sl
 800323a:	4640      	mov	r0, r8
 800323c:	f002 fc53 	bl	8005ae6 <__sprint_r>
 8003240:	2800      	cmp	r0, #0
 8003242:	f040 80f7 	bne.w	8003434 <_vfprintf_r+0x1370>
 8003246:	ac29      	add	r4, sp, #164	; 0xa4
 8003248:	e7c0      	b.n	80031cc <_vfprintf_r+0x1108>
 800324a:	2010      	movs	r0, #16
 800324c:	4402      	add	r2, r0
 800324e:	2b07      	cmp	r3, #7
 8003250:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003254:	6060      	str	r0, [r4, #4]
 8003256:	dd08      	ble.n	800326a <_vfprintf_r+0x11a6>
 8003258:	aa26      	add	r2, sp, #152	; 0x98
 800325a:	4651      	mov	r1, sl
 800325c:	4640      	mov	r0, r8
 800325e:	f002 fc42 	bl	8005ae6 <__sprint_r>
 8003262:	2800      	cmp	r0, #0
 8003264:	f040 80e6 	bne.w	8003434 <_vfprintf_r+0x1370>
 8003268:	a929      	add	r1, sp, #164	; 0xa4
 800326a:	3e10      	subs	r6, #16
 800326c:	460c      	mov	r4, r1
 800326e:	e7b4      	b.n	80031da <_vfprintf_r+0x1116>
 8003270:	460c      	mov	r4, r1
 8003272:	e7cb      	b.n	800320c <_vfprintf_r+0x1148>
 8003274:	aa26      	add	r2, sp, #152	; 0x98
 8003276:	4651      	mov	r1, sl
 8003278:	4640      	mov	r0, r8
 800327a:	f002 fc34 	bl	8005ae6 <__sprint_r>
 800327e:	2800      	cmp	r0, #0
 8003280:	f040 80d8 	bne.w	8003434 <_vfprintf_r+0x1370>
 8003284:	ac29      	add	r4, sp, #164	; 0xa4
 8003286:	e727      	b.n	80030d8 <_vfprintf_r+0x1014>
 8003288:	aa26      	add	r2, sp, #152	; 0x98
 800328a:	4651      	mov	r1, sl
 800328c:	4640      	mov	r0, r8
 800328e:	f002 fc2a 	bl	8005ae6 <__sprint_r>
 8003292:	2800      	cmp	r0, #0
 8003294:	f040 80ce 	bne.w	8003434 <_vfprintf_r+0x1370>
 8003298:	ac29      	add	r4, sp, #164	; 0xa4
 800329a:	e734      	b.n	8003106 <_vfprintf_r+0x1042>
 800329c:	3210      	adds	r2, #16
 800329e:	2b07      	cmp	r3, #7
 80032a0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80032a4:	6067      	str	r7, [r4, #4]
 80032a6:	dd08      	ble.n	80032ba <_vfprintf_r+0x11f6>
 80032a8:	aa26      	add	r2, sp, #152	; 0x98
 80032aa:	4651      	mov	r1, sl
 80032ac:	4640      	mov	r0, r8
 80032ae:	f002 fc1a 	bl	8005ae6 <__sprint_r>
 80032b2:	2800      	cmp	r0, #0
 80032b4:	f040 80be 	bne.w	8003434 <_vfprintf_r+0x1370>
 80032b8:	a929      	add	r1, sp, #164	; 0xa4
 80032ba:	3d10      	subs	r5, #16
 80032bc:	460c      	mov	r4, r1
 80032be:	e72e      	b.n	800311e <_vfprintf_r+0x105a>
 80032c0:	08007108 	.word	0x08007108
 80032c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80032c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80032c8:	2a01      	cmp	r2, #1
 80032ca:	f106 0601 	add.w	r6, r6, #1
 80032ce:	f103 0301 	add.w	r3, r3, #1
 80032d2:	f104 0508 	add.w	r5, r4, #8
 80032d6:	dc02      	bgt.n	80032de <_vfprintf_r+0x121a>
 80032d8:	f01b 0f01 	tst.w	fp, #1
 80032dc:	d07e      	beq.n	80033dc <_vfprintf_r+0x1318>
 80032de:	2201      	movs	r2, #1
 80032e0:	2b07      	cmp	r3, #7
 80032e2:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80032e6:	f8c4 9000 	str.w	r9, [r4]
 80032ea:	6062      	str	r2, [r4, #4]
 80032ec:	dd08      	ble.n	8003300 <_vfprintf_r+0x123c>
 80032ee:	aa26      	add	r2, sp, #152	; 0x98
 80032f0:	4651      	mov	r1, sl
 80032f2:	4640      	mov	r0, r8
 80032f4:	f002 fbf7 	bl	8005ae6 <__sprint_r>
 80032f8:	2800      	cmp	r0, #0
 80032fa:	f040 809b 	bne.w	8003434 <_vfprintf_r+0x1370>
 80032fe:	ad29      	add	r5, sp, #164	; 0xa4
 8003300:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003302:	602b      	str	r3, [r5, #0]
 8003304:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003306:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003308:	606b      	str	r3, [r5, #4]
 800330a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800330c:	4413      	add	r3, r2
 800330e:	9328      	str	r3, [sp, #160]	; 0xa0
 8003310:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003312:	3301      	adds	r3, #1
 8003314:	2b07      	cmp	r3, #7
 8003316:	9327      	str	r3, [sp, #156]	; 0x9c
 8003318:	dc32      	bgt.n	8003380 <_vfprintf_r+0x12bc>
 800331a:	3508      	adds	r5, #8
 800331c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800331e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003322:	1e5c      	subs	r4, r3, #1
 8003324:	2200      	movs	r2, #0
 8003326:	2300      	movs	r3, #0
 8003328:	f7fd fbde 	bl	8000ae8 <__aeabi_dcmpeq>
 800332c:	2800      	cmp	r0, #0
 800332e:	d130      	bne.n	8003392 <_vfprintf_r+0x12ce>
 8003330:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003332:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003334:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003336:	3101      	adds	r1, #1
 8003338:	3b01      	subs	r3, #1
 800333a:	f109 0001 	add.w	r0, r9, #1
 800333e:	4413      	add	r3, r2
 8003340:	2907      	cmp	r1, #7
 8003342:	e9c5 0400 	strd	r0, r4, [r5]
 8003346:	e9cd 1327 	strd	r1, r3, [sp, #156]	; 0x9c
 800334a:	dd50      	ble.n	80033ee <_vfprintf_r+0x132a>
 800334c:	aa26      	add	r2, sp, #152	; 0x98
 800334e:	4651      	mov	r1, sl
 8003350:	4640      	mov	r0, r8
 8003352:	f002 fbc8 	bl	8005ae6 <__sprint_r>
 8003356:	2800      	cmp	r0, #0
 8003358:	d16c      	bne.n	8003434 <_vfprintf_r+0x1370>
 800335a:	ad29      	add	r5, sp, #164	; 0xa4
 800335c:	ab22      	add	r3, sp, #136	; 0x88
 800335e:	602b      	str	r3, [r5, #0]
 8003360:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003362:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003364:	606b      	str	r3, [r5, #4]
 8003366:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003368:	4413      	add	r3, r2
 800336a:	9328      	str	r3, [sp, #160]	; 0xa0
 800336c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800336e:	3301      	adds	r3, #1
 8003370:	2b07      	cmp	r3, #7
 8003372:	9327      	str	r3, [sp, #156]	; 0x9c
 8003374:	f73f adb5 	bgt.w	8002ee2 <_vfprintf_r+0xe1e>
 8003378:	f105 0408 	add.w	r4, r5, #8
 800337c:	f7ff babe 	b.w	80028fc <_vfprintf_r+0x838>
 8003380:	aa26      	add	r2, sp, #152	; 0x98
 8003382:	4651      	mov	r1, sl
 8003384:	4640      	mov	r0, r8
 8003386:	f002 fbae 	bl	8005ae6 <__sprint_r>
 800338a:	2800      	cmp	r0, #0
 800338c:	d152      	bne.n	8003434 <_vfprintf_r+0x1370>
 800338e:	ad29      	add	r5, sp, #164	; 0xa4
 8003390:	e7c4      	b.n	800331c <_vfprintf_r+0x1258>
 8003392:	2c00      	cmp	r4, #0
 8003394:	dde2      	ble.n	800335c <_vfprintf_r+0x1298>
 8003396:	4e58      	ldr	r6, [pc, #352]	; (80034f8 <_vfprintf_r+0x1434>)
 8003398:	2710      	movs	r7, #16
 800339a:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800339e:	2c10      	cmp	r4, #16
 80033a0:	f103 0301 	add.w	r3, r3, #1
 80033a4:	f105 0108 	add.w	r1, r5, #8
 80033a8:	602e      	str	r6, [r5, #0]
 80033aa:	dc07      	bgt.n	80033bc <_vfprintf_r+0x12f8>
 80033ac:	606c      	str	r4, [r5, #4]
 80033ae:	2b07      	cmp	r3, #7
 80033b0:	4414      	add	r4, r2
 80033b2:	e9cd 3427 	strd	r3, r4, [sp, #156]	; 0x9c
 80033b6:	dcc9      	bgt.n	800334c <_vfprintf_r+0x1288>
 80033b8:	460d      	mov	r5, r1
 80033ba:	e7cf      	b.n	800335c <_vfprintf_r+0x1298>
 80033bc:	3210      	adds	r2, #16
 80033be:	2b07      	cmp	r3, #7
 80033c0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80033c4:	606f      	str	r7, [r5, #4]
 80033c6:	dd06      	ble.n	80033d6 <_vfprintf_r+0x1312>
 80033c8:	aa26      	add	r2, sp, #152	; 0x98
 80033ca:	4651      	mov	r1, sl
 80033cc:	4640      	mov	r0, r8
 80033ce:	f002 fb8a 	bl	8005ae6 <__sprint_r>
 80033d2:	bb78      	cbnz	r0, 8003434 <_vfprintf_r+0x1370>
 80033d4:	a929      	add	r1, sp, #164	; 0xa4
 80033d6:	3c10      	subs	r4, #16
 80033d8:	460d      	mov	r5, r1
 80033da:	e7de      	b.n	800339a <_vfprintf_r+0x12d6>
 80033dc:	2201      	movs	r2, #1
 80033de:	2b07      	cmp	r3, #7
 80033e0:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80033e4:	f8c4 9000 	str.w	r9, [r4]
 80033e8:	6062      	str	r2, [r4, #4]
 80033ea:	ddb7      	ble.n	800335c <_vfprintf_r+0x1298>
 80033ec:	e7ae      	b.n	800334c <_vfprintf_r+0x1288>
 80033ee:	3508      	adds	r5, #8
 80033f0:	e7b4      	b.n	800335c <_vfprintf_r+0x1298>
 80033f2:	460c      	mov	r4, r1
 80033f4:	f7ff ba82 	b.w	80028fc <_vfprintf_r+0x838>
 80033f8:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 80033fc:	1a9d      	subs	r5, r3, r2
 80033fe:	2d00      	cmp	r5, #0
 8003400:	f77f aa80 	ble.w	8002904 <_vfprintf_r+0x840>
 8003404:	4e3d      	ldr	r6, [pc, #244]	; (80034fc <_vfprintf_r+0x1438>)
 8003406:	2710      	movs	r7, #16
 8003408:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800340c:	2d10      	cmp	r5, #16
 800340e:	f103 0301 	add.w	r3, r3, #1
 8003412:	6026      	str	r6, [r4, #0]
 8003414:	dc18      	bgt.n	8003448 <_vfprintf_r+0x1384>
 8003416:	6065      	str	r5, [r4, #4]
 8003418:	2b07      	cmp	r3, #7
 800341a:	4415      	add	r5, r2
 800341c:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 8003420:	f77f aa70 	ble.w	8002904 <_vfprintf_r+0x840>
 8003424:	aa26      	add	r2, sp, #152	; 0x98
 8003426:	4651      	mov	r1, sl
 8003428:	4640      	mov	r0, r8
 800342a:	f002 fb5c 	bl	8005ae6 <__sprint_r>
 800342e:	2800      	cmp	r0, #0
 8003430:	f43f aa68 	beq.w	8002904 <_vfprintf_r+0x840>
 8003434:	9b08      	ldr	r3, [sp, #32]
 8003436:	2b00      	cmp	r3, #0
 8003438:	f43f a887 	beq.w	800254a <_vfprintf_r+0x486>
 800343c:	4619      	mov	r1, r3
 800343e:	4640      	mov	r0, r8
 8003440:	f001 f8ca 	bl	80045d8 <_free_r>
 8003444:	f7ff b881 	b.w	800254a <_vfprintf_r+0x486>
 8003448:	3210      	adds	r2, #16
 800344a:	2b07      	cmp	r3, #7
 800344c:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003450:	6067      	str	r7, [r4, #4]
 8003452:	dc02      	bgt.n	800345a <_vfprintf_r+0x1396>
 8003454:	3408      	adds	r4, #8
 8003456:	3d10      	subs	r5, #16
 8003458:	e7d6      	b.n	8003408 <_vfprintf_r+0x1344>
 800345a:	aa26      	add	r2, sp, #152	; 0x98
 800345c:	4651      	mov	r1, sl
 800345e:	4640      	mov	r0, r8
 8003460:	f002 fb41 	bl	8005ae6 <__sprint_r>
 8003464:	2800      	cmp	r0, #0
 8003466:	d1e5      	bne.n	8003434 <_vfprintf_r+0x1370>
 8003468:	ac29      	add	r4, sp, #164	; 0xa4
 800346a:	e7f4      	b.n	8003456 <_vfprintf_r+0x1392>
 800346c:	9908      	ldr	r1, [sp, #32]
 800346e:	4640      	mov	r0, r8
 8003470:	f001 f8b2 	bl	80045d8 <_free_r>
 8003474:	f7ff ba5e 	b.w	8002934 <_vfprintf_r+0x870>
 8003478:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800347a:	b91b      	cbnz	r3, 8003484 <_vfprintf_r+0x13c0>
 800347c:	2300      	movs	r3, #0
 800347e:	9327      	str	r3, [sp, #156]	; 0x9c
 8003480:	f7ff b863 	b.w	800254a <_vfprintf_r+0x486>
 8003484:	aa26      	add	r2, sp, #152	; 0x98
 8003486:	4651      	mov	r1, sl
 8003488:	4640      	mov	r0, r8
 800348a:	f002 fb2c 	bl	8005ae6 <__sprint_r>
 800348e:	2800      	cmp	r0, #0
 8003490:	d0f4      	beq.n	800347c <_vfprintf_r+0x13b8>
 8003492:	f7ff b85a 	b.w	800254a <_vfprintf_r+0x486>
 8003496:	ea56 0205 	orrs.w	r2, r6, r5
 800349a:	465f      	mov	r7, fp
 800349c:	f43f ab71 	beq.w	8002b82 <_vfprintf_r+0xabe>
 80034a0:	2b01      	cmp	r3, #1
 80034a2:	f43f ac0e 	beq.w	8002cc2 <_vfprintf_r+0xbfe>
 80034a6:	2b02      	cmp	r3, #2
 80034a8:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 80034ac:	f43f ac55 	beq.w	8002d5a <_vfprintf_r+0xc96>
 80034b0:	f006 0307 	and.w	r3, r6, #7
 80034b4:	08f6      	lsrs	r6, r6, #3
 80034b6:	ea46 7645 	orr.w	r6, r6, r5, lsl #29
 80034ba:	08ed      	lsrs	r5, r5, #3
 80034bc:	3330      	adds	r3, #48	; 0x30
 80034be:	ea56 0105 	orrs.w	r1, r6, r5
 80034c2:	464a      	mov	r2, r9
 80034c4:	f809 3d01 	strb.w	r3, [r9, #-1]!
 80034c8:	d1f2      	bne.n	80034b0 <_vfprintf_r+0x13ec>
 80034ca:	07f8      	lsls	r0, r7, #31
 80034cc:	d506      	bpl.n	80034dc <_vfprintf_r+0x1418>
 80034ce:	2b30      	cmp	r3, #48	; 0x30
 80034d0:	d004      	beq.n	80034dc <_vfprintf_r+0x1418>
 80034d2:	2330      	movs	r3, #48	; 0x30
 80034d4:	f809 3c01 	strb.w	r3, [r9, #-1]
 80034d8:	f1a2 0902 	sub.w	r9, r2, #2
 80034dc:	ab52      	add	r3, sp, #328	; 0x148
 80034de:	eba3 0309 	sub.w	r3, r3, r9
 80034e2:	9e07      	ldr	r6, [sp, #28]
 80034e4:	9307      	str	r3, [sp, #28]
 80034e6:	2300      	movs	r3, #0
 80034e8:	46bb      	mov	fp, r7
 80034ea:	9308      	str	r3, [sp, #32]
 80034ec:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 80034f0:	461d      	mov	r5, r3
 80034f2:	f7ff b94a 	b.w	800278a <_vfprintf_r+0x6c6>
 80034f6:	bf00      	nop
 80034f8:	08007108 	.word	0x08007108
 80034fc:	080070f8 	.word	0x080070f8

08003500 <__sbprintf>:
 8003500:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003502:	461f      	mov	r7, r3
 8003504:	898b      	ldrh	r3, [r1, #12]
 8003506:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 800350a:	f023 0302 	bic.w	r3, r3, #2
 800350e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003512:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8003514:	9319      	str	r3, [sp, #100]	; 0x64
 8003516:	89cb      	ldrh	r3, [r1, #14]
 8003518:	f8ad 300e 	strh.w	r3, [sp, #14]
 800351c:	69cb      	ldr	r3, [r1, #28]
 800351e:	9307      	str	r3, [sp, #28]
 8003520:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8003522:	9309      	str	r3, [sp, #36]	; 0x24
 8003524:	ab1a      	add	r3, sp, #104	; 0x68
 8003526:	9300      	str	r3, [sp, #0]
 8003528:	9304      	str	r3, [sp, #16]
 800352a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800352e:	4615      	mov	r5, r2
 8003530:	4606      	mov	r6, r0
 8003532:	9302      	str	r3, [sp, #8]
 8003534:	9305      	str	r3, [sp, #20]
 8003536:	a816      	add	r0, sp, #88	; 0x58
 8003538:	2300      	movs	r3, #0
 800353a:	460c      	mov	r4, r1
 800353c:	9306      	str	r3, [sp, #24]
 800353e:	f001 fa77 	bl	8004a30 <__retarget_lock_init_recursive>
 8003542:	462a      	mov	r2, r5
 8003544:	463b      	mov	r3, r7
 8003546:	4669      	mov	r1, sp
 8003548:	4630      	mov	r0, r6
 800354a:	f7fe fdbb 	bl	80020c4 <_vfprintf_r>
 800354e:	1e05      	subs	r5, r0, #0
 8003550:	db07      	blt.n	8003562 <__sbprintf+0x62>
 8003552:	4669      	mov	r1, sp
 8003554:	4630      	mov	r0, r6
 8003556:	f000 ff43 	bl	80043e0 <_fflush_r>
 800355a:	2800      	cmp	r0, #0
 800355c:	bf18      	it	ne
 800355e:	f04f 35ff 	movne.w	r5, #4294967295
 8003562:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8003566:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003568:	065b      	lsls	r3, r3, #25
 800356a:	bf42      	ittt	mi
 800356c:	89a3      	ldrhmi	r3, [r4, #12]
 800356e:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 8003572:	81a3      	strhmi	r3, [r4, #12]
 8003574:	f001 fa5d 	bl	8004a32 <__retarget_lock_close_recursive>
 8003578:	4628      	mov	r0, r5
 800357a:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 800357e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003580 <__swsetup_r>:
 8003580:	b538      	push	{r3, r4, r5, lr}
 8003582:	4b2a      	ldr	r3, [pc, #168]	; (800362c <__swsetup_r+0xac>)
 8003584:	4605      	mov	r5, r0
 8003586:	6818      	ldr	r0, [r3, #0]
 8003588:	460c      	mov	r4, r1
 800358a:	b118      	cbz	r0, 8003594 <__swsetup_r+0x14>
 800358c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800358e:	b90b      	cbnz	r3, 8003594 <__swsetup_r+0x14>
 8003590:	f000 ff92 	bl	80044b8 <__sinit>
 8003594:	89a3      	ldrh	r3, [r4, #12]
 8003596:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800359a:	0718      	lsls	r0, r3, #28
 800359c:	d422      	bmi.n	80035e4 <__swsetup_r+0x64>
 800359e:	06d9      	lsls	r1, r3, #27
 80035a0:	d407      	bmi.n	80035b2 <__swsetup_r+0x32>
 80035a2:	2309      	movs	r3, #9
 80035a4:	602b      	str	r3, [r5, #0]
 80035a6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80035aa:	81a3      	strh	r3, [r4, #12]
 80035ac:	f04f 30ff 	mov.w	r0, #4294967295
 80035b0:	e034      	b.n	800361c <__swsetup_r+0x9c>
 80035b2:	0758      	lsls	r0, r3, #29
 80035b4:	d512      	bpl.n	80035dc <__swsetup_r+0x5c>
 80035b6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80035b8:	b141      	cbz	r1, 80035cc <__swsetup_r+0x4c>
 80035ba:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80035be:	4299      	cmp	r1, r3
 80035c0:	d002      	beq.n	80035c8 <__swsetup_r+0x48>
 80035c2:	4628      	mov	r0, r5
 80035c4:	f001 f808 	bl	80045d8 <_free_r>
 80035c8:	2300      	movs	r3, #0
 80035ca:	6323      	str	r3, [r4, #48]	; 0x30
 80035cc:	89a3      	ldrh	r3, [r4, #12]
 80035ce:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80035d2:	81a3      	strh	r3, [r4, #12]
 80035d4:	2300      	movs	r3, #0
 80035d6:	6063      	str	r3, [r4, #4]
 80035d8:	6923      	ldr	r3, [r4, #16]
 80035da:	6023      	str	r3, [r4, #0]
 80035dc:	89a3      	ldrh	r3, [r4, #12]
 80035de:	f043 0308 	orr.w	r3, r3, #8
 80035e2:	81a3      	strh	r3, [r4, #12]
 80035e4:	6923      	ldr	r3, [r4, #16]
 80035e6:	b94b      	cbnz	r3, 80035fc <__swsetup_r+0x7c>
 80035e8:	89a3      	ldrh	r3, [r4, #12]
 80035ea:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80035ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80035f2:	d003      	beq.n	80035fc <__swsetup_r+0x7c>
 80035f4:	4621      	mov	r1, r4
 80035f6:	4628      	mov	r0, r5
 80035f8:	f001 fa4a 	bl	8004a90 <__smakebuf_r>
 80035fc:	89a0      	ldrh	r0, [r4, #12]
 80035fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003602:	f010 0301 	ands.w	r3, r0, #1
 8003606:	d00a      	beq.n	800361e <__swsetup_r+0x9e>
 8003608:	2300      	movs	r3, #0
 800360a:	60a3      	str	r3, [r4, #8]
 800360c:	6963      	ldr	r3, [r4, #20]
 800360e:	425b      	negs	r3, r3
 8003610:	61a3      	str	r3, [r4, #24]
 8003612:	6923      	ldr	r3, [r4, #16]
 8003614:	b943      	cbnz	r3, 8003628 <__swsetup_r+0xa8>
 8003616:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800361a:	d1c4      	bne.n	80035a6 <__swsetup_r+0x26>
 800361c:	bd38      	pop	{r3, r4, r5, pc}
 800361e:	0781      	lsls	r1, r0, #30
 8003620:	bf58      	it	pl
 8003622:	6963      	ldrpl	r3, [r4, #20]
 8003624:	60a3      	str	r3, [r4, #8]
 8003626:	e7f4      	b.n	8003612 <__swsetup_r+0x92>
 8003628:	2000      	movs	r0, #0
 800362a:	e7f7      	b.n	800361c <__swsetup_r+0x9c>
 800362c:	2000020c 	.word	0x2000020c

08003630 <register_fini>:
 8003630:	4b02      	ldr	r3, [pc, #8]	; (800363c <register_fini+0xc>)
 8003632:	b113      	cbz	r3, 800363a <register_fini+0xa>
 8003634:	4802      	ldr	r0, [pc, #8]	; (8003640 <register_fini+0x10>)
 8003636:	f000 b805 	b.w	8003644 <atexit>
 800363a:	4770      	bx	lr
 800363c:	00000000 	.word	0x00000000
 8003640:	08004509 	.word	0x08004509

08003644 <atexit>:
 8003644:	2300      	movs	r3, #0
 8003646:	4601      	mov	r1, r0
 8003648:	461a      	mov	r2, r3
 800364a:	4618      	mov	r0, r3
 800364c:	f002 bf5e 	b.w	800650c <__register_exitproc>

08003650 <quorem>:
 8003650:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003654:	6903      	ldr	r3, [r0, #16]
 8003656:	690c      	ldr	r4, [r1, #16]
 8003658:	42a3      	cmp	r3, r4
 800365a:	4607      	mov	r7, r0
 800365c:	db7d      	blt.n	800375a <quorem+0x10a>
 800365e:	3c01      	subs	r4, #1
 8003660:	f101 0814 	add.w	r8, r1, #20
 8003664:	f100 0514 	add.w	r5, r0, #20
 8003668:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800366c:	9301      	str	r3, [sp, #4]
 800366e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003672:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003676:	3301      	adds	r3, #1
 8003678:	429a      	cmp	r2, r3
 800367a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800367e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003682:	fbb2 f6f3 	udiv	r6, r2, r3
 8003686:	d32e      	bcc.n	80036e6 <quorem+0x96>
 8003688:	f04f 0e00 	mov.w	lr, #0
 800368c:	4640      	mov	r0, r8
 800368e:	46ac      	mov	ip, r5
 8003690:	46f2      	mov	sl, lr
 8003692:	f850 2b04 	ldr.w	r2, [r0], #4
 8003696:	b293      	uxth	r3, r2
 8003698:	fb06 e303 	mla	r3, r6, r3, lr
 800369c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80036a0:	0c12      	lsrs	r2, r2, #16
 80036a2:	b29b      	uxth	r3, r3
 80036a4:	fb06 e202 	mla	r2, r6, r2, lr
 80036a8:	ebaa 0303 	sub.w	r3, sl, r3
 80036ac:	f8dc a000 	ldr.w	sl, [ip]
 80036b0:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80036b4:	b292      	uxth	r2, r2
 80036b6:	fa13 f38a 	uxtah	r3, r3, sl
 80036ba:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80036be:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80036c2:	b29b      	uxth	r3, r3
 80036c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80036c8:	4581      	cmp	r9, r0
 80036ca:	f84c 3b04 	str.w	r3, [ip], #4
 80036ce:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80036d2:	d2de      	bcs.n	8003692 <quorem+0x42>
 80036d4:	f855 300b 	ldr.w	r3, [r5, fp]
 80036d8:	b92b      	cbnz	r3, 80036e6 <quorem+0x96>
 80036da:	9b01      	ldr	r3, [sp, #4]
 80036dc:	3b04      	subs	r3, #4
 80036de:	429d      	cmp	r5, r3
 80036e0:	461a      	mov	r2, r3
 80036e2:	d32e      	bcc.n	8003742 <quorem+0xf2>
 80036e4:	613c      	str	r4, [r7, #16]
 80036e6:	4638      	mov	r0, r7
 80036e8:	f001 feb2 	bl	8005450 <__mcmp>
 80036ec:	2800      	cmp	r0, #0
 80036ee:	db24      	blt.n	800373a <quorem+0xea>
 80036f0:	3601      	adds	r6, #1
 80036f2:	4628      	mov	r0, r5
 80036f4:	f04f 0c00 	mov.w	ip, #0
 80036f8:	f858 2b04 	ldr.w	r2, [r8], #4
 80036fc:	f8d0 e000 	ldr.w	lr, [r0]
 8003700:	b293      	uxth	r3, r2
 8003702:	ebac 0303 	sub.w	r3, ip, r3
 8003706:	0c12      	lsrs	r2, r2, #16
 8003708:	fa13 f38e 	uxtah	r3, r3, lr
 800370c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003710:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003714:	b29b      	uxth	r3, r3
 8003716:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800371a:	45c1      	cmp	r9, r8
 800371c:	f840 3b04 	str.w	r3, [r0], #4
 8003720:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003724:	d2e8      	bcs.n	80036f8 <quorem+0xa8>
 8003726:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800372a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800372e:	b922      	cbnz	r2, 800373a <quorem+0xea>
 8003730:	3b04      	subs	r3, #4
 8003732:	429d      	cmp	r5, r3
 8003734:	461a      	mov	r2, r3
 8003736:	d30a      	bcc.n	800374e <quorem+0xfe>
 8003738:	613c      	str	r4, [r7, #16]
 800373a:	4630      	mov	r0, r6
 800373c:	b003      	add	sp, #12
 800373e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003742:	6812      	ldr	r2, [r2, #0]
 8003744:	3b04      	subs	r3, #4
 8003746:	2a00      	cmp	r2, #0
 8003748:	d1cc      	bne.n	80036e4 <quorem+0x94>
 800374a:	3c01      	subs	r4, #1
 800374c:	e7c7      	b.n	80036de <quorem+0x8e>
 800374e:	6812      	ldr	r2, [r2, #0]
 8003750:	3b04      	subs	r3, #4
 8003752:	2a00      	cmp	r2, #0
 8003754:	d1f0      	bne.n	8003738 <quorem+0xe8>
 8003756:	3c01      	subs	r4, #1
 8003758:	e7eb      	b.n	8003732 <quorem+0xe2>
 800375a:	2000      	movs	r0, #0
 800375c:	e7ee      	b.n	800373c <quorem+0xec>
	...

08003760 <_dtoa_r>:
 8003760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003764:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8003766:	b097      	sub	sp, #92	; 0x5c
 8003768:	4681      	mov	r9, r0
 800376a:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 800376c:	4614      	mov	r4, r2
 800376e:	461d      	mov	r5, r3
 8003770:	4692      	mov	sl, r2
 8003772:	469b      	mov	fp, r3
 8003774:	b149      	cbz	r1, 800378a <_dtoa_r+0x2a>
 8003776:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8003778:	604a      	str	r2, [r1, #4]
 800377a:	2301      	movs	r3, #1
 800377c:	4093      	lsls	r3, r2
 800377e:	608b      	str	r3, [r1, #8]
 8003780:	f001 fc5b 	bl	800503a <_Bfree>
 8003784:	2300      	movs	r3, #0
 8003786:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
 800378a:	1e2b      	subs	r3, r5, #0
 800378c:	bfaa      	itet	ge
 800378e:	2300      	movge	r3, #0
 8003790:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8003794:	6033      	strge	r3, [r6, #0]
 8003796:	4ba0      	ldr	r3, [pc, #640]	; (8003a18 <_dtoa_r+0x2b8>)
 8003798:	bfbc      	itt	lt
 800379a:	2201      	movlt	r2, #1
 800379c:	6032      	strlt	r2, [r6, #0]
 800379e:	ea33 030b 	bics.w	r3, r3, fp
 80037a2:	d119      	bne.n	80037d8 <_dtoa_r+0x78>
 80037a4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80037a6:	f242 730f 	movw	r3, #9999	; 0x270f
 80037aa:	6013      	str	r3, [r2, #0]
 80037ac:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80037b0:	4323      	orrs	r3, r4
 80037b2:	f000 8575 	beq.w	80042a0 <_dtoa_r+0xb40>
 80037b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80037b8:	b90b      	cbnz	r3, 80037be <_dtoa_r+0x5e>
 80037ba:	4b98      	ldr	r3, [pc, #608]	; (8003a1c <_dtoa_r+0x2bc>)
 80037bc:	e020      	b.n	8003800 <_dtoa_r+0xa0>
 80037be:	4b97      	ldr	r3, [pc, #604]	; (8003a1c <_dtoa_r+0x2bc>)
 80037c0:	9304      	str	r3, [sp, #16]
 80037c2:	3303      	adds	r3, #3
 80037c4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80037c6:	6013      	str	r3, [r2, #0]
 80037c8:	9804      	ldr	r0, [sp, #16]
 80037ca:	b017      	add	sp, #92	; 0x5c
 80037cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037d0:	4b93      	ldr	r3, [pc, #588]	; (8003a20 <_dtoa_r+0x2c0>)
 80037d2:	9304      	str	r3, [sp, #16]
 80037d4:	3308      	adds	r3, #8
 80037d6:	e7f5      	b.n	80037c4 <_dtoa_r+0x64>
 80037d8:	2200      	movs	r2, #0
 80037da:	2300      	movs	r3, #0
 80037dc:	4650      	mov	r0, sl
 80037de:	4659      	mov	r1, fp
 80037e0:	e9cd ab0c 	strd	sl, fp, [sp, #48]	; 0x30
 80037e4:	f7fd f980 	bl	8000ae8 <__aeabi_dcmpeq>
 80037e8:	4607      	mov	r7, r0
 80037ea:	b158      	cbz	r0, 8003804 <_dtoa_r+0xa4>
 80037ec:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80037ee:	2301      	movs	r3, #1
 80037f0:	6013      	str	r3, [r2, #0]
 80037f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	f000 8550 	beq.w	800429a <_dtoa_r+0xb3a>
 80037fa:	488a      	ldr	r0, [pc, #552]	; (8003a24 <_dtoa_r+0x2c4>)
 80037fc:	6018      	str	r0, [r3, #0]
 80037fe:	1e43      	subs	r3, r0, #1
 8003800:	9304      	str	r3, [sp, #16]
 8003802:	e7e1      	b.n	80037c8 <_dtoa_r+0x68>
 8003804:	ab14      	add	r3, sp, #80	; 0x50
 8003806:	9301      	str	r3, [sp, #4]
 8003808:	ab15      	add	r3, sp, #84	; 0x54
 800380a:	9300      	str	r3, [sp, #0]
 800380c:	4648      	mov	r0, r9
 800380e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8003812:	f001 fec1 	bl	8005598 <__d2b>
 8003816:	f3cb 560a 	ubfx	r6, fp, #20, #11
 800381a:	9003      	str	r0, [sp, #12]
 800381c:	2e00      	cmp	r6, #0
 800381e:	d07b      	beq.n	8003918 <_dtoa_r+0x1b8>
 8003820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003822:	9713      	str	r7, [sp, #76]	; 0x4c
 8003824:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003828:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800382c:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8003830:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003834:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
 8003838:	4b7b      	ldr	r3, [pc, #492]	; (8003a28 <_dtoa_r+0x2c8>)
 800383a:	2200      	movs	r2, #0
 800383c:	f7fc fd34 	bl	80002a8 <__aeabi_dsub>
 8003840:	a36f      	add	r3, pc, #444	; (adr r3, 8003a00 <_dtoa_r+0x2a0>)
 8003842:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003846:	f7fc fee7 	bl	8000618 <__aeabi_dmul>
 800384a:	a36f      	add	r3, pc, #444	; (adr r3, 8003a08 <_dtoa_r+0x2a8>)
 800384c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003850:	f7fc fd2c 	bl	80002ac <__adddf3>
 8003854:	4604      	mov	r4, r0
 8003856:	4630      	mov	r0, r6
 8003858:	460d      	mov	r5, r1
 800385a:	f7fc fe73 	bl	8000544 <__aeabi_i2d>
 800385e:	a36c      	add	r3, pc, #432	; (adr r3, 8003a10 <_dtoa_r+0x2b0>)
 8003860:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003864:	f7fc fed8 	bl	8000618 <__aeabi_dmul>
 8003868:	4602      	mov	r2, r0
 800386a:	460b      	mov	r3, r1
 800386c:	4620      	mov	r0, r4
 800386e:	4629      	mov	r1, r5
 8003870:	f7fc fd1c 	bl	80002ac <__adddf3>
 8003874:	4604      	mov	r4, r0
 8003876:	460d      	mov	r5, r1
 8003878:	f7fd f97e 	bl	8000b78 <__aeabi_d2iz>
 800387c:	2200      	movs	r2, #0
 800387e:	4680      	mov	r8, r0
 8003880:	2300      	movs	r3, #0
 8003882:	4620      	mov	r0, r4
 8003884:	4629      	mov	r1, r5
 8003886:	f7fd f939 	bl	8000afc <__aeabi_dcmplt>
 800388a:	b148      	cbz	r0, 80038a0 <_dtoa_r+0x140>
 800388c:	4640      	mov	r0, r8
 800388e:	f7fc fe59 	bl	8000544 <__aeabi_i2d>
 8003892:	4622      	mov	r2, r4
 8003894:	462b      	mov	r3, r5
 8003896:	f7fd f927 	bl	8000ae8 <__aeabi_dcmpeq>
 800389a:	b908      	cbnz	r0, 80038a0 <_dtoa_r+0x140>
 800389c:	f108 38ff 	add.w	r8, r8, #4294967295
 80038a0:	f1b8 0f16 	cmp.w	r8, #22
 80038a4:	d855      	bhi.n	8003952 <_dtoa_r+0x1f2>
 80038a6:	4b61      	ldr	r3, [pc, #388]	; (8003a2c <_dtoa_r+0x2cc>)
 80038a8:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80038ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80038b4:	f7fd f922 	bl	8000afc <__aeabi_dcmplt>
 80038b8:	2800      	cmp	r0, #0
 80038ba:	d04c      	beq.n	8003956 <_dtoa_r+0x1f6>
 80038bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80038c0:	2300      	movs	r3, #0
 80038c2:	930f      	str	r3, [sp, #60]	; 0x3c
 80038c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80038c6:	1b9e      	subs	r6, r3, r6
 80038c8:	1e73      	subs	r3, r6, #1
 80038ca:	9309      	str	r3, [sp, #36]	; 0x24
 80038cc:	bf45      	ittet	mi
 80038ce:	f1c6 0301 	rsbmi	r3, r6, #1
 80038d2:	9306      	strmi	r3, [sp, #24]
 80038d4:	2300      	movpl	r3, #0
 80038d6:	2300      	movmi	r3, #0
 80038d8:	bf4c      	ite	mi
 80038da:	9309      	strmi	r3, [sp, #36]	; 0x24
 80038dc:	9306      	strpl	r3, [sp, #24]
 80038de:	f1b8 0f00 	cmp.w	r8, #0
 80038e2:	db3a      	blt.n	800395a <_dtoa_r+0x1fa>
 80038e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80038e6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80038ea:	4443      	add	r3, r8
 80038ec:	9309      	str	r3, [sp, #36]	; 0x24
 80038ee:	2300      	movs	r3, #0
 80038f0:	930a      	str	r3, [sp, #40]	; 0x28
 80038f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80038f4:	2b09      	cmp	r3, #9
 80038f6:	d86a      	bhi.n	80039ce <_dtoa_r+0x26e>
 80038f8:	2b05      	cmp	r3, #5
 80038fa:	bfc4      	itt	gt
 80038fc:	3b04      	subgt	r3, #4
 80038fe:	9320      	strgt	r3, [sp, #128]	; 0x80
 8003900:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003902:	f1a3 0302 	sub.w	r3, r3, #2
 8003906:	bfcc      	ite	gt
 8003908:	2400      	movgt	r4, #0
 800390a:	2401      	movle	r4, #1
 800390c:	2b03      	cmp	r3, #3
 800390e:	d869      	bhi.n	80039e4 <_dtoa_r+0x284>
 8003910:	e8df f003 	tbb	[pc, r3]
 8003914:	5b383a2d 	.word	0x5b383a2d
 8003918:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	; 0x50
 800391c:	441e      	add	r6, r3
 800391e:	f206 4332 	addw	r3, r6, #1074	; 0x432
 8003922:	2b20      	cmp	r3, #32
 8003924:	bfc3      	ittte	gt
 8003926:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800392a:	f206 4012 	addwgt	r0, r6, #1042	; 0x412
 800392e:	fa0b f303 	lslgt.w	r3, fp, r3
 8003932:	f1c3 0320 	rsble	r3, r3, #32
 8003936:	bfc6      	itte	gt
 8003938:	fa24 f000 	lsrgt.w	r0, r4, r0
 800393c:	4318      	orrgt	r0, r3
 800393e:	fa04 f003 	lslle.w	r0, r4, r3
 8003942:	f7fc fdef 	bl	8000524 <__aeabi_ui2d>
 8003946:	2301      	movs	r3, #1
 8003948:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800394c:	3e01      	subs	r6, #1
 800394e:	9313      	str	r3, [sp, #76]	; 0x4c
 8003950:	e772      	b.n	8003838 <_dtoa_r+0xd8>
 8003952:	2301      	movs	r3, #1
 8003954:	e7b5      	b.n	80038c2 <_dtoa_r+0x162>
 8003956:	900f      	str	r0, [sp, #60]	; 0x3c
 8003958:	e7b4      	b.n	80038c4 <_dtoa_r+0x164>
 800395a:	9b06      	ldr	r3, [sp, #24]
 800395c:	eba3 0308 	sub.w	r3, r3, r8
 8003960:	9306      	str	r3, [sp, #24]
 8003962:	f1c8 0300 	rsb	r3, r8, #0
 8003966:	930a      	str	r3, [sp, #40]	; 0x28
 8003968:	2300      	movs	r3, #0
 800396a:	930e      	str	r3, [sp, #56]	; 0x38
 800396c:	e7c1      	b.n	80038f2 <_dtoa_r+0x192>
 800396e:	2300      	movs	r3, #0
 8003970:	930b      	str	r3, [sp, #44]	; 0x2c
 8003972:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003974:	2b00      	cmp	r3, #0
 8003976:	dc38      	bgt.n	80039ea <_dtoa_r+0x28a>
 8003978:	2301      	movs	r3, #1
 800397a:	9308      	str	r3, [sp, #32]
 800397c:	9305      	str	r3, [sp, #20]
 800397e:	461a      	mov	r2, r3
 8003980:	9221      	str	r2, [sp, #132]	; 0x84
 8003982:	e00b      	b.n	800399c <_dtoa_r+0x23c>
 8003984:	2301      	movs	r3, #1
 8003986:	e7f3      	b.n	8003970 <_dtoa_r+0x210>
 8003988:	2300      	movs	r3, #0
 800398a:	930b      	str	r3, [sp, #44]	; 0x2c
 800398c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800398e:	4443      	add	r3, r8
 8003990:	9308      	str	r3, [sp, #32]
 8003992:	3301      	adds	r3, #1
 8003994:	2b01      	cmp	r3, #1
 8003996:	9305      	str	r3, [sp, #20]
 8003998:	bfb8      	it	lt
 800399a:	2301      	movlt	r3, #1
 800399c:	2200      	movs	r2, #0
 800399e:	f8c9 2044 	str.w	r2, [r9, #68]	; 0x44
 80039a2:	2204      	movs	r2, #4
 80039a4:	f102 0014 	add.w	r0, r2, #20
 80039a8:	4298      	cmp	r0, r3
 80039aa:	f8d9 1044 	ldr.w	r1, [r9, #68]	; 0x44
 80039ae:	d920      	bls.n	80039f2 <_dtoa_r+0x292>
 80039b0:	4648      	mov	r0, r9
 80039b2:	f001 fb1d 	bl	8004ff0 <_Balloc>
 80039b6:	9004      	str	r0, [sp, #16]
 80039b8:	2800      	cmp	r0, #0
 80039ba:	d13d      	bne.n	8003a38 <_dtoa_r+0x2d8>
 80039bc:	4b1c      	ldr	r3, [pc, #112]	; (8003a30 <_dtoa_r+0x2d0>)
 80039be:	4602      	mov	r2, r0
 80039c0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80039c4:	481b      	ldr	r0, [pc, #108]	; (8003a34 <_dtoa_r+0x2d4>)
 80039c6:	f002 fde3 	bl	8006590 <__assert_func>
 80039ca:	2301      	movs	r3, #1
 80039cc:	e7dd      	b.n	800398a <_dtoa_r+0x22a>
 80039ce:	2401      	movs	r4, #1
 80039d0:	2300      	movs	r3, #0
 80039d2:	9320      	str	r3, [sp, #128]	; 0x80
 80039d4:	940b      	str	r4, [sp, #44]	; 0x2c
 80039d6:	f04f 33ff 	mov.w	r3, #4294967295
 80039da:	9308      	str	r3, [sp, #32]
 80039dc:	9305      	str	r3, [sp, #20]
 80039de:	2200      	movs	r2, #0
 80039e0:	2312      	movs	r3, #18
 80039e2:	e7cd      	b.n	8003980 <_dtoa_r+0x220>
 80039e4:	2301      	movs	r3, #1
 80039e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80039e8:	e7f5      	b.n	80039d6 <_dtoa_r+0x276>
 80039ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80039ec:	9308      	str	r3, [sp, #32]
 80039ee:	9305      	str	r3, [sp, #20]
 80039f0:	e7d4      	b.n	800399c <_dtoa_r+0x23c>
 80039f2:	3101      	adds	r1, #1
 80039f4:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
 80039f8:	0052      	lsls	r2, r2, #1
 80039fa:	e7d3      	b.n	80039a4 <_dtoa_r+0x244>
 80039fc:	f3af 8000 	nop.w
 8003a00:	636f4361 	.word	0x636f4361
 8003a04:	3fd287a7 	.word	0x3fd287a7
 8003a08:	8b60c8b3 	.word	0x8b60c8b3
 8003a0c:	3fc68a28 	.word	0x3fc68a28
 8003a10:	509f79fb 	.word	0x509f79fb
 8003a14:	3fd34413 	.word	0x3fd34413
 8003a18:	7ff00000 	.word	0x7ff00000
 8003a1c:	08007118 	.word	0x08007118
 8003a20:	0800711c 	.word	0x0800711c
 8003a24:	080070f7 	.word	0x080070f7
 8003a28:	3ff80000 	.word	0x3ff80000
 8003a2c:	08007218 	.word	0x08007218
 8003a30:	08007125 	.word	0x08007125
 8003a34:	08007136 	.word	0x08007136
 8003a38:	9b04      	ldr	r3, [sp, #16]
 8003a3a:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
 8003a3e:	9b05      	ldr	r3, [sp, #20]
 8003a40:	2b0e      	cmp	r3, #14
 8003a42:	f200 80a1 	bhi.w	8003b88 <_dtoa_r+0x428>
 8003a46:	2c00      	cmp	r4, #0
 8003a48:	f000 809e 	beq.w	8003b88 <_dtoa_r+0x428>
 8003a4c:	f1b8 0f00 	cmp.w	r8, #0
 8003a50:	dd34      	ble.n	8003abc <_dtoa_r+0x35c>
 8003a52:	4a96      	ldr	r2, [pc, #600]	; (8003cac <_dtoa_r+0x54c>)
 8003a54:	f008 030f 	and.w	r3, r8, #15
 8003a58:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003a5c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003a60:	f418 7f80 	tst.w	r8, #256	; 0x100
 8003a64:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003a68:	ea4f 1528 	mov.w	r5, r8, asr #4
 8003a6c:	d016      	beq.n	8003a9c <_dtoa_r+0x33c>
 8003a6e:	4b90      	ldr	r3, [pc, #576]	; (8003cb0 <_dtoa_r+0x550>)
 8003a70:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003a74:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003a78:	f7fc fef8 	bl	800086c <__aeabi_ddiv>
 8003a7c:	f005 050f 	and.w	r5, r5, #15
 8003a80:	4682      	mov	sl, r0
 8003a82:	468b      	mov	fp, r1
 8003a84:	2603      	movs	r6, #3
 8003a86:	4c8a      	ldr	r4, [pc, #552]	; (8003cb0 <_dtoa_r+0x550>)
 8003a88:	b955      	cbnz	r5, 8003aa0 <_dtoa_r+0x340>
 8003a8a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003a8e:	4650      	mov	r0, sl
 8003a90:	4659      	mov	r1, fp
 8003a92:	f7fc feeb 	bl	800086c <__aeabi_ddiv>
 8003a96:	4682      	mov	sl, r0
 8003a98:	468b      	mov	fp, r1
 8003a9a:	e028      	b.n	8003aee <_dtoa_r+0x38e>
 8003a9c:	2602      	movs	r6, #2
 8003a9e:	e7f2      	b.n	8003a86 <_dtoa_r+0x326>
 8003aa0:	07e9      	lsls	r1, r5, #31
 8003aa2:	d508      	bpl.n	8003ab6 <_dtoa_r+0x356>
 8003aa4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003aa8:	e9d4 2300 	ldrd	r2, r3, [r4]
 8003aac:	f7fc fdb4 	bl	8000618 <__aeabi_dmul>
 8003ab0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003ab4:	3601      	adds	r6, #1
 8003ab6:	106d      	asrs	r5, r5, #1
 8003ab8:	3408      	adds	r4, #8
 8003aba:	e7e5      	b.n	8003a88 <_dtoa_r+0x328>
 8003abc:	f000 809e 	beq.w	8003bfc <_dtoa_r+0x49c>
 8003ac0:	f1c8 0400 	rsb	r4, r8, #0
 8003ac4:	4b79      	ldr	r3, [pc, #484]	; (8003cac <_dtoa_r+0x54c>)
 8003ac6:	4d7a      	ldr	r5, [pc, #488]	; (8003cb0 <_dtoa_r+0x550>)
 8003ac8:	f004 020f 	and.w	r2, r4, #15
 8003acc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003ad0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ad4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003ad8:	f7fc fd9e 	bl	8000618 <__aeabi_dmul>
 8003adc:	1124      	asrs	r4, r4, #4
 8003ade:	4682      	mov	sl, r0
 8003ae0:	468b      	mov	fp, r1
 8003ae2:	2300      	movs	r3, #0
 8003ae4:	2602      	movs	r6, #2
 8003ae6:	2c00      	cmp	r4, #0
 8003ae8:	d17d      	bne.n	8003be6 <_dtoa_r+0x486>
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d1d3      	bne.n	8003a96 <_dtoa_r+0x336>
 8003aee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	f000 8085 	beq.w	8003c00 <_dtoa_r+0x4a0>
 8003af6:	4b6f      	ldr	r3, [pc, #444]	; (8003cb4 <_dtoa_r+0x554>)
 8003af8:	2200      	movs	r2, #0
 8003afa:	4650      	mov	r0, sl
 8003afc:	4659      	mov	r1, fp
 8003afe:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
 8003b02:	f7fc fffb 	bl	8000afc <__aeabi_dcmplt>
 8003b06:	2800      	cmp	r0, #0
 8003b08:	d07a      	beq.n	8003c00 <_dtoa_r+0x4a0>
 8003b0a:	9b05      	ldr	r3, [sp, #20]
 8003b0c:	2b00      	cmp	r3, #0
 8003b0e:	d077      	beq.n	8003c00 <_dtoa_r+0x4a0>
 8003b10:	9b08      	ldr	r3, [sp, #32]
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	dd36      	ble.n	8003b84 <_dtoa_r+0x424>
 8003b16:	4650      	mov	r0, sl
 8003b18:	4659      	mov	r1, fp
 8003b1a:	4b67      	ldr	r3, [pc, #412]	; (8003cb8 <_dtoa_r+0x558>)
 8003b1c:	2200      	movs	r2, #0
 8003b1e:	f7fc fd7b 	bl	8000618 <__aeabi_dmul>
 8003b22:	9c08      	ldr	r4, [sp, #32]
 8003b24:	f108 35ff 	add.w	r5, r8, #4294967295
 8003b28:	4682      	mov	sl, r0
 8003b2a:	468b      	mov	fp, r1
 8003b2c:	3601      	adds	r6, #1
 8003b2e:	4630      	mov	r0, r6
 8003b30:	f7fc fd08 	bl	8000544 <__aeabi_i2d>
 8003b34:	4652      	mov	r2, sl
 8003b36:	465b      	mov	r3, fp
 8003b38:	f7fc fd6e 	bl	8000618 <__aeabi_dmul>
 8003b3c:	4b5f      	ldr	r3, [pc, #380]	; (8003cbc <_dtoa_r+0x55c>)
 8003b3e:	2200      	movs	r2, #0
 8003b40:	f7fc fbb4 	bl	80002ac <__adddf3>
 8003b44:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8003b48:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003b4c:	9611      	str	r6, [sp, #68]	; 0x44
 8003b4e:	2c00      	cmp	r4, #0
 8003b50:	d159      	bne.n	8003c06 <_dtoa_r+0x4a6>
 8003b52:	4b5b      	ldr	r3, [pc, #364]	; (8003cc0 <_dtoa_r+0x560>)
 8003b54:	2200      	movs	r2, #0
 8003b56:	4650      	mov	r0, sl
 8003b58:	4659      	mov	r1, fp
 8003b5a:	f7fc fba5 	bl	80002a8 <__aeabi_dsub>
 8003b5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003b60:	4633      	mov	r3, r6
 8003b62:	4682      	mov	sl, r0
 8003b64:	468b      	mov	fp, r1
 8003b66:	f7fc ffe7 	bl	8000b38 <__aeabi_dcmpgt>
 8003b6a:	2800      	cmp	r0, #0
 8003b6c:	f040 828b 	bne.w	8004086 <_dtoa_r+0x926>
 8003b70:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003b72:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8003b76:	4650      	mov	r0, sl
 8003b78:	4659      	mov	r1, fp
 8003b7a:	f7fc ffbf 	bl	8000afc <__aeabi_dcmplt>
 8003b7e:	2800      	cmp	r0, #0
 8003b80:	f040 827f 	bne.w	8004082 <_dtoa_r+0x922>
 8003b84:	e9dd ab0c 	ldrd	sl, fp, [sp, #48]	; 0x30
 8003b88:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	f2c0 814d 	blt.w	8003e2a <_dtoa_r+0x6ca>
 8003b90:	f1b8 0f0e 	cmp.w	r8, #14
 8003b94:	f300 8149 	bgt.w	8003e2a <_dtoa_r+0x6ca>
 8003b98:	4b44      	ldr	r3, [pc, #272]	; (8003cac <_dtoa_r+0x54c>)
 8003b9a:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8003b9e:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003ba2:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8003ba6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	f280 80d6 	bge.w	8003d5a <_dtoa_r+0x5fa>
 8003bae:	9b05      	ldr	r3, [sp, #20]
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	f300 80d2 	bgt.w	8003d5a <_dtoa_r+0x5fa>
 8003bb6:	f040 8263 	bne.w	8004080 <_dtoa_r+0x920>
 8003bba:	4b41      	ldr	r3, [pc, #260]	; (8003cc0 <_dtoa_r+0x560>)
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003bc2:	f7fc fd29 	bl	8000618 <__aeabi_dmul>
 8003bc6:	4652      	mov	r2, sl
 8003bc8:	465b      	mov	r3, fp
 8003bca:	f7fc ffab 	bl	8000b24 <__aeabi_dcmpge>
 8003bce:	9c05      	ldr	r4, [sp, #20]
 8003bd0:	4625      	mov	r5, r4
 8003bd2:	2800      	cmp	r0, #0
 8003bd4:	f040 823c 	bne.w	8004050 <_dtoa_r+0x8f0>
 8003bd8:	9e04      	ldr	r6, [sp, #16]
 8003bda:	2331      	movs	r3, #49	; 0x31
 8003bdc:	f806 3b01 	strb.w	r3, [r6], #1
 8003be0:	f108 0801 	add.w	r8, r8, #1
 8003be4:	e238      	b.n	8004058 <_dtoa_r+0x8f8>
 8003be6:	07e2      	lsls	r2, r4, #31
 8003be8:	d505      	bpl.n	8003bf6 <_dtoa_r+0x496>
 8003bea:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003bee:	f7fc fd13 	bl	8000618 <__aeabi_dmul>
 8003bf2:	3601      	adds	r6, #1
 8003bf4:	2301      	movs	r3, #1
 8003bf6:	1064      	asrs	r4, r4, #1
 8003bf8:	3508      	adds	r5, #8
 8003bfa:	e774      	b.n	8003ae6 <_dtoa_r+0x386>
 8003bfc:	2602      	movs	r6, #2
 8003bfe:	e776      	b.n	8003aee <_dtoa_r+0x38e>
 8003c00:	9c05      	ldr	r4, [sp, #20]
 8003c02:	4645      	mov	r5, r8
 8003c04:	e793      	b.n	8003b2e <_dtoa_r+0x3ce>
 8003c06:	9904      	ldr	r1, [sp, #16]
 8003c08:	4b28      	ldr	r3, [pc, #160]	; (8003cac <_dtoa_r+0x54c>)
 8003c0a:	4421      	add	r1, r4
 8003c0c:	9112      	str	r1, [sp, #72]	; 0x48
 8003c0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003c10:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003c14:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003c18:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003c1c:	2900      	cmp	r1, #0
 8003c1e:	d053      	beq.n	8003cc8 <_dtoa_r+0x568>
 8003c20:	4928      	ldr	r1, [pc, #160]	; (8003cc4 <_dtoa_r+0x564>)
 8003c22:	2000      	movs	r0, #0
 8003c24:	f7fc fe22 	bl	800086c <__aeabi_ddiv>
 8003c28:	4632      	mov	r2, r6
 8003c2a:	463b      	mov	r3, r7
 8003c2c:	f7fc fb3c 	bl	80002a8 <__aeabi_dsub>
 8003c30:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003c34:	9e04      	ldr	r6, [sp, #16]
 8003c36:	4659      	mov	r1, fp
 8003c38:	4650      	mov	r0, sl
 8003c3a:	f7fc ff9d 	bl	8000b78 <__aeabi_d2iz>
 8003c3e:	4604      	mov	r4, r0
 8003c40:	f7fc fc80 	bl	8000544 <__aeabi_i2d>
 8003c44:	4602      	mov	r2, r0
 8003c46:	460b      	mov	r3, r1
 8003c48:	4650      	mov	r0, sl
 8003c4a:	4659      	mov	r1, fp
 8003c4c:	f7fc fb2c 	bl	80002a8 <__aeabi_dsub>
 8003c50:	3430      	adds	r4, #48	; 0x30
 8003c52:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003c56:	f806 4b01 	strb.w	r4, [r6], #1
 8003c5a:	4682      	mov	sl, r0
 8003c5c:	468b      	mov	fp, r1
 8003c5e:	f7fc ff4d 	bl	8000afc <__aeabi_dcmplt>
 8003c62:	2800      	cmp	r0, #0
 8003c64:	d171      	bne.n	8003d4a <_dtoa_r+0x5ea>
 8003c66:	4652      	mov	r2, sl
 8003c68:	465b      	mov	r3, fp
 8003c6a:	4912      	ldr	r1, [pc, #72]	; (8003cb4 <_dtoa_r+0x554>)
 8003c6c:	2000      	movs	r0, #0
 8003c6e:	f7fc fb1b 	bl	80002a8 <__aeabi_dsub>
 8003c72:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003c76:	f7fc ff41 	bl	8000afc <__aeabi_dcmplt>
 8003c7a:	2800      	cmp	r0, #0
 8003c7c:	f040 80b7 	bne.w	8003dee <_dtoa_r+0x68e>
 8003c80:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003c82:	429e      	cmp	r6, r3
 8003c84:	f43f af7e 	beq.w	8003b84 <_dtoa_r+0x424>
 8003c88:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003c8c:	4b0a      	ldr	r3, [pc, #40]	; (8003cb8 <_dtoa_r+0x558>)
 8003c8e:	2200      	movs	r2, #0
 8003c90:	f7fc fcc2 	bl	8000618 <__aeabi_dmul>
 8003c94:	4b08      	ldr	r3, [pc, #32]	; (8003cb8 <_dtoa_r+0x558>)
 8003c96:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003c9a:	2200      	movs	r2, #0
 8003c9c:	4650      	mov	r0, sl
 8003c9e:	4659      	mov	r1, fp
 8003ca0:	f7fc fcba 	bl	8000618 <__aeabi_dmul>
 8003ca4:	4682      	mov	sl, r0
 8003ca6:	468b      	mov	fp, r1
 8003ca8:	e7c5      	b.n	8003c36 <_dtoa_r+0x4d6>
 8003caa:	bf00      	nop
 8003cac:	08007218 	.word	0x08007218
 8003cb0:	080071f0 	.word	0x080071f0
 8003cb4:	3ff00000 	.word	0x3ff00000
 8003cb8:	40240000 	.word	0x40240000
 8003cbc:	401c0000 	.word	0x401c0000
 8003cc0:	40140000 	.word	0x40140000
 8003cc4:	3fe00000 	.word	0x3fe00000
 8003cc8:	4630      	mov	r0, r6
 8003cca:	4639      	mov	r1, r7
 8003ccc:	f7fc fca4 	bl	8000618 <__aeabi_dmul>
 8003cd0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003cd4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8003cd6:	9e04      	ldr	r6, [sp, #16]
 8003cd8:	4659      	mov	r1, fp
 8003cda:	4650      	mov	r0, sl
 8003cdc:	f7fc ff4c 	bl	8000b78 <__aeabi_d2iz>
 8003ce0:	4604      	mov	r4, r0
 8003ce2:	f7fc fc2f 	bl	8000544 <__aeabi_i2d>
 8003ce6:	3430      	adds	r4, #48	; 0x30
 8003ce8:	4602      	mov	r2, r0
 8003cea:	460b      	mov	r3, r1
 8003cec:	4650      	mov	r0, sl
 8003cee:	4659      	mov	r1, fp
 8003cf0:	f7fc fada 	bl	80002a8 <__aeabi_dsub>
 8003cf4:	f806 4b01 	strb.w	r4, [r6], #1
 8003cf8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003cfa:	429e      	cmp	r6, r3
 8003cfc:	4682      	mov	sl, r0
 8003cfe:	468b      	mov	fp, r1
 8003d00:	f04f 0200 	mov.w	r2, #0
 8003d04:	d123      	bne.n	8003d4e <_dtoa_r+0x5ee>
 8003d06:	4bb0      	ldr	r3, [pc, #704]	; (8003fc8 <_dtoa_r+0x868>)
 8003d08:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003d0c:	f7fc face 	bl	80002ac <__adddf3>
 8003d10:	4602      	mov	r2, r0
 8003d12:	460b      	mov	r3, r1
 8003d14:	4650      	mov	r0, sl
 8003d16:	4659      	mov	r1, fp
 8003d18:	f7fc ff0e 	bl	8000b38 <__aeabi_dcmpgt>
 8003d1c:	2800      	cmp	r0, #0
 8003d1e:	d166      	bne.n	8003dee <_dtoa_r+0x68e>
 8003d20:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003d24:	49a8      	ldr	r1, [pc, #672]	; (8003fc8 <_dtoa_r+0x868>)
 8003d26:	2000      	movs	r0, #0
 8003d28:	f7fc fabe 	bl	80002a8 <__aeabi_dsub>
 8003d2c:	4602      	mov	r2, r0
 8003d2e:	460b      	mov	r3, r1
 8003d30:	4650      	mov	r0, sl
 8003d32:	4659      	mov	r1, fp
 8003d34:	f7fc fee2 	bl	8000afc <__aeabi_dcmplt>
 8003d38:	2800      	cmp	r0, #0
 8003d3a:	f43f af23 	beq.w	8003b84 <_dtoa_r+0x424>
 8003d3e:	463e      	mov	r6, r7
 8003d40:	3f01      	subs	r7, #1
 8003d42:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003d46:	2b30      	cmp	r3, #48	; 0x30
 8003d48:	d0f9      	beq.n	8003d3e <_dtoa_r+0x5de>
 8003d4a:	46a8      	mov	r8, r5
 8003d4c:	e03e      	b.n	8003dcc <_dtoa_r+0x66c>
 8003d4e:	4b9f      	ldr	r3, [pc, #636]	; (8003fcc <_dtoa_r+0x86c>)
 8003d50:	f7fc fc62 	bl	8000618 <__aeabi_dmul>
 8003d54:	4682      	mov	sl, r0
 8003d56:	468b      	mov	fp, r1
 8003d58:	e7be      	b.n	8003cd8 <_dtoa_r+0x578>
 8003d5a:	465d      	mov	r5, fp
 8003d5c:	9e04      	ldr	r6, [sp, #16]
 8003d5e:	f8df b26c 	ldr.w	fp, [pc, #620]	; 8003fcc <_dtoa_r+0x86c>
 8003d62:	4654      	mov	r4, sl
 8003d64:	f04f 0a00 	mov.w	sl, #0
 8003d68:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003d6c:	4620      	mov	r0, r4
 8003d6e:	4629      	mov	r1, r5
 8003d70:	f7fc fd7c 	bl	800086c <__aeabi_ddiv>
 8003d74:	f7fc ff00 	bl	8000b78 <__aeabi_d2iz>
 8003d78:	4607      	mov	r7, r0
 8003d7a:	f7fc fbe3 	bl	8000544 <__aeabi_i2d>
 8003d7e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003d82:	f7fc fc49 	bl	8000618 <__aeabi_dmul>
 8003d86:	4602      	mov	r2, r0
 8003d88:	460b      	mov	r3, r1
 8003d8a:	4620      	mov	r0, r4
 8003d8c:	4629      	mov	r1, r5
 8003d8e:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8003d92:	f7fc fa89 	bl	80002a8 <__aeabi_dsub>
 8003d96:	f806 4b01 	strb.w	r4, [r6], #1
 8003d9a:	9c04      	ldr	r4, [sp, #16]
 8003d9c:	9d05      	ldr	r5, [sp, #20]
 8003d9e:	1b34      	subs	r4, r6, r4
 8003da0:	42a5      	cmp	r5, r4
 8003da2:	4602      	mov	r2, r0
 8003da4:	460b      	mov	r3, r1
 8003da6:	d133      	bne.n	8003e10 <_dtoa_r+0x6b0>
 8003da8:	f7fc fa80 	bl	80002ac <__adddf3>
 8003dac:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003db0:	4604      	mov	r4, r0
 8003db2:	460d      	mov	r5, r1
 8003db4:	f7fc fec0 	bl	8000b38 <__aeabi_dcmpgt>
 8003db8:	b9c0      	cbnz	r0, 8003dec <_dtoa_r+0x68c>
 8003dba:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003dbe:	4620      	mov	r0, r4
 8003dc0:	4629      	mov	r1, r5
 8003dc2:	f7fc fe91 	bl	8000ae8 <__aeabi_dcmpeq>
 8003dc6:	b108      	cbz	r0, 8003dcc <_dtoa_r+0x66c>
 8003dc8:	07fb      	lsls	r3, r7, #31
 8003dca:	d40f      	bmi.n	8003dec <_dtoa_r+0x68c>
 8003dcc:	4648      	mov	r0, r9
 8003dce:	9903      	ldr	r1, [sp, #12]
 8003dd0:	f001 f933 	bl	800503a <_Bfree>
 8003dd4:	2300      	movs	r3, #0
 8003dd6:	7033      	strb	r3, [r6, #0]
 8003dd8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003dda:	f108 0001 	add.w	r0, r8, #1
 8003dde:	6018      	str	r0, [r3, #0]
 8003de0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	f43f acf0 	beq.w	80037c8 <_dtoa_r+0x68>
 8003de8:	601e      	str	r6, [r3, #0]
 8003dea:	e4ed      	b.n	80037c8 <_dtoa_r+0x68>
 8003dec:	4645      	mov	r5, r8
 8003dee:	4633      	mov	r3, r6
 8003df0:	461e      	mov	r6, r3
 8003df2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003df6:	2a39      	cmp	r2, #57	; 0x39
 8003df8:	d106      	bne.n	8003e08 <_dtoa_r+0x6a8>
 8003dfa:	9a04      	ldr	r2, [sp, #16]
 8003dfc:	429a      	cmp	r2, r3
 8003dfe:	d1f7      	bne.n	8003df0 <_dtoa_r+0x690>
 8003e00:	9904      	ldr	r1, [sp, #16]
 8003e02:	2230      	movs	r2, #48	; 0x30
 8003e04:	3501      	adds	r5, #1
 8003e06:	700a      	strb	r2, [r1, #0]
 8003e08:	781a      	ldrb	r2, [r3, #0]
 8003e0a:	3201      	adds	r2, #1
 8003e0c:	701a      	strb	r2, [r3, #0]
 8003e0e:	e79c      	b.n	8003d4a <_dtoa_r+0x5ea>
 8003e10:	4652      	mov	r2, sl
 8003e12:	465b      	mov	r3, fp
 8003e14:	f7fc fc00 	bl	8000618 <__aeabi_dmul>
 8003e18:	2200      	movs	r2, #0
 8003e1a:	2300      	movs	r3, #0
 8003e1c:	4604      	mov	r4, r0
 8003e1e:	460d      	mov	r5, r1
 8003e20:	f7fc fe62 	bl	8000ae8 <__aeabi_dcmpeq>
 8003e24:	2800      	cmp	r0, #0
 8003e26:	d09f      	beq.n	8003d68 <_dtoa_r+0x608>
 8003e28:	e7d0      	b.n	8003dcc <_dtoa_r+0x66c>
 8003e2a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003e2c:	2a00      	cmp	r2, #0
 8003e2e:	f000 80cf 	beq.w	8003fd0 <_dtoa_r+0x870>
 8003e32:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003e34:	2a01      	cmp	r2, #1
 8003e36:	f300 80ad 	bgt.w	8003f94 <_dtoa_r+0x834>
 8003e3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003e3c:	2a00      	cmp	r2, #0
 8003e3e:	f000 80a5 	beq.w	8003f8c <_dtoa_r+0x82c>
 8003e42:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003e46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003e48:	9e06      	ldr	r6, [sp, #24]
 8003e4a:	9a06      	ldr	r2, [sp, #24]
 8003e4c:	441a      	add	r2, r3
 8003e4e:	9206      	str	r2, [sp, #24]
 8003e50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003e52:	2101      	movs	r1, #1
 8003e54:	441a      	add	r2, r3
 8003e56:	4648      	mov	r0, r9
 8003e58:	9209      	str	r2, [sp, #36]	; 0x24
 8003e5a:	f001 f98b 	bl	8005174 <__i2b>
 8003e5e:	4605      	mov	r5, r0
 8003e60:	2e00      	cmp	r6, #0
 8003e62:	dd0c      	ble.n	8003e7e <_dtoa_r+0x71e>
 8003e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	dd09      	ble.n	8003e7e <_dtoa_r+0x71e>
 8003e6a:	42b3      	cmp	r3, r6
 8003e6c:	9a06      	ldr	r2, [sp, #24]
 8003e6e:	bfa8      	it	ge
 8003e70:	4633      	movge	r3, r6
 8003e72:	1ad2      	subs	r2, r2, r3
 8003e74:	9206      	str	r2, [sp, #24]
 8003e76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003e78:	1af6      	subs	r6, r6, r3
 8003e7a:	1ad3      	subs	r3, r2, r3
 8003e7c:	9309      	str	r3, [sp, #36]	; 0x24
 8003e7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003e80:	b1f3      	cbz	r3, 8003ec0 <_dtoa_r+0x760>
 8003e82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003e84:	2b00      	cmp	r3, #0
 8003e86:	f000 80a7 	beq.w	8003fd8 <_dtoa_r+0x878>
 8003e8a:	2c00      	cmp	r4, #0
 8003e8c:	dd10      	ble.n	8003eb0 <_dtoa_r+0x750>
 8003e8e:	4629      	mov	r1, r5
 8003e90:	4622      	mov	r2, r4
 8003e92:	4648      	mov	r0, r9
 8003e94:	f001 fa2c 	bl	80052f0 <__pow5mult>
 8003e98:	9a03      	ldr	r2, [sp, #12]
 8003e9a:	4601      	mov	r1, r0
 8003e9c:	4605      	mov	r5, r0
 8003e9e:	4648      	mov	r0, r9
 8003ea0:	f001 f97e 	bl	80051a0 <__multiply>
 8003ea4:	9903      	ldr	r1, [sp, #12]
 8003ea6:	4607      	mov	r7, r0
 8003ea8:	4648      	mov	r0, r9
 8003eaa:	f001 f8c6 	bl	800503a <_Bfree>
 8003eae:	9703      	str	r7, [sp, #12]
 8003eb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003eb2:	1b1a      	subs	r2, r3, r4
 8003eb4:	d004      	beq.n	8003ec0 <_dtoa_r+0x760>
 8003eb6:	9903      	ldr	r1, [sp, #12]
 8003eb8:	4648      	mov	r0, r9
 8003eba:	f001 fa19 	bl	80052f0 <__pow5mult>
 8003ebe:	9003      	str	r0, [sp, #12]
 8003ec0:	2101      	movs	r1, #1
 8003ec2:	4648      	mov	r0, r9
 8003ec4:	f001 f956 	bl	8005174 <__i2b>
 8003ec8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	4604      	mov	r4, r0
 8003ece:	f340 8085 	ble.w	8003fdc <_dtoa_r+0x87c>
 8003ed2:	461a      	mov	r2, r3
 8003ed4:	4601      	mov	r1, r0
 8003ed6:	4648      	mov	r0, r9
 8003ed8:	f001 fa0a 	bl	80052f0 <__pow5mult>
 8003edc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003ede:	2b01      	cmp	r3, #1
 8003ee0:	4604      	mov	r4, r0
 8003ee2:	dd7e      	ble.n	8003fe2 <_dtoa_r+0x882>
 8003ee4:	2700      	movs	r7, #0
 8003ee6:	6923      	ldr	r3, [r4, #16]
 8003ee8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003eec:	6918      	ldr	r0, [r3, #16]
 8003eee:	f001 f8f3 	bl	80050d8 <__hi0bits>
 8003ef2:	f1c0 0020 	rsb	r0, r0, #32
 8003ef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ef8:	4418      	add	r0, r3
 8003efa:	f010 001f 	ands.w	r0, r0, #31
 8003efe:	f000 808e 	beq.w	800401e <_dtoa_r+0x8be>
 8003f02:	f1c0 0320 	rsb	r3, r0, #32
 8003f06:	2b04      	cmp	r3, #4
 8003f08:	f340 8087 	ble.w	800401a <_dtoa_r+0x8ba>
 8003f0c:	f1c0 001c 	rsb	r0, r0, #28
 8003f10:	9b06      	ldr	r3, [sp, #24]
 8003f12:	4403      	add	r3, r0
 8003f14:	9306      	str	r3, [sp, #24]
 8003f16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f18:	4403      	add	r3, r0
 8003f1a:	4406      	add	r6, r0
 8003f1c:	9309      	str	r3, [sp, #36]	; 0x24
 8003f1e:	9b06      	ldr	r3, [sp, #24]
 8003f20:	2b00      	cmp	r3, #0
 8003f22:	dd05      	ble.n	8003f30 <_dtoa_r+0x7d0>
 8003f24:	9903      	ldr	r1, [sp, #12]
 8003f26:	461a      	mov	r2, r3
 8003f28:	4648      	mov	r0, r9
 8003f2a:	f001 fa21 	bl	8005370 <__lshift>
 8003f2e:	9003      	str	r0, [sp, #12]
 8003f30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	dd05      	ble.n	8003f42 <_dtoa_r+0x7e2>
 8003f36:	4621      	mov	r1, r4
 8003f38:	461a      	mov	r2, r3
 8003f3a:	4648      	mov	r0, r9
 8003f3c:	f001 fa18 	bl	8005370 <__lshift>
 8003f40:	4604      	mov	r4, r0
 8003f42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	d06c      	beq.n	8004022 <_dtoa_r+0x8c2>
 8003f48:	9803      	ldr	r0, [sp, #12]
 8003f4a:	4621      	mov	r1, r4
 8003f4c:	f001 fa80 	bl	8005450 <__mcmp>
 8003f50:	2800      	cmp	r0, #0
 8003f52:	da66      	bge.n	8004022 <_dtoa_r+0x8c2>
 8003f54:	2300      	movs	r3, #0
 8003f56:	9903      	ldr	r1, [sp, #12]
 8003f58:	220a      	movs	r2, #10
 8003f5a:	4648      	mov	r0, r9
 8003f5c:	f001 f876 	bl	800504c <__multadd>
 8003f60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003f62:	9003      	str	r0, [sp, #12]
 8003f64:	f108 38ff 	add.w	r8, r8, #4294967295
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	f000 81a0 	beq.w	80042ae <_dtoa_r+0xb4e>
 8003f6e:	2300      	movs	r3, #0
 8003f70:	4629      	mov	r1, r5
 8003f72:	220a      	movs	r2, #10
 8003f74:	4648      	mov	r0, r9
 8003f76:	f001 f869 	bl	800504c <__multadd>
 8003f7a:	9b08      	ldr	r3, [sp, #32]
 8003f7c:	2b00      	cmp	r3, #0
 8003f7e:	4605      	mov	r5, r0
 8003f80:	f300 808a 	bgt.w	8004098 <_dtoa_r+0x938>
 8003f84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003f86:	2b02      	cmp	r3, #2
 8003f88:	dc53      	bgt.n	8004032 <_dtoa_r+0x8d2>
 8003f8a:	e085      	b.n	8004098 <_dtoa_r+0x938>
 8003f8c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003f8e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003f92:	e758      	b.n	8003e46 <_dtoa_r+0x6e6>
 8003f94:	9b05      	ldr	r3, [sp, #20]
 8003f96:	1e5c      	subs	r4, r3, #1
 8003f98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f9a:	42a3      	cmp	r3, r4
 8003f9c:	bfbf      	itttt	lt
 8003f9e:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8003fa0:	940a      	strlt	r4, [sp, #40]	; 0x28
 8003fa2:	1ae2      	sublt	r2, r4, r3
 8003fa4:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8003fa6:	bfb6      	itet	lt
 8003fa8:	189b      	addlt	r3, r3, r2
 8003faa:	1b1c      	subge	r4, r3, r4
 8003fac:	930e      	strlt	r3, [sp, #56]	; 0x38
 8003fae:	9b05      	ldr	r3, [sp, #20]
 8003fb0:	bfb8      	it	lt
 8003fb2:	2400      	movlt	r4, #0
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	bfb7      	itett	lt
 8003fb8:	e9dd 2305 	ldrdlt	r2, r3, [sp, #20]
 8003fbc:	e9dd 3605 	ldrdge	r3, r6, [sp, #20]
 8003fc0:	1a9e      	sublt	r6, r3, r2
 8003fc2:	2300      	movlt	r3, #0
 8003fc4:	e741      	b.n	8003e4a <_dtoa_r+0x6ea>
 8003fc6:	bf00      	nop
 8003fc8:	3fe00000 	.word	0x3fe00000
 8003fcc:	40240000 	.word	0x40240000
 8003fd0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003fd2:	9e06      	ldr	r6, [sp, #24]
 8003fd4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8003fd6:	e743      	b.n	8003e60 <_dtoa_r+0x700>
 8003fd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003fda:	e76c      	b.n	8003eb6 <_dtoa_r+0x756>
 8003fdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003fde:	2b01      	cmp	r3, #1
 8003fe0:	dc17      	bgt.n	8004012 <_dtoa_r+0x8b2>
 8003fe2:	f1ba 0f00 	cmp.w	sl, #0
 8003fe6:	d114      	bne.n	8004012 <_dtoa_r+0x8b2>
 8003fe8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003fec:	b99b      	cbnz	r3, 8004016 <_dtoa_r+0x8b6>
 8003fee:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8003ff2:	0d3f      	lsrs	r7, r7, #20
 8003ff4:	053f      	lsls	r7, r7, #20
 8003ff6:	b137      	cbz	r7, 8004006 <_dtoa_r+0x8a6>
 8003ff8:	9b06      	ldr	r3, [sp, #24]
 8003ffa:	3301      	adds	r3, #1
 8003ffc:	9306      	str	r3, [sp, #24]
 8003ffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004000:	3301      	adds	r3, #1
 8004002:	9309      	str	r3, [sp, #36]	; 0x24
 8004004:	2701      	movs	r7, #1
 8004006:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004008:	2b00      	cmp	r3, #0
 800400a:	f47f af6c 	bne.w	8003ee6 <_dtoa_r+0x786>
 800400e:	2001      	movs	r0, #1
 8004010:	e771      	b.n	8003ef6 <_dtoa_r+0x796>
 8004012:	2700      	movs	r7, #0
 8004014:	e7f7      	b.n	8004006 <_dtoa_r+0x8a6>
 8004016:	4657      	mov	r7, sl
 8004018:	e7f5      	b.n	8004006 <_dtoa_r+0x8a6>
 800401a:	d080      	beq.n	8003f1e <_dtoa_r+0x7be>
 800401c:	4618      	mov	r0, r3
 800401e:	301c      	adds	r0, #28
 8004020:	e776      	b.n	8003f10 <_dtoa_r+0x7b0>
 8004022:	9b05      	ldr	r3, [sp, #20]
 8004024:	2b00      	cmp	r3, #0
 8004026:	dc31      	bgt.n	800408c <_dtoa_r+0x92c>
 8004028:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800402a:	2b02      	cmp	r3, #2
 800402c:	dd2e      	ble.n	800408c <_dtoa_r+0x92c>
 800402e:	9b05      	ldr	r3, [sp, #20]
 8004030:	9308      	str	r3, [sp, #32]
 8004032:	9b08      	ldr	r3, [sp, #32]
 8004034:	b963      	cbnz	r3, 8004050 <_dtoa_r+0x8f0>
 8004036:	4621      	mov	r1, r4
 8004038:	2205      	movs	r2, #5
 800403a:	4648      	mov	r0, r9
 800403c:	f001 f806 	bl	800504c <__multadd>
 8004040:	4601      	mov	r1, r0
 8004042:	4604      	mov	r4, r0
 8004044:	9803      	ldr	r0, [sp, #12]
 8004046:	f001 fa03 	bl	8005450 <__mcmp>
 800404a:	2800      	cmp	r0, #0
 800404c:	f73f adc4 	bgt.w	8003bd8 <_dtoa_r+0x478>
 8004050:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004052:	9e04      	ldr	r6, [sp, #16]
 8004054:	ea6f 0803 	mvn.w	r8, r3
 8004058:	2700      	movs	r7, #0
 800405a:	4621      	mov	r1, r4
 800405c:	4648      	mov	r0, r9
 800405e:	f000 ffec 	bl	800503a <_Bfree>
 8004062:	2d00      	cmp	r5, #0
 8004064:	f43f aeb2 	beq.w	8003dcc <_dtoa_r+0x66c>
 8004068:	b12f      	cbz	r7, 8004076 <_dtoa_r+0x916>
 800406a:	42af      	cmp	r7, r5
 800406c:	d003      	beq.n	8004076 <_dtoa_r+0x916>
 800406e:	4639      	mov	r1, r7
 8004070:	4648      	mov	r0, r9
 8004072:	f000 ffe2 	bl	800503a <_Bfree>
 8004076:	4629      	mov	r1, r5
 8004078:	4648      	mov	r0, r9
 800407a:	f000 ffde 	bl	800503a <_Bfree>
 800407e:	e6a5      	b.n	8003dcc <_dtoa_r+0x66c>
 8004080:	2400      	movs	r4, #0
 8004082:	4625      	mov	r5, r4
 8004084:	e7e4      	b.n	8004050 <_dtoa_r+0x8f0>
 8004086:	46a8      	mov	r8, r5
 8004088:	4625      	mov	r5, r4
 800408a:	e5a5      	b.n	8003bd8 <_dtoa_r+0x478>
 800408c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800408e:	2b00      	cmp	r3, #0
 8004090:	f000 80c4 	beq.w	800421c <_dtoa_r+0xabc>
 8004094:	9b05      	ldr	r3, [sp, #20]
 8004096:	9308      	str	r3, [sp, #32]
 8004098:	2e00      	cmp	r6, #0
 800409a:	dd05      	ble.n	80040a8 <_dtoa_r+0x948>
 800409c:	4629      	mov	r1, r5
 800409e:	4632      	mov	r2, r6
 80040a0:	4648      	mov	r0, r9
 80040a2:	f001 f965 	bl	8005370 <__lshift>
 80040a6:	4605      	mov	r5, r0
 80040a8:	2f00      	cmp	r7, #0
 80040aa:	d058      	beq.n	800415e <_dtoa_r+0x9fe>
 80040ac:	6869      	ldr	r1, [r5, #4]
 80040ae:	4648      	mov	r0, r9
 80040b0:	f000 ff9e 	bl	8004ff0 <_Balloc>
 80040b4:	4606      	mov	r6, r0
 80040b6:	b920      	cbnz	r0, 80040c2 <_dtoa_r+0x962>
 80040b8:	4b81      	ldr	r3, [pc, #516]	; (80042c0 <_dtoa_r+0xb60>)
 80040ba:	4602      	mov	r2, r0
 80040bc:	f240 21ea 	movw	r1, #746	; 0x2ea
 80040c0:	e480      	b.n	80039c4 <_dtoa_r+0x264>
 80040c2:	692a      	ldr	r2, [r5, #16]
 80040c4:	3202      	adds	r2, #2
 80040c6:	0092      	lsls	r2, r2, #2
 80040c8:	f105 010c 	add.w	r1, r5, #12
 80040cc:	300c      	adds	r0, #12
 80040ce:	f000 ff5b 	bl	8004f88 <memcpy>
 80040d2:	2201      	movs	r2, #1
 80040d4:	4631      	mov	r1, r6
 80040d6:	4648      	mov	r0, r9
 80040d8:	f001 f94a 	bl	8005370 <__lshift>
 80040dc:	9b04      	ldr	r3, [sp, #16]
 80040de:	9a04      	ldr	r2, [sp, #16]
 80040e0:	3301      	adds	r3, #1
 80040e2:	9305      	str	r3, [sp, #20]
 80040e4:	9b08      	ldr	r3, [sp, #32]
 80040e6:	4413      	add	r3, r2
 80040e8:	930a      	str	r3, [sp, #40]	; 0x28
 80040ea:	f00a 0301 	and.w	r3, sl, #1
 80040ee:	462f      	mov	r7, r5
 80040f0:	9309      	str	r3, [sp, #36]	; 0x24
 80040f2:	4605      	mov	r5, r0
 80040f4:	9b05      	ldr	r3, [sp, #20]
 80040f6:	9803      	ldr	r0, [sp, #12]
 80040f8:	4621      	mov	r1, r4
 80040fa:	f103 3bff 	add.w	fp, r3, #4294967295
 80040fe:	f7ff faa7 	bl	8003650 <quorem>
 8004102:	4639      	mov	r1, r7
 8004104:	9006      	str	r0, [sp, #24]
 8004106:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800410a:	9803      	ldr	r0, [sp, #12]
 800410c:	f001 f9a0 	bl	8005450 <__mcmp>
 8004110:	462a      	mov	r2, r5
 8004112:	9008      	str	r0, [sp, #32]
 8004114:	4621      	mov	r1, r4
 8004116:	4648      	mov	r0, r9
 8004118:	f001 f9b6 	bl	8005488 <__mdiff>
 800411c:	68c2      	ldr	r2, [r0, #12]
 800411e:	4606      	mov	r6, r0
 8004120:	b9fa      	cbnz	r2, 8004162 <_dtoa_r+0xa02>
 8004122:	4601      	mov	r1, r0
 8004124:	9803      	ldr	r0, [sp, #12]
 8004126:	f001 f993 	bl	8005450 <__mcmp>
 800412a:	4602      	mov	r2, r0
 800412c:	4631      	mov	r1, r6
 800412e:	4648      	mov	r0, r9
 8004130:	920b      	str	r2, [sp, #44]	; 0x2c
 8004132:	f000 ff82 	bl	800503a <_Bfree>
 8004136:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004138:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800413a:	9e05      	ldr	r6, [sp, #20]
 800413c:	ea43 0102 	orr.w	r1, r3, r2
 8004140:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004142:	430b      	orrs	r3, r1
 8004144:	d10f      	bne.n	8004166 <_dtoa_r+0xa06>
 8004146:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800414a:	d028      	beq.n	800419e <_dtoa_r+0xa3e>
 800414c:	9b08      	ldr	r3, [sp, #32]
 800414e:	2b00      	cmp	r3, #0
 8004150:	dd02      	ble.n	8004158 <_dtoa_r+0x9f8>
 8004152:	9b06      	ldr	r3, [sp, #24]
 8004154:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8004158:	f88b a000 	strb.w	sl, [fp]
 800415c:	e77d      	b.n	800405a <_dtoa_r+0x8fa>
 800415e:	4628      	mov	r0, r5
 8004160:	e7bc      	b.n	80040dc <_dtoa_r+0x97c>
 8004162:	2201      	movs	r2, #1
 8004164:	e7e2      	b.n	800412c <_dtoa_r+0x9cc>
 8004166:	9b08      	ldr	r3, [sp, #32]
 8004168:	2b00      	cmp	r3, #0
 800416a:	db04      	blt.n	8004176 <_dtoa_r+0xa16>
 800416c:	9920      	ldr	r1, [sp, #128]	; 0x80
 800416e:	430b      	orrs	r3, r1
 8004170:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004172:	430b      	orrs	r3, r1
 8004174:	d120      	bne.n	80041b8 <_dtoa_r+0xa58>
 8004176:	2a00      	cmp	r2, #0
 8004178:	ddee      	ble.n	8004158 <_dtoa_r+0x9f8>
 800417a:	9903      	ldr	r1, [sp, #12]
 800417c:	2201      	movs	r2, #1
 800417e:	4648      	mov	r0, r9
 8004180:	f001 f8f6 	bl	8005370 <__lshift>
 8004184:	4621      	mov	r1, r4
 8004186:	9003      	str	r0, [sp, #12]
 8004188:	f001 f962 	bl	8005450 <__mcmp>
 800418c:	2800      	cmp	r0, #0
 800418e:	dc03      	bgt.n	8004198 <_dtoa_r+0xa38>
 8004190:	d1e2      	bne.n	8004158 <_dtoa_r+0x9f8>
 8004192:	f01a 0f01 	tst.w	sl, #1
 8004196:	d0df      	beq.n	8004158 <_dtoa_r+0x9f8>
 8004198:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800419c:	d1d9      	bne.n	8004152 <_dtoa_r+0x9f2>
 800419e:	2339      	movs	r3, #57	; 0x39
 80041a0:	f88b 3000 	strb.w	r3, [fp]
 80041a4:	4633      	mov	r3, r6
 80041a6:	461e      	mov	r6, r3
 80041a8:	3b01      	subs	r3, #1
 80041aa:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80041ae:	2a39      	cmp	r2, #57	; 0x39
 80041b0:	d06b      	beq.n	800428a <_dtoa_r+0xb2a>
 80041b2:	3201      	adds	r2, #1
 80041b4:	701a      	strb	r2, [r3, #0]
 80041b6:	e750      	b.n	800405a <_dtoa_r+0x8fa>
 80041b8:	2a00      	cmp	r2, #0
 80041ba:	dd07      	ble.n	80041cc <_dtoa_r+0xa6c>
 80041bc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80041c0:	d0ed      	beq.n	800419e <_dtoa_r+0xa3e>
 80041c2:	f10a 0301 	add.w	r3, sl, #1
 80041c6:	f88b 3000 	strb.w	r3, [fp]
 80041ca:	e746      	b.n	800405a <_dtoa_r+0x8fa>
 80041cc:	9b05      	ldr	r3, [sp, #20]
 80041ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80041d0:	f803 ac01 	strb.w	sl, [r3, #-1]
 80041d4:	4293      	cmp	r3, r2
 80041d6:	d042      	beq.n	800425e <_dtoa_r+0xafe>
 80041d8:	9903      	ldr	r1, [sp, #12]
 80041da:	2300      	movs	r3, #0
 80041dc:	220a      	movs	r2, #10
 80041de:	4648      	mov	r0, r9
 80041e0:	f000 ff34 	bl	800504c <__multadd>
 80041e4:	42af      	cmp	r7, r5
 80041e6:	9003      	str	r0, [sp, #12]
 80041e8:	f04f 0300 	mov.w	r3, #0
 80041ec:	f04f 020a 	mov.w	r2, #10
 80041f0:	4639      	mov	r1, r7
 80041f2:	4648      	mov	r0, r9
 80041f4:	d107      	bne.n	8004206 <_dtoa_r+0xaa6>
 80041f6:	f000 ff29 	bl	800504c <__multadd>
 80041fa:	4607      	mov	r7, r0
 80041fc:	4605      	mov	r5, r0
 80041fe:	9b05      	ldr	r3, [sp, #20]
 8004200:	3301      	adds	r3, #1
 8004202:	9305      	str	r3, [sp, #20]
 8004204:	e776      	b.n	80040f4 <_dtoa_r+0x994>
 8004206:	f000 ff21 	bl	800504c <__multadd>
 800420a:	4629      	mov	r1, r5
 800420c:	4607      	mov	r7, r0
 800420e:	2300      	movs	r3, #0
 8004210:	220a      	movs	r2, #10
 8004212:	4648      	mov	r0, r9
 8004214:	f000 ff1a 	bl	800504c <__multadd>
 8004218:	4605      	mov	r5, r0
 800421a:	e7f0      	b.n	80041fe <_dtoa_r+0xa9e>
 800421c:	9b05      	ldr	r3, [sp, #20]
 800421e:	9308      	str	r3, [sp, #32]
 8004220:	9e04      	ldr	r6, [sp, #16]
 8004222:	9803      	ldr	r0, [sp, #12]
 8004224:	4621      	mov	r1, r4
 8004226:	f7ff fa13 	bl	8003650 <quorem>
 800422a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800422e:	9b04      	ldr	r3, [sp, #16]
 8004230:	f806 ab01 	strb.w	sl, [r6], #1
 8004234:	1af2      	subs	r2, r6, r3
 8004236:	9b08      	ldr	r3, [sp, #32]
 8004238:	4293      	cmp	r3, r2
 800423a:	dd07      	ble.n	800424c <_dtoa_r+0xaec>
 800423c:	9903      	ldr	r1, [sp, #12]
 800423e:	2300      	movs	r3, #0
 8004240:	220a      	movs	r2, #10
 8004242:	4648      	mov	r0, r9
 8004244:	f000 ff02 	bl	800504c <__multadd>
 8004248:	9003      	str	r0, [sp, #12]
 800424a:	e7ea      	b.n	8004222 <_dtoa_r+0xac2>
 800424c:	9b08      	ldr	r3, [sp, #32]
 800424e:	2b00      	cmp	r3, #0
 8004250:	bfc8      	it	gt
 8004252:	461e      	movgt	r6, r3
 8004254:	9b04      	ldr	r3, [sp, #16]
 8004256:	bfd8      	it	le
 8004258:	2601      	movle	r6, #1
 800425a:	441e      	add	r6, r3
 800425c:	2700      	movs	r7, #0
 800425e:	9903      	ldr	r1, [sp, #12]
 8004260:	2201      	movs	r2, #1
 8004262:	4648      	mov	r0, r9
 8004264:	f001 f884 	bl	8005370 <__lshift>
 8004268:	4621      	mov	r1, r4
 800426a:	9003      	str	r0, [sp, #12]
 800426c:	f001 f8f0 	bl	8005450 <__mcmp>
 8004270:	2800      	cmp	r0, #0
 8004272:	dc97      	bgt.n	80041a4 <_dtoa_r+0xa44>
 8004274:	d102      	bne.n	800427c <_dtoa_r+0xb1c>
 8004276:	f01a 0f01 	tst.w	sl, #1
 800427a:	d193      	bne.n	80041a4 <_dtoa_r+0xa44>
 800427c:	4633      	mov	r3, r6
 800427e:	461e      	mov	r6, r3
 8004280:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004284:	2a30      	cmp	r2, #48	; 0x30
 8004286:	d0fa      	beq.n	800427e <_dtoa_r+0xb1e>
 8004288:	e6e7      	b.n	800405a <_dtoa_r+0x8fa>
 800428a:	9a04      	ldr	r2, [sp, #16]
 800428c:	429a      	cmp	r2, r3
 800428e:	d18a      	bne.n	80041a6 <_dtoa_r+0xa46>
 8004290:	2331      	movs	r3, #49	; 0x31
 8004292:	f108 0801 	add.w	r8, r8, #1
 8004296:	7013      	strb	r3, [r2, #0]
 8004298:	e6df      	b.n	800405a <_dtoa_r+0x8fa>
 800429a:	4b0a      	ldr	r3, [pc, #40]	; (80042c4 <_dtoa_r+0xb64>)
 800429c:	f7ff bab0 	b.w	8003800 <_dtoa_r+0xa0>
 80042a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	f47f aa94 	bne.w	80037d0 <_dtoa_r+0x70>
 80042a8:	4b07      	ldr	r3, [pc, #28]	; (80042c8 <_dtoa_r+0xb68>)
 80042aa:	f7ff baa9 	b.w	8003800 <_dtoa_r+0xa0>
 80042ae:	9b08      	ldr	r3, [sp, #32]
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	dcb5      	bgt.n	8004220 <_dtoa_r+0xac0>
 80042b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80042b6:	2b02      	cmp	r3, #2
 80042b8:	f73f aebb 	bgt.w	8004032 <_dtoa_r+0x8d2>
 80042bc:	e7b0      	b.n	8004220 <_dtoa_r+0xac0>
 80042be:	bf00      	nop
 80042c0:	08007125 	.word	0x08007125
 80042c4:	080070f6 	.word	0x080070f6
 80042c8:	0800711c 	.word	0x0800711c

080042cc <__sflush_r>:
 80042cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042ce:	898b      	ldrh	r3, [r1, #12]
 80042d0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80042d4:	4605      	mov	r5, r0
 80042d6:	0718      	lsls	r0, r3, #28
 80042d8:	460c      	mov	r4, r1
 80042da:	d45e      	bmi.n	800439a <__sflush_r+0xce>
 80042dc:	684b      	ldr	r3, [r1, #4]
 80042de:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	818a      	strh	r2, [r1, #12]
 80042e6:	dc04      	bgt.n	80042f2 <__sflush_r+0x26>
 80042e8:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	dc01      	bgt.n	80042f2 <__sflush_r+0x26>
 80042ee:	2000      	movs	r0, #0
 80042f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80042f2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80042f4:	2e00      	cmp	r6, #0
 80042f6:	d0fa      	beq.n	80042ee <__sflush_r+0x22>
 80042f8:	2300      	movs	r3, #0
 80042fa:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80042fe:	682f      	ldr	r7, [r5, #0]
 8004300:	602b      	str	r3, [r5, #0]
 8004302:	d036      	beq.n	8004372 <__sflush_r+0xa6>
 8004304:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8004306:	89a3      	ldrh	r3, [r4, #12]
 8004308:	075a      	lsls	r2, r3, #29
 800430a:	d505      	bpl.n	8004318 <__sflush_r+0x4c>
 800430c:	6863      	ldr	r3, [r4, #4]
 800430e:	1ac0      	subs	r0, r0, r3
 8004310:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004312:	b10b      	cbz	r3, 8004318 <__sflush_r+0x4c>
 8004314:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004316:	1ac0      	subs	r0, r0, r3
 8004318:	2300      	movs	r3, #0
 800431a:	4602      	mov	r2, r0
 800431c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800431e:	69e1      	ldr	r1, [r4, #28]
 8004320:	4628      	mov	r0, r5
 8004322:	47b0      	blx	r6
 8004324:	1c43      	adds	r3, r0, #1
 8004326:	89a3      	ldrh	r3, [r4, #12]
 8004328:	d106      	bne.n	8004338 <__sflush_r+0x6c>
 800432a:	6829      	ldr	r1, [r5, #0]
 800432c:	291d      	cmp	r1, #29
 800432e:	d830      	bhi.n	8004392 <__sflush_r+0xc6>
 8004330:	4a2a      	ldr	r2, [pc, #168]	; (80043dc <__sflush_r+0x110>)
 8004332:	40ca      	lsrs	r2, r1
 8004334:	07d6      	lsls	r6, r2, #31
 8004336:	d52c      	bpl.n	8004392 <__sflush_r+0xc6>
 8004338:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800433c:	b21b      	sxth	r3, r3
 800433e:	2200      	movs	r2, #0
 8004340:	6062      	str	r2, [r4, #4]
 8004342:	04d9      	lsls	r1, r3, #19
 8004344:	6922      	ldr	r2, [r4, #16]
 8004346:	81a3      	strh	r3, [r4, #12]
 8004348:	6022      	str	r2, [r4, #0]
 800434a:	d504      	bpl.n	8004356 <__sflush_r+0x8a>
 800434c:	1c42      	adds	r2, r0, #1
 800434e:	d101      	bne.n	8004354 <__sflush_r+0x88>
 8004350:	682b      	ldr	r3, [r5, #0]
 8004352:	b903      	cbnz	r3, 8004356 <__sflush_r+0x8a>
 8004354:	6520      	str	r0, [r4, #80]	; 0x50
 8004356:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004358:	602f      	str	r7, [r5, #0]
 800435a:	2900      	cmp	r1, #0
 800435c:	d0c7      	beq.n	80042ee <__sflush_r+0x22>
 800435e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8004362:	4299      	cmp	r1, r3
 8004364:	d002      	beq.n	800436c <__sflush_r+0xa0>
 8004366:	4628      	mov	r0, r5
 8004368:	f000 f936 	bl	80045d8 <_free_r>
 800436c:	2000      	movs	r0, #0
 800436e:	6320      	str	r0, [r4, #48]	; 0x30
 8004370:	e7be      	b.n	80042f0 <__sflush_r+0x24>
 8004372:	69e1      	ldr	r1, [r4, #28]
 8004374:	2301      	movs	r3, #1
 8004376:	4628      	mov	r0, r5
 8004378:	47b0      	blx	r6
 800437a:	1c41      	adds	r1, r0, #1
 800437c:	d1c3      	bne.n	8004306 <__sflush_r+0x3a>
 800437e:	682b      	ldr	r3, [r5, #0]
 8004380:	2b00      	cmp	r3, #0
 8004382:	d0c0      	beq.n	8004306 <__sflush_r+0x3a>
 8004384:	2b1d      	cmp	r3, #29
 8004386:	d001      	beq.n	800438c <__sflush_r+0xc0>
 8004388:	2b16      	cmp	r3, #22
 800438a:	d101      	bne.n	8004390 <__sflush_r+0xc4>
 800438c:	602f      	str	r7, [r5, #0]
 800438e:	e7ae      	b.n	80042ee <__sflush_r+0x22>
 8004390:	89a3      	ldrh	r3, [r4, #12]
 8004392:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004396:	81a3      	strh	r3, [r4, #12]
 8004398:	e7aa      	b.n	80042f0 <__sflush_r+0x24>
 800439a:	690f      	ldr	r7, [r1, #16]
 800439c:	2f00      	cmp	r7, #0
 800439e:	d0a6      	beq.n	80042ee <__sflush_r+0x22>
 80043a0:	079b      	lsls	r3, r3, #30
 80043a2:	680e      	ldr	r6, [r1, #0]
 80043a4:	bf08      	it	eq
 80043a6:	694b      	ldreq	r3, [r1, #20]
 80043a8:	600f      	str	r7, [r1, #0]
 80043aa:	bf18      	it	ne
 80043ac:	2300      	movne	r3, #0
 80043ae:	1bf6      	subs	r6, r6, r7
 80043b0:	608b      	str	r3, [r1, #8]
 80043b2:	2e00      	cmp	r6, #0
 80043b4:	dd9b      	ble.n	80042ee <__sflush_r+0x22>
 80043b6:	69e1      	ldr	r1, [r4, #28]
 80043b8:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
 80043bc:	4633      	mov	r3, r6
 80043be:	463a      	mov	r2, r7
 80043c0:	4628      	mov	r0, r5
 80043c2:	47e0      	blx	ip
 80043c4:	2800      	cmp	r0, #0
 80043c6:	dc06      	bgt.n	80043d6 <__sflush_r+0x10a>
 80043c8:	89a3      	ldrh	r3, [r4, #12]
 80043ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80043ce:	81a3      	strh	r3, [r4, #12]
 80043d0:	f04f 30ff 	mov.w	r0, #4294967295
 80043d4:	e78c      	b.n	80042f0 <__sflush_r+0x24>
 80043d6:	4407      	add	r7, r0
 80043d8:	1a36      	subs	r6, r6, r0
 80043da:	e7ea      	b.n	80043b2 <__sflush_r+0xe6>
 80043dc:	20400001 	.word	0x20400001

080043e0 <_fflush_r>:
 80043e0:	b538      	push	{r3, r4, r5, lr}
 80043e2:	460c      	mov	r4, r1
 80043e4:	4605      	mov	r5, r0
 80043e6:	b118      	cbz	r0, 80043f0 <_fflush_r+0x10>
 80043e8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80043ea:	b90b      	cbnz	r3, 80043f0 <_fflush_r+0x10>
 80043ec:	f000 f864 	bl	80044b8 <__sinit>
 80043f0:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 80043f4:	b1b8      	cbz	r0, 8004426 <_fflush_r+0x46>
 80043f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80043f8:	07db      	lsls	r3, r3, #31
 80043fa:	d404      	bmi.n	8004406 <_fflush_r+0x26>
 80043fc:	0581      	lsls	r1, r0, #22
 80043fe:	d402      	bmi.n	8004406 <_fflush_r+0x26>
 8004400:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004402:	f000 fb17 	bl	8004a34 <__retarget_lock_acquire_recursive>
 8004406:	4628      	mov	r0, r5
 8004408:	4621      	mov	r1, r4
 800440a:	f7ff ff5f 	bl	80042cc <__sflush_r>
 800440e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004410:	07da      	lsls	r2, r3, #31
 8004412:	4605      	mov	r5, r0
 8004414:	d405      	bmi.n	8004422 <_fflush_r+0x42>
 8004416:	89a3      	ldrh	r3, [r4, #12]
 8004418:	059b      	lsls	r3, r3, #22
 800441a:	d402      	bmi.n	8004422 <_fflush_r+0x42>
 800441c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800441e:	f000 fb0a 	bl	8004a36 <__retarget_lock_release_recursive>
 8004422:	4628      	mov	r0, r5
 8004424:	bd38      	pop	{r3, r4, r5, pc}
 8004426:	4605      	mov	r5, r0
 8004428:	e7fb      	b.n	8004422 <_fflush_r+0x42>
	...

0800442c <std>:
 800442c:	2300      	movs	r3, #0
 800442e:	b510      	push	{r4, lr}
 8004430:	4604      	mov	r4, r0
 8004432:	e9c0 3300 	strd	r3, r3, [r0]
 8004436:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800443a:	6083      	str	r3, [r0, #8]
 800443c:	8181      	strh	r1, [r0, #12]
 800443e:	6643      	str	r3, [r0, #100]	; 0x64
 8004440:	81c2      	strh	r2, [r0, #14]
 8004442:	6183      	str	r3, [r0, #24]
 8004444:	4619      	mov	r1, r3
 8004446:	2208      	movs	r2, #8
 8004448:	305c      	adds	r0, #92	; 0x5c
 800444a:	f7fd fdd3 	bl	8001ff4 <memset>
 800444e:	4b07      	ldr	r3, [pc, #28]	; (800446c <std+0x40>)
 8004450:	6223      	str	r3, [r4, #32]
 8004452:	4b07      	ldr	r3, [pc, #28]	; (8004470 <std+0x44>)
 8004454:	6263      	str	r3, [r4, #36]	; 0x24
 8004456:	4b07      	ldr	r3, [pc, #28]	; (8004474 <std+0x48>)
 8004458:	62a3      	str	r3, [r4, #40]	; 0x28
 800445a:	4b07      	ldr	r3, [pc, #28]	; (8004478 <std+0x4c>)
 800445c:	61e4      	str	r4, [r4, #28]
 800445e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004460:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004464:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004468:	f000 bae2 	b.w	8004a30 <__retarget_lock_init_recursive>
 800446c:	08005a21 	.word	0x08005a21
 8004470:	08005a43 	.word	0x08005a43
 8004474:	08005a7b 	.word	0x08005a7b
 8004478:	08005a9f 	.word	0x08005a9f

0800447c <_cleanup_r>:
 800447c:	4901      	ldr	r1, [pc, #4]	; (8004484 <_cleanup_r+0x8>)
 800447e:	f000 bab3 	b.w	80049e8 <_fwalk_reent>
 8004482:	bf00      	nop
 8004484:	08006665 	.word	0x08006665

08004488 <__sfp_lock_acquire>:
 8004488:	4801      	ldr	r0, [pc, #4]	; (8004490 <__sfp_lock_acquire+0x8>)
 800448a:	f000 bad3 	b.w	8004a34 <__retarget_lock_acquire_recursive>
 800448e:	bf00      	nop
 8004490:	20001008 	.word	0x20001008

08004494 <__sfp_lock_release>:
 8004494:	4801      	ldr	r0, [pc, #4]	; (800449c <__sfp_lock_release+0x8>)
 8004496:	f000 bace 	b.w	8004a36 <__retarget_lock_release_recursive>
 800449a:	bf00      	nop
 800449c:	20001008 	.word	0x20001008

080044a0 <__sinit_lock_acquire>:
 80044a0:	4801      	ldr	r0, [pc, #4]	; (80044a8 <__sinit_lock_acquire+0x8>)
 80044a2:	f000 bac7 	b.w	8004a34 <__retarget_lock_acquire_recursive>
 80044a6:	bf00      	nop
 80044a8:	20001009 	.word	0x20001009

080044ac <__sinit_lock_release>:
 80044ac:	4801      	ldr	r0, [pc, #4]	; (80044b4 <__sinit_lock_release+0x8>)
 80044ae:	f000 bac2 	b.w	8004a36 <__retarget_lock_release_recursive>
 80044b2:	bf00      	nop
 80044b4:	20001009 	.word	0x20001009

080044b8 <__sinit>:
 80044b8:	b510      	push	{r4, lr}
 80044ba:	4604      	mov	r4, r0
 80044bc:	f7ff fff0 	bl	80044a0 <__sinit_lock_acquire>
 80044c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80044c2:	b11a      	cbz	r2, 80044cc <__sinit+0x14>
 80044c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80044c8:	f7ff bff0 	b.w	80044ac <__sinit_lock_release>
 80044cc:	4b0d      	ldr	r3, [pc, #52]	; (8004504 <__sinit+0x4c>)
 80044ce:	63e3      	str	r3, [r4, #60]	; 0x3c
 80044d0:	2303      	movs	r3, #3
 80044d2:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 80044d6:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 80044da:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80044de:	6860      	ldr	r0, [r4, #4]
 80044e0:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 80044e4:	2104      	movs	r1, #4
 80044e6:	f7ff ffa1 	bl	800442c <std>
 80044ea:	68a0      	ldr	r0, [r4, #8]
 80044ec:	2201      	movs	r2, #1
 80044ee:	2109      	movs	r1, #9
 80044f0:	f7ff ff9c 	bl	800442c <std>
 80044f4:	68e0      	ldr	r0, [r4, #12]
 80044f6:	2202      	movs	r2, #2
 80044f8:	2112      	movs	r1, #18
 80044fa:	f7ff ff97 	bl	800442c <std>
 80044fe:	2301      	movs	r3, #1
 8004500:	63a3      	str	r3, [r4, #56]	; 0x38
 8004502:	e7df      	b.n	80044c4 <__sinit+0xc>
 8004504:	0800447d 	.word	0x0800447d

08004508 <__libc_fini_array>:
 8004508:	b538      	push	{r3, r4, r5, lr}
 800450a:	4d07      	ldr	r5, [pc, #28]	; (8004528 <__libc_fini_array+0x20>)
 800450c:	4c07      	ldr	r4, [pc, #28]	; (800452c <__libc_fini_array+0x24>)
 800450e:	1b64      	subs	r4, r4, r5
 8004510:	10a4      	asrs	r4, r4, #2
 8004512:	b91c      	cbnz	r4, 800451c <__libc_fini_array+0x14>
 8004514:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004518:	f002 bd8e 	b.w	8007038 <_fini>
 800451c:	3c01      	subs	r4, #1
 800451e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8004522:	4798      	blx	r3
 8004524:	e7f5      	b.n	8004512 <__libc_fini_array+0xa>
 8004526:	bf00      	nop
 8004528:	08007480 	.word	0x08007480
 800452c:	08007484 	.word	0x08007484

08004530 <_malloc_trim_r>:
 8004530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004534:	4606      	mov	r6, r0
 8004536:	2008      	movs	r0, #8
 8004538:	460c      	mov	r4, r1
 800453a:	f001 fac7 	bl	8005acc <sysconf>
 800453e:	4f23      	ldr	r7, [pc, #140]	; (80045cc <_malloc_trim_r+0x9c>)
 8004540:	4680      	mov	r8, r0
 8004542:	4630      	mov	r0, r6
 8004544:	f000 fd48 	bl	8004fd8 <__malloc_lock>
 8004548:	68bb      	ldr	r3, [r7, #8]
 800454a:	685d      	ldr	r5, [r3, #4]
 800454c:	f025 0503 	bic.w	r5, r5, #3
 8004550:	1b2c      	subs	r4, r5, r4
 8004552:	3c11      	subs	r4, #17
 8004554:	4444      	add	r4, r8
 8004556:	fbb4 f4f8 	udiv	r4, r4, r8
 800455a:	3c01      	subs	r4, #1
 800455c:	fb08 f404 	mul.w	r4, r8, r4
 8004560:	45a0      	cmp	r8, r4
 8004562:	dd05      	ble.n	8004570 <_malloc_trim_r+0x40>
 8004564:	4630      	mov	r0, r6
 8004566:	f000 fd3d 	bl	8004fe4 <__malloc_unlock>
 800456a:	2000      	movs	r0, #0
 800456c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004570:	2100      	movs	r1, #0
 8004572:	4630      	mov	r0, r6
 8004574:	f001 fa44 	bl	8005a00 <_sbrk_r>
 8004578:	68bb      	ldr	r3, [r7, #8]
 800457a:	442b      	add	r3, r5
 800457c:	4298      	cmp	r0, r3
 800457e:	d1f1      	bne.n	8004564 <_malloc_trim_r+0x34>
 8004580:	4261      	negs	r1, r4
 8004582:	4630      	mov	r0, r6
 8004584:	f001 fa3c 	bl	8005a00 <_sbrk_r>
 8004588:	3001      	adds	r0, #1
 800458a:	d110      	bne.n	80045ae <_malloc_trim_r+0x7e>
 800458c:	2100      	movs	r1, #0
 800458e:	4630      	mov	r0, r6
 8004590:	f001 fa36 	bl	8005a00 <_sbrk_r>
 8004594:	68ba      	ldr	r2, [r7, #8]
 8004596:	1a83      	subs	r3, r0, r2
 8004598:	2b0f      	cmp	r3, #15
 800459a:	dde3      	ble.n	8004564 <_malloc_trim_r+0x34>
 800459c:	490c      	ldr	r1, [pc, #48]	; (80045d0 <_malloc_trim_r+0xa0>)
 800459e:	6809      	ldr	r1, [r1, #0]
 80045a0:	1a40      	subs	r0, r0, r1
 80045a2:	490c      	ldr	r1, [pc, #48]	; (80045d4 <_malloc_trim_r+0xa4>)
 80045a4:	f043 0301 	orr.w	r3, r3, #1
 80045a8:	6008      	str	r0, [r1, #0]
 80045aa:	6053      	str	r3, [r2, #4]
 80045ac:	e7da      	b.n	8004564 <_malloc_trim_r+0x34>
 80045ae:	68bb      	ldr	r3, [r7, #8]
 80045b0:	4a08      	ldr	r2, [pc, #32]	; (80045d4 <_malloc_trim_r+0xa4>)
 80045b2:	1b2d      	subs	r5, r5, r4
 80045b4:	f045 0501 	orr.w	r5, r5, #1
 80045b8:	605d      	str	r5, [r3, #4]
 80045ba:	6813      	ldr	r3, [r2, #0]
 80045bc:	4630      	mov	r0, r6
 80045be:	1b1b      	subs	r3, r3, r4
 80045c0:	6013      	str	r3, [r2, #0]
 80045c2:	f000 fd0f 	bl	8004fe4 <__malloc_unlock>
 80045c6:	2001      	movs	r0, #1
 80045c8:	e7d0      	b.n	800456c <_malloc_trim_r+0x3c>
 80045ca:	bf00      	nop
 80045cc:	2000063c 	.word	0x2000063c
 80045d0:	20000a44 	.word	0x20000a44
 80045d4:	2000100c 	.word	0x2000100c

080045d8 <_free_r>:
 80045d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045da:	4605      	mov	r5, r0
 80045dc:	460f      	mov	r7, r1
 80045de:	2900      	cmp	r1, #0
 80045e0:	f000 80b1 	beq.w	8004746 <_free_r+0x16e>
 80045e4:	f000 fcf8 	bl	8004fd8 <__malloc_lock>
 80045e8:	f857 2c04 	ldr.w	r2, [r7, #-4]
 80045ec:	4856      	ldr	r0, [pc, #344]	; (8004748 <_free_r+0x170>)
 80045ee:	f022 0401 	bic.w	r4, r2, #1
 80045f2:	f1a7 0308 	sub.w	r3, r7, #8
 80045f6:	eb03 0c04 	add.w	ip, r3, r4
 80045fa:	6881      	ldr	r1, [r0, #8]
 80045fc:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8004600:	4561      	cmp	r1, ip
 8004602:	f026 0603 	bic.w	r6, r6, #3
 8004606:	f002 0201 	and.w	r2, r2, #1
 800460a:	d11b      	bne.n	8004644 <_free_r+0x6c>
 800460c:	4434      	add	r4, r6
 800460e:	b93a      	cbnz	r2, 8004620 <_free_r+0x48>
 8004610:	f857 2c08 	ldr.w	r2, [r7, #-8]
 8004614:	1a9b      	subs	r3, r3, r2
 8004616:	4414      	add	r4, r2
 8004618:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 800461c:	60ca      	str	r2, [r1, #12]
 800461e:	6091      	str	r1, [r2, #8]
 8004620:	f044 0201 	orr.w	r2, r4, #1
 8004624:	605a      	str	r2, [r3, #4]
 8004626:	6083      	str	r3, [r0, #8]
 8004628:	4b48      	ldr	r3, [pc, #288]	; (800474c <_free_r+0x174>)
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	42a3      	cmp	r3, r4
 800462e:	d804      	bhi.n	800463a <_free_r+0x62>
 8004630:	4b47      	ldr	r3, [pc, #284]	; (8004750 <_free_r+0x178>)
 8004632:	4628      	mov	r0, r5
 8004634:	6819      	ldr	r1, [r3, #0]
 8004636:	f7ff ff7b 	bl	8004530 <_malloc_trim_r>
 800463a:	4628      	mov	r0, r5
 800463c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004640:	f000 bcd0 	b.w	8004fe4 <__malloc_unlock>
 8004644:	f8cc 6004 	str.w	r6, [ip, #4]
 8004648:	2a00      	cmp	r2, #0
 800464a:	d138      	bne.n	80046be <_free_r+0xe6>
 800464c:	f857 1c08 	ldr.w	r1, [r7, #-8]
 8004650:	1a5b      	subs	r3, r3, r1
 8004652:	440c      	add	r4, r1
 8004654:	6899      	ldr	r1, [r3, #8]
 8004656:	f100 0708 	add.w	r7, r0, #8
 800465a:	42b9      	cmp	r1, r7
 800465c:	d031      	beq.n	80046c2 <_free_r+0xea>
 800465e:	68df      	ldr	r7, [r3, #12]
 8004660:	60cf      	str	r7, [r1, #12]
 8004662:	60b9      	str	r1, [r7, #8]
 8004664:	eb0c 0106 	add.w	r1, ip, r6
 8004668:	6849      	ldr	r1, [r1, #4]
 800466a:	07c9      	lsls	r1, r1, #31
 800466c:	d40b      	bmi.n	8004686 <_free_r+0xae>
 800466e:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8004672:	4434      	add	r4, r6
 8004674:	bb3a      	cbnz	r2, 80046c6 <_free_r+0xee>
 8004676:	4e37      	ldr	r6, [pc, #220]	; (8004754 <_free_r+0x17c>)
 8004678:	42b1      	cmp	r1, r6
 800467a:	d124      	bne.n	80046c6 <_free_r+0xee>
 800467c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004680:	e9c3 1102 	strd	r1, r1, [r3, #8]
 8004684:	2201      	movs	r2, #1
 8004686:	f044 0101 	orr.w	r1, r4, #1
 800468a:	6059      	str	r1, [r3, #4]
 800468c:	511c      	str	r4, [r3, r4]
 800468e:	2a00      	cmp	r2, #0
 8004690:	d1d3      	bne.n	800463a <_free_r+0x62>
 8004692:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 8004696:	d21b      	bcs.n	80046d0 <_free_r+0xf8>
 8004698:	0961      	lsrs	r1, r4, #5
 800469a:	08e2      	lsrs	r2, r4, #3
 800469c:	2401      	movs	r4, #1
 800469e:	408c      	lsls	r4, r1
 80046a0:	6841      	ldr	r1, [r0, #4]
 80046a2:	3201      	adds	r2, #1
 80046a4:	430c      	orrs	r4, r1
 80046a6:	6044      	str	r4, [r0, #4]
 80046a8:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
 80046ac:	f850 4032 	ldr.w	r4, [r0, r2, lsl #3]
 80046b0:	3908      	subs	r1, #8
 80046b2:	e9c3 4102 	strd	r4, r1, [r3, #8]
 80046b6:	f840 3032 	str.w	r3, [r0, r2, lsl #3]
 80046ba:	60e3      	str	r3, [r4, #12]
 80046bc:	e7bd      	b.n	800463a <_free_r+0x62>
 80046be:	2200      	movs	r2, #0
 80046c0:	e7d0      	b.n	8004664 <_free_r+0x8c>
 80046c2:	2201      	movs	r2, #1
 80046c4:	e7ce      	b.n	8004664 <_free_r+0x8c>
 80046c6:	f8dc 600c 	ldr.w	r6, [ip, #12]
 80046ca:	60ce      	str	r6, [r1, #12]
 80046cc:	60b1      	str	r1, [r6, #8]
 80046ce:	e7da      	b.n	8004686 <_free_r+0xae>
 80046d0:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 80046d4:	ea4f 2254 	mov.w	r2, r4, lsr #9
 80046d8:	d214      	bcs.n	8004704 <_free_r+0x12c>
 80046da:	09a2      	lsrs	r2, r4, #6
 80046dc:	3238      	adds	r2, #56	; 0x38
 80046de:	1c51      	adds	r1, r2, #1
 80046e0:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 80046e4:	f850 1031 	ldr.w	r1, [r0, r1, lsl #3]
 80046e8:	428e      	cmp	r6, r1
 80046ea:	d125      	bne.n	8004738 <_free_r+0x160>
 80046ec:	2401      	movs	r4, #1
 80046ee:	1092      	asrs	r2, r2, #2
 80046f0:	fa04 f202 	lsl.w	r2, r4, r2
 80046f4:	6844      	ldr	r4, [r0, #4]
 80046f6:	4322      	orrs	r2, r4
 80046f8:	6042      	str	r2, [r0, #4]
 80046fa:	e9c3 1602 	strd	r1, r6, [r3, #8]
 80046fe:	60b3      	str	r3, [r6, #8]
 8004700:	60cb      	str	r3, [r1, #12]
 8004702:	e79a      	b.n	800463a <_free_r+0x62>
 8004704:	2a14      	cmp	r2, #20
 8004706:	d801      	bhi.n	800470c <_free_r+0x134>
 8004708:	325b      	adds	r2, #91	; 0x5b
 800470a:	e7e8      	b.n	80046de <_free_r+0x106>
 800470c:	2a54      	cmp	r2, #84	; 0x54
 800470e:	d802      	bhi.n	8004716 <_free_r+0x13e>
 8004710:	0b22      	lsrs	r2, r4, #12
 8004712:	326e      	adds	r2, #110	; 0x6e
 8004714:	e7e3      	b.n	80046de <_free_r+0x106>
 8004716:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800471a:	d802      	bhi.n	8004722 <_free_r+0x14a>
 800471c:	0be2      	lsrs	r2, r4, #15
 800471e:	3277      	adds	r2, #119	; 0x77
 8004720:	e7dd      	b.n	80046de <_free_r+0x106>
 8004722:	f240 5154 	movw	r1, #1364	; 0x554
 8004726:	428a      	cmp	r2, r1
 8004728:	bf9a      	itte	ls
 800472a:	0ca2      	lsrls	r2, r4, #18
 800472c:	327c      	addls	r2, #124	; 0x7c
 800472e:	227e      	movhi	r2, #126	; 0x7e
 8004730:	e7d5      	b.n	80046de <_free_r+0x106>
 8004732:	6889      	ldr	r1, [r1, #8]
 8004734:	428e      	cmp	r6, r1
 8004736:	d004      	beq.n	8004742 <_free_r+0x16a>
 8004738:	684a      	ldr	r2, [r1, #4]
 800473a:	f022 0203 	bic.w	r2, r2, #3
 800473e:	42a2      	cmp	r2, r4
 8004740:	d8f7      	bhi.n	8004732 <_free_r+0x15a>
 8004742:	68ce      	ldr	r6, [r1, #12]
 8004744:	e7d9      	b.n	80046fa <_free_r+0x122>
 8004746:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004748:	2000063c 	.word	0x2000063c
 800474c:	20000a48 	.word	0x20000a48
 8004750:	2000103c 	.word	0x2000103c
 8004754:	20000644 	.word	0x20000644

08004758 <__sfvwrite_r>:
 8004758:	6893      	ldr	r3, [r2, #8]
 800475a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800475e:	4606      	mov	r6, r0
 8004760:	460c      	mov	r4, r1
 8004762:	4690      	mov	r8, r2
 8004764:	b91b      	cbnz	r3, 800476e <__sfvwrite_r+0x16>
 8004766:	2000      	movs	r0, #0
 8004768:	b003      	add	sp, #12
 800476a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800476e:	898b      	ldrh	r3, [r1, #12]
 8004770:	0718      	lsls	r0, r3, #28
 8004772:	d550      	bpl.n	8004816 <__sfvwrite_r+0xbe>
 8004774:	690b      	ldr	r3, [r1, #16]
 8004776:	2b00      	cmp	r3, #0
 8004778:	d04d      	beq.n	8004816 <__sfvwrite_r+0xbe>
 800477a:	89a3      	ldrh	r3, [r4, #12]
 800477c:	f8d8 7000 	ldr.w	r7, [r8]
 8004780:	f013 0902 	ands.w	r9, r3, #2
 8004784:	d16b      	bne.n	800485e <__sfvwrite_r+0x106>
 8004786:	f013 0301 	ands.w	r3, r3, #1
 800478a:	f000 809b 	beq.w	80048c4 <__sfvwrite_r+0x16c>
 800478e:	4648      	mov	r0, r9
 8004790:	46ca      	mov	sl, r9
 8004792:	46cb      	mov	fp, r9
 8004794:	f1bb 0f00 	cmp.w	fp, #0
 8004798:	f000 8102 	beq.w	80049a0 <__sfvwrite_r+0x248>
 800479c:	b950      	cbnz	r0, 80047b4 <__sfvwrite_r+0x5c>
 800479e:	465a      	mov	r2, fp
 80047a0:	210a      	movs	r1, #10
 80047a2:	4650      	mov	r0, sl
 80047a4:	f7fb fd2c 	bl	8000200 <memchr>
 80047a8:	2800      	cmp	r0, #0
 80047aa:	f000 80fe 	beq.w	80049aa <__sfvwrite_r+0x252>
 80047ae:	3001      	adds	r0, #1
 80047b0:	eba0 090a 	sub.w	r9, r0, sl
 80047b4:	6820      	ldr	r0, [r4, #0]
 80047b6:	6921      	ldr	r1, [r4, #16]
 80047b8:	6963      	ldr	r3, [r4, #20]
 80047ba:	45d9      	cmp	r9, fp
 80047bc:	464a      	mov	r2, r9
 80047be:	bf28      	it	cs
 80047c0:	465a      	movcs	r2, fp
 80047c2:	4288      	cmp	r0, r1
 80047c4:	f240 80f4 	bls.w	80049b0 <__sfvwrite_r+0x258>
 80047c8:	68a5      	ldr	r5, [r4, #8]
 80047ca:	441d      	add	r5, r3
 80047cc:	42aa      	cmp	r2, r5
 80047ce:	f340 80ef 	ble.w	80049b0 <__sfvwrite_r+0x258>
 80047d2:	4651      	mov	r1, sl
 80047d4:	462a      	mov	r2, r5
 80047d6:	f000 fbe5 	bl	8004fa4 <memmove>
 80047da:	6823      	ldr	r3, [r4, #0]
 80047dc:	442b      	add	r3, r5
 80047de:	6023      	str	r3, [r4, #0]
 80047e0:	4621      	mov	r1, r4
 80047e2:	4630      	mov	r0, r6
 80047e4:	f7ff fdfc 	bl	80043e0 <_fflush_r>
 80047e8:	2800      	cmp	r0, #0
 80047ea:	d166      	bne.n	80048ba <__sfvwrite_r+0x162>
 80047ec:	ebb9 0905 	subs.w	r9, r9, r5
 80047f0:	f040 80f6 	bne.w	80049e0 <__sfvwrite_r+0x288>
 80047f4:	4621      	mov	r1, r4
 80047f6:	4630      	mov	r0, r6
 80047f8:	f7ff fdf2 	bl	80043e0 <_fflush_r>
 80047fc:	2800      	cmp	r0, #0
 80047fe:	d15c      	bne.n	80048ba <__sfvwrite_r+0x162>
 8004800:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8004804:	44aa      	add	sl, r5
 8004806:	ebab 0b05 	sub.w	fp, fp, r5
 800480a:	1b55      	subs	r5, r2, r5
 800480c:	f8c8 5008 	str.w	r5, [r8, #8]
 8004810:	2d00      	cmp	r5, #0
 8004812:	d1bf      	bne.n	8004794 <__sfvwrite_r+0x3c>
 8004814:	e7a7      	b.n	8004766 <__sfvwrite_r+0xe>
 8004816:	4621      	mov	r1, r4
 8004818:	4630      	mov	r0, r6
 800481a:	f7fe feb1 	bl	8003580 <__swsetup_r>
 800481e:	2800      	cmp	r0, #0
 8004820:	d0ab      	beq.n	800477a <__sfvwrite_r+0x22>
 8004822:	f04f 30ff 	mov.w	r0, #4294967295
 8004826:	e79f      	b.n	8004768 <__sfvwrite_r+0x10>
 8004828:	e9d7 b500 	ldrd	fp, r5, [r7]
 800482c:	3708      	adds	r7, #8
 800482e:	2d00      	cmp	r5, #0
 8004830:	d0fa      	beq.n	8004828 <__sfvwrite_r+0xd0>
 8004832:	4555      	cmp	r5, sl
 8004834:	462b      	mov	r3, r5
 8004836:	69e1      	ldr	r1, [r4, #28]
 8004838:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
 800483c:	bf28      	it	cs
 800483e:	4653      	movcs	r3, sl
 8004840:	465a      	mov	r2, fp
 8004842:	4630      	mov	r0, r6
 8004844:	47e0      	blx	ip
 8004846:	2800      	cmp	r0, #0
 8004848:	dd37      	ble.n	80048ba <__sfvwrite_r+0x162>
 800484a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800484e:	4483      	add	fp, r0
 8004850:	1a2d      	subs	r5, r5, r0
 8004852:	1a18      	subs	r0, r3, r0
 8004854:	f8c8 0008 	str.w	r0, [r8, #8]
 8004858:	2800      	cmp	r0, #0
 800485a:	d1e8      	bne.n	800482e <__sfvwrite_r+0xd6>
 800485c:	e783      	b.n	8004766 <__sfvwrite_r+0xe>
 800485e:	f04f 0b00 	mov.w	fp, #0
 8004862:	f8df a180 	ldr.w	sl, [pc, #384]	; 80049e4 <__sfvwrite_r+0x28c>
 8004866:	465d      	mov	r5, fp
 8004868:	e7e1      	b.n	800482e <__sfvwrite_r+0xd6>
 800486a:	e9d7 9a00 	ldrd	r9, sl, [r7]
 800486e:	3708      	adds	r7, #8
 8004870:	f1ba 0f00 	cmp.w	sl, #0
 8004874:	d0f9      	beq.n	800486a <__sfvwrite_r+0x112>
 8004876:	89a3      	ldrh	r3, [r4, #12]
 8004878:	6820      	ldr	r0, [r4, #0]
 800487a:	68a2      	ldr	r2, [r4, #8]
 800487c:	0599      	lsls	r1, r3, #22
 800487e:	d563      	bpl.n	8004948 <__sfvwrite_r+0x1f0>
 8004880:	4552      	cmp	r2, sl
 8004882:	d836      	bhi.n	80048f2 <__sfvwrite_r+0x19a>
 8004884:	f413 6f90 	tst.w	r3, #1152	; 0x480
 8004888:	d033      	beq.n	80048f2 <__sfvwrite_r+0x19a>
 800488a:	6921      	ldr	r1, [r4, #16]
 800488c:	6965      	ldr	r5, [r4, #20]
 800488e:	eba0 0b01 	sub.w	fp, r0, r1
 8004892:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004896:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800489a:	f10b 0201 	add.w	r2, fp, #1
 800489e:	106d      	asrs	r5, r5, #1
 80048a0:	4452      	add	r2, sl
 80048a2:	4295      	cmp	r5, r2
 80048a4:	bf38      	it	cc
 80048a6:	4615      	movcc	r5, r2
 80048a8:	055b      	lsls	r3, r3, #21
 80048aa:	d53d      	bpl.n	8004928 <__sfvwrite_r+0x1d0>
 80048ac:	4629      	mov	r1, r5
 80048ae:	4630      	mov	r0, r6
 80048b0:	f000 f92e 	bl	8004b10 <_malloc_r>
 80048b4:	b948      	cbnz	r0, 80048ca <__sfvwrite_r+0x172>
 80048b6:	230c      	movs	r3, #12
 80048b8:	6033      	str	r3, [r6, #0]
 80048ba:	89a3      	ldrh	r3, [r4, #12]
 80048bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80048c0:	81a3      	strh	r3, [r4, #12]
 80048c2:	e7ae      	b.n	8004822 <__sfvwrite_r+0xca>
 80048c4:	4699      	mov	r9, r3
 80048c6:	469a      	mov	sl, r3
 80048c8:	e7d2      	b.n	8004870 <__sfvwrite_r+0x118>
 80048ca:	465a      	mov	r2, fp
 80048cc:	6921      	ldr	r1, [r4, #16]
 80048ce:	9001      	str	r0, [sp, #4]
 80048d0:	f000 fb5a 	bl	8004f88 <memcpy>
 80048d4:	89a2      	ldrh	r2, [r4, #12]
 80048d6:	9b01      	ldr	r3, [sp, #4]
 80048d8:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80048dc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80048e0:	81a2      	strh	r2, [r4, #12]
 80048e2:	6123      	str	r3, [r4, #16]
 80048e4:	6165      	str	r5, [r4, #20]
 80048e6:	445b      	add	r3, fp
 80048e8:	eba5 050b 	sub.w	r5, r5, fp
 80048ec:	6023      	str	r3, [r4, #0]
 80048ee:	4652      	mov	r2, sl
 80048f0:	60a5      	str	r5, [r4, #8]
 80048f2:	4552      	cmp	r2, sl
 80048f4:	bf28      	it	cs
 80048f6:	4652      	movcs	r2, sl
 80048f8:	6820      	ldr	r0, [r4, #0]
 80048fa:	9201      	str	r2, [sp, #4]
 80048fc:	4649      	mov	r1, r9
 80048fe:	f000 fb51 	bl	8004fa4 <memmove>
 8004902:	68a3      	ldr	r3, [r4, #8]
 8004904:	9a01      	ldr	r2, [sp, #4]
 8004906:	1a9b      	subs	r3, r3, r2
 8004908:	60a3      	str	r3, [r4, #8]
 800490a:	6823      	ldr	r3, [r4, #0]
 800490c:	441a      	add	r2, r3
 800490e:	4655      	mov	r5, sl
 8004910:	6022      	str	r2, [r4, #0]
 8004912:	f8d8 0008 	ldr.w	r0, [r8, #8]
 8004916:	44a9      	add	r9, r5
 8004918:	ebaa 0a05 	sub.w	sl, sl, r5
 800491c:	1b45      	subs	r5, r0, r5
 800491e:	f8c8 5008 	str.w	r5, [r8, #8]
 8004922:	2d00      	cmp	r5, #0
 8004924:	d1a4      	bne.n	8004870 <__sfvwrite_r+0x118>
 8004926:	e71e      	b.n	8004766 <__sfvwrite_r+0xe>
 8004928:	462a      	mov	r2, r5
 800492a:	4630      	mov	r0, r6
 800492c:	f000 fe90 	bl	8005650 <_realloc_r>
 8004930:	4603      	mov	r3, r0
 8004932:	2800      	cmp	r0, #0
 8004934:	d1d5      	bne.n	80048e2 <__sfvwrite_r+0x18a>
 8004936:	6921      	ldr	r1, [r4, #16]
 8004938:	4630      	mov	r0, r6
 800493a:	f7ff fe4d 	bl	80045d8 <_free_r>
 800493e:	89a3      	ldrh	r3, [r4, #12]
 8004940:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004944:	81a3      	strh	r3, [r4, #12]
 8004946:	e7b6      	b.n	80048b6 <__sfvwrite_r+0x15e>
 8004948:	6923      	ldr	r3, [r4, #16]
 800494a:	4283      	cmp	r3, r0
 800494c:	d302      	bcc.n	8004954 <__sfvwrite_r+0x1fc>
 800494e:	6961      	ldr	r1, [r4, #20]
 8004950:	4551      	cmp	r1, sl
 8004952:	d915      	bls.n	8004980 <__sfvwrite_r+0x228>
 8004954:	4552      	cmp	r2, sl
 8004956:	bf28      	it	cs
 8004958:	4652      	movcs	r2, sl
 800495a:	4649      	mov	r1, r9
 800495c:	4615      	mov	r5, r2
 800495e:	f000 fb21 	bl	8004fa4 <memmove>
 8004962:	68a3      	ldr	r3, [r4, #8]
 8004964:	6822      	ldr	r2, [r4, #0]
 8004966:	1b5b      	subs	r3, r3, r5
 8004968:	442a      	add	r2, r5
 800496a:	60a3      	str	r3, [r4, #8]
 800496c:	6022      	str	r2, [r4, #0]
 800496e:	2b00      	cmp	r3, #0
 8004970:	d1cf      	bne.n	8004912 <__sfvwrite_r+0x1ba>
 8004972:	4621      	mov	r1, r4
 8004974:	4630      	mov	r0, r6
 8004976:	f7ff fd33 	bl	80043e0 <_fflush_r>
 800497a:	2800      	cmp	r0, #0
 800497c:	d0c9      	beq.n	8004912 <__sfvwrite_r+0x1ba>
 800497e:	e79c      	b.n	80048ba <__sfvwrite_r+0x162>
 8004980:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8004984:	459a      	cmp	sl, r3
 8004986:	bf38      	it	cc
 8004988:	4653      	movcc	r3, sl
 800498a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800498c:	fb93 f3f1 	sdiv	r3, r3, r1
 8004990:	464a      	mov	r2, r9
 8004992:	434b      	muls	r3, r1
 8004994:	4630      	mov	r0, r6
 8004996:	69e1      	ldr	r1, [r4, #28]
 8004998:	47a8      	blx	r5
 800499a:	1e05      	subs	r5, r0, #0
 800499c:	dcb9      	bgt.n	8004912 <__sfvwrite_r+0x1ba>
 800499e:	e78c      	b.n	80048ba <__sfvwrite_r+0x162>
 80049a0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80049a4:	2000      	movs	r0, #0
 80049a6:	3708      	adds	r7, #8
 80049a8:	e6f4      	b.n	8004794 <__sfvwrite_r+0x3c>
 80049aa:	f10b 0901 	add.w	r9, fp, #1
 80049ae:	e701      	b.n	80047b4 <__sfvwrite_r+0x5c>
 80049b0:	4293      	cmp	r3, r2
 80049b2:	dc08      	bgt.n	80049c6 <__sfvwrite_r+0x26e>
 80049b4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80049b6:	69e1      	ldr	r1, [r4, #28]
 80049b8:	4652      	mov	r2, sl
 80049ba:	4630      	mov	r0, r6
 80049bc:	47a8      	blx	r5
 80049be:	1e05      	subs	r5, r0, #0
 80049c0:	f73f af14 	bgt.w	80047ec <__sfvwrite_r+0x94>
 80049c4:	e779      	b.n	80048ba <__sfvwrite_r+0x162>
 80049c6:	4651      	mov	r1, sl
 80049c8:	9201      	str	r2, [sp, #4]
 80049ca:	f000 faeb 	bl	8004fa4 <memmove>
 80049ce:	9a01      	ldr	r2, [sp, #4]
 80049d0:	68a3      	ldr	r3, [r4, #8]
 80049d2:	1a9b      	subs	r3, r3, r2
 80049d4:	60a3      	str	r3, [r4, #8]
 80049d6:	6823      	ldr	r3, [r4, #0]
 80049d8:	4413      	add	r3, r2
 80049da:	6023      	str	r3, [r4, #0]
 80049dc:	4615      	mov	r5, r2
 80049de:	e705      	b.n	80047ec <__sfvwrite_r+0x94>
 80049e0:	2001      	movs	r0, #1
 80049e2:	e70d      	b.n	8004800 <__sfvwrite_r+0xa8>
 80049e4:	7ffffc00 	.word	0x7ffffc00

080049e8 <_fwalk_reent>:
 80049e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80049ec:	4606      	mov	r6, r0
 80049ee:	4688      	mov	r8, r1
 80049f0:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 80049f4:	2700      	movs	r7, #0
 80049f6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80049fa:	f1b9 0901 	subs.w	r9, r9, #1
 80049fe:	d505      	bpl.n	8004a0c <_fwalk_reent+0x24>
 8004a00:	6824      	ldr	r4, [r4, #0]
 8004a02:	2c00      	cmp	r4, #0
 8004a04:	d1f7      	bne.n	80049f6 <_fwalk_reent+0xe>
 8004a06:	4638      	mov	r0, r7
 8004a08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004a0c:	89ab      	ldrh	r3, [r5, #12]
 8004a0e:	2b01      	cmp	r3, #1
 8004a10:	d907      	bls.n	8004a22 <_fwalk_reent+0x3a>
 8004a12:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004a16:	3301      	adds	r3, #1
 8004a18:	d003      	beq.n	8004a22 <_fwalk_reent+0x3a>
 8004a1a:	4629      	mov	r1, r5
 8004a1c:	4630      	mov	r0, r6
 8004a1e:	47c0      	blx	r8
 8004a20:	4307      	orrs	r7, r0
 8004a22:	3568      	adds	r5, #104	; 0x68
 8004a24:	e7e9      	b.n	80049fa <_fwalk_reent+0x12>
	...

08004a28 <_localeconv_r>:
 8004a28:	4800      	ldr	r0, [pc, #0]	; (8004a2c <_localeconv_r+0x4>)
 8004a2a:	4770      	bx	lr
 8004a2c:	20000b3c 	.word	0x20000b3c

08004a30 <__retarget_lock_init_recursive>:
 8004a30:	4770      	bx	lr

08004a32 <__retarget_lock_close_recursive>:
 8004a32:	4770      	bx	lr

08004a34 <__retarget_lock_acquire_recursive>:
 8004a34:	4770      	bx	lr

08004a36 <__retarget_lock_release_recursive>:
 8004a36:	4770      	bx	lr

08004a38 <__swhatbuf_r>:
 8004a38:	b570      	push	{r4, r5, r6, lr}
 8004a3a:	460e      	mov	r6, r1
 8004a3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004a40:	2900      	cmp	r1, #0
 8004a42:	b096      	sub	sp, #88	; 0x58
 8004a44:	4614      	mov	r4, r2
 8004a46:	461d      	mov	r5, r3
 8004a48:	da0a      	bge.n	8004a60 <__swhatbuf_r+0x28>
 8004a4a:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 8004a4e:	2300      	movs	r3, #0
 8004a50:	f011 0080 	ands.w	r0, r1, #128	; 0x80
 8004a54:	602b      	str	r3, [r5, #0]
 8004a56:	d116      	bne.n	8004a86 <__swhatbuf_r+0x4e>
 8004a58:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004a5c:	6023      	str	r3, [r4, #0]
 8004a5e:	e015      	b.n	8004a8c <__swhatbuf_r+0x54>
 8004a60:	466a      	mov	r2, sp
 8004a62:	f001 fed3 	bl	800680c <_fstat_r>
 8004a66:	2800      	cmp	r0, #0
 8004a68:	dbef      	blt.n	8004a4a <__swhatbuf_r+0x12>
 8004a6a:	9a01      	ldr	r2, [sp, #4]
 8004a6c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004a70:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004a74:	425a      	negs	r2, r3
 8004a76:	415a      	adcs	r2, r3
 8004a78:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004a7c:	602a      	str	r2, [r5, #0]
 8004a7e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8004a82:	6023      	str	r3, [r4, #0]
 8004a84:	e002      	b.n	8004a8c <__swhatbuf_r+0x54>
 8004a86:	2240      	movs	r2, #64	; 0x40
 8004a88:	6022      	str	r2, [r4, #0]
 8004a8a:	4618      	mov	r0, r3
 8004a8c:	b016      	add	sp, #88	; 0x58
 8004a8e:	bd70      	pop	{r4, r5, r6, pc}

08004a90 <__smakebuf_r>:
 8004a90:	898b      	ldrh	r3, [r1, #12]
 8004a92:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004a94:	079d      	lsls	r5, r3, #30
 8004a96:	4606      	mov	r6, r0
 8004a98:	460c      	mov	r4, r1
 8004a9a:	d507      	bpl.n	8004aac <__smakebuf_r+0x1c>
 8004a9c:	f104 0343 	add.w	r3, r4, #67	; 0x43
 8004aa0:	6023      	str	r3, [r4, #0]
 8004aa2:	6123      	str	r3, [r4, #16]
 8004aa4:	2301      	movs	r3, #1
 8004aa6:	6163      	str	r3, [r4, #20]
 8004aa8:	b002      	add	sp, #8
 8004aaa:	bd70      	pop	{r4, r5, r6, pc}
 8004aac:	ab01      	add	r3, sp, #4
 8004aae:	466a      	mov	r2, sp
 8004ab0:	f7ff ffc2 	bl	8004a38 <__swhatbuf_r>
 8004ab4:	9900      	ldr	r1, [sp, #0]
 8004ab6:	4605      	mov	r5, r0
 8004ab8:	4630      	mov	r0, r6
 8004aba:	f000 f829 	bl	8004b10 <_malloc_r>
 8004abe:	b948      	cbnz	r0, 8004ad4 <__smakebuf_r+0x44>
 8004ac0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004ac4:	059a      	lsls	r2, r3, #22
 8004ac6:	d4ef      	bmi.n	8004aa8 <__smakebuf_r+0x18>
 8004ac8:	f023 0303 	bic.w	r3, r3, #3
 8004acc:	f043 0302 	orr.w	r3, r3, #2
 8004ad0:	81a3      	strh	r3, [r4, #12]
 8004ad2:	e7e3      	b.n	8004a9c <__smakebuf_r+0xc>
 8004ad4:	4b0d      	ldr	r3, [pc, #52]	; (8004b0c <__smakebuf_r+0x7c>)
 8004ad6:	63f3      	str	r3, [r6, #60]	; 0x3c
 8004ad8:	89a3      	ldrh	r3, [r4, #12]
 8004ada:	6020      	str	r0, [r4, #0]
 8004adc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004ae0:	81a3      	strh	r3, [r4, #12]
 8004ae2:	9b00      	ldr	r3, [sp, #0]
 8004ae4:	6163      	str	r3, [r4, #20]
 8004ae6:	9b01      	ldr	r3, [sp, #4]
 8004ae8:	6120      	str	r0, [r4, #16]
 8004aea:	b15b      	cbz	r3, 8004b04 <__smakebuf_r+0x74>
 8004aec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004af0:	4630      	mov	r0, r6
 8004af2:	f001 fe9d 	bl	8006830 <_isatty_r>
 8004af6:	b128      	cbz	r0, 8004b04 <__smakebuf_r+0x74>
 8004af8:	89a3      	ldrh	r3, [r4, #12]
 8004afa:	f023 0303 	bic.w	r3, r3, #3
 8004afe:	f043 0301 	orr.w	r3, r3, #1
 8004b02:	81a3      	strh	r3, [r4, #12]
 8004b04:	89a0      	ldrh	r0, [r4, #12]
 8004b06:	4305      	orrs	r5, r0
 8004b08:	81a5      	strh	r5, [r4, #12]
 8004b0a:	e7cd      	b.n	8004aa8 <__smakebuf_r+0x18>
 8004b0c:	0800447d 	.word	0x0800447d

08004b10 <_malloc_r>:
 8004b10:	f101 030b 	add.w	r3, r1, #11
 8004b14:	2b16      	cmp	r3, #22
 8004b16:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b1a:	4605      	mov	r5, r0
 8004b1c:	d906      	bls.n	8004b2c <_malloc_r+0x1c>
 8004b1e:	f033 0707 	bics.w	r7, r3, #7
 8004b22:	d504      	bpl.n	8004b2e <_malloc_r+0x1e>
 8004b24:	230c      	movs	r3, #12
 8004b26:	602b      	str	r3, [r5, #0]
 8004b28:	2400      	movs	r4, #0
 8004b2a:	e1a3      	b.n	8004e74 <_malloc_r+0x364>
 8004b2c:	2710      	movs	r7, #16
 8004b2e:	42b9      	cmp	r1, r7
 8004b30:	d8f8      	bhi.n	8004b24 <_malloc_r+0x14>
 8004b32:	4628      	mov	r0, r5
 8004b34:	f000 fa50 	bl	8004fd8 <__malloc_lock>
 8004b38:	f5b7 7ffc 	cmp.w	r7, #504	; 0x1f8
 8004b3c:	4eaf      	ldr	r6, [pc, #700]	; (8004dfc <_malloc_r+0x2ec>)
 8004b3e:	d237      	bcs.n	8004bb0 <_malloc_r+0xa0>
 8004b40:	f107 0208 	add.w	r2, r7, #8
 8004b44:	4432      	add	r2, r6
 8004b46:	f1a2 0108 	sub.w	r1, r2, #8
 8004b4a:	6854      	ldr	r4, [r2, #4]
 8004b4c:	428c      	cmp	r4, r1
 8004b4e:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 8004b52:	d102      	bne.n	8004b5a <_malloc_r+0x4a>
 8004b54:	68d4      	ldr	r4, [r2, #12]
 8004b56:	42a2      	cmp	r2, r4
 8004b58:	d010      	beq.n	8004b7c <_malloc_r+0x6c>
 8004b5a:	6863      	ldr	r3, [r4, #4]
 8004b5c:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004b60:	f023 0303 	bic.w	r3, r3, #3
 8004b64:	60ca      	str	r2, [r1, #12]
 8004b66:	4423      	add	r3, r4
 8004b68:	6091      	str	r1, [r2, #8]
 8004b6a:	685a      	ldr	r2, [r3, #4]
 8004b6c:	f042 0201 	orr.w	r2, r2, #1
 8004b70:	605a      	str	r2, [r3, #4]
 8004b72:	4628      	mov	r0, r5
 8004b74:	f000 fa36 	bl	8004fe4 <__malloc_unlock>
 8004b78:	3408      	adds	r4, #8
 8004b7a:	e17b      	b.n	8004e74 <_malloc_r+0x364>
 8004b7c:	3302      	adds	r3, #2
 8004b7e:	6934      	ldr	r4, [r6, #16]
 8004b80:	499f      	ldr	r1, [pc, #636]	; (8004e00 <_malloc_r+0x2f0>)
 8004b82:	428c      	cmp	r4, r1
 8004b84:	d077      	beq.n	8004c76 <_malloc_r+0x166>
 8004b86:	6862      	ldr	r2, [r4, #4]
 8004b88:	f022 0c03 	bic.w	ip, r2, #3
 8004b8c:	ebac 0007 	sub.w	r0, ip, r7
 8004b90:	280f      	cmp	r0, #15
 8004b92:	dd48      	ble.n	8004c26 <_malloc_r+0x116>
 8004b94:	19e2      	adds	r2, r4, r7
 8004b96:	f040 0301 	orr.w	r3, r0, #1
 8004b9a:	f047 0701 	orr.w	r7, r7, #1
 8004b9e:	6067      	str	r7, [r4, #4]
 8004ba0:	e9c6 2204 	strd	r2, r2, [r6, #16]
 8004ba4:	e9c2 1102 	strd	r1, r1, [r2, #8]
 8004ba8:	6053      	str	r3, [r2, #4]
 8004baa:	f844 000c 	str.w	r0, [r4, ip]
 8004bae:	e7e0      	b.n	8004b72 <_malloc_r+0x62>
 8004bb0:	0a7b      	lsrs	r3, r7, #9
 8004bb2:	d02a      	beq.n	8004c0a <_malloc_r+0xfa>
 8004bb4:	2b04      	cmp	r3, #4
 8004bb6:	d812      	bhi.n	8004bde <_malloc_r+0xce>
 8004bb8:	09bb      	lsrs	r3, r7, #6
 8004bba:	3338      	adds	r3, #56	; 0x38
 8004bbc:	1c5a      	adds	r2, r3, #1
 8004bbe:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 8004bc2:	f1a2 0c08 	sub.w	ip, r2, #8
 8004bc6:	6854      	ldr	r4, [r2, #4]
 8004bc8:	4564      	cmp	r4, ip
 8004bca:	d006      	beq.n	8004bda <_malloc_r+0xca>
 8004bcc:	6862      	ldr	r2, [r4, #4]
 8004bce:	f022 0203 	bic.w	r2, r2, #3
 8004bd2:	1bd0      	subs	r0, r2, r7
 8004bd4:	280f      	cmp	r0, #15
 8004bd6:	dd1c      	ble.n	8004c12 <_malloc_r+0x102>
 8004bd8:	3b01      	subs	r3, #1
 8004bda:	3301      	adds	r3, #1
 8004bdc:	e7cf      	b.n	8004b7e <_malloc_r+0x6e>
 8004bde:	2b14      	cmp	r3, #20
 8004be0:	d801      	bhi.n	8004be6 <_malloc_r+0xd6>
 8004be2:	335b      	adds	r3, #91	; 0x5b
 8004be4:	e7ea      	b.n	8004bbc <_malloc_r+0xac>
 8004be6:	2b54      	cmp	r3, #84	; 0x54
 8004be8:	d802      	bhi.n	8004bf0 <_malloc_r+0xe0>
 8004bea:	0b3b      	lsrs	r3, r7, #12
 8004bec:	336e      	adds	r3, #110	; 0x6e
 8004bee:	e7e5      	b.n	8004bbc <_malloc_r+0xac>
 8004bf0:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8004bf4:	d802      	bhi.n	8004bfc <_malloc_r+0xec>
 8004bf6:	0bfb      	lsrs	r3, r7, #15
 8004bf8:	3377      	adds	r3, #119	; 0x77
 8004bfa:	e7df      	b.n	8004bbc <_malloc_r+0xac>
 8004bfc:	f240 5254 	movw	r2, #1364	; 0x554
 8004c00:	4293      	cmp	r3, r2
 8004c02:	d804      	bhi.n	8004c0e <_malloc_r+0xfe>
 8004c04:	0cbb      	lsrs	r3, r7, #18
 8004c06:	337c      	adds	r3, #124	; 0x7c
 8004c08:	e7d8      	b.n	8004bbc <_malloc_r+0xac>
 8004c0a:	233f      	movs	r3, #63	; 0x3f
 8004c0c:	e7d6      	b.n	8004bbc <_malloc_r+0xac>
 8004c0e:	237e      	movs	r3, #126	; 0x7e
 8004c10:	e7d4      	b.n	8004bbc <_malloc_r+0xac>
 8004c12:	2800      	cmp	r0, #0
 8004c14:	68e1      	ldr	r1, [r4, #12]
 8004c16:	db04      	blt.n	8004c22 <_malloc_r+0x112>
 8004c18:	68a3      	ldr	r3, [r4, #8]
 8004c1a:	60d9      	str	r1, [r3, #12]
 8004c1c:	608b      	str	r3, [r1, #8]
 8004c1e:	18a3      	adds	r3, r4, r2
 8004c20:	e7a3      	b.n	8004b6a <_malloc_r+0x5a>
 8004c22:	460c      	mov	r4, r1
 8004c24:	e7d0      	b.n	8004bc8 <_malloc_r+0xb8>
 8004c26:	2800      	cmp	r0, #0
 8004c28:	e9c6 1104 	strd	r1, r1, [r6, #16]
 8004c2c:	db07      	blt.n	8004c3e <_malloc_r+0x12e>
 8004c2e:	44a4      	add	ip, r4
 8004c30:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8004c34:	f043 0301 	orr.w	r3, r3, #1
 8004c38:	f8cc 3004 	str.w	r3, [ip, #4]
 8004c3c:	e799      	b.n	8004b72 <_malloc_r+0x62>
 8004c3e:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8004c42:	6870      	ldr	r0, [r6, #4]
 8004c44:	f080 8094 	bcs.w	8004d70 <_malloc_r+0x260>
 8004c48:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 8004c4c:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 8004c50:	f04f 0c01 	mov.w	ip, #1
 8004c54:	3201      	adds	r2, #1
 8004c56:	fa0c fc0e 	lsl.w	ip, ip, lr
 8004c5a:	ea4c 0000 	orr.w	r0, ip, r0
 8004c5e:	6070      	str	r0, [r6, #4]
 8004c60:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 8004c64:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 8004c68:	3808      	subs	r0, #8
 8004c6a:	e9c4 c002 	strd	ip, r0, [r4, #8]
 8004c6e:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 8004c72:	f8cc 400c 	str.w	r4, [ip, #12]
 8004c76:	2001      	movs	r0, #1
 8004c78:	109a      	asrs	r2, r3, #2
 8004c7a:	fa00 f202 	lsl.w	r2, r0, r2
 8004c7e:	6870      	ldr	r0, [r6, #4]
 8004c80:	4290      	cmp	r0, r2
 8004c82:	d326      	bcc.n	8004cd2 <_malloc_r+0x1c2>
 8004c84:	4210      	tst	r0, r2
 8004c86:	d106      	bne.n	8004c96 <_malloc_r+0x186>
 8004c88:	f023 0303 	bic.w	r3, r3, #3
 8004c8c:	0052      	lsls	r2, r2, #1
 8004c8e:	4210      	tst	r0, r2
 8004c90:	f103 0304 	add.w	r3, r3, #4
 8004c94:	d0fa      	beq.n	8004c8c <_malloc_r+0x17c>
 8004c96:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 8004c9a:	46c1      	mov	r9, r8
 8004c9c:	469e      	mov	lr, r3
 8004c9e:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8004ca2:	454c      	cmp	r4, r9
 8004ca4:	f040 80b8 	bne.w	8004e18 <_malloc_r+0x308>
 8004ca8:	f10e 0e01 	add.w	lr, lr, #1
 8004cac:	f01e 0f03 	tst.w	lr, #3
 8004cb0:	f109 0908 	add.w	r9, r9, #8
 8004cb4:	d1f3      	bne.n	8004c9e <_malloc_r+0x18e>
 8004cb6:	0798      	lsls	r0, r3, #30
 8004cb8:	f040 80e2 	bne.w	8004e80 <_malloc_r+0x370>
 8004cbc:	6873      	ldr	r3, [r6, #4]
 8004cbe:	ea23 0302 	bic.w	r3, r3, r2
 8004cc2:	6073      	str	r3, [r6, #4]
 8004cc4:	6870      	ldr	r0, [r6, #4]
 8004cc6:	0052      	lsls	r2, r2, #1
 8004cc8:	4290      	cmp	r0, r2
 8004cca:	d302      	bcc.n	8004cd2 <_malloc_r+0x1c2>
 8004ccc:	2a00      	cmp	r2, #0
 8004cce:	f040 80e4 	bne.w	8004e9a <_malloc_r+0x38a>
 8004cd2:	f8d6 a008 	ldr.w	sl, [r6, #8]
 8004cd6:	f8da 3004 	ldr.w	r3, [sl, #4]
 8004cda:	f023 0903 	bic.w	r9, r3, #3
 8004cde:	45b9      	cmp	r9, r7
 8004ce0:	d304      	bcc.n	8004cec <_malloc_r+0x1dc>
 8004ce2:	eba9 0207 	sub.w	r2, r9, r7
 8004ce6:	2a0f      	cmp	r2, #15
 8004ce8:	f300 8142 	bgt.w	8004f70 <_malloc_r+0x460>
 8004cec:	4b45      	ldr	r3, [pc, #276]	; (8004e04 <_malloc_r+0x2f4>)
 8004cee:	6819      	ldr	r1, [r3, #0]
 8004cf0:	3110      	adds	r1, #16
 8004cf2:	4439      	add	r1, r7
 8004cf4:	2008      	movs	r0, #8
 8004cf6:	9101      	str	r1, [sp, #4]
 8004cf8:	f000 fee8 	bl	8005acc <sysconf>
 8004cfc:	4a42      	ldr	r2, [pc, #264]	; (8004e08 <_malloc_r+0x2f8>)
 8004cfe:	9901      	ldr	r1, [sp, #4]
 8004d00:	6813      	ldr	r3, [r2, #0]
 8004d02:	3301      	adds	r3, #1
 8004d04:	bf1f      	itttt	ne
 8004d06:	f101 31ff 	addne.w	r1, r1, #4294967295
 8004d0a:	1809      	addne	r1, r1, r0
 8004d0c:	4243      	negne	r3, r0
 8004d0e:	4019      	andne	r1, r3
 8004d10:	4680      	mov	r8, r0
 8004d12:	4628      	mov	r0, r5
 8004d14:	9101      	str	r1, [sp, #4]
 8004d16:	f000 fe73 	bl	8005a00 <_sbrk_r>
 8004d1a:	1c42      	adds	r2, r0, #1
 8004d1c:	eb0a 0b09 	add.w	fp, sl, r9
 8004d20:	4604      	mov	r4, r0
 8004d22:	f000 80f8 	beq.w	8004f16 <_malloc_r+0x406>
 8004d26:	4583      	cmp	fp, r0
 8004d28:	9901      	ldr	r1, [sp, #4]
 8004d2a:	4a37      	ldr	r2, [pc, #220]	; (8004e08 <_malloc_r+0x2f8>)
 8004d2c:	d902      	bls.n	8004d34 <_malloc_r+0x224>
 8004d2e:	45b2      	cmp	sl, r6
 8004d30:	f040 80f1 	bne.w	8004f16 <_malloc_r+0x406>
 8004d34:	4b35      	ldr	r3, [pc, #212]	; (8004e0c <_malloc_r+0x2fc>)
 8004d36:	6818      	ldr	r0, [r3, #0]
 8004d38:	45a3      	cmp	fp, r4
 8004d3a:	4408      	add	r0, r1
 8004d3c:	6018      	str	r0, [r3, #0]
 8004d3e:	f108 3cff 	add.w	ip, r8, #4294967295
 8004d42:	f040 80ac 	bne.w	8004e9e <_malloc_r+0x38e>
 8004d46:	ea1b 0f0c 	tst.w	fp, ip
 8004d4a:	f040 80a8 	bne.w	8004e9e <_malloc_r+0x38e>
 8004d4e:	68b2      	ldr	r2, [r6, #8]
 8004d50:	4449      	add	r1, r9
 8004d52:	f041 0101 	orr.w	r1, r1, #1
 8004d56:	6051      	str	r1, [r2, #4]
 8004d58:	4a2d      	ldr	r2, [pc, #180]	; (8004e10 <_malloc_r+0x300>)
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	6811      	ldr	r1, [r2, #0]
 8004d5e:	428b      	cmp	r3, r1
 8004d60:	bf88      	it	hi
 8004d62:	6013      	strhi	r3, [r2, #0]
 8004d64:	4a2b      	ldr	r2, [pc, #172]	; (8004e14 <_malloc_r+0x304>)
 8004d66:	6811      	ldr	r1, [r2, #0]
 8004d68:	428b      	cmp	r3, r1
 8004d6a:	bf88      	it	hi
 8004d6c:	6013      	strhi	r3, [r2, #0]
 8004d6e:	e0d2      	b.n	8004f16 <_malloc_r+0x406>
 8004d70:	f5bc 6f20 	cmp.w	ip, #2560	; 0xa00
 8004d74:	ea4f 225c 	mov.w	r2, ip, lsr #9
 8004d78:	d218      	bcs.n	8004dac <_malloc_r+0x29c>
 8004d7a:	ea4f 129c 	mov.w	r2, ip, lsr #6
 8004d7e:	3238      	adds	r2, #56	; 0x38
 8004d80:	f102 0e01 	add.w	lr, r2, #1
 8004d84:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 8004d88:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 8004d8c:	45f0      	cmp	r8, lr
 8004d8e:	d12b      	bne.n	8004de8 <_malloc_r+0x2d8>
 8004d90:	1092      	asrs	r2, r2, #2
 8004d92:	f04f 0c01 	mov.w	ip, #1
 8004d96:	fa0c f202 	lsl.w	r2, ip, r2
 8004d9a:	4310      	orrs	r0, r2
 8004d9c:	6070      	str	r0, [r6, #4]
 8004d9e:	e9c4 e802 	strd	lr, r8, [r4, #8]
 8004da2:	f8c8 4008 	str.w	r4, [r8, #8]
 8004da6:	f8ce 400c 	str.w	r4, [lr, #12]
 8004daa:	e764      	b.n	8004c76 <_malloc_r+0x166>
 8004dac:	2a14      	cmp	r2, #20
 8004dae:	d801      	bhi.n	8004db4 <_malloc_r+0x2a4>
 8004db0:	325b      	adds	r2, #91	; 0x5b
 8004db2:	e7e5      	b.n	8004d80 <_malloc_r+0x270>
 8004db4:	2a54      	cmp	r2, #84	; 0x54
 8004db6:	d803      	bhi.n	8004dc0 <_malloc_r+0x2b0>
 8004db8:	ea4f 321c 	mov.w	r2, ip, lsr #12
 8004dbc:	326e      	adds	r2, #110	; 0x6e
 8004dbe:	e7df      	b.n	8004d80 <_malloc_r+0x270>
 8004dc0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8004dc4:	d803      	bhi.n	8004dce <_malloc_r+0x2be>
 8004dc6:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 8004dca:	3277      	adds	r2, #119	; 0x77
 8004dcc:	e7d8      	b.n	8004d80 <_malloc_r+0x270>
 8004dce:	f240 5e54 	movw	lr, #1364	; 0x554
 8004dd2:	4572      	cmp	r2, lr
 8004dd4:	bf9a      	itte	ls
 8004dd6:	ea4f 429c 	movls.w	r2, ip, lsr #18
 8004dda:	327c      	addls	r2, #124	; 0x7c
 8004ddc:	227e      	movhi	r2, #126	; 0x7e
 8004dde:	e7cf      	b.n	8004d80 <_malloc_r+0x270>
 8004de0:	f8de e008 	ldr.w	lr, [lr, #8]
 8004de4:	45f0      	cmp	r8, lr
 8004de6:	d005      	beq.n	8004df4 <_malloc_r+0x2e4>
 8004de8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8004dec:	f022 0203 	bic.w	r2, r2, #3
 8004df0:	4562      	cmp	r2, ip
 8004df2:	d8f5      	bhi.n	8004de0 <_malloc_r+0x2d0>
 8004df4:	f8de 800c 	ldr.w	r8, [lr, #12]
 8004df8:	e7d1      	b.n	8004d9e <_malloc_r+0x28e>
 8004dfa:	bf00      	nop
 8004dfc:	2000063c 	.word	0x2000063c
 8004e00:	20000644 	.word	0x20000644
 8004e04:	2000103c 	.word	0x2000103c
 8004e08:	20000a44 	.word	0x20000a44
 8004e0c:	2000100c 	.word	0x2000100c
 8004e10:	20001034 	.word	0x20001034
 8004e14:	20001038 	.word	0x20001038
 8004e18:	6860      	ldr	r0, [r4, #4]
 8004e1a:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8004e1e:	f020 0003 	bic.w	r0, r0, #3
 8004e22:	eba0 0a07 	sub.w	sl, r0, r7
 8004e26:	f1ba 0f0f 	cmp.w	sl, #15
 8004e2a:	dd12      	ble.n	8004e52 <_malloc_r+0x342>
 8004e2c:	68a3      	ldr	r3, [r4, #8]
 8004e2e:	19e2      	adds	r2, r4, r7
 8004e30:	f047 0701 	orr.w	r7, r7, #1
 8004e34:	6067      	str	r7, [r4, #4]
 8004e36:	f8c3 c00c 	str.w	ip, [r3, #12]
 8004e3a:	f8cc 3008 	str.w	r3, [ip, #8]
 8004e3e:	f04a 0301 	orr.w	r3, sl, #1
 8004e42:	e9c6 2204 	strd	r2, r2, [r6, #16]
 8004e46:	e9c2 1102 	strd	r1, r1, [r2, #8]
 8004e4a:	6053      	str	r3, [r2, #4]
 8004e4c:	f844 a000 	str.w	sl, [r4, r0]
 8004e50:	e68f      	b.n	8004b72 <_malloc_r+0x62>
 8004e52:	f1ba 0f00 	cmp.w	sl, #0
 8004e56:	db11      	blt.n	8004e7c <_malloc_r+0x36c>
 8004e58:	4420      	add	r0, r4
 8004e5a:	6843      	ldr	r3, [r0, #4]
 8004e5c:	f043 0301 	orr.w	r3, r3, #1
 8004e60:	6043      	str	r3, [r0, #4]
 8004e62:	f854 3f08 	ldr.w	r3, [r4, #8]!
 8004e66:	4628      	mov	r0, r5
 8004e68:	f8c3 c00c 	str.w	ip, [r3, #12]
 8004e6c:	f8cc 3008 	str.w	r3, [ip, #8]
 8004e70:	f000 f8b8 	bl	8004fe4 <__malloc_unlock>
 8004e74:	4620      	mov	r0, r4
 8004e76:	b003      	add	sp, #12
 8004e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e7c:	4664      	mov	r4, ip
 8004e7e:	e710      	b.n	8004ca2 <_malloc_r+0x192>
 8004e80:	f858 0908 	ldr.w	r0, [r8], #-8
 8004e84:	4540      	cmp	r0, r8
 8004e86:	f103 33ff 	add.w	r3, r3, #4294967295
 8004e8a:	f43f af14 	beq.w	8004cb6 <_malloc_r+0x1a6>
 8004e8e:	e719      	b.n	8004cc4 <_malloc_r+0x1b4>
 8004e90:	3304      	adds	r3, #4
 8004e92:	0052      	lsls	r2, r2, #1
 8004e94:	4210      	tst	r0, r2
 8004e96:	d0fb      	beq.n	8004e90 <_malloc_r+0x380>
 8004e98:	e6fd      	b.n	8004c96 <_malloc_r+0x186>
 8004e9a:	4673      	mov	r3, lr
 8004e9c:	e7fa      	b.n	8004e94 <_malloc_r+0x384>
 8004e9e:	f8d2 e000 	ldr.w	lr, [r2]
 8004ea2:	f1be 3fff 	cmp.w	lr, #4294967295
 8004ea6:	bf1b      	ittet	ne
 8004ea8:	eba4 0b0b 	subne.w	fp, r4, fp
 8004eac:	eb0b 0200 	addne.w	r2, fp, r0
 8004eb0:	6014      	streq	r4, [r2, #0]
 8004eb2:	601a      	strne	r2, [r3, #0]
 8004eb4:	f014 0b07 	ands.w	fp, r4, #7
 8004eb8:	bf1a      	itte	ne
 8004eba:	f1cb 0008 	rsbne	r0, fp, #8
 8004ebe:	1824      	addne	r4, r4, r0
 8004ec0:	4658      	moveq	r0, fp
 8004ec2:	1862      	adds	r2, r4, r1
 8004ec4:	ea02 010c 	and.w	r1, r2, ip
 8004ec8:	4480      	add	r8, r0
 8004eca:	eba8 0801 	sub.w	r8, r8, r1
 8004ece:	ea08 080c 	and.w	r8, r8, ip
 8004ed2:	4641      	mov	r1, r8
 8004ed4:	4628      	mov	r0, r5
 8004ed6:	9201      	str	r2, [sp, #4]
 8004ed8:	f000 fd92 	bl	8005a00 <_sbrk_r>
 8004edc:	1c43      	adds	r3, r0, #1
 8004ede:	9a01      	ldr	r2, [sp, #4]
 8004ee0:	4b28      	ldr	r3, [pc, #160]	; (8004f84 <_malloc_r+0x474>)
 8004ee2:	d107      	bne.n	8004ef4 <_malloc_r+0x3e4>
 8004ee4:	f1bb 0f00 	cmp.w	fp, #0
 8004ee8:	d023      	beq.n	8004f32 <_malloc_r+0x422>
 8004eea:	f1ab 0008 	sub.w	r0, fp, #8
 8004eee:	4410      	add	r0, r2
 8004ef0:	f04f 0800 	mov.w	r8, #0
 8004ef4:	681a      	ldr	r2, [r3, #0]
 8004ef6:	60b4      	str	r4, [r6, #8]
 8004ef8:	1b00      	subs	r0, r0, r4
 8004efa:	4440      	add	r0, r8
 8004efc:	4442      	add	r2, r8
 8004efe:	f040 0001 	orr.w	r0, r0, #1
 8004f02:	45b2      	cmp	sl, r6
 8004f04:	601a      	str	r2, [r3, #0]
 8004f06:	6060      	str	r0, [r4, #4]
 8004f08:	f43f af26 	beq.w	8004d58 <_malloc_r+0x248>
 8004f0c:	f1b9 0f0f 	cmp.w	r9, #15
 8004f10:	d812      	bhi.n	8004f38 <_malloc_r+0x428>
 8004f12:	2301      	movs	r3, #1
 8004f14:	6063      	str	r3, [r4, #4]
 8004f16:	68b3      	ldr	r3, [r6, #8]
 8004f18:	685b      	ldr	r3, [r3, #4]
 8004f1a:	f023 0303 	bic.w	r3, r3, #3
 8004f1e:	42bb      	cmp	r3, r7
 8004f20:	eba3 0207 	sub.w	r2, r3, r7
 8004f24:	d301      	bcc.n	8004f2a <_malloc_r+0x41a>
 8004f26:	2a0f      	cmp	r2, #15
 8004f28:	dc22      	bgt.n	8004f70 <_malloc_r+0x460>
 8004f2a:	4628      	mov	r0, r5
 8004f2c:	f000 f85a 	bl	8004fe4 <__malloc_unlock>
 8004f30:	e5fa      	b.n	8004b28 <_malloc_r+0x18>
 8004f32:	4610      	mov	r0, r2
 8004f34:	46d8      	mov	r8, fp
 8004f36:	e7dd      	b.n	8004ef4 <_malloc_r+0x3e4>
 8004f38:	f8da 2004 	ldr.w	r2, [sl, #4]
 8004f3c:	f1a9 090c 	sub.w	r9, r9, #12
 8004f40:	f029 0907 	bic.w	r9, r9, #7
 8004f44:	f002 0201 	and.w	r2, r2, #1
 8004f48:	ea42 0209 	orr.w	r2, r2, r9
 8004f4c:	f8ca 2004 	str.w	r2, [sl, #4]
 8004f50:	2105      	movs	r1, #5
 8004f52:	eb0a 0209 	add.w	r2, sl, r9
 8004f56:	f1b9 0f0f 	cmp.w	r9, #15
 8004f5a:	e9c2 1101 	strd	r1, r1, [r2, #4]
 8004f5e:	f67f aefb 	bls.w	8004d58 <_malloc_r+0x248>
 8004f62:	f10a 0108 	add.w	r1, sl, #8
 8004f66:	4628      	mov	r0, r5
 8004f68:	f7ff fb36 	bl	80045d8 <_free_r>
 8004f6c:	4b05      	ldr	r3, [pc, #20]	; (8004f84 <_malloc_r+0x474>)
 8004f6e:	e6f3      	b.n	8004d58 <_malloc_r+0x248>
 8004f70:	68b4      	ldr	r4, [r6, #8]
 8004f72:	f047 0301 	orr.w	r3, r7, #1
 8004f76:	4427      	add	r7, r4
 8004f78:	f042 0201 	orr.w	r2, r2, #1
 8004f7c:	6063      	str	r3, [r4, #4]
 8004f7e:	60b7      	str	r7, [r6, #8]
 8004f80:	607a      	str	r2, [r7, #4]
 8004f82:	e5f6      	b.n	8004b72 <_malloc_r+0x62>
 8004f84:	2000100c 	.word	0x2000100c

08004f88 <memcpy>:
 8004f88:	440a      	add	r2, r1
 8004f8a:	4291      	cmp	r1, r2
 8004f8c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004f90:	d100      	bne.n	8004f94 <memcpy+0xc>
 8004f92:	4770      	bx	lr
 8004f94:	b510      	push	{r4, lr}
 8004f96:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004f9a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004f9e:	4291      	cmp	r1, r2
 8004fa0:	d1f9      	bne.n	8004f96 <memcpy+0xe>
 8004fa2:	bd10      	pop	{r4, pc}

08004fa4 <memmove>:
 8004fa4:	4288      	cmp	r0, r1
 8004fa6:	b510      	push	{r4, lr}
 8004fa8:	eb01 0402 	add.w	r4, r1, r2
 8004fac:	d902      	bls.n	8004fb4 <memmove+0x10>
 8004fae:	4284      	cmp	r4, r0
 8004fb0:	4623      	mov	r3, r4
 8004fb2:	d807      	bhi.n	8004fc4 <memmove+0x20>
 8004fb4:	1e43      	subs	r3, r0, #1
 8004fb6:	42a1      	cmp	r1, r4
 8004fb8:	d008      	beq.n	8004fcc <memmove+0x28>
 8004fba:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004fbe:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004fc2:	e7f8      	b.n	8004fb6 <memmove+0x12>
 8004fc4:	4402      	add	r2, r0
 8004fc6:	4601      	mov	r1, r0
 8004fc8:	428a      	cmp	r2, r1
 8004fca:	d100      	bne.n	8004fce <memmove+0x2a>
 8004fcc:	bd10      	pop	{r4, pc}
 8004fce:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004fd2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004fd6:	e7f7      	b.n	8004fc8 <memmove+0x24>

08004fd8 <__malloc_lock>:
 8004fd8:	4801      	ldr	r0, [pc, #4]	; (8004fe0 <__malloc_lock+0x8>)
 8004fda:	f7ff bd2b 	b.w	8004a34 <__retarget_lock_acquire_recursive>
 8004fde:	bf00      	nop
 8004fe0:	20001007 	.word	0x20001007

08004fe4 <__malloc_unlock>:
 8004fe4:	4801      	ldr	r0, [pc, #4]	; (8004fec <__malloc_unlock+0x8>)
 8004fe6:	f7ff bd26 	b.w	8004a36 <__retarget_lock_release_recursive>
 8004fea:	bf00      	nop
 8004fec:	20001007 	.word	0x20001007

08004ff0 <_Balloc>:
 8004ff0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8004ff2:	b570      	push	{r4, r5, r6, lr}
 8004ff4:	4605      	mov	r5, r0
 8004ff6:	460c      	mov	r4, r1
 8004ff8:	b17b      	cbz	r3, 800501a <_Balloc+0x2a>
 8004ffa:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8004ffc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005000:	b9a0      	cbnz	r0, 800502c <_Balloc+0x3c>
 8005002:	2101      	movs	r1, #1
 8005004:	fa01 f604 	lsl.w	r6, r1, r4
 8005008:	1d72      	adds	r2, r6, #5
 800500a:	0092      	lsls	r2, r2, #2
 800500c:	4628      	mov	r0, r5
 800500e:	f001 fadd 	bl	80065cc <_calloc_r>
 8005012:	b148      	cbz	r0, 8005028 <_Balloc+0x38>
 8005014:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8005018:	e00b      	b.n	8005032 <_Balloc+0x42>
 800501a:	2221      	movs	r2, #33	; 0x21
 800501c:	2104      	movs	r1, #4
 800501e:	f001 fad5 	bl	80065cc <_calloc_r>
 8005022:	64e8      	str	r0, [r5, #76]	; 0x4c
 8005024:	2800      	cmp	r0, #0
 8005026:	d1e8      	bne.n	8004ffa <_Balloc+0xa>
 8005028:	2000      	movs	r0, #0
 800502a:	bd70      	pop	{r4, r5, r6, pc}
 800502c:	6802      	ldr	r2, [r0, #0]
 800502e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8005032:	2300      	movs	r3, #0
 8005034:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005038:	e7f7      	b.n	800502a <_Balloc+0x3a>

0800503a <_Bfree>:
 800503a:	b131      	cbz	r1, 800504a <_Bfree+0x10>
 800503c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800503e:	684a      	ldr	r2, [r1, #4]
 8005040:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8005044:	6008      	str	r0, [r1, #0]
 8005046:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800504a:	4770      	bx	lr

0800504c <__multadd>:
 800504c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005050:	690d      	ldr	r5, [r1, #16]
 8005052:	4607      	mov	r7, r0
 8005054:	460c      	mov	r4, r1
 8005056:	461e      	mov	r6, r3
 8005058:	f101 0c14 	add.w	ip, r1, #20
 800505c:	2000      	movs	r0, #0
 800505e:	f8dc 3000 	ldr.w	r3, [ip]
 8005062:	b299      	uxth	r1, r3
 8005064:	fb02 6101 	mla	r1, r2, r1, r6
 8005068:	0c1e      	lsrs	r6, r3, #16
 800506a:	0c0b      	lsrs	r3, r1, #16
 800506c:	fb02 3306 	mla	r3, r2, r6, r3
 8005070:	b289      	uxth	r1, r1
 8005072:	3001      	adds	r0, #1
 8005074:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8005078:	4285      	cmp	r5, r0
 800507a:	f84c 1b04 	str.w	r1, [ip], #4
 800507e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8005082:	dcec      	bgt.n	800505e <__multadd+0x12>
 8005084:	b30e      	cbz	r6, 80050ca <__multadd+0x7e>
 8005086:	68a3      	ldr	r3, [r4, #8]
 8005088:	42ab      	cmp	r3, r5
 800508a:	dc19      	bgt.n	80050c0 <__multadd+0x74>
 800508c:	6861      	ldr	r1, [r4, #4]
 800508e:	4638      	mov	r0, r7
 8005090:	3101      	adds	r1, #1
 8005092:	f7ff ffad 	bl	8004ff0 <_Balloc>
 8005096:	4680      	mov	r8, r0
 8005098:	b928      	cbnz	r0, 80050a6 <__multadd+0x5a>
 800509a:	4602      	mov	r2, r0
 800509c:	4b0c      	ldr	r3, [pc, #48]	; (80050d0 <__multadd+0x84>)
 800509e:	480d      	ldr	r0, [pc, #52]	; (80050d4 <__multadd+0x88>)
 80050a0:	21b5      	movs	r1, #181	; 0xb5
 80050a2:	f001 fa75 	bl	8006590 <__assert_func>
 80050a6:	6922      	ldr	r2, [r4, #16]
 80050a8:	3202      	adds	r2, #2
 80050aa:	f104 010c 	add.w	r1, r4, #12
 80050ae:	0092      	lsls	r2, r2, #2
 80050b0:	300c      	adds	r0, #12
 80050b2:	f7ff ff69 	bl	8004f88 <memcpy>
 80050b6:	4621      	mov	r1, r4
 80050b8:	4638      	mov	r0, r7
 80050ba:	f7ff ffbe 	bl	800503a <_Bfree>
 80050be:	4644      	mov	r4, r8
 80050c0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80050c4:	3501      	adds	r5, #1
 80050c6:	615e      	str	r6, [r3, #20]
 80050c8:	6125      	str	r5, [r4, #16]
 80050ca:	4620      	mov	r0, r4
 80050cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80050d0:	08007125 	.word	0x08007125
 80050d4:	08007191 	.word	0x08007191

080050d8 <__hi0bits>:
 80050d8:	0c02      	lsrs	r2, r0, #16
 80050da:	0412      	lsls	r2, r2, #16
 80050dc:	4603      	mov	r3, r0
 80050de:	b9ca      	cbnz	r2, 8005114 <__hi0bits+0x3c>
 80050e0:	0403      	lsls	r3, r0, #16
 80050e2:	2010      	movs	r0, #16
 80050e4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80050e8:	bf04      	itt	eq
 80050ea:	021b      	lsleq	r3, r3, #8
 80050ec:	3008      	addeq	r0, #8
 80050ee:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80050f2:	bf04      	itt	eq
 80050f4:	011b      	lsleq	r3, r3, #4
 80050f6:	3004      	addeq	r0, #4
 80050f8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80050fc:	bf04      	itt	eq
 80050fe:	009b      	lsleq	r3, r3, #2
 8005100:	3002      	addeq	r0, #2
 8005102:	2b00      	cmp	r3, #0
 8005104:	db05      	blt.n	8005112 <__hi0bits+0x3a>
 8005106:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800510a:	f100 0001 	add.w	r0, r0, #1
 800510e:	bf08      	it	eq
 8005110:	2020      	moveq	r0, #32
 8005112:	4770      	bx	lr
 8005114:	2000      	movs	r0, #0
 8005116:	e7e5      	b.n	80050e4 <__hi0bits+0xc>

08005118 <__lo0bits>:
 8005118:	6803      	ldr	r3, [r0, #0]
 800511a:	4602      	mov	r2, r0
 800511c:	f013 0007 	ands.w	r0, r3, #7
 8005120:	d00b      	beq.n	800513a <__lo0bits+0x22>
 8005122:	07d9      	lsls	r1, r3, #31
 8005124:	d421      	bmi.n	800516a <__lo0bits+0x52>
 8005126:	0798      	lsls	r0, r3, #30
 8005128:	bf49      	itett	mi
 800512a:	085b      	lsrmi	r3, r3, #1
 800512c:	089b      	lsrpl	r3, r3, #2
 800512e:	2001      	movmi	r0, #1
 8005130:	6013      	strmi	r3, [r2, #0]
 8005132:	bf5c      	itt	pl
 8005134:	6013      	strpl	r3, [r2, #0]
 8005136:	2002      	movpl	r0, #2
 8005138:	4770      	bx	lr
 800513a:	b299      	uxth	r1, r3
 800513c:	b909      	cbnz	r1, 8005142 <__lo0bits+0x2a>
 800513e:	0c1b      	lsrs	r3, r3, #16
 8005140:	2010      	movs	r0, #16
 8005142:	b2d9      	uxtb	r1, r3
 8005144:	b909      	cbnz	r1, 800514a <__lo0bits+0x32>
 8005146:	3008      	adds	r0, #8
 8005148:	0a1b      	lsrs	r3, r3, #8
 800514a:	0719      	lsls	r1, r3, #28
 800514c:	bf04      	itt	eq
 800514e:	091b      	lsreq	r3, r3, #4
 8005150:	3004      	addeq	r0, #4
 8005152:	0799      	lsls	r1, r3, #30
 8005154:	bf04      	itt	eq
 8005156:	089b      	lsreq	r3, r3, #2
 8005158:	3002      	addeq	r0, #2
 800515a:	07d9      	lsls	r1, r3, #31
 800515c:	d403      	bmi.n	8005166 <__lo0bits+0x4e>
 800515e:	085b      	lsrs	r3, r3, #1
 8005160:	f100 0001 	add.w	r0, r0, #1
 8005164:	d003      	beq.n	800516e <__lo0bits+0x56>
 8005166:	6013      	str	r3, [r2, #0]
 8005168:	4770      	bx	lr
 800516a:	2000      	movs	r0, #0
 800516c:	4770      	bx	lr
 800516e:	2020      	movs	r0, #32
 8005170:	4770      	bx	lr
	...

08005174 <__i2b>:
 8005174:	b510      	push	{r4, lr}
 8005176:	460c      	mov	r4, r1
 8005178:	2101      	movs	r1, #1
 800517a:	f7ff ff39 	bl	8004ff0 <_Balloc>
 800517e:	4602      	mov	r2, r0
 8005180:	b928      	cbnz	r0, 800518e <__i2b+0x1a>
 8005182:	4b05      	ldr	r3, [pc, #20]	; (8005198 <__i2b+0x24>)
 8005184:	4805      	ldr	r0, [pc, #20]	; (800519c <__i2b+0x28>)
 8005186:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800518a:	f001 fa01 	bl	8006590 <__assert_func>
 800518e:	2301      	movs	r3, #1
 8005190:	6144      	str	r4, [r0, #20]
 8005192:	6103      	str	r3, [r0, #16]
 8005194:	bd10      	pop	{r4, pc}
 8005196:	bf00      	nop
 8005198:	08007125 	.word	0x08007125
 800519c:	08007191 	.word	0x08007191

080051a0 <__multiply>:
 80051a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80051a4:	4691      	mov	r9, r2
 80051a6:	690a      	ldr	r2, [r1, #16]
 80051a8:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80051ac:	429a      	cmp	r2, r3
 80051ae:	bfb8      	it	lt
 80051b0:	460b      	movlt	r3, r1
 80051b2:	460c      	mov	r4, r1
 80051b4:	bfbc      	itt	lt
 80051b6:	464c      	movlt	r4, r9
 80051b8:	4699      	movlt	r9, r3
 80051ba:	6927      	ldr	r7, [r4, #16]
 80051bc:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80051c0:	68a3      	ldr	r3, [r4, #8]
 80051c2:	6861      	ldr	r1, [r4, #4]
 80051c4:	eb07 060a 	add.w	r6, r7, sl
 80051c8:	42b3      	cmp	r3, r6
 80051ca:	b085      	sub	sp, #20
 80051cc:	bfb8      	it	lt
 80051ce:	3101      	addlt	r1, #1
 80051d0:	f7ff ff0e 	bl	8004ff0 <_Balloc>
 80051d4:	b930      	cbnz	r0, 80051e4 <__multiply+0x44>
 80051d6:	4602      	mov	r2, r0
 80051d8:	4b43      	ldr	r3, [pc, #268]	; (80052e8 <__multiply+0x148>)
 80051da:	4844      	ldr	r0, [pc, #272]	; (80052ec <__multiply+0x14c>)
 80051dc:	f240 115d 	movw	r1, #349	; 0x15d
 80051e0:	f001 f9d6 	bl	8006590 <__assert_func>
 80051e4:	f100 0514 	add.w	r5, r0, #20
 80051e8:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80051ec:	462b      	mov	r3, r5
 80051ee:	2200      	movs	r2, #0
 80051f0:	4543      	cmp	r3, r8
 80051f2:	d321      	bcc.n	8005238 <__multiply+0x98>
 80051f4:	f104 0314 	add.w	r3, r4, #20
 80051f8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80051fc:	f109 0314 	add.w	r3, r9, #20
 8005200:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8005204:	9202      	str	r2, [sp, #8]
 8005206:	1b3a      	subs	r2, r7, r4
 8005208:	3a15      	subs	r2, #21
 800520a:	f022 0203 	bic.w	r2, r2, #3
 800520e:	3204      	adds	r2, #4
 8005210:	f104 0115 	add.w	r1, r4, #21
 8005214:	428f      	cmp	r7, r1
 8005216:	bf38      	it	cc
 8005218:	2204      	movcc	r2, #4
 800521a:	9201      	str	r2, [sp, #4]
 800521c:	9a02      	ldr	r2, [sp, #8]
 800521e:	9303      	str	r3, [sp, #12]
 8005220:	429a      	cmp	r2, r3
 8005222:	d80c      	bhi.n	800523e <__multiply+0x9e>
 8005224:	2e00      	cmp	r6, #0
 8005226:	dd03      	ble.n	8005230 <__multiply+0x90>
 8005228:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800522c:	2b00      	cmp	r3, #0
 800522e:	d059      	beq.n	80052e4 <__multiply+0x144>
 8005230:	6106      	str	r6, [r0, #16]
 8005232:	b005      	add	sp, #20
 8005234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005238:	f843 2b04 	str.w	r2, [r3], #4
 800523c:	e7d8      	b.n	80051f0 <__multiply+0x50>
 800523e:	f8b3 a000 	ldrh.w	sl, [r3]
 8005242:	f1ba 0f00 	cmp.w	sl, #0
 8005246:	d023      	beq.n	8005290 <__multiply+0xf0>
 8005248:	f104 0e14 	add.w	lr, r4, #20
 800524c:	46a9      	mov	r9, r5
 800524e:	f04f 0c00 	mov.w	ip, #0
 8005252:	f85e 2b04 	ldr.w	r2, [lr], #4
 8005256:	f8d9 1000 	ldr.w	r1, [r9]
 800525a:	fa1f fb82 	uxth.w	fp, r2
 800525e:	b289      	uxth	r1, r1
 8005260:	fb0a 110b 	mla	r1, sl, fp, r1
 8005264:	4461      	add	r1, ip
 8005266:	f8d9 c000 	ldr.w	ip, [r9]
 800526a:	0c12      	lsrs	r2, r2, #16
 800526c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8005270:	fb0a c202 	mla	r2, sl, r2, ip
 8005274:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8005278:	b289      	uxth	r1, r1
 800527a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800527e:	4577      	cmp	r7, lr
 8005280:	f849 1b04 	str.w	r1, [r9], #4
 8005284:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8005288:	d8e3      	bhi.n	8005252 <__multiply+0xb2>
 800528a:	9a01      	ldr	r2, [sp, #4]
 800528c:	f845 c002 	str.w	ip, [r5, r2]
 8005290:	9a03      	ldr	r2, [sp, #12]
 8005292:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005296:	3304      	adds	r3, #4
 8005298:	f1b9 0f00 	cmp.w	r9, #0
 800529c:	d020      	beq.n	80052e0 <__multiply+0x140>
 800529e:	6829      	ldr	r1, [r5, #0]
 80052a0:	f104 0c14 	add.w	ip, r4, #20
 80052a4:	46ae      	mov	lr, r5
 80052a6:	f04f 0a00 	mov.w	sl, #0
 80052aa:	f8bc b000 	ldrh.w	fp, [ip]
 80052ae:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80052b2:	fb09 220b 	mla	r2, r9, fp, r2
 80052b6:	4492      	add	sl, r2
 80052b8:	b289      	uxth	r1, r1
 80052ba:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 80052be:	f84e 1b04 	str.w	r1, [lr], #4
 80052c2:	f85c 2b04 	ldr.w	r2, [ip], #4
 80052c6:	f8be 1000 	ldrh.w	r1, [lr]
 80052ca:	0c12      	lsrs	r2, r2, #16
 80052cc:	fb09 1102 	mla	r1, r9, r2, r1
 80052d0:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80052d4:	4567      	cmp	r7, ip
 80052d6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80052da:	d8e6      	bhi.n	80052aa <__multiply+0x10a>
 80052dc:	9a01      	ldr	r2, [sp, #4]
 80052de:	50a9      	str	r1, [r5, r2]
 80052e0:	3504      	adds	r5, #4
 80052e2:	e79b      	b.n	800521c <__multiply+0x7c>
 80052e4:	3e01      	subs	r6, #1
 80052e6:	e79d      	b.n	8005224 <__multiply+0x84>
 80052e8:	08007125 	.word	0x08007125
 80052ec:	08007191 	.word	0x08007191

080052f0 <__pow5mult>:
 80052f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80052f4:	4615      	mov	r5, r2
 80052f6:	f012 0203 	ands.w	r2, r2, #3
 80052fa:	4606      	mov	r6, r0
 80052fc:	460f      	mov	r7, r1
 80052fe:	d007      	beq.n	8005310 <__pow5mult+0x20>
 8005300:	4c1a      	ldr	r4, [pc, #104]	; (800536c <__pow5mult+0x7c>)
 8005302:	3a01      	subs	r2, #1
 8005304:	2300      	movs	r3, #0
 8005306:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800530a:	f7ff fe9f 	bl	800504c <__multadd>
 800530e:	4607      	mov	r7, r0
 8005310:	10ad      	asrs	r5, r5, #2
 8005312:	d027      	beq.n	8005364 <__pow5mult+0x74>
 8005314:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 8005316:	b944      	cbnz	r4, 800532a <__pow5mult+0x3a>
 8005318:	f240 2171 	movw	r1, #625	; 0x271
 800531c:	4630      	mov	r0, r6
 800531e:	f7ff ff29 	bl	8005174 <__i2b>
 8005322:	2300      	movs	r3, #0
 8005324:	64b0      	str	r0, [r6, #72]	; 0x48
 8005326:	4604      	mov	r4, r0
 8005328:	6003      	str	r3, [r0, #0]
 800532a:	f04f 0900 	mov.w	r9, #0
 800532e:	07eb      	lsls	r3, r5, #31
 8005330:	d50a      	bpl.n	8005348 <__pow5mult+0x58>
 8005332:	4639      	mov	r1, r7
 8005334:	4622      	mov	r2, r4
 8005336:	4630      	mov	r0, r6
 8005338:	f7ff ff32 	bl	80051a0 <__multiply>
 800533c:	4639      	mov	r1, r7
 800533e:	4680      	mov	r8, r0
 8005340:	4630      	mov	r0, r6
 8005342:	f7ff fe7a 	bl	800503a <_Bfree>
 8005346:	4647      	mov	r7, r8
 8005348:	106d      	asrs	r5, r5, #1
 800534a:	d00b      	beq.n	8005364 <__pow5mult+0x74>
 800534c:	6820      	ldr	r0, [r4, #0]
 800534e:	b938      	cbnz	r0, 8005360 <__pow5mult+0x70>
 8005350:	4622      	mov	r2, r4
 8005352:	4621      	mov	r1, r4
 8005354:	4630      	mov	r0, r6
 8005356:	f7ff ff23 	bl	80051a0 <__multiply>
 800535a:	6020      	str	r0, [r4, #0]
 800535c:	f8c0 9000 	str.w	r9, [r0]
 8005360:	4604      	mov	r4, r0
 8005362:	e7e4      	b.n	800532e <__pow5mult+0x3e>
 8005364:	4638      	mov	r0, r7
 8005366:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800536a:	bf00      	nop
 800536c:	080072e0 	.word	0x080072e0

08005370 <__lshift>:
 8005370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005374:	460c      	mov	r4, r1
 8005376:	6849      	ldr	r1, [r1, #4]
 8005378:	6923      	ldr	r3, [r4, #16]
 800537a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800537e:	68a3      	ldr	r3, [r4, #8]
 8005380:	4607      	mov	r7, r0
 8005382:	4691      	mov	r9, r2
 8005384:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005388:	f108 0601 	add.w	r6, r8, #1
 800538c:	42b3      	cmp	r3, r6
 800538e:	db0b      	blt.n	80053a8 <__lshift+0x38>
 8005390:	4638      	mov	r0, r7
 8005392:	f7ff fe2d 	bl	8004ff0 <_Balloc>
 8005396:	4605      	mov	r5, r0
 8005398:	b948      	cbnz	r0, 80053ae <__lshift+0x3e>
 800539a:	4602      	mov	r2, r0
 800539c:	4b2a      	ldr	r3, [pc, #168]	; (8005448 <__lshift+0xd8>)
 800539e:	482b      	ldr	r0, [pc, #172]	; (800544c <__lshift+0xdc>)
 80053a0:	f240 11d9 	movw	r1, #473	; 0x1d9
 80053a4:	f001 f8f4 	bl	8006590 <__assert_func>
 80053a8:	3101      	adds	r1, #1
 80053aa:	005b      	lsls	r3, r3, #1
 80053ac:	e7ee      	b.n	800538c <__lshift+0x1c>
 80053ae:	2300      	movs	r3, #0
 80053b0:	f100 0114 	add.w	r1, r0, #20
 80053b4:	f100 0210 	add.w	r2, r0, #16
 80053b8:	4618      	mov	r0, r3
 80053ba:	4553      	cmp	r3, sl
 80053bc:	db37      	blt.n	800542e <__lshift+0xbe>
 80053be:	6920      	ldr	r0, [r4, #16]
 80053c0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80053c4:	f104 0314 	add.w	r3, r4, #20
 80053c8:	f019 091f 	ands.w	r9, r9, #31
 80053cc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80053d0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80053d4:	d02f      	beq.n	8005436 <__lshift+0xc6>
 80053d6:	f1c9 0e20 	rsb	lr, r9, #32
 80053da:	468a      	mov	sl, r1
 80053dc:	f04f 0c00 	mov.w	ip, #0
 80053e0:	681a      	ldr	r2, [r3, #0]
 80053e2:	fa02 f209 	lsl.w	r2, r2, r9
 80053e6:	ea42 020c 	orr.w	r2, r2, ip
 80053ea:	f84a 2b04 	str.w	r2, [sl], #4
 80053ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80053f2:	4298      	cmp	r0, r3
 80053f4:	fa22 fc0e 	lsr.w	ip, r2, lr
 80053f8:	d8f2      	bhi.n	80053e0 <__lshift+0x70>
 80053fa:	1b03      	subs	r3, r0, r4
 80053fc:	3b15      	subs	r3, #21
 80053fe:	f023 0303 	bic.w	r3, r3, #3
 8005402:	3304      	adds	r3, #4
 8005404:	f104 0215 	add.w	r2, r4, #21
 8005408:	4290      	cmp	r0, r2
 800540a:	bf38      	it	cc
 800540c:	2304      	movcc	r3, #4
 800540e:	f841 c003 	str.w	ip, [r1, r3]
 8005412:	f1bc 0f00 	cmp.w	ip, #0
 8005416:	d001      	beq.n	800541c <__lshift+0xac>
 8005418:	f108 0602 	add.w	r6, r8, #2
 800541c:	3e01      	subs	r6, #1
 800541e:	4638      	mov	r0, r7
 8005420:	612e      	str	r6, [r5, #16]
 8005422:	4621      	mov	r1, r4
 8005424:	f7ff fe09 	bl	800503a <_Bfree>
 8005428:	4628      	mov	r0, r5
 800542a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800542e:	f842 0f04 	str.w	r0, [r2, #4]!
 8005432:	3301      	adds	r3, #1
 8005434:	e7c1      	b.n	80053ba <__lshift+0x4a>
 8005436:	3904      	subs	r1, #4
 8005438:	f853 2b04 	ldr.w	r2, [r3], #4
 800543c:	f841 2f04 	str.w	r2, [r1, #4]!
 8005440:	4298      	cmp	r0, r3
 8005442:	d8f9      	bhi.n	8005438 <__lshift+0xc8>
 8005444:	e7ea      	b.n	800541c <__lshift+0xac>
 8005446:	bf00      	nop
 8005448:	08007125 	.word	0x08007125
 800544c:	08007191 	.word	0x08007191

08005450 <__mcmp>:
 8005450:	690a      	ldr	r2, [r1, #16]
 8005452:	4603      	mov	r3, r0
 8005454:	6900      	ldr	r0, [r0, #16]
 8005456:	1a80      	subs	r0, r0, r2
 8005458:	b530      	push	{r4, r5, lr}
 800545a:	d10d      	bne.n	8005478 <__mcmp+0x28>
 800545c:	3314      	adds	r3, #20
 800545e:	3114      	adds	r1, #20
 8005460:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8005464:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005468:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800546c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005470:	4295      	cmp	r5, r2
 8005472:	d002      	beq.n	800547a <__mcmp+0x2a>
 8005474:	d304      	bcc.n	8005480 <__mcmp+0x30>
 8005476:	2001      	movs	r0, #1
 8005478:	bd30      	pop	{r4, r5, pc}
 800547a:	42a3      	cmp	r3, r4
 800547c:	d3f4      	bcc.n	8005468 <__mcmp+0x18>
 800547e:	e7fb      	b.n	8005478 <__mcmp+0x28>
 8005480:	f04f 30ff 	mov.w	r0, #4294967295
 8005484:	e7f8      	b.n	8005478 <__mcmp+0x28>
	...

08005488 <__mdiff>:
 8005488:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800548c:	460d      	mov	r5, r1
 800548e:	4607      	mov	r7, r0
 8005490:	4611      	mov	r1, r2
 8005492:	4628      	mov	r0, r5
 8005494:	4614      	mov	r4, r2
 8005496:	f7ff ffdb 	bl	8005450 <__mcmp>
 800549a:	1e06      	subs	r6, r0, #0
 800549c:	d111      	bne.n	80054c2 <__mdiff+0x3a>
 800549e:	4631      	mov	r1, r6
 80054a0:	4638      	mov	r0, r7
 80054a2:	f7ff fda5 	bl	8004ff0 <_Balloc>
 80054a6:	4602      	mov	r2, r0
 80054a8:	b928      	cbnz	r0, 80054b6 <__mdiff+0x2e>
 80054aa:	4b39      	ldr	r3, [pc, #228]	; (8005590 <__mdiff+0x108>)
 80054ac:	f240 2132 	movw	r1, #562	; 0x232
 80054b0:	4838      	ldr	r0, [pc, #224]	; (8005594 <__mdiff+0x10c>)
 80054b2:	f001 f86d 	bl	8006590 <__assert_func>
 80054b6:	2301      	movs	r3, #1
 80054b8:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80054bc:	4610      	mov	r0, r2
 80054be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80054c2:	bfa4      	itt	ge
 80054c4:	4623      	movge	r3, r4
 80054c6:	462c      	movge	r4, r5
 80054c8:	4638      	mov	r0, r7
 80054ca:	6861      	ldr	r1, [r4, #4]
 80054cc:	bfa6      	itte	ge
 80054ce:	461d      	movge	r5, r3
 80054d0:	2600      	movge	r6, #0
 80054d2:	2601      	movlt	r6, #1
 80054d4:	f7ff fd8c 	bl	8004ff0 <_Balloc>
 80054d8:	4602      	mov	r2, r0
 80054da:	b918      	cbnz	r0, 80054e4 <__mdiff+0x5c>
 80054dc:	4b2c      	ldr	r3, [pc, #176]	; (8005590 <__mdiff+0x108>)
 80054de:	f44f 7110 	mov.w	r1, #576	; 0x240
 80054e2:	e7e5      	b.n	80054b0 <__mdiff+0x28>
 80054e4:	6927      	ldr	r7, [r4, #16]
 80054e6:	60c6      	str	r6, [r0, #12]
 80054e8:	692e      	ldr	r6, [r5, #16]
 80054ea:	f104 0014 	add.w	r0, r4, #20
 80054ee:	f105 0914 	add.w	r9, r5, #20
 80054f2:	f102 0e14 	add.w	lr, r2, #20
 80054f6:	eb00 0c87 	add.w	ip, r0, r7, lsl #2
 80054fa:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80054fe:	3410      	adds	r4, #16
 8005500:	46f2      	mov	sl, lr
 8005502:	2100      	movs	r1, #0
 8005504:	f859 3b04 	ldr.w	r3, [r9], #4
 8005508:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800550c:	fa1f f883 	uxth.w	r8, r3
 8005510:	fa11 f18b 	uxtah	r1, r1, fp
 8005514:	0c1b      	lsrs	r3, r3, #16
 8005516:	eba1 0808 	sub.w	r8, r1, r8
 800551a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800551e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8005522:	fa1f f888 	uxth.w	r8, r8
 8005526:	1419      	asrs	r1, r3, #16
 8005528:	454e      	cmp	r6, r9
 800552a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800552e:	f84a 3b04 	str.w	r3, [sl], #4
 8005532:	d8e7      	bhi.n	8005504 <__mdiff+0x7c>
 8005534:	1b73      	subs	r3, r6, r5
 8005536:	3b15      	subs	r3, #21
 8005538:	f023 0303 	bic.w	r3, r3, #3
 800553c:	3304      	adds	r3, #4
 800553e:	3515      	adds	r5, #21
 8005540:	42ae      	cmp	r6, r5
 8005542:	bf38      	it	cc
 8005544:	2304      	movcc	r3, #4
 8005546:	4418      	add	r0, r3
 8005548:	4473      	add	r3, lr
 800554a:	469e      	mov	lr, r3
 800554c:	4606      	mov	r6, r0
 800554e:	4566      	cmp	r6, ip
 8005550:	d30e      	bcc.n	8005570 <__mdiff+0xe8>
 8005552:	f10c 0103 	add.w	r1, ip, #3
 8005556:	1a09      	subs	r1, r1, r0
 8005558:	f021 0103 	bic.w	r1, r1, #3
 800555c:	3803      	subs	r0, #3
 800555e:	4584      	cmp	ip, r0
 8005560:	bf38      	it	cc
 8005562:	2100      	movcc	r1, #0
 8005564:	4419      	add	r1, r3
 8005566:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800556a:	b17b      	cbz	r3, 800558c <__mdiff+0x104>
 800556c:	6117      	str	r7, [r2, #16]
 800556e:	e7a5      	b.n	80054bc <__mdiff+0x34>
 8005570:	f856 8b04 	ldr.w	r8, [r6], #4
 8005574:	fa11 f488 	uxtah	r4, r1, r8
 8005578:	1425      	asrs	r5, r4, #16
 800557a:	eb05 4518 	add.w	r5, r5, r8, lsr #16
 800557e:	b2a4      	uxth	r4, r4
 8005580:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8005584:	f84e 4b04 	str.w	r4, [lr], #4
 8005588:	1429      	asrs	r1, r5, #16
 800558a:	e7e0      	b.n	800554e <__mdiff+0xc6>
 800558c:	3f01      	subs	r7, #1
 800558e:	e7ea      	b.n	8005566 <__mdiff+0xde>
 8005590:	08007125 	.word	0x08007125
 8005594:	08007191 	.word	0x08007191

08005598 <__d2b>:
 8005598:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800559c:	2101      	movs	r1, #1
 800559e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80055a2:	4690      	mov	r8, r2
 80055a4:	461d      	mov	r5, r3
 80055a6:	f7ff fd23 	bl	8004ff0 <_Balloc>
 80055aa:	4604      	mov	r4, r0
 80055ac:	b930      	cbnz	r0, 80055bc <__d2b+0x24>
 80055ae:	4602      	mov	r2, r0
 80055b0:	4b25      	ldr	r3, [pc, #148]	; (8005648 <__d2b+0xb0>)
 80055b2:	4826      	ldr	r0, [pc, #152]	; (800564c <__d2b+0xb4>)
 80055b4:	f240 310a 	movw	r1, #778	; 0x30a
 80055b8:	f000 ffea 	bl	8006590 <__assert_func>
 80055bc:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80055c0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80055c4:	bb2d      	cbnz	r5, 8005612 <__d2b+0x7a>
 80055c6:	9301      	str	r3, [sp, #4]
 80055c8:	f1b8 0300 	subs.w	r3, r8, #0
 80055cc:	d026      	beq.n	800561c <__d2b+0x84>
 80055ce:	4668      	mov	r0, sp
 80055d0:	9300      	str	r3, [sp, #0]
 80055d2:	f7ff fda1 	bl	8005118 <__lo0bits>
 80055d6:	9900      	ldr	r1, [sp, #0]
 80055d8:	b1f0      	cbz	r0, 8005618 <__d2b+0x80>
 80055da:	9a01      	ldr	r2, [sp, #4]
 80055dc:	f1c0 0320 	rsb	r3, r0, #32
 80055e0:	fa02 f303 	lsl.w	r3, r2, r3
 80055e4:	430b      	orrs	r3, r1
 80055e6:	40c2      	lsrs	r2, r0
 80055e8:	6163      	str	r3, [r4, #20]
 80055ea:	9201      	str	r2, [sp, #4]
 80055ec:	9b01      	ldr	r3, [sp, #4]
 80055ee:	61a3      	str	r3, [r4, #24]
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	bf14      	ite	ne
 80055f4:	2102      	movne	r1, #2
 80055f6:	2101      	moveq	r1, #1
 80055f8:	6121      	str	r1, [r4, #16]
 80055fa:	b1c5      	cbz	r5, 800562e <__d2b+0x96>
 80055fc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8005600:	4405      	add	r5, r0
 8005602:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8005606:	603d      	str	r5, [r7, #0]
 8005608:	6030      	str	r0, [r6, #0]
 800560a:	4620      	mov	r0, r4
 800560c:	b002      	add	sp, #8
 800560e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005612:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005616:	e7d6      	b.n	80055c6 <__d2b+0x2e>
 8005618:	6161      	str	r1, [r4, #20]
 800561a:	e7e7      	b.n	80055ec <__d2b+0x54>
 800561c:	a801      	add	r0, sp, #4
 800561e:	f7ff fd7b 	bl	8005118 <__lo0bits>
 8005622:	9b01      	ldr	r3, [sp, #4]
 8005624:	6163      	str	r3, [r4, #20]
 8005626:	2101      	movs	r1, #1
 8005628:	6121      	str	r1, [r4, #16]
 800562a:	3020      	adds	r0, #32
 800562c:	e7e5      	b.n	80055fa <__d2b+0x62>
 800562e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8005632:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005636:	6038      	str	r0, [r7, #0]
 8005638:	6918      	ldr	r0, [r3, #16]
 800563a:	f7ff fd4d 	bl	80050d8 <__hi0bits>
 800563e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8005642:	6031      	str	r1, [r6, #0]
 8005644:	e7e1      	b.n	800560a <__d2b+0x72>
 8005646:	bf00      	nop
 8005648:	08007125 	.word	0x08007125
 800564c:	08007191 	.word	0x08007191

08005650 <_realloc_r>:
 8005650:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005654:	460c      	mov	r4, r1
 8005656:	4681      	mov	r9, r0
 8005658:	4611      	mov	r1, r2
 800565a:	b924      	cbnz	r4, 8005666 <_realloc_r+0x16>
 800565c:	b003      	add	sp, #12
 800565e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005662:	f7ff ba55 	b.w	8004b10 <_malloc_r>
 8005666:	9201      	str	r2, [sp, #4]
 8005668:	f7ff fcb6 	bl	8004fd8 <__malloc_lock>
 800566c:	9901      	ldr	r1, [sp, #4]
 800566e:	f101 080b 	add.w	r8, r1, #11
 8005672:	f1b8 0f16 	cmp.w	r8, #22
 8005676:	d90b      	bls.n	8005690 <_realloc_r+0x40>
 8005678:	f038 0807 	bics.w	r8, r8, #7
 800567c:	d50a      	bpl.n	8005694 <_realloc_r+0x44>
 800567e:	230c      	movs	r3, #12
 8005680:	f8c9 3000 	str.w	r3, [r9]
 8005684:	f04f 0b00 	mov.w	fp, #0
 8005688:	4658      	mov	r0, fp
 800568a:	b003      	add	sp, #12
 800568c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005690:	f04f 0810 	mov.w	r8, #16
 8005694:	4588      	cmp	r8, r1
 8005696:	d3f2      	bcc.n	800567e <_realloc_r+0x2e>
 8005698:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800569c:	f025 0603 	bic.w	r6, r5, #3
 80056a0:	45b0      	cmp	r8, r6
 80056a2:	f1a4 0a08 	sub.w	sl, r4, #8
 80056a6:	f340 816e 	ble.w	8005986 <_realloc_r+0x336>
 80056aa:	4a9b      	ldr	r2, [pc, #620]	; (8005918 <_realloc_r+0x2c8>)
 80056ac:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80056b0:	eb0a 0306 	add.w	r3, sl, r6
 80056b4:	459c      	cmp	ip, r3
 80056b6:	685a      	ldr	r2, [r3, #4]
 80056b8:	d005      	beq.n	80056c6 <_realloc_r+0x76>
 80056ba:	f022 0001 	bic.w	r0, r2, #1
 80056be:	4418      	add	r0, r3
 80056c0:	6840      	ldr	r0, [r0, #4]
 80056c2:	07c7      	lsls	r7, r0, #31
 80056c4:	d427      	bmi.n	8005716 <_realloc_r+0xc6>
 80056c6:	f022 0203 	bic.w	r2, r2, #3
 80056ca:	459c      	cmp	ip, r3
 80056cc:	eb06 0702 	add.w	r7, r6, r2
 80056d0:	d119      	bne.n	8005706 <_realloc_r+0xb6>
 80056d2:	f108 0010 	add.w	r0, r8, #16
 80056d6:	42b8      	cmp	r0, r7
 80056d8:	dc1f      	bgt.n	800571a <_realloc_r+0xca>
 80056da:	eb0a 0308 	add.w	r3, sl, r8
 80056de:	4a8e      	ldr	r2, [pc, #568]	; (8005918 <_realloc_r+0x2c8>)
 80056e0:	eba7 0708 	sub.w	r7, r7, r8
 80056e4:	f047 0701 	orr.w	r7, r7, #1
 80056e8:	6093      	str	r3, [r2, #8]
 80056ea:	605f      	str	r7, [r3, #4]
 80056ec:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80056f0:	f003 0301 	and.w	r3, r3, #1
 80056f4:	ea43 0308 	orr.w	r3, r3, r8
 80056f8:	f844 3c04 	str.w	r3, [r4, #-4]
 80056fc:	4648      	mov	r0, r9
 80056fe:	f7ff fc71 	bl	8004fe4 <__malloc_unlock>
 8005702:	46a3      	mov	fp, r4
 8005704:	e7c0      	b.n	8005688 <_realloc_r+0x38>
 8005706:	45b8      	cmp	r8, r7
 8005708:	dc07      	bgt.n	800571a <_realloc_r+0xca>
 800570a:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800570e:	60da      	str	r2, [r3, #12]
 8005710:	6093      	str	r3, [r2, #8]
 8005712:	4655      	mov	r5, sl
 8005714:	e07f      	b.n	8005816 <_realloc_r+0x1c6>
 8005716:	2200      	movs	r2, #0
 8005718:	4613      	mov	r3, r2
 800571a:	07e8      	lsls	r0, r5, #31
 800571c:	f100 80e5 	bmi.w	80058ea <_realloc_r+0x29a>
 8005720:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8005724:	ebaa 0505 	sub.w	r5, sl, r5
 8005728:	6868      	ldr	r0, [r5, #4]
 800572a:	f020 0003 	bic.w	r0, r0, #3
 800572e:	eb00 0b06 	add.w	fp, r0, r6
 8005732:	2b00      	cmp	r3, #0
 8005734:	f000 80a5 	beq.w	8005882 <_realloc_r+0x232>
 8005738:	459c      	cmp	ip, r3
 800573a:	eb02 070b 	add.w	r7, r2, fp
 800573e:	d14a      	bne.n	80057d6 <_realloc_r+0x186>
 8005740:	f108 0310 	add.w	r3, r8, #16
 8005744:	42bb      	cmp	r3, r7
 8005746:	f300 809c 	bgt.w	8005882 <_realloc_r+0x232>
 800574a:	46ab      	mov	fp, r5
 800574c:	68eb      	ldr	r3, [r5, #12]
 800574e:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 8005752:	60d3      	str	r3, [r2, #12]
 8005754:	609a      	str	r2, [r3, #8]
 8005756:	1f32      	subs	r2, r6, #4
 8005758:	2a24      	cmp	r2, #36	; 0x24
 800575a:	d837      	bhi.n	80057cc <_realloc_r+0x17c>
 800575c:	2a13      	cmp	r2, #19
 800575e:	d933      	bls.n	80057c8 <_realloc_r+0x178>
 8005760:	6823      	ldr	r3, [r4, #0]
 8005762:	60ab      	str	r3, [r5, #8]
 8005764:	6863      	ldr	r3, [r4, #4]
 8005766:	60eb      	str	r3, [r5, #12]
 8005768:	2a1b      	cmp	r2, #27
 800576a:	d81b      	bhi.n	80057a4 <_realloc_r+0x154>
 800576c:	3408      	adds	r4, #8
 800576e:	f105 0310 	add.w	r3, r5, #16
 8005772:	6822      	ldr	r2, [r4, #0]
 8005774:	601a      	str	r2, [r3, #0]
 8005776:	6862      	ldr	r2, [r4, #4]
 8005778:	605a      	str	r2, [r3, #4]
 800577a:	68a2      	ldr	r2, [r4, #8]
 800577c:	609a      	str	r2, [r3, #8]
 800577e:	eb05 0308 	add.w	r3, r5, r8
 8005782:	4a65      	ldr	r2, [pc, #404]	; (8005918 <_realloc_r+0x2c8>)
 8005784:	eba7 0708 	sub.w	r7, r7, r8
 8005788:	f047 0701 	orr.w	r7, r7, #1
 800578c:	6093      	str	r3, [r2, #8]
 800578e:	605f      	str	r7, [r3, #4]
 8005790:	686b      	ldr	r3, [r5, #4]
 8005792:	f003 0301 	and.w	r3, r3, #1
 8005796:	ea43 0308 	orr.w	r3, r3, r8
 800579a:	606b      	str	r3, [r5, #4]
 800579c:	4648      	mov	r0, r9
 800579e:	f7ff fc21 	bl	8004fe4 <__malloc_unlock>
 80057a2:	e771      	b.n	8005688 <_realloc_r+0x38>
 80057a4:	68a3      	ldr	r3, [r4, #8]
 80057a6:	612b      	str	r3, [r5, #16]
 80057a8:	68e3      	ldr	r3, [r4, #12]
 80057aa:	616b      	str	r3, [r5, #20]
 80057ac:	2a24      	cmp	r2, #36	; 0x24
 80057ae:	bf01      	itttt	eq
 80057b0:	6923      	ldreq	r3, [r4, #16]
 80057b2:	61ab      	streq	r3, [r5, #24]
 80057b4:	6962      	ldreq	r2, [r4, #20]
 80057b6:	61ea      	streq	r2, [r5, #28]
 80057b8:	bf19      	ittee	ne
 80057ba:	3410      	addne	r4, #16
 80057bc:	f105 0318 	addne.w	r3, r5, #24
 80057c0:	f105 0320 	addeq.w	r3, r5, #32
 80057c4:	3418      	addeq	r4, #24
 80057c6:	e7d4      	b.n	8005772 <_realloc_r+0x122>
 80057c8:	465b      	mov	r3, fp
 80057ca:	e7d2      	b.n	8005772 <_realloc_r+0x122>
 80057cc:	4621      	mov	r1, r4
 80057ce:	4658      	mov	r0, fp
 80057d0:	f7ff fbe8 	bl	8004fa4 <memmove>
 80057d4:	e7d3      	b.n	800577e <_realloc_r+0x12e>
 80057d6:	45b8      	cmp	r8, r7
 80057d8:	dc53      	bgt.n	8005882 <_realloc_r+0x232>
 80057da:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 80057de:	4628      	mov	r0, r5
 80057e0:	60da      	str	r2, [r3, #12]
 80057e2:	6093      	str	r3, [r2, #8]
 80057e4:	f850 2f08 	ldr.w	r2, [r0, #8]!
 80057e8:	68eb      	ldr	r3, [r5, #12]
 80057ea:	60d3      	str	r3, [r2, #12]
 80057ec:	609a      	str	r2, [r3, #8]
 80057ee:	1f32      	subs	r2, r6, #4
 80057f0:	2a24      	cmp	r2, #36	; 0x24
 80057f2:	d842      	bhi.n	800587a <_realloc_r+0x22a>
 80057f4:	2a13      	cmp	r2, #19
 80057f6:	d908      	bls.n	800580a <_realloc_r+0x1ba>
 80057f8:	6823      	ldr	r3, [r4, #0]
 80057fa:	60ab      	str	r3, [r5, #8]
 80057fc:	6863      	ldr	r3, [r4, #4]
 80057fe:	60eb      	str	r3, [r5, #12]
 8005800:	2a1b      	cmp	r2, #27
 8005802:	d828      	bhi.n	8005856 <_realloc_r+0x206>
 8005804:	3408      	adds	r4, #8
 8005806:	f105 0010 	add.w	r0, r5, #16
 800580a:	6823      	ldr	r3, [r4, #0]
 800580c:	6003      	str	r3, [r0, #0]
 800580e:	6863      	ldr	r3, [r4, #4]
 8005810:	6043      	str	r3, [r0, #4]
 8005812:	68a3      	ldr	r3, [r4, #8]
 8005814:	6083      	str	r3, [r0, #8]
 8005816:	686b      	ldr	r3, [r5, #4]
 8005818:	eba7 0008 	sub.w	r0, r7, r8
 800581c:	280f      	cmp	r0, #15
 800581e:	f003 0301 	and.w	r3, r3, #1
 8005822:	eb05 0207 	add.w	r2, r5, r7
 8005826:	f240 80b0 	bls.w	800598a <_realloc_r+0x33a>
 800582a:	eb05 0108 	add.w	r1, r5, r8
 800582e:	ea48 0303 	orr.w	r3, r8, r3
 8005832:	f040 0001 	orr.w	r0, r0, #1
 8005836:	606b      	str	r3, [r5, #4]
 8005838:	6048      	str	r0, [r1, #4]
 800583a:	6853      	ldr	r3, [r2, #4]
 800583c:	f043 0301 	orr.w	r3, r3, #1
 8005840:	6053      	str	r3, [r2, #4]
 8005842:	3108      	adds	r1, #8
 8005844:	4648      	mov	r0, r9
 8005846:	f7fe fec7 	bl	80045d8 <_free_r>
 800584a:	4648      	mov	r0, r9
 800584c:	f7ff fbca 	bl	8004fe4 <__malloc_unlock>
 8005850:	f105 0b08 	add.w	fp, r5, #8
 8005854:	e718      	b.n	8005688 <_realloc_r+0x38>
 8005856:	68a3      	ldr	r3, [r4, #8]
 8005858:	612b      	str	r3, [r5, #16]
 800585a:	68e3      	ldr	r3, [r4, #12]
 800585c:	616b      	str	r3, [r5, #20]
 800585e:	2a24      	cmp	r2, #36	; 0x24
 8005860:	bf01      	itttt	eq
 8005862:	6923      	ldreq	r3, [r4, #16]
 8005864:	61ab      	streq	r3, [r5, #24]
 8005866:	6963      	ldreq	r3, [r4, #20]
 8005868:	61eb      	streq	r3, [r5, #28]
 800586a:	bf19      	ittee	ne
 800586c:	3410      	addne	r4, #16
 800586e:	f105 0018 	addne.w	r0, r5, #24
 8005872:	f105 0020 	addeq.w	r0, r5, #32
 8005876:	3418      	addeq	r4, #24
 8005878:	e7c7      	b.n	800580a <_realloc_r+0x1ba>
 800587a:	4621      	mov	r1, r4
 800587c:	f7ff fb92 	bl	8004fa4 <memmove>
 8005880:	e7c9      	b.n	8005816 <_realloc_r+0x1c6>
 8005882:	45d8      	cmp	r8, fp
 8005884:	dc31      	bgt.n	80058ea <_realloc_r+0x29a>
 8005886:	4628      	mov	r0, r5
 8005888:	68eb      	ldr	r3, [r5, #12]
 800588a:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800588e:	60d3      	str	r3, [r2, #12]
 8005890:	609a      	str	r2, [r3, #8]
 8005892:	1f32      	subs	r2, r6, #4
 8005894:	2a24      	cmp	r2, #36	; 0x24
 8005896:	d824      	bhi.n	80058e2 <_realloc_r+0x292>
 8005898:	2a13      	cmp	r2, #19
 800589a:	d908      	bls.n	80058ae <_realloc_r+0x25e>
 800589c:	6823      	ldr	r3, [r4, #0]
 800589e:	60ab      	str	r3, [r5, #8]
 80058a0:	6863      	ldr	r3, [r4, #4]
 80058a2:	60eb      	str	r3, [r5, #12]
 80058a4:	2a1b      	cmp	r2, #27
 80058a6:	d80a      	bhi.n	80058be <_realloc_r+0x26e>
 80058a8:	3408      	adds	r4, #8
 80058aa:	f105 0010 	add.w	r0, r5, #16
 80058ae:	6823      	ldr	r3, [r4, #0]
 80058b0:	6003      	str	r3, [r0, #0]
 80058b2:	6863      	ldr	r3, [r4, #4]
 80058b4:	6043      	str	r3, [r0, #4]
 80058b6:	68a3      	ldr	r3, [r4, #8]
 80058b8:	6083      	str	r3, [r0, #8]
 80058ba:	465f      	mov	r7, fp
 80058bc:	e7ab      	b.n	8005816 <_realloc_r+0x1c6>
 80058be:	68a3      	ldr	r3, [r4, #8]
 80058c0:	612b      	str	r3, [r5, #16]
 80058c2:	68e3      	ldr	r3, [r4, #12]
 80058c4:	616b      	str	r3, [r5, #20]
 80058c6:	2a24      	cmp	r2, #36	; 0x24
 80058c8:	bf01      	itttt	eq
 80058ca:	6923      	ldreq	r3, [r4, #16]
 80058cc:	61ab      	streq	r3, [r5, #24]
 80058ce:	6963      	ldreq	r3, [r4, #20]
 80058d0:	61eb      	streq	r3, [r5, #28]
 80058d2:	bf19      	ittee	ne
 80058d4:	3410      	addne	r4, #16
 80058d6:	f105 0018 	addne.w	r0, r5, #24
 80058da:	f105 0020 	addeq.w	r0, r5, #32
 80058de:	3418      	addeq	r4, #24
 80058e0:	e7e5      	b.n	80058ae <_realloc_r+0x25e>
 80058e2:	4621      	mov	r1, r4
 80058e4:	f7ff fb5e 	bl	8004fa4 <memmove>
 80058e8:	e7e7      	b.n	80058ba <_realloc_r+0x26a>
 80058ea:	4648      	mov	r0, r9
 80058ec:	f7ff f910 	bl	8004b10 <_malloc_r>
 80058f0:	4683      	mov	fp, r0
 80058f2:	2800      	cmp	r0, #0
 80058f4:	f43f af52 	beq.w	800579c <_realloc_r+0x14c>
 80058f8:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80058fc:	f023 0301 	bic.w	r3, r3, #1
 8005900:	4453      	add	r3, sl
 8005902:	f1a0 0208 	sub.w	r2, r0, #8
 8005906:	4293      	cmp	r3, r2
 8005908:	d108      	bne.n	800591c <_realloc_r+0x2cc>
 800590a:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800590e:	f027 0703 	bic.w	r7, r7, #3
 8005912:	4437      	add	r7, r6
 8005914:	e6fd      	b.n	8005712 <_realloc_r+0xc2>
 8005916:	bf00      	nop
 8005918:	2000063c 	.word	0x2000063c
 800591c:	1f32      	subs	r2, r6, #4
 800591e:	2a24      	cmp	r2, #36	; 0x24
 8005920:	d82d      	bhi.n	800597e <_realloc_r+0x32e>
 8005922:	2a13      	cmp	r2, #19
 8005924:	d928      	bls.n	8005978 <_realloc_r+0x328>
 8005926:	6823      	ldr	r3, [r4, #0]
 8005928:	6003      	str	r3, [r0, #0]
 800592a:	6863      	ldr	r3, [r4, #4]
 800592c:	6043      	str	r3, [r0, #4]
 800592e:	2a1b      	cmp	r2, #27
 8005930:	d80e      	bhi.n	8005950 <_realloc_r+0x300>
 8005932:	f104 0208 	add.w	r2, r4, #8
 8005936:	f100 0308 	add.w	r3, r0, #8
 800593a:	6811      	ldr	r1, [r2, #0]
 800593c:	6019      	str	r1, [r3, #0]
 800593e:	6851      	ldr	r1, [r2, #4]
 8005940:	6059      	str	r1, [r3, #4]
 8005942:	6892      	ldr	r2, [r2, #8]
 8005944:	609a      	str	r2, [r3, #8]
 8005946:	4621      	mov	r1, r4
 8005948:	4648      	mov	r0, r9
 800594a:	f7fe fe45 	bl	80045d8 <_free_r>
 800594e:	e725      	b.n	800579c <_realloc_r+0x14c>
 8005950:	68a3      	ldr	r3, [r4, #8]
 8005952:	6083      	str	r3, [r0, #8]
 8005954:	68e3      	ldr	r3, [r4, #12]
 8005956:	60c3      	str	r3, [r0, #12]
 8005958:	2a24      	cmp	r2, #36	; 0x24
 800595a:	bf01      	itttt	eq
 800595c:	6923      	ldreq	r3, [r4, #16]
 800595e:	6103      	streq	r3, [r0, #16]
 8005960:	6961      	ldreq	r1, [r4, #20]
 8005962:	6141      	streq	r1, [r0, #20]
 8005964:	bf19      	ittee	ne
 8005966:	f104 0210 	addne.w	r2, r4, #16
 800596a:	f100 0310 	addne.w	r3, r0, #16
 800596e:	f104 0218 	addeq.w	r2, r4, #24
 8005972:	f100 0318 	addeq.w	r3, r0, #24
 8005976:	e7e0      	b.n	800593a <_realloc_r+0x2ea>
 8005978:	4603      	mov	r3, r0
 800597a:	4622      	mov	r2, r4
 800597c:	e7dd      	b.n	800593a <_realloc_r+0x2ea>
 800597e:	4621      	mov	r1, r4
 8005980:	f7ff fb10 	bl	8004fa4 <memmove>
 8005984:	e7df      	b.n	8005946 <_realloc_r+0x2f6>
 8005986:	4637      	mov	r7, r6
 8005988:	e6c3      	b.n	8005712 <_realloc_r+0xc2>
 800598a:	431f      	orrs	r7, r3
 800598c:	606f      	str	r7, [r5, #4]
 800598e:	6853      	ldr	r3, [r2, #4]
 8005990:	f043 0301 	orr.w	r3, r3, #1
 8005994:	6053      	str	r3, [r2, #4]
 8005996:	e758      	b.n	800584a <_realloc_r+0x1fa>

08005998 <frexp>:
 8005998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800599a:	4617      	mov	r7, r2
 800599c:	2200      	movs	r2, #0
 800599e:	603a      	str	r2, [r7, #0]
 80059a0:	4a14      	ldr	r2, [pc, #80]	; (80059f4 <frexp+0x5c>)
 80059a2:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80059a6:	4296      	cmp	r6, r2
 80059a8:	4604      	mov	r4, r0
 80059aa:	460d      	mov	r5, r1
 80059ac:	460b      	mov	r3, r1
 80059ae:	dc1e      	bgt.n	80059ee <frexp+0x56>
 80059b0:	4602      	mov	r2, r0
 80059b2:	4332      	orrs	r2, r6
 80059b4:	d01b      	beq.n	80059ee <frexp+0x56>
 80059b6:	4a10      	ldr	r2, [pc, #64]	; (80059f8 <frexp+0x60>)
 80059b8:	400a      	ands	r2, r1
 80059ba:	b952      	cbnz	r2, 80059d2 <frexp+0x3a>
 80059bc:	4b0f      	ldr	r3, [pc, #60]	; (80059fc <frexp+0x64>)
 80059be:	2200      	movs	r2, #0
 80059c0:	f7fa fe2a 	bl	8000618 <__aeabi_dmul>
 80059c4:	f06f 0235 	mvn.w	r2, #53	; 0x35
 80059c8:	4604      	mov	r4, r0
 80059ca:	460b      	mov	r3, r1
 80059cc:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80059d0:	603a      	str	r2, [r7, #0]
 80059d2:	683a      	ldr	r2, [r7, #0]
 80059d4:	1536      	asrs	r6, r6, #20
 80059d6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80059da:	f2a6 36fe 	subw	r6, r6, #1022	; 0x3fe
 80059de:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80059e2:	4416      	add	r6, r2
 80059e4:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 80059e8:	603e      	str	r6, [r7, #0]
 80059ea:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 80059ee:	4620      	mov	r0, r4
 80059f0:	4629      	mov	r1, r5
 80059f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80059f4:	7fefffff 	.word	0x7fefffff
 80059f8:	7ff00000 	.word	0x7ff00000
 80059fc:	43500000 	.word	0x43500000

08005a00 <_sbrk_r>:
 8005a00:	b538      	push	{r3, r4, r5, lr}
 8005a02:	4d06      	ldr	r5, [pc, #24]	; (8005a1c <_sbrk_r+0x1c>)
 8005a04:	2300      	movs	r3, #0
 8005a06:	4604      	mov	r4, r0
 8005a08:	4608      	mov	r0, r1
 8005a0a:	602b      	str	r3, [r5, #0]
 8005a0c:	f001 f910 	bl	8006c30 <_sbrk>
 8005a10:	1c43      	adds	r3, r0, #1
 8005a12:	d102      	bne.n	8005a1a <_sbrk_r+0x1a>
 8005a14:	682b      	ldr	r3, [r5, #0]
 8005a16:	b103      	cbz	r3, 8005a1a <_sbrk_r+0x1a>
 8005a18:	6023      	str	r3, [r4, #0]
 8005a1a:	bd38      	pop	{r3, r4, r5, pc}
 8005a1c:	20001040 	.word	0x20001040

08005a20 <__sread>:
 8005a20:	b510      	push	{r4, lr}
 8005a22:	460c      	mov	r4, r1
 8005a24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005a28:	f000 ff3c 	bl	80068a4 <_read_r>
 8005a2c:	2800      	cmp	r0, #0
 8005a2e:	bfab      	itete	ge
 8005a30:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 8005a32:	89a3      	ldrhlt	r3, [r4, #12]
 8005a34:	181b      	addge	r3, r3, r0
 8005a36:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005a3a:	bfac      	ite	ge
 8005a3c:	6523      	strge	r3, [r4, #80]	; 0x50
 8005a3e:	81a3      	strhlt	r3, [r4, #12]
 8005a40:	bd10      	pop	{r4, pc}

08005a42 <__swrite>:
 8005a42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a46:	461f      	mov	r7, r3
 8005a48:	898b      	ldrh	r3, [r1, #12]
 8005a4a:	05db      	lsls	r3, r3, #23
 8005a4c:	4605      	mov	r5, r0
 8005a4e:	460c      	mov	r4, r1
 8005a50:	4616      	mov	r6, r2
 8005a52:	d505      	bpl.n	8005a60 <__swrite+0x1e>
 8005a54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005a58:	2302      	movs	r3, #2
 8005a5a:	2200      	movs	r2, #0
 8005a5c:	f000 fefe 	bl	800685c <_lseek_r>
 8005a60:	89a3      	ldrh	r3, [r4, #12]
 8005a62:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005a66:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005a6a:	81a3      	strh	r3, [r4, #12]
 8005a6c:	4632      	mov	r2, r6
 8005a6e:	463b      	mov	r3, r7
 8005a70:	4628      	mov	r0, r5
 8005a72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005a76:	f000 bd37 	b.w	80064e8 <_write_r>

08005a7a <__sseek>:
 8005a7a:	b510      	push	{r4, lr}
 8005a7c:	460c      	mov	r4, r1
 8005a7e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005a82:	f000 feeb 	bl	800685c <_lseek_r>
 8005a86:	1c43      	adds	r3, r0, #1
 8005a88:	89a3      	ldrh	r3, [r4, #12]
 8005a8a:	bf15      	itete	ne
 8005a8c:	6520      	strne	r0, [r4, #80]	; 0x50
 8005a8e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005a92:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005a96:	81a3      	strheq	r3, [r4, #12]
 8005a98:	bf18      	it	ne
 8005a9a:	81a3      	strhne	r3, [r4, #12]
 8005a9c:	bd10      	pop	{r4, pc}

08005a9e <__sclose>:
 8005a9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005aa2:	f000 bdc9 	b.w	8006638 <_close_r>

08005aa6 <strncpy>:
 8005aa6:	b510      	push	{r4, lr}
 8005aa8:	3901      	subs	r1, #1
 8005aaa:	4603      	mov	r3, r0
 8005aac:	b132      	cbz	r2, 8005abc <strncpy+0x16>
 8005aae:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8005ab2:	f803 4b01 	strb.w	r4, [r3], #1
 8005ab6:	3a01      	subs	r2, #1
 8005ab8:	2c00      	cmp	r4, #0
 8005aba:	d1f7      	bne.n	8005aac <strncpy+0x6>
 8005abc:	441a      	add	r2, r3
 8005abe:	2100      	movs	r1, #0
 8005ac0:	4293      	cmp	r3, r2
 8005ac2:	d100      	bne.n	8005ac6 <strncpy+0x20>
 8005ac4:	bd10      	pop	{r4, pc}
 8005ac6:	f803 1b01 	strb.w	r1, [r3], #1
 8005aca:	e7f9      	b.n	8005ac0 <strncpy+0x1a>

08005acc <sysconf>:
 8005acc:	2808      	cmp	r0, #8
 8005ace:	b508      	push	{r3, lr}
 8005ad0:	d006      	beq.n	8005ae0 <sysconf+0x14>
 8005ad2:	f000 fdc1 	bl	8006658 <__errno>
 8005ad6:	2316      	movs	r3, #22
 8005ad8:	6003      	str	r3, [r0, #0]
 8005ada:	f04f 30ff 	mov.w	r0, #4294967295
 8005ade:	bd08      	pop	{r3, pc}
 8005ae0:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8005ae4:	e7fb      	b.n	8005ade <sysconf+0x12>

08005ae6 <__sprint_r>:
 8005ae6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005aea:	6893      	ldr	r3, [r2, #8]
 8005aec:	4680      	mov	r8, r0
 8005aee:	460f      	mov	r7, r1
 8005af0:	4614      	mov	r4, r2
 8005af2:	b91b      	cbnz	r3, 8005afc <__sprint_r+0x16>
 8005af4:	6053      	str	r3, [r2, #4]
 8005af6:	4618      	mov	r0, r3
 8005af8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005afc:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8005afe:	049d      	lsls	r5, r3, #18
 8005b00:	d520      	bpl.n	8005b44 <__sprint_r+0x5e>
 8005b02:	6815      	ldr	r5, [r2, #0]
 8005b04:	3508      	adds	r5, #8
 8005b06:	e955 b602 	ldrd	fp, r6, [r5, #-8]
 8005b0a:	f04f 0900 	mov.w	r9, #0
 8005b0e:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 8005b12:	45ca      	cmp	sl, r9
 8005b14:	dc0b      	bgt.n	8005b2e <__sprint_r+0x48>
 8005b16:	68a0      	ldr	r0, [r4, #8]
 8005b18:	f026 0603 	bic.w	r6, r6, #3
 8005b1c:	1b80      	subs	r0, r0, r6
 8005b1e:	60a0      	str	r0, [r4, #8]
 8005b20:	3508      	adds	r5, #8
 8005b22:	2800      	cmp	r0, #0
 8005b24:	d1ef      	bne.n	8005b06 <__sprint_r+0x20>
 8005b26:	2300      	movs	r3, #0
 8005b28:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8005b2c:	e7e4      	b.n	8005af8 <__sprint_r+0x12>
 8005b2e:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 8005b32:	463a      	mov	r2, r7
 8005b34:	4640      	mov	r0, r8
 8005b36:	f000 fe40 	bl	80067ba <_fputwc_r>
 8005b3a:	1c43      	adds	r3, r0, #1
 8005b3c:	d0f3      	beq.n	8005b26 <__sprint_r+0x40>
 8005b3e:	f109 0901 	add.w	r9, r9, #1
 8005b42:	e7e6      	b.n	8005b12 <__sprint_r+0x2c>
 8005b44:	f7fe fe08 	bl	8004758 <__sfvwrite_r>
 8005b48:	e7ed      	b.n	8005b26 <__sprint_r+0x40>
	...

08005b4c <_vfiprintf_r>:
 8005b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b50:	b0bb      	sub	sp, #236	; 0xec
 8005b52:	460f      	mov	r7, r1
 8005b54:	9202      	str	r2, [sp, #8]
 8005b56:	461d      	mov	r5, r3
 8005b58:	461c      	mov	r4, r3
 8005b5a:	4681      	mov	r9, r0
 8005b5c:	b118      	cbz	r0, 8005b66 <_vfiprintf_r+0x1a>
 8005b5e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8005b60:	b90b      	cbnz	r3, 8005b66 <_vfiprintf_r+0x1a>
 8005b62:	f7fe fca9 	bl	80044b8 <__sinit>
 8005b66:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005b68:	07d8      	lsls	r0, r3, #31
 8005b6a:	d405      	bmi.n	8005b78 <_vfiprintf_r+0x2c>
 8005b6c:	89bb      	ldrh	r3, [r7, #12]
 8005b6e:	0599      	lsls	r1, r3, #22
 8005b70:	d402      	bmi.n	8005b78 <_vfiprintf_r+0x2c>
 8005b72:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8005b74:	f7fe ff5e 	bl	8004a34 <__retarget_lock_acquire_recursive>
 8005b78:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8005b7c:	049a      	lsls	r2, r3, #18
 8005b7e:	d406      	bmi.n	8005b8e <_vfiprintf_r+0x42>
 8005b80:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8005b84:	81bb      	strh	r3, [r7, #12]
 8005b86:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005b88:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005b8c:	667b      	str	r3, [r7, #100]	; 0x64
 8005b8e:	89bb      	ldrh	r3, [r7, #12]
 8005b90:	071e      	lsls	r6, r3, #28
 8005b92:	d501      	bpl.n	8005b98 <_vfiprintf_r+0x4c>
 8005b94:	693b      	ldr	r3, [r7, #16]
 8005b96:	b9ab      	cbnz	r3, 8005bc4 <_vfiprintf_r+0x78>
 8005b98:	4639      	mov	r1, r7
 8005b9a:	4648      	mov	r0, r9
 8005b9c:	f7fd fcf0 	bl	8003580 <__swsetup_r>
 8005ba0:	b180      	cbz	r0, 8005bc4 <_vfiprintf_r+0x78>
 8005ba2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005ba4:	07d8      	lsls	r0, r3, #31
 8005ba6:	d506      	bpl.n	8005bb6 <_vfiprintf_r+0x6a>
 8005ba8:	f04f 33ff 	mov.w	r3, #4294967295
 8005bac:	9303      	str	r3, [sp, #12]
 8005bae:	9803      	ldr	r0, [sp, #12]
 8005bb0:	b03b      	add	sp, #236	; 0xec
 8005bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005bb6:	89bb      	ldrh	r3, [r7, #12]
 8005bb8:	0599      	lsls	r1, r3, #22
 8005bba:	d4f5      	bmi.n	8005ba8 <_vfiprintf_r+0x5c>
 8005bbc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8005bbe:	f7fe ff3a 	bl	8004a36 <__retarget_lock_release_recursive>
 8005bc2:	e7f1      	b.n	8005ba8 <_vfiprintf_r+0x5c>
 8005bc4:	89bb      	ldrh	r3, [r7, #12]
 8005bc6:	f003 021a 	and.w	r2, r3, #26
 8005bca:	2a0a      	cmp	r2, #10
 8005bcc:	d114      	bne.n	8005bf8 <_vfiprintf_r+0xac>
 8005bce:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8005bd2:	2a00      	cmp	r2, #0
 8005bd4:	db10      	blt.n	8005bf8 <_vfiprintf_r+0xac>
 8005bd6:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8005bd8:	07d2      	lsls	r2, r2, #31
 8005bda:	d404      	bmi.n	8005be6 <_vfiprintf_r+0x9a>
 8005bdc:	059e      	lsls	r6, r3, #22
 8005bde:	d402      	bmi.n	8005be6 <_vfiprintf_r+0x9a>
 8005be0:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8005be2:	f7fe ff28 	bl	8004a36 <__retarget_lock_release_recursive>
 8005be6:	9a02      	ldr	r2, [sp, #8]
 8005be8:	462b      	mov	r3, r5
 8005bea:	4639      	mov	r1, r7
 8005bec:	4648      	mov	r0, r9
 8005bee:	b03b      	add	sp, #236	; 0xec
 8005bf0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bf4:	f000 bc38 	b.w	8006468 <__sbprintf>
 8005bf8:	2300      	movs	r3, #0
 8005bfa:	e9cd 330f 	strd	r3, r3, [sp, #60]	; 0x3c
 8005bfe:	e9cd 3306 	strd	r3, r3, [sp, #24]
 8005c02:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8005c06:	ae11      	add	r6, sp, #68	; 0x44
 8005c08:	960e      	str	r6, [sp, #56]	; 0x38
 8005c0a:	9303      	str	r3, [sp, #12]
 8005c0c:	9b02      	ldr	r3, [sp, #8]
 8005c0e:	461d      	mov	r5, r3
 8005c10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005c14:	b10a      	cbz	r2, 8005c1a <_vfiprintf_r+0xce>
 8005c16:	2a25      	cmp	r2, #37	; 0x25
 8005c18:	d1f9      	bne.n	8005c0e <_vfiprintf_r+0xc2>
 8005c1a:	9b02      	ldr	r3, [sp, #8]
 8005c1c:	ebb5 0803 	subs.w	r8, r5, r3
 8005c20:	d00d      	beq.n	8005c3e <_vfiprintf_r+0xf2>
 8005c22:	e9c6 3800 	strd	r3, r8, [r6]
 8005c26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c28:	4443      	add	r3, r8
 8005c2a:	9310      	str	r3, [sp, #64]	; 0x40
 8005c2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005c2e:	3301      	adds	r3, #1
 8005c30:	2b07      	cmp	r3, #7
 8005c32:	930f      	str	r3, [sp, #60]	; 0x3c
 8005c34:	dc75      	bgt.n	8005d22 <_vfiprintf_r+0x1d6>
 8005c36:	3608      	adds	r6, #8
 8005c38:	9b03      	ldr	r3, [sp, #12]
 8005c3a:	4443      	add	r3, r8
 8005c3c:	9303      	str	r3, [sp, #12]
 8005c3e:	782b      	ldrb	r3, [r5, #0]
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	f000 83d5 	beq.w	80063f0 <_vfiprintf_r+0x8a4>
 8005c46:	2300      	movs	r3, #0
 8005c48:	f04f 31ff 	mov.w	r1, #4294967295
 8005c4c:	1c6a      	adds	r2, r5, #1
 8005c4e:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8005c52:	9101      	str	r1, [sp, #4]
 8005c54:	9304      	str	r3, [sp, #16]
 8005c56:	469a      	mov	sl, r3
 8005c58:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005c5c:	9202      	str	r2, [sp, #8]
 8005c5e:	f1a3 0220 	sub.w	r2, r3, #32
 8005c62:	2a5a      	cmp	r2, #90	; 0x5a
 8005c64:	f200 831d 	bhi.w	80062a2 <_vfiprintf_r+0x756>
 8005c68:	e8df f012 	tbh	[pc, r2, lsl #1]
 8005c6c:	031b009a 	.word	0x031b009a
 8005c70:	00a2031b 	.word	0x00a2031b
 8005c74:	031b031b 	.word	0x031b031b
 8005c78:	0082031b 	.word	0x0082031b
 8005c7c:	031b031b 	.word	0x031b031b
 8005c80:	00af00a5 	.word	0x00af00a5
 8005c84:	00ac031b 	.word	0x00ac031b
 8005c88:	031b00b1 	.word	0x031b00b1
 8005c8c:	00cf00cc 	.word	0x00cf00cc
 8005c90:	00cf00cf 	.word	0x00cf00cf
 8005c94:	00cf00cf 	.word	0x00cf00cf
 8005c98:	00cf00cf 	.word	0x00cf00cf
 8005c9c:	00cf00cf 	.word	0x00cf00cf
 8005ca0:	031b031b 	.word	0x031b031b
 8005ca4:	031b031b 	.word	0x031b031b
 8005ca8:	031b031b 	.word	0x031b031b
 8005cac:	031b031b 	.word	0x031b031b
 8005cb0:	00f9031b 	.word	0x00f9031b
 8005cb4:	031b0107 	.word	0x031b0107
 8005cb8:	031b031b 	.word	0x031b031b
 8005cbc:	031b031b 	.word	0x031b031b
 8005cc0:	031b031b 	.word	0x031b031b
 8005cc4:	031b031b 	.word	0x031b031b
 8005cc8:	0157031b 	.word	0x0157031b
 8005ccc:	031b031b 	.word	0x031b031b
 8005cd0:	01a0031b 	.word	0x01a0031b
 8005cd4:	027d031b 	.word	0x027d031b
 8005cd8:	031b031b 	.word	0x031b031b
 8005cdc:	031b029d 	.word	0x031b029d
 8005ce0:	031b031b 	.word	0x031b031b
 8005ce4:	031b031b 	.word	0x031b031b
 8005ce8:	031b031b 	.word	0x031b031b
 8005cec:	031b031b 	.word	0x031b031b
 8005cf0:	00f9031b 	.word	0x00f9031b
 8005cf4:	031b0109 	.word	0x031b0109
 8005cf8:	031b031b 	.word	0x031b031b
 8005cfc:	010900df 	.word	0x010900df
 8005d00:	031b00f3 	.word	0x031b00f3
 8005d04:	031b00ec 	.word	0x031b00ec
 8005d08:	01590135 	.word	0x01590135
 8005d0c:	00f3018e 	.word	0x00f3018e
 8005d10:	01a0031b 	.word	0x01a0031b
 8005d14:	027f0098 	.word	0x027f0098
 8005d18:	031b031b 	.word	0x031b031b
 8005d1c:	031b0065 	.word	0x031b0065
 8005d20:	0098      	.short	0x0098
 8005d22:	aa0e      	add	r2, sp, #56	; 0x38
 8005d24:	4639      	mov	r1, r7
 8005d26:	4648      	mov	r0, r9
 8005d28:	f7ff fedd 	bl	8005ae6 <__sprint_r>
 8005d2c:	2800      	cmp	r0, #0
 8005d2e:	f040 833e 	bne.w	80063ae <_vfiprintf_r+0x862>
 8005d32:	ae11      	add	r6, sp, #68	; 0x44
 8005d34:	e780      	b.n	8005c38 <_vfiprintf_r+0xec>
 8005d36:	4a9c      	ldr	r2, [pc, #624]	; (8005fa8 <_vfiprintf_r+0x45c>)
 8005d38:	9206      	str	r2, [sp, #24]
 8005d3a:	f01a 0220 	ands.w	r2, sl, #32
 8005d3e:	f000 8234 	beq.w	80061aa <_vfiprintf_r+0x65e>
 8005d42:	3407      	adds	r4, #7
 8005d44:	f024 0207 	bic.w	r2, r4, #7
 8005d48:	4693      	mov	fp, r2
 8005d4a:	6855      	ldr	r5, [r2, #4]
 8005d4c:	f85b 4b08 	ldr.w	r4, [fp], #8
 8005d50:	f01a 0f01 	tst.w	sl, #1
 8005d54:	d009      	beq.n	8005d6a <_vfiprintf_r+0x21e>
 8005d56:	ea54 0205 	orrs.w	r2, r4, r5
 8005d5a:	bf1f      	itttt	ne
 8005d5c:	2230      	movne	r2, #48	; 0x30
 8005d5e:	f88d 2034 	strbne.w	r2, [sp, #52]	; 0x34
 8005d62:	f88d 3035 	strbne.w	r3, [sp, #53]	; 0x35
 8005d66:	f04a 0a02 	orrne.w	sl, sl, #2
 8005d6a:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8005d6e:	e119      	b.n	8005fa4 <_vfiprintf_r+0x458>
 8005d70:	4648      	mov	r0, r9
 8005d72:	f7fe fe59 	bl	8004a28 <_localeconv_r>
 8005d76:	6843      	ldr	r3, [r0, #4]
 8005d78:	9309      	str	r3, [sp, #36]	; 0x24
 8005d7a:	4618      	mov	r0, r3
 8005d7c:	f7fa fa38 	bl	80001f0 <strlen>
 8005d80:	9008      	str	r0, [sp, #32]
 8005d82:	4648      	mov	r0, r9
 8005d84:	f7fe fe50 	bl	8004a28 <_localeconv_r>
 8005d88:	6883      	ldr	r3, [r0, #8]
 8005d8a:	9307      	str	r3, [sp, #28]
 8005d8c:	9b08      	ldr	r3, [sp, #32]
 8005d8e:	b12b      	cbz	r3, 8005d9c <_vfiprintf_r+0x250>
 8005d90:	9b07      	ldr	r3, [sp, #28]
 8005d92:	b11b      	cbz	r3, 8005d9c <_vfiprintf_r+0x250>
 8005d94:	781b      	ldrb	r3, [r3, #0]
 8005d96:	b10b      	cbz	r3, 8005d9c <_vfiprintf_r+0x250>
 8005d98:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 8005d9c:	9a02      	ldr	r2, [sp, #8]
 8005d9e:	e75b      	b.n	8005c58 <_vfiprintf_r+0x10c>
 8005da0:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8005da4:	2b00      	cmp	r3, #0
 8005da6:	d1f9      	bne.n	8005d9c <_vfiprintf_r+0x250>
 8005da8:	2320      	movs	r3, #32
 8005daa:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8005dae:	e7f5      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005db0:	f04a 0a01 	orr.w	sl, sl, #1
 8005db4:	e7f2      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005db6:	f854 3b04 	ldr.w	r3, [r4], #4
 8005dba:	9304      	str	r3, [sp, #16]
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	daed      	bge.n	8005d9c <_vfiprintf_r+0x250>
 8005dc0:	425b      	negs	r3, r3
 8005dc2:	9304      	str	r3, [sp, #16]
 8005dc4:	f04a 0a04 	orr.w	sl, sl, #4
 8005dc8:	e7e8      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005dca:	232b      	movs	r3, #43	; 0x2b
 8005dcc:	e7ed      	b.n	8005daa <_vfiprintf_r+0x25e>
 8005dce:	9a02      	ldr	r2, [sp, #8]
 8005dd0:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005dd4:	2b2a      	cmp	r3, #42	; 0x2a
 8005dd6:	d112      	bne.n	8005dfe <_vfiprintf_r+0x2b2>
 8005dd8:	f854 0b04 	ldr.w	r0, [r4], #4
 8005ddc:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 8005de0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005de4:	e7da      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005de6:	9b01      	ldr	r3, [sp, #4]
 8005de8:	200a      	movs	r0, #10
 8005dea:	fb00 1303 	mla	r3, r0, r3, r1
 8005dee:	9301      	str	r3, [sp, #4]
 8005df0:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005df4:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8005df8:	2909      	cmp	r1, #9
 8005dfa:	d9f4      	bls.n	8005de6 <_vfiprintf_r+0x29a>
 8005dfc:	e72e      	b.n	8005c5c <_vfiprintf_r+0x110>
 8005dfe:	2100      	movs	r1, #0
 8005e00:	9101      	str	r1, [sp, #4]
 8005e02:	e7f7      	b.n	8005df4 <_vfiprintf_r+0x2a8>
 8005e04:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 8005e08:	e7c8      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005e0a:	2100      	movs	r1, #0
 8005e0c:	9a02      	ldr	r2, [sp, #8]
 8005e0e:	9104      	str	r1, [sp, #16]
 8005e10:	9904      	ldr	r1, [sp, #16]
 8005e12:	3b30      	subs	r3, #48	; 0x30
 8005e14:	200a      	movs	r0, #10
 8005e16:	fb00 3301 	mla	r3, r0, r1, r3
 8005e1a:	9304      	str	r3, [sp, #16]
 8005e1c:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005e20:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8005e24:	2909      	cmp	r1, #9
 8005e26:	d9f3      	bls.n	8005e10 <_vfiprintf_r+0x2c4>
 8005e28:	e718      	b.n	8005c5c <_vfiprintf_r+0x110>
 8005e2a:	9b02      	ldr	r3, [sp, #8]
 8005e2c:	781b      	ldrb	r3, [r3, #0]
 8005e2e:	2b68      	cmp	r3, #104	; 0x68
 8005e30:	bf01      	itttt	eq
 8005e32:	9b02      	ldreq	r3, [sp, #8]
 8005e34:	3301      	addeq	r3, #1
 8005e36:	9302      	streq	r3, [sp, #8]
 8005e38:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 8005e3c:	bf18      	it	ne
 8005e3e:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 8005e42:	e7ab      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005e44:	9b02      	ldr	r3, [sp, #8]
 8005e46:	781b      	ldrb	r3, [r3, #0]
 8005e48:	2b6c      	cmp	r3, #108	; 0x6c
 8005e4a:	d105      	bne.n	8005e58 <_vfiprintf_r+0x30c>
 8005e4c:	9b02      	ldr	r3, [sp, #8]
 8005e4e:	3301      	adds	r3, #1
 8005e50:	9302      	str	r3, [sp, #8]
 8005e52:	f04a 0a20 	orr.w	sl, sl, #32
 8005e56:	e7a1      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005e58:	f04a 0a10 	orr.w	sl, sl, #16
 8005e5c:	e79e      	b.n	8005d9c <_vfiprintf_r+0x250>
 8005e5e:	46a3      	mov	fp, r4
 8005e60:	2100      	movs	r1, #0
 8005e62:	f85b 3b04 	ldr.w	r3, [fp], #4
 8005e66:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 8005e6a:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
 8005e6e:	2301      	movs	r3, #1
 8005e70:	9301      	str	r3, [sp, #4]
 8005e72:	460d      	mov	r5, r1
 8005e74:	f10d 0884 	add.w	r8, sp, #132	; 0x84
 8005e78:	e0ad      	b.n	8005fd6 <_vfiprintf_r+0x48a>
 8005e7a:	f04a 0a10 	orr.w	sl, sl, #16
 8005e7e:	f01a 0f20 	tst.w	sl, #32
 8005e82:	d011      	beq.n	8005ea8 <_vfiprintf_r+0x35c>
 8005e84:	3407      	adds	r4, #7
 8005e86:	f024 0307 	bic.w	r3, r4, #7
 8005e8a:	469b      	mov	fp, r3
 8005e8c:	685d      	ldr	r5, [r3, #4]
 8005e8e:	f85b 4b08 	ldr.w	r4, [fp], #8
 8005e92:	2d00      	cmp	r5, #0
 8005e94:	da06      	bge.n	8005ea4 <_vfiprintf_r+0x358>
 8005e96:	4264      	negs	r4, r4
 8005e98:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8005e9c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8005ea0:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8005ea4:	2301      	movs	r3, #1
 8005ea6:	e04a      	b.n	8005f3e <_vfiprintf_r+0x3f2>
 8005ea8:	46a3      	mov	fp, r4
 8005eaa:	f01a 0f10 	tst.w	sl, #16
 8005eae:	f85b 5b04 	ldr.w	r5, [fp], #4
 8005eb2:	d002      	beq.n	8005eba <_vfiprintf_r+0x36e>
 8005eb4:	462c      	mov	r4, r5
 8005eb6:	17ed      	asrs	r5, r5, #31
 8005eb8:	e7eb      	b.n	8005e92 <_vfiprintf_r+0x346>
 8005eba:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8005ebe:	d003      	beq.n	8005ec8 <_vfiprintf_r+0x37c>
 8005ec0:	b22c      	sxth	r4, r5
 8005ec2:	f345 35c0 	sbfx	r5, r5, #15, #1
 8005ec6:	e7e4      	b.n	8005e92 <_vfiprintf_r+0x346>
 8005ec8:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8005ecc:	d0f2      	beq.n	8005eb4 <_vfiprintf_r+0x368>
 8005ece:	b26c      	sxtb	r4, r5
 8005ed0:	f345 15c0 	sbfx	r5, r5, #7, #1
 8005ed4:	e7dd      	b.n	8005e92 <_vfiprintf_r+0x346>
 8005ed6:	f01a 0f20 	tst.w	sl, #32
 8005eda:	f104 0b04 	add.w	fp, r4, #4
 8005ede:	d007      	beq.n	8005ef0 <_vfiprintf_r+0x3a4>
 8005ee0:	9a03      	ldr	r2, [sp, #12]
 8005ee2:	6823      	ldr	r3, [r4, #0]
 8005ee4:	9903      	ldr	r1, [sp, #12]
 8005ee6:	17d2      	asrs	r2, r2, #31
 8005ee8:	e9c3 1200 	strd	r1, r2, [r3]
 8005eec:	465c      	mov	r4, fp
 8005eee:	e68d      	b.n	8005c0c <_vfiprintf_r+0xc0>
 8005ef0:	f01a 0f10 	tst.w	sl, #16
 8005ef4:	d003      	beq.n	8005efe <_vfiprintf_r+0x3b2>
 8005ef6:	6823      	ldr	r3, [r4, #0]
 8005ef8:	9a03      	ldr	r2, [sp, #12]
 8005efa:	601a      	str	r2, [r3, #0]
 8005efc:	e7f6      	b.n	8005eec <_vfiprintf_r+0x3a0>
 8005efe:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8005f02:	d003      	beq.n	8005f0c <_vfiprintf_r+0x3c0>
 8005f04:	6823      	ldr	r3, [r4, #0]
 8005f06:	9a03      	ldr	r2, [sp, #12]
 8005f08:	801a      	strh	r2, [r3, #0]
 8005f0a:	e7ef      	b.n	8005eec <_vfiprintf_r+0x3a0>
 8005f0c:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8005f10:	d0f1      	beq.n	8005ef6 <_vfiprintf_r+0x3aa>
 8005f12:	6823      	ldr	r3, [r4, #0]
 8005f14:	9a03      	ldr	r2, [sp, #12]
 8005f16:	701a      	strb	r2, [r3, #0]
 8005f18:	e7e8      	b.n	8005eec <_vfiprintf_r+0x3a0>
 8005f1a:	f04a 0a10 	orr.w	sl, sl, #16
 8005f1e:	f01a 0320 	ands.w	r3, sl, #32
 8005f22:	d01f      	beq.n	8005f64 <_vfiprintf_r+0x418>
 8005f24:	3407      	adds	r4, #7
 8005f26:	f024 0307 	bic.w	r3, r4, #7
 8005f2a:	469b      	mov	fp, r3
 8005f2c:	685d      	ldr	r5, [r3, #4]
 8005f2e:	f85b 4b08 	ldr.w	r4, [fp], #8
 8005f32:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8005f36:	2300      	movs	r3, #0
 8005f38:	2200      	movs	r2, #0
 8005f3a:	f88d 2033 	strb.w	r2, [sp, #51]	; 0x33
 8005f3e:	9a01      	ldr	r2, [sp, #4]
 8005f40:	3201      	adds	r2, #1
 8005f42:	f000 8262 	beq.w	800640a <_vfiprintf_r+0x8be>
 8005f46:	f02a 0280 	bic.w	r2, sl, #128	; 0x80
 8005f4a:	9205      	str	r2, [sp, #20]
 8005f4c:	ea54 0205 	orrs.w	r2, r4, r5
 8005f50:	f040 8261 	bne.w	8006416 <_vfiprintf_r+0x8ca>
 8005f54:	9a01      	ldr	r2, [sp, #4]
 8005f56:	2a00      	cmp	r2, #0
 8005f58:	f000 8198 	beq.w	800628c <_vfiprintf_r+0x740>
 8005f5c:	2b01      	cmp	r3, #1
 8005f5e:	f040 825d 	bne.w	800641c <_vfiprintf_r+0x8d0>
 8005f62:	e139      	b.n	80061d8 <_vfiprintf_r+0x68c>
 8005f64:	46a3      	mov	fp, r4
 8005f66:	f01a 0510 	ands.w	r5, sl, #16
 8005f6a:	f85b 4b04 	ldr.w	r4, [fp], #4
 8005f6e:	d001      	beq.n	8005f74 <_vfiprintf_r+0x428>
 8005f70:	461d      	mov	r5, r3
 8005f72:	e7de      	b.n	8005f32 <_vfiprintf_r+0x3e6>
 8005f74:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 8005f78:	d001      	beq.n	8005f7e <_vfiprintf_r+0x432>
 8005f7a:	b2a4      	uxth	r4, r4
 8005f7c:	e7d9      	b.n	8005f32 <_vfiprintf_r+0x3e6>
 8005f7e:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 8005f82:	d0d6      	beq.n	8005f32 <_vfiprintf_r+0x3e6>
 8005f84:	b2e4      	uxtb	r4, r4
 8005f86:	e7f3      	b.n	8005f70 <_vfiprintf_r+0x424>
 8005f88:	2330      	movs	r3, #48	; 0x30
 8005f8a:	46a3      	mov	fp, r4
 8005f8c:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
 8005f90:	2378      	movs	r3, #120	; 0x78
 8005f92:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
 8005f96:	f85b 4b04 	ldr.w	r4, [fp], #4
 8005f9a:	4b03      	ldr	r3, [pc, #12]	; (8005fa8 <_vfiprintf_r+0x45c>)
 8005f9c:	9306      	str	r3, [sp, #24]
 8005f9e:	2500      	movs	r5, #0
 8005fa0:	f04a 0a02 	orr.w	sl, sl, #2
 8005fa4:	2302      	movs	r3, #2
 8005fa6:	e7c7      	b.n	8005f38 <_vfiprintf_r+0x3ec>
 8005fa8:	080070d4 	.word	0x080070d4
 8005fac:	9b01      	ldr	r3, [sp, #4]
 8005fae:	46a3      	mov	fp, r4
 8005fb0:	2500      	movs	r5, #0
 8005fb2:	1c5c      	adds	r4, r3, #1
 8005fb4:	f85b 8b04 	ldr.w	r8, [fp], #4
 8005fb8:	f88d 5033 	strb.w	r5, [sp, #51]	; 0x33
 8005fbc:	f000 80ce 	beq.w	800615c <_vfiprintf_r+0x610>
 8005fc0:	461a      	mov	r2, r3
 8005fc2:	4629      	mov	r1, r5
 8005fc4:	4640      	mov	r0, r8
 8005fc6:	f7fa f91b 	bl	8000200 <memchr>
 8005fca:	2800      	cmp	r0, #0
 8005fcc:	f000 8173 	beq.w	80062b6 <_vfiprintf_r+0x76a>
 8005fd0:	eba0 0308 	sub.w	r3, r0, r8
 8005fd4:	9301      	str	r3, [sp, #4]
 8005fd6:	9b01      	ldr	r3, [sp, #4]
 8005fd8:	42ab      	cmp	r3, r5
 8005fda:	bfb8      	it	lt
 8005fdc:	462b      	movlt	r3, r5
 8005fde:	9305      	str	r3, [sp, #20]
 8005fe0:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8005fe4:	b113      	cbz	r3, 8005fec <_vfiprintf_r+0x4a0>
 8005fe6:	9b05      	ldr	r3, [sp, #20]
 8005fe8:	3301      	adds	r3, #1
 8005fea:	9305      	str	r3, [sp, #20]
 8005fec:	f01a 0302 	ands.w	r3, sl, #2
 8005ff0:	930a      	str	r3, [sp, #40]	; 0x28
 8005ff2:	bf1e      	ittt	ne
 8005ff4:	9b05      	ldrne	r3, [sp, #20]
 8005ff6:	3302      	addne	r3, #2
 8005ff8:	9305      	strne	r3, [sp, #20]
 8005ffa:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 8005ffe:	930b      	str	r3, [sp, #44]	; 0x2c
 8006000:	d11f      	bne.n	8006042 <_vfiprintf_r+0x4f6>
 8006002:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8006006:	1a9c      	subs	r4, r3, r2
 8006008:	2c00      	cmp	r4, #0
 800600a:	dd1a      	ble.n	8006042 <_vfiprintf_r+0x4f6>
 800600c:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 8006010:	48aa      	ldr	r0, [pc, #680]	; (80062bc <_vfiprintf_r+0x770>)
 8006012:	6030      	str	r0, [r6, #0]
 8006014:	2c10      	cmp	r4, #16
 8006016:	f103 0301 	add.w	r3, r3, #1
 800601a:	f106 0108 	add.w	r1, r6, #8
 800601e:	f300 8153 	bgt.w	80062c8 <_vfiprintf_r+0x77c>
 8006022:	6074      	str	r4, [r6, #4]
 8006024:	2b07      	cmp	r3, #7
 8006026:	4414      	add	r4, r2
 8006028:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 800602c:	f340 815e 	ble.w	80062ec <_vfiprintf_r+0x7a0>
 8006030:	aa0e      	add	r2, sp, #56	; 0x38
 8006032:	4639      	mov	r1, r7
 8006034:	4648      	mov	r0, r9
 8006036:	f7ff fd56 	bl	8005ae6 <__sprint_r>
 800603a:	2800      	cmp	r0, #0
 800603c:	f040 81b7 	bne.w	80063ae <_vfiprintf_r+0x862>
 8006040:	ae11      	add	r6, sp, #68	; 0x44
 8006042:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8006046:	b173      	cbz	r3, 8006066 <_vfiprintf_r+0x51a>
 8006048:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800604c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800604e:	6032      	str	r2, [r6, #0]
 8006050:	2201      	movs	r2, #1
 8006052:	6072      	str	r2, [r6, #4]
 8006054:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006056:	3301      	adds	r3, #1
 8006058:	3201      	adds	r2, #1
 800605a:	2b07      	cmp	r3, #7
 800605c:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006060:	f300 8146 	bgt.w	80062f0 <_vfiprintf_r+0x7a4>
 8006064:	3608      	adds	r6, #8
 8006066:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006068:	b16b      	cbz	r3, 8006086 <_vfiprintf_r+0x53a>
 800606a:	aa0d      	add	r2, sp, #52	; 0x34
 800606c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800606e:	6032      	str	r2, [r6, #0]
 8006070:	2202      	movs	r2, #2
 8006072:	6072      	str	r2, [r6, #4]
 8006074:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006076:	3301      	adds	r3, #1
 8006078:	3202      	adds	r2, #2
 800607a:	2b07      	cmp	r3, #7
 800607c:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006080:	f300 813f 	bgt.w	8006302 <_vfiprintf_r+0x7b6>
 8006084:	3608      	adds	r6, #8
 8006086:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006088:	2b80      	cmp	r3, #128	; 0x80
 800608a:	d11f      	bne.n	80060cc <_vfiprintf_r+0x580>
 800608c:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8006090:	1a9c      	subs	r4, r3, r2
 8006092:	2c00      	cmp	r4, #0
 8006094:	dd1a      	ble.n	80060cc <_vfiprintf_r+0x580>
 8006096:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 800609a:	4889      	ldr	r0, [pc, #548]	; (80062c0 <_vfiprintf_r+0x774>)
 800609c:	6030      	str	r0, [r6, #0]
 800609e:	2c10      	cmp	r4, #16
 80060a0:	f103 0301 	add.w	r3, r3, #1
 80060a4:	f106 0108 	add.w	r1, r6, #8
 80060a8:	f300 8134 	bgt.w	8006314 <_vfiprintf_r+0x7c8>
 80060ac:	6074      	str	r4, [r6, #4]
 80060ae:	2b07      	cmp	r3, #7
 80060b0:	4414      	add	r4, r2
 80060b2:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 80060b6:	f340 813f 	ble.w	8006338 <_vfiprintf_r+0x7ec>
 80060ba:	aa0e      	add	r2, sp, #56	; 0x38
 80060bc:	4639      	mov	r1, r7
 80060be:	4648      	mov	r0, r9
 80060c0:	f7ff fd11 	bl	8005ae6 <__sprint_r>
 80060c4:	2800      	cmp	r0, #0
 80060c6:	f040 8172 	bne.w	80063ae <_vfiprintf_r+0x862>
 80060ca:	ae11      	add	r6, sp, #68	; 0x44
 80060cc:	9b01      	ldr	r3, [sp, #4]
 80060ce:	1aec      	subs	r4, r5, r3
 80060d0:	2c00      	cmp	r4, #0
 80060d2:	dd1a      	ble.n	800610a <_vfiprintf_r+0x5be>
 80060d4:	4d7a      	ldr	r5, [pc, #488]	; (80062c0 <_vfiprintf_r+0x774>)
 80060d6:	6035      	str	r5, [r6, #0]
 80060d8:	e9dd 310f 	ldrd	r3, r1, [sp, #60]	; 0x3c
 80060dc:	2c10      	cmp	r4, #16
 80060de:	f103 0301 	add.w	r3, r3, #1
 80060e2:	f106 0208 	add.w	r2, r6, #8
 80060e6:	f300 8129 	bgt.w	800633c <_vfiprintf_r+0x7f0>
 80060ea:	6074      	str	r4, [r6, #4]
 80060ec:	2b07      	cmp	r3, #7
 80060ee:	440c      	add	r4, r1
 80060f0:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 80060f4:	f340 8133 	ble.w	800635e <_vfiprintf_r+0x812>
 80060f8:	aa0e      	add	r2, sp, #56	; 0x38
 80060fa:	4639      	mov	r1, r7
 80060fc:	4648      	mov	r0, r9
 80060fe:	f7ff fcf2 	bl	8005ae6 <__sprint_r>
 8006102:	2800      	cmp	r0, #0
 8006104:	f040 8153 	bne.w	80063ae <_vfiprintf_r+0x862>
 8006108:	ae11      	add	r6, sp, #68	; 0x44
 800610a:	9b01      	ldr	r3, [sp, #4]
 800610c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800610e:	6073      	str	r3, [r6, #4]
 8006110:	4418      	add	r0, r3
 8006112:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006114:	f8c6 8000 	str.w	r8, [r6]
 8006118:	3301      	adds	r3, #1
 800611a:	2b07      	cmp	r3, #7
 800611c:	9010      	str	r0, [sp, #64]	; 0x40
 800611e:	930f      	str	r3, [sp, #60]	; 0x3c
 8006120:	f300 811f 	bgt.w	8006362 <_vfiprintf_r+0x816>
 8006124:	f106 0308 	add.w	r3, r6, #8
 8006128:	f01a 0f04 	tst.w	sl, #4
 800612c:	f040 8121 	bne.w	8006372 <_vfiprintf_r+0x826>
 8006130:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 8006134:	9905      	ldr	r1, [sp, #20]
 8006136:	428a      	cmp	r2, r1
 8006138:	bfac      	ite	ge
 800613a:	189b      	addge	r3, r3, r2
 800613c:	185b      	addlt	r3, r3, r1
 800613e:	9303      	str	r3, [sp, #12]
 8006140:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006142:	b13b      	cbz	r3, 8006154 <_vfiprintf_r+0x608>
 8006144:	aa0e      	add	r2, sp, #56	; 0x38
 8006146:	4639      	mov	r1, r7
 8006148:	4648      	mov	r0, r9
 800614a:	f7ff fccc 	bl	8005ae6 <__sprint_r>
 800614e:	2800      	cmp	r0, #0
 8006150:	f040 812d 	bne.w	80063ae <_vfiprintf_r+0x862>
 8006154:	2300      	movs	r3, #0
 8006156:	930f      	str	r3, [sp, #60]	; 0x3c
 8006158:	ae11      	add	r6, sp, #68	; 0x44
 800615a:	e6c7      	b.n	8005eec <_vfiprintf_r+0x3a0>
 800615c:	4640      	mov	r0, r8
 800615e:	f7fa f847 	bl	80001f0 <strlen>
 8006162:	9001      	str	r0, [sp, #4]
 8006164:	e737      	b.n	8005fd6 <_vfiprintf_r+0x48a>
 8006166:	f04a 0a10 	orr.w	sl, sl, #16
 800616a:	f01a 0320 	ands.w	r3, sl, #32
 800616e:	d008      	beq.n	8006182 <_vfiprintf_r+0x636>
 8006170:	3407      	adds	r4, #7
 8006172:	f024 0307 	bic.w	r3, r4, #7
 8006176:	469b      	mov	fp, r3
 8006178:	685d      	ldr	r5, [r3, #4]
 800617a:	f85b 4b08 	ldr.w	r4, [fp], #8
 800617e:	2301      	movs	r3, #1
 8006180:	e6da      	b.n	8005f38 <_vfiprintf_r+0x3ec>
 8006182:	46a3      	mov	fp, r4
 8006184:	f01a 0510 	ands.w	r5, sl, #16
 8006188:	f85b 4b04 	ldr.w	r4, [fp], #4
 800618c:	d001      	beq.n	8006192 <_vfiprintf_r+0x646>
 800618e:	461d      	mov	r5, r3
 8006190:	e7f5      	b.n	800617e <_vfiprintf_r+0x632>
 8006192:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 8006196:	d001      	beq.n	800619c <_vfiprintf_r+0x650>
 8006198:	b2a4      	uxth	r4, r4
 800619a:	e7f0      	b.n	800617e <_vfiprintf_r+0x632>
 800619c:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 80061a0:	d0ed      	beq.n	800617e <_vfiprintf_r+0x632>
 80061a2:	b2e4      	uxtb	r4, r4
 80061a4:	e7f3      	b.n	800618e <_vfiprintf_r+0x642>
 80061a6:	4a47      	ldr	r2, [pc, #284]	; (80062c4 <_vfiprintf_r+0x778>)
 80061a8:	e5c6      	b.n	8005d38 <_vfiprintf_r+0x1ec>
 80061aa:	46a3      	mov	fp, r4
 80061ac:	f01a 0510 	ands.w	r5, sl, #16
 80061b0:	f85b 4b04 	ldr.w	r4, [fp], #4
 80061b4:	d001      	beq.n	80061ba <_vfiprintf_r+0x66e>
 80061b6:	4615      	mov	r5, r2
 80061b8:	e5ca      	b.n	8005d50 <_vfiprintf_r+0x204>
 80061ba:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
 80061be:	d001      	beq.n	80061c4 <_vfiprintf_r+0x678>
 80061c0:	b2a4      	uxth	r4, r4
 80061c2:	e5c5      	b.n	8005d50 <_vfiprintf_r+0x204>
 80061c4:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 80061c8:	f43f adc2 	beq.w	8005d50 <_vfiprintf_r+0x204>
 80061cc:	b2e4      	uxtb	r4, r4
 80061ce:	e7f2      	b.n	80061b6 <_vfiprintf_r+0x66a>
 80061d0:	2c0a      	cmp	r4, #10
 80061d2:	f175 0300 	sbcs.w	r3, r5, #0
 80061d6:	d205      	bcs.n	80061e4 <_vfiprintf_r+0x698>
 80061d8:	3430      	adds	r4, #48	; 0x30
 80061da:	f88d 40e7 	strb.w	r4, [sp, #231]	; 0xe7
 80061de:	f10d 08e7 	add.w	r8, sp, #231	; 0xe7
 80061e2:	e137      	b.n	8006454 <_vfiprintf_r+0x908>
 80061e4:	ab3a      	add	r3, sp, #232	; 0xe8
 80061e6:	930a      	str	r3, [sp, #40]	; 0x28
 80061e8:	9b05      	ldr	r3, [sp, #20]
 80061ea:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80061ee:	f04f 0a00 	mov.w	sl, #0
 80061f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80061f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80061f6:	220a      	movs	r2, #10
 80061f8:	f103 38ff 	add.w	r8, r3, #4294967295
 80061fc:	4620      	mov	r0, r4
 80061fe:	2300      	movs	r3, #0
 8006200:	4629      	mov	r1, r5
 8006202:	f7fa fce1 	bl	8000bc8 <__aeabi_uldivmod>
 8006206:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006208:	3230      	adds	r2, #48	; 0x30
 800620a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800620e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006210:	f10a 0a01 	add.w	sl, sl, #1
 8006214:	b1d3      	cbz	r3, 800624c <_vfiprintf_r+0x700>
 8006216:	9b07      	ldr	r3, [sp, #28]
 8006218:	781b      	ldrb	r3, [r3, #0]
 800621a:	4553      	cmp	r3, sl
 800621c:	d116      	bne.n	800624c <_vfiprintf_r+0x700>
 800621e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8006222:	d013      	beq.n	800624c <_vfiprintf_r+0x700>
 8006224:	2c0a      	cmp	r4, #10
 8006226:	f175 0300 	sbcs.w	r3, r5, #0
 800622a:	d30f      	bcc.n	800624c <_vfiprintf_r+0x700>
 800622c:	9b08      	ldr	r3, [sp, #32]
 800622e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006230:	eba8 0803 	sub.w	r8, r8, r3
 8006234:	461a      	mov	r2, r3
 8006236:	4640      	mov	r0, r8
 8006238:	f7ff fc35 	bl	8005aa6 <strncpy>
 800623c:	9b07      	ldr	r3, [sp, #28]
 800623e:	785b      	ldrb	r3, [r3, #1]
 8006240:	b1a3      	cbz	r3, 800626c <_vfiprintf_r+0x720>
 8006242:	9b07      	ldr	r3, [sp, #28]
 8006244:	3301      	adds	r3, #1
 8006246:	9307      	str	r3, [sp, #28]
 8006248:	f04f 0a00 	mov.w	sl, #0
 800624c:	2300      	movs	r3, #0
 800624e:	220a      	movs	r2, #10
 8006250:	4620      	mov	r0, r4
 8006252:	4629      	mov	r1, r5
 8006254:	f7fa fcb8 	bl	8000bc8 <__aeabi_uldivmod>
 8006258:	2c0a      	cmp	r4, #10
 800625a:	f175 0300 	sbcs.w	r3, r5, #0
 800625e:	f0c0 80f9 	bcc.w	8006454 <_vfiprintf_r+0x908>
 8006262:	4604      	mov	r4, r0
 8006264:	460d      	mov	r5, r1
 8006266:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800626a:	e7c3      	b.n	80061f4 <_vfiprintf_r+0x6a8>
 800626c:	469a      	mov	sl, r3
 800626e:	e7ed      	b.n	800624c <_vfiprintf_r+0x700>
 8006270:	f004 030f 	and.w	r3, r4, #15
 8006274:	9a06      	ldr	r2, [sp, #24]
 8006276:	0924      	lsrs	r4, r4, #4
 8006278:	5cd3      	ldrb	r3, [r2, r3]
 800627a:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800627e:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 8006282:	092d      	lsrs	r5, r5, #4
 8006284:	ea54 0305 	orrs.w	r3, r4, r5
 8006288:	d1f2      	bne.n	8006270 <_vfiprintf_r+0x724>
 800628a:	e0e3      	b.n	8006454 <_vfiprintf_r+0x908>
 800628c:	b933      	cbnz	r3, 800629c <_vfiprintf_r+0x750>
 800628e:	f01a 0f01 	tst.w	sl, #1
 8006292:	d003      	beq.n	800629c <_vfiprintf_r+0x750>
 8006294:	2330      	movs	r3, #48	; 0x30
 8006296:	f88d 30e7 	strb.w	r3, [sp, #231]	; 0xe7
 800629a:	e7a0      	b.n	80061de <_vfiprintf_r+0x692>
 800629c:	f10d 08e8 	add.w	r8, sp, #232	; 0xe8
 80062a0:	e0d8      	b.n	8006454 <_vfiprintf_r+0x908>
 80062a2:	2b00      	cmp	r3, #0
 80062a4:	f000 80a4 	beq.w	80063f0 <_vfiprintf_r+0x8a4>
 80062a8:	2100      	movs	r1, #0
 80062aa:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 80062ae:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
 80062b2:	46a3      	mov	fp, r4
 80062b4:	e5db      	b.n	8005e6e <_vfiprintf_r+0x322>
 80062b6:	4605      	mov	r5, r0
 80062b8:	e68d      	b.n	8005fd6 <_vfiprintf_r+0x48a>
 80062ba:	bf00      	nop
 80062bc:	080072ec 	.word	0x080072ec
 80062c0:	080072fc 	.word	0x080072fc
 80062c4:	080070e5 	.word	0x080070e5
 80062c8:	2010      	movs	r0, #16
 80062ca:	4402      	add	r2, r0
 80062cc:	2b07      	cmp	r3, #7
 80062ce:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 80062d2:	6070      	str	r0, [r6, #4]
 80062d4:	dd07      	ble.n	80062e6 <_vfiprintf_r+0x79a>
 80062d6:	aa0e      	add	r2, sp, #56	; 0x38
 80062d8:	4639      	mov	r1, r7
 80062da:	4648      	mov	r0, r9
 80062dc:	f7ff fc03 	bl	8005ae6 <__sprint_r>
 80062e0:	2800      	cmp	r0, #0
 80062e2:	d164      	bne.n	80063ae <_vfiprintf_r+0x862>
 80062e4:	a911      	add	r1, sp, #68	; 0x44
 80062e6:	3c10      	subs	r4, #16
 80062e8:	460e      	mov	r6, r1
 80062ea:	e68f      	b.n	800600c <_vfiprintf_r+0x4c0>
 80062ec:	460e      	mov	r6, r1
 80062ee:	e6a8      	b.n	8006042 <_vfiprintf_r+0x4f6>
 80062f0:	aa0e      	add	r2, sp, #56	; 0x38
 80062f2:	4639      	mov	r1, r7
 80062f4:	4648      	mov	r0, r9
 80062f6:	f7ff fbf6 	bl	8005ae6 <__sprint_r>
 80062fa:	2800      	cmp	r0, #0
 80062fc:	d157      	bne.n	80063ae <_vfiprintf_r+0x862>
 80062fe:	ae11      	add	r6, sp, #68	; 0x44
 8006300:	e6b1      	b.n	8006066 <_vfiprintf_r+0x51a>
 8006302:	aa0e      	add	r2, sp, #56	; 0x38
 8006304:	4639      	mov	r1, r7
 8006306:	4648      	mov	r0, r9
 8006308:	f7ff fbed 	bl	8005ae6 <__sprint_r>
 800630c:	2800      	cmp	r0, #0
 800630e:	d14e      	bne.n	80063ae <_vfiprintf_r+0x862>
 8006310:	ae11      	add	r6, sp, #68	; 0x44
 8006312:	e6b8      	b.n	8006086 <_vfiprintf_r+0x53a>
 8006314:	2010      	movs	r0, #16
 8006316:	4402      	add	r2, r0
 8006318:	2b07      	cmp	r3, #7
 800631a:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 800631e:	6070      	str	r0, [r6, #4]
 8006320:	dd07      	ble.n	8006332 <_vfiprintf_r+0x7e6>
 8006322:	aa0e      	add	r2, sp, #56	; 0x38
 8006324:	4639      	mov	r1, r7
 8006326:	4648      	mov	r0, r9
 8006328:	f7ff fbdd 	bl	8005ae6 <__sprint_r>
 800632c:	2800      	cmp	r0, #0
 800632e:	d13e      	bne.n	80063ae <_vfiprintf_r+0x862>
 8006330:	a911      	add	r1, sp, #68	; 0x44
 8006332:	3c10      	subs	r4, #16
 8006334:	460e      	mov	r6, r1
 8006336:	e6ae      	b.n	8006096 <_vfiprintf_r+0x54a>
 8006338:	460e      	mov	r6, r1
 800633a:	e6c7      	b.n	80060cc <_vfiprintf_r+0x580>
 800633c:	2010      	movs	r0, #16
 800633e:	4401      	add	r1, r0
 8006340:	2b07      	cmp	r3, #7
 8006342:	e9cd 310f 	strd	r3, r1, [sp, #60]	; 0x3c
 8006346:	6070      	str	r0, [r6, #4]
 8006348:	dd06      	ble.n	8006358 <_vfiprintf_r+0x80c>
 800634a:	aa0e      	add	r2, sp, #56	; 0x38
 800634c:	4639      	mov	r1, r7
 800634e:	4648      	mov	r0, r9
 8006350:	f7ff fbc9 	bl	8005ae6 <__sprint_r>
 8006354:	bb58      	cbnz	r0, 80063ae <_vfiprintf_r+0x862>
 8006356:	aa11      	add	r2, sp, #68	; 0x44
 8006358:	3c10      	subs	r4, #16
 800635a:	4616      	mov	r6, r2
 800635c:	e6bb      	b.n	80060d6 <_vfiprintf_r+0x58a>
 800635e:	4616      	mov	r6, r2
 8006360:	e6d3      	b.n	800610a <_vfiprintf_r+0x5be>
 8006362:	aa0e      	add	r2, sp, #56	; 0x38
 8006364:	4639      	mov	r1, r7
 8006366:	4648      	mov	r0, r9
 8006368:	f7ff fbbd 	bl	8005ae6 <__sprint_r>
 800636c:	b9f8      	cbnz	r0, 80063ae <_vfiprintf_r+0x862>
 800636e:	ab11      	add	r3, sp, #68	; 0x44
 8006370:	e6da      	b.n	8006128 <_vfiprintf_r+0x5dc>
 8006372:	e9dd 2104 	ldrd	r2, r1, [sp, #16]
 8006376:	1a54      	subs	r4, r2, r1
 8006378:	2c00      	cmp	r4, #0
 800637a:	f77f aed9 	ble.w	8006130 <_vfiprintf_r+0x5e4>
 800637e:	4d39      	ldr	r5, [pc, #228]	; (8006464 <_vfiprintf_r+0x918>)
 8006380:	2610      	movs	r6, #16
 8006382:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	; 0x3c
 8006386:	2c10      	cmp	r4, #16
 8006388:	f102 0201 	add.w	r2, r2, #1
 800638c:	601d      	str	r5, [r3, #0]
 800638e:	dc1d      	bgt.n	80063cc <_vfiprintf_r+0x880>
 8006390:	605c      	str	r4, [r3, #4]
 8006392:	2a07      	cmp	r2, #7
 8006394:	440c      	add	r4, r1
 8006396:	e9cd 240f 	strd	r2, r4, [sp, #60]	; 0x3c
 800639a:	f77f aec9 	ble.w	8006130 <_vfiprintf_r+0x5e4>
 800639e:	aa0e      	add	r2, sp, #56	; 0x38
 80063a0:	4639      	mov	r1, r7
 80063a2:	4648      	mov	r0, r9
 80063a4:	f7ff fb9f 	bl	8005ae6 <__sprint_r>
 80063a8:	2800      	cmp	r0, #0
 80063aa:	f43f aec1 	beq.w	8006130 <_vfiprintf_r+0x5e4>
 80063ae:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80063b0:	07d9      	lsls	r1, r3, #31
 80063b2:	d405      	bmi.n	80063c0 <_vfiprintf_r+0x874>
 80063b4:	89bb      	ldrh	r3, [r7, #12]
 80063b6:	059a      	lsls	r2, r3, #22
 80063b8:	d402      	bmi.n	80063c0 <_vfiprintf_r+0x874>
 80063ba:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80063bc:	f7fe fb3b 	bl	8004a36 <__retarget_lock_release_recursive>
 80063c0:	89bb      	ldrh	r3, [r7, #12]
 80063c2:	065b      	lsls	r3, r3, #25
 80063c4:	f57f abf3 	bpl.w	8005bae <_vfiprintf_r+0x62>
 80063c8:	f7ff bbee 	b.w	8005ba8 <_vfiprintf_r+0x5c>
 80063cc:	3110      	adds	r1, #16
 80063ce:	2a07      	cmp	r2, #7
 80063d0:	e9cd 210f 	strd	r2, r1, [sp, #60]	; 0x3c
 80063d4:	605e      	str	r6, [r3, #4]
 80063d6:	dc02      	bgt.n	80063de <_vfiprintf_r+0x892>
 80063d8:	3308      	adds	r3, #8
 80063da:	3c10      	subs	r4, #16
 80063dc:	e7d1      	b.n	8006382 <_vfiprintf_r+0x836>
 80063de:	aa0e      	add	r2, sp, #56	; 0x38
 80063e0:	4639      	mov	r1, r7
 80063e2:	4648      	mov	r0, r9
 80063e4:	f7ff fb7f 	bl	8005ae6 <__sprint_r>
 80063e8:	2800      	cmp	r0, #0
 80063ea:	d1e0      	bne.n	80063ae <_vfiprintf_r+0x862>
 80063ec:	ab11      	add	r3, sp, #68	; 0x44
 80063ee:	e7f4      	b.n	80063da <_vfiprintf_r+0x88e>
 80063f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80063f2:	b913      	cbnz	r3, 80063fa <_vfiprintf_r+0x8ae>
 80063f4:	2300      	movs	r3, #0
 80063f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80063f8:	e7d9      	b.n	80063ae <_vfiprintf_r+0x862>
 80063fa:	aa0e      	add	r2, sp, #56	; 0x38
 80063fc:	4639      	mov	r1, r7
 80063fe:	4648      	mov	r0, r9
 8006400:	f7ff fb71 	bl	8005ae6 <__sprint_r>
 8006404:	2800      	cmp	r0, #0
 8006406:	d0f5      	beq.n	80063f4 <_vfiprintf_r+0x8a8>
 8006408:	e7d1      	b.n	80063ae <_vfiprintf_r+0x862>
 800640a:	ea54 0205 	orrs.w	r2, r4, r5
 800640e:	f8cd a014 	str.w	sl, [sp, #20]
 8006412:	f43f ada3 	beq.w	8005f5c <_vfiprintf_r+0x410>
 8006416:	2b01      	cmp	r3, #1
 8006418:	f43f aeda 	beq.w	80061d0 <_vfiprintf_r+0x684>
 800641c:	2b02      	cmp	r3, #2
 800641e:	f10d 08e8 	add.w	r8, sp, #232	; 0xe8
 8006422:	f43f af25 	beq.w	8006270 <_vfiprintf_r+0x724>
 8006426:	f004 0307 	and.w	r3, r4, #7
 800642a:	08e4      	lsrs	r4, r4, #3
 800642c:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 8006430:	08ed      	lsrs	r5, r5, #3
 8006432:	3330      	adds	r3, #48	; 0x30
 8006434:	ea54 0105 	orrs.w	r1, r4, r5
 8006438:	4642      	mov	r2, r8
 800643a:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800643e:	d1f2      	bne.n	8006426 <_vfiprintf_r+0x8da>
 8006440:	9905      	ldr	r1, [sp, #20]
 8006442:	07c8      	lsls	r0, r1, #31
 8006444:	d506      	bpl.n	8006454 <_vfiprintf_r+0x908>
 8006446:	2b30      	cmp	r3, #48	; 0x30
 8006448:	d004      	beq.n	8006454 <_vfiprintf_r+0x908>
 800644a:	2330      	movs	r3, #48	; 0x30
 800644c:	f808 3c01 	strb.w	r3, [r8, #-1]
 8006450:	f1a2 0802 	sub.w	r8, r2, #2
 8006454:	ab3a      	add	r3, sp, #232	; 0xe8
 8006456:	eba3 0308 	sub.w	r3, r3, r8
 800645a:	9d01      	ldr	r5, [sp, #4]
 800645c:	f8dd a014 	ldr.w	sl, [sp, #20]
 8006460:	9301      	str	r3, [sp, #4]
 8006462:	e5b8      	b.n	8005fd6 <_vfiprintf_r+0x48a>
 8006464:	080072ec 	.word	0x080072ec

08006468 <__sbprintf>:
 8006468:	b5f0      	push	{r4, r5, r6, r7, lr}
 800646a:	461f      	mov	r7, r3
 800646c:	898b      	ldrh	r3, [r1, #12]
 800646e:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 8006472:	f023 0302 	bic.w	r3, r3, #2
 8006476:	f8ad 300c 	strh.w	r3, [sp, #12]
 800647a:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 800647c:	9319      	str	r3, [sp, #100]	; 0x64
 800647e:	89cb      	ldrh	r3, [r1, #14]
 8006480:	f8ad 300e 	strh.w	r3, [sp, #14]
 8006484:	69cb      	ldr	r3, [r1, #28]
 8006486:	9307      	str	r3, [sp, #28]
 8006488:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 800648a:	9309      	str	r3, [sp, #36]	; 0x24
 800648c:	ab1a      	add	r3, sp, #104	; 0x68
 800648e:	9300      	str	r3, [sp, #0]
 8006490:	9304      	str	r3, [sp, #16]
 8006492:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006496:	4615      	mov	r5, r2
 8006498:	4606      	mov	r6, r0
 800649a:	9302      	str	r3, [sp, #8]
 800649c:	9305      	str	r3, [sp, #20]
 800649e:	a816      	add	r0, sp, #88	; 0x58
 80064a0:	2300      	movs	r3, #0
 80064a2:	460c      	mov	r4, r1
 80064a4:	9306      	str	r3, [sp, #24]
 80064a6:	f7fe fac3 	bl	8004a30 <__retarget_lock_init_recursive>
 80064aa:	462a      	mov	r2, r5
 80064ac:	463b      	mov	r3, r7
 80064ae:	4669      	mov	r1, sp
 80064b0:	4630      	mov	r0, r6
 80064b2:	f7ff fb4b 	bl	8005b4c <_vfiprintf_r>
 80064b6:	1e05      	subs	r5, r0, #0
 80064b8:	db07      	blt.n	80064ca <__sbprintf+0x62>
 80064ba:	4669      	mov	r1, sp
 80064bc:	4630      	mov	r0, r6
 80064be:	f7fd ff8f 	bl	80043e0 <_fflush_r>
 80064c2:	2800      	cmp	r0, #0
 80064c4:	bf18      	it	ne
 80064c6:	f04f 35ff 	movne.w	r5, #4294967295
 80064ca:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80064ce:	9816      	ldr	r0, [sp, #88]	; 0x58
 80064d0:	065b      	lsls	r3, r3, #25
 80064d2:	bf42      	ittt	mi
 80064d4:	89a3      	ldrhmi	r3, [r4, #12]
 80064d6:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 80064da:	81a3      	strhmi	r3, [r4, #12]
 80064dc:	f7fe faa9 	bl	8004a32 <__retarget_lock_close_recursive>
 80064e0:	4628      	mov	r0, r5
 80064e2:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 80064e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080064e8 <_write_r>:
 80064e8:	b538      	push	{r3, r4, r5, lr}
 80064ea:	4d07      	ldr	r5, [pc, #28]	; (8006508 <_write_r+0x20>)
 80064ec:	4604      	mov	r4, r0
 80064ee:	4608      	mov	r0, r1
 80064f0:	4611      	mov	r1, r2
 80064f2:	2200      	movs	r2, #0
 80064f4:	602a      	str	r2, [r5, #0]
 80064f6:	461a      	mov	r2, r3
 80064f8:	f000 fb45 	bl	8006b86 <_write>
 80064fc:	1c43      	adds	r3, r0, #1
 80064fe:	d102      	bne.n	8006506 <_write_r+0x1e>
 8006500:	682b      	ldr	r3, [r5, #0]
 8006502:	b103      	cbz	r3, 8006506 <_write_r+0x1e>
 8006504:	6023      	str	r3, [r4, #0]
 8006506:	bd38      	pop	{r3, r4, r5, pc}
 8006508:	20001040 	.word	0x20001040

0800650c <__register_exitproc>:
 800650c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006510:	f8df a074 	ldr.w	sl, [pc, #116]	; 8006588 <__register_exitproc+0x7c>
 8006514:	4606      	mov	r6, r0
 8006516:	f8da 0000 	ldr.w	r0, [sl]
 800651a:	4698      	mov	r8, r3
 800651c:	460f      	mov	r7, r1
 800651e:	4691      	mov	r9, r2
 8006520:	f7fe fa88 	bl	8004a34 <__retarget_lock_acquire_recursive>
 8006524:	4b19      	ldr	r3, [pc, #100]	; (800658c <__register_exitproc+0x80>)
 8006526:	681b      	ldr	r3, [r3, #0]
 8006528:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 800652c:	b91c      	cbnz	r4, 8006536 <__register_exitproc+0x2a>
 800652e:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8006532:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8006536:	6865      	ldr	r5, [r4, #4]
 8006538:	f8da 0000 	ldr.w	r0, [sl]
 800653c:	2d1f      	cmp	r5, #31
 800653e:	dd05      	ble.n	800654c <__register_exitproc+0x40>
 8006540:	f7fe fa79 	bl	8004a36 <__retarget_lock_release_recursive>
 8006544:	f04f 30ff 	mov.w	r0, #4294967295
 8006548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800654c:	b19e      	cbz	r6, 8006576 <__register_exitproc+0x6a>
 800654e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8006552:	2201      	movs	r2, #1
 8006554:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8006558:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 800655c:	40aa      	lsls	r2, r5
 800655e:	4313      	orrs	r3, r2
 8006560:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 8006564:	2e02      	cmp	r6, #2
 8006566:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800656a:	bf02      	ittt	eq
 800656c:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8006570:	4313      	orreq	r3, r2
 8006572:	f8c4 318c 	streq.w	r3, [r4, #396]	; 0x18c
 8006576:	1c6b      	adds	r3, r5, #1
 8006578:	3502      	adds	r5, #2
 800657a:	6063      	str	r3, [r4, #4]
 800657c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8006580:	f7fe fa59 	bl	8004a36 <__retarget_lock_release_recursive>
 8006584:	2000      	movs	r0, #0
 8006586:	e7df      	b.n	8006548 <__register_exitproc+0x3c>
 8006588:	20000638 	.word	0x20000638
 800658c:	080070c0 	.word	0x080070c0

08006590 <__assert_func>:
 8006590:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006592:	4614      	mov	r4, r2
 8006594:	461a      	mov	r2, r3
 8006596:	4b09      	ldr	r3, [pc, #36]	; (80065bc <__assert_func+0x2c>)
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	4605      	mov	r5, r0
 800659c:	68d8      	ldr	r0, [r3, #12]
 800659e:	b14c      	cbz	r4, 80065b4 <__assert_func+0x24>
 80065a0:	4b07      	ldr	r3, [pc, #28]	; (80065c0 <__assert_func+0x30>)
 80065a2:	9100      	str	r1, [sp, #0]
 80065a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80065a8:	4906      	ldr	r1, [pc, #24]	; (80065c4 <__assert_func+0x34>)
 80065aa:	462b      	mov	r3, r5
 80065ac:	f000 f8b2 	bl	8006714 <fiprintf>
 80065b0:	f000 f9f7 	bl	80069a2 <abort>
 80065b4:	4b04      	ldr	r3, [pc, #16]	; (80065c8 <__assert_func+0x38>)
 80065b6:	461c      	mov	r4, r3
 80065b8:	e7f3      	b.n	80065a2 <__assert_func+0x12>
 80065ba:	bf00      	nop
 80065bc:	2000020c 	.word	0x2000020c
 80065c0:	0800730c 	.word	0x0800730c
 80065c4:	08007319 	.word	0x08007319
 80065c8:	08007347 	.word	0x08007347

080065cc <_calloc_r>:
 80065cc:	b538      	push	{r3, r4, r5, lr}
 80065ce:	fba1 1502 	umull	r1, r5, r1, r2
 80065d2:	b92d      	cbnz	r5, 80065e0 <_calloc_r+0x14>
 80065d4:	f7fe fa9c 	bl	8004b10 <_malloc_r>
 80065d8:	4604      	mov	r4, r0
 80065da:	b938      	cbnz	r0, 80065ec <_calloc_r+0x20>
 80065dc:	4620      	mov	r0, r4
 80065de:	bd38      	pop	{r3, r4, r5, pc}
 80065e0:	f000 f83a 	bl	8006658 <__errno>
 80065e4:	230c      	movs	r3, #12
 80065e6:	6003      	str	r3, [r0, #0]
 80065e8:	2400      	movs	r4, #0
 80065ea:	e7f7      	b.n	80065dc <_calloc_r+0x10>
 80065ec:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80065f0:	f022 0203 	bic.w	r2, r2, #3
 80065f4:	3a04      	subs	r2, #4
 80065f6:	2a24      	cmp	r2, #36	; 0x24
 80065f8:	d819      	bhi.n	800662e <_calloc_r+0x62>
 80065fa:	2a13      	cmp	r2, #19
 80065fc:	d915      	bls.n	800662a <_calloc_r+0x5e>
 80065fe:	2a1b      	cmp	r2, #27
 8006600:	e9c0 5500 	strd	r5, r5, [r0]
 8006604:	d806      	bhi.n	8006614 <_calloc_r+0x48>
 8006606:	f100 0308 	add.w	r3, r0, #8
 800660a:	2200      	movs	r2, #0
 800660c:	e9c3 2200 	strd	r2, r2, [r3]
 8006610:	609a      	str	r2, [r3, #8]
 8006612:	e7e3      	b.n	80065dc <_calloc_r+0x10>
 8006614:	2a24      	cmp	r2, #36	; 0x24
 8006616:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800661a:	bf11      	iteee	ne
 800661c:	f100 0310 	addne.w	r3, r0, #16
 8006620:	6105      	streq	r5, [r0, #16]
 8006622:	f100 0318 	addeq.w	r3, r0, #24
 8006626:	6145      	streq	r5, [r0, #20]
 8006628:	e7ef      	b.n	800660a <_calloc_r+0x3e>
 800662a:	4603      	mov	r3, r0
 800662c:	e7ed      	b.n	800660a <_calloc_r+0x3e>
 800662e:	4629      	mov	r1, r5
 8006630:	f7fb fce0 	bl	8001ff4 <memset>
 8006634:	e7d2      	b.n	80065dc <_calloc_r+0x10>
	...

08006638 <_close_r>:
 8006638:	b538      	push	{r3, r4, r5, lr}
 800663a:	4d06      	ldr	r5, [pc, #24]	; (8006654 <_close_r+0x1c>)
 800663c:	2300      	movs	r3, #0
 800663e:	4604      	mov	r4, r0
 8006640:	4608      	mov	r0, r1
 8006642:	602b      	str	r3, [r5, #0]
 8006644:	f000 facc 	bl	8006be0 <_close>
 8006648:	1c43      	adds	r3, r0, #1
 800664a:	d102      	bne.n	8006652 <_close_r+0x1a>
 800664c:	682b      	ldr	r3, [r5, #0]
 800664e:	b103      	cbz	r3, 8006652 <_close_r+0x1a>
 8006650:	6023      	str	r3, [r4, #0]
 8006652:	bd38      	pop	{r3, r4, r5, pc}
 8006654:	20001040 	.word	0x20001040

08006658 <__errno>:
 8006658:	4b01      	ldr	r3, [pc, #4]	; (8006660 <__errno+0x8>)
 800665a:	6818      	ldr	r0, [r3, #0]
 800665c:	4770      	bx	lr
 800665e:	bf00      	nop
 8006660:	2000020c 	.word	0x2000020c

08006664 <_fclose_r>:
 8006664:	b570      	push	{r4, r5, r6, lr}
 8006666:	4606      	mov	r6, r0
 8006668:	460c      	mov	r4, r1
 800666a:	b911      	cbnz	r1, 8006672 <_fclose_r+0xe>
 800666c:	2500      	movs	r5, #0
 800666e:	4628      	mov	r0, r5
 8006670:	bd70      	pop	{r4, r5, r6, pc}
 8006672:	b118      	cbz	r0, 800667c <_fclose_r+0x18>
 8006674:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006676:	b90b      	cbnz	r3, 800667c <_fclose_r+0x18>
 8006678:	f7fd ff1e 	bl	80044b8 <__sinit>
 800667c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800667e:	07d8      	lsls	r0, r3, #31
 8006680:	d405      	bmi.n	800668e <_fclose_r+0x2a>
 8006682:	89a3      	ldrh	r3, [r4, #12]
 8006684:	0599      	lsls	r1, r3, #22
 8006686:	d402      	bmi.n	800668e <_fclose_r+0x2a>
 8006688:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800668a:	f7fe f9d3 	bl	8004a34 <__retarget_lock_acquire_recursive>
 800668e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006692:	b93b      	cbnz	r3, 80066a4 <_fclose_r+0x40>
 8006694:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8006696:	f015 0501 	ands.w	r5, r5, #1
 800669a:	d1e7      	bne.n	800666c <_fclose_r+0x8>
 800669c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800669e:	f7fe f9ca 	bl	8004a36 <__retarget_lock_release_recursive>
 80066a2:	e7e4      	b.n	800666e <_fclose_r+0xa>
 80066a4:	4621      	mov	r1, r4
 80066a6:	4630      	mov	r0, r6
 80066a8:	f7fd fe10 	bl	80042cc <__sflush_r>
 80066ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80066ae:	4605      	mov	r5, r0
 80066b0:	b133      	cbz	r3, 80066c0 <_fclose_r+0x5c>
 80066b2:	69e1      	ldr	r1, [r4, #28]
 80066b4:	4630      	mov	r0, r6
 80066b6:	4798      	blx	r3
 80066b8:	2800      	cmp	r0, #0
 80066ba:	bfb8      	it	lt
 80066bc:	f04f 35ff 	movlt.w	r5, #4294967295
 80066c0:	89a3      	ldrh	r3, [r4, #12]
 80066c2:	061a      	lsls	r2, r3, #24
 80066c4:	d503      	bpl.n	80066ce <_fclose_r+0x6a>
 80066c6:	6921      	ldr	r1, [r4, #16]
 80066c8:	4630      	mov	r0, r6
 80066ca:	f7fd ff85 	bl	80045d8 <_free_r>
 80066ce:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80066d0:	b141      	cbz	r1, 80066e4 <_fclose_r+0x80>
 80066d2:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80066d6:	4299      	cmp	r1, r3
 80066d8:	d002      	beq.n	80066e0 <_fclose_r+0x7c>
 80066da:	4630      	mov	r0, r6
 80066dc:	f7fd ff7c 	bl	80045d8 <_free_r>
 80066e0:	2300      	movs	r3, #0
 80066e2:	6323      	str	r3, [r4, #48]	; 0x30
 80066e4:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80066e6:	b121      	cbz	r1, 80066f2 <_fclose_r+0x8e>
 80066e8:	4630      	mov	r0, r6
 80066ea:	f7fd ff75 	bl	80045d8 <_free_r>
 80066ee:	2300      	movs	r3, #0
 80066f0:	6463      	str	r3, [r4, #68]	; 0x44
 80066f2:	f7fd fec9 	bl	8004488 <__sfp_lock_acquire>
 80066f6:	2300      	movs	r3, #0
 80066f8:	81a3      	strh	r3, [r4, #12]
 80066fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80066fc:	07db      	lsls	r3, r3, #31
 80066fe:	d402      	bmi.n	8006706 <_fclose_r+0xa2>
 8006700:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006702:	f7fe f998 	bl	8004a36 <__retarget_lock_release_recursive>
 8006706:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006708:	f7fe f993 	bl	8004a32 <__retarget_lock_close_recursive>
 800670c:	f7fd fec2 	bl	8004494 <__sfp_lock_release>
 8006710:	e7ad      	b.n	800666e <_fclose_r+0xa>
	...

08006714 <fiprintf>:
 8006714:	b40e      	push	{r1, r2, r3}
 8006716:	b503      	push	{r0, r1, lr}
 8006718:	4601      	mov	r1, r0
 800671a:	ab03      	add	r3, sp, #12
 800671c:	4805      	ldr	r0, [pc, #20]	; (8006734 <fiprintf+0x20>)
 800671e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006722:	6800      	ldr	r0, [r0, #0]
 8006724:	9301      	str	r3, [sp, #4]
 8006726:	f7ff fa11 	bl	8005b4c <_vfiprintf_r>
 800672a:	b002      	add	sp, #8
 800672c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006730:	b003      	add	sp, #12
 8006732:	4770      	bx	lr
 8006734:	2000020c 	.word	0x2000020c

08006738 <__fputwc>:
 8006738:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800673c:	4680      	mov	r8, r0
 800673e:	460e      	mov	r6, r1
 8006740:	4615      	mov	r5, r2
 8006742:	f000 f885 	bl	8006850 <__locale_mb_cur_max>
 8006746:	2801      	cmp	r0, #1
 8006748:	4604      	mov	r4, r0
 800674a:	d11b      	bne.n	8006784 <__fputwc+0x4c>
 800674c:	1e73      	subs	r3, r6, #1
 800674e:	2bfe      	cmp	r3, #254	; 0xfe
 8006750:	d818      	bhi.n	8006784 <__fputwc+0x4c>
 8006752:	f88d 6004 	strb.w	r6, [sp, #4]
 8006756:	2700      	movs	r7, #0
 8006758:	f10d 0904 	add.w	r9, sp, #4
 800675c:	42a7      	cmp	r7, r4
 800675e:	d020      	beq.n	80067a2 <__fputwc+0x6a>
 8006760:	68ab      	ldr	r3, [r5, #8]
 8006762:	f817 1009 	ldrb.w	r1, [r7, r9]
 8006766:	3b01      	subs	r3, #1
 8006768:	2b00      	cmp	r3, #0
 800676a:	60ab      	str	r3, [r5, #8]
 800676c:	da04      	bge.n	8006778 <__fputwc+0x40>
 800676e:	69aa      	ldr	r2, [r5, #24]
 8006770:	4293      	cmp	r3, r2
 8006772:	db1a      	blt.n	80067aa <__fputwc+0x72>
 8006774:	290a      	cmp	r1, #10
 8006776:	d018      	beq.n	80067aa <__fputwc+0x72>
 8006778:	682b      	ldr	r3, [r5, #0]
 800677a:	1c5a      	adds	r2, r3, #1
 800677c:	602a      	str	r2, [r5, #0]
 800677e:	7019      	strb	r1, [r3, #0]
 8006780:	3701      	adds	r7, #1
 8006782:	e7eb      	b.n	800675c <__fputwc+0x24>
 8006784:	4632      	mov	r2, r6
 8006786:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 800678a:	a901      	add	r1, sp, #4
 800678c:	4640      	mov	r0, r8
 800678e:	f000 f8e5 	bl	800695c <_wcrtomb_r>
 8006792:	1c42      	adds	r2, r0, #1
 8006794:	4604      	mov	r4, r0
 8006796:	d1de      	bne.n	8006756 <__fputwc+0x1e>
 8006798:	89ab      	ldrh	r3, [r5, #12]
 800679a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800679e:	81ab      	strh	r3, [r5, #12]
 80067a0:	4606      	mov	r6, r0
 80067a2:	4630      	mov	r0, r6
 80067a4:	b003      	add	sp, #12
 80067a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80067aa:	462a      	mov	r2, r5
 80067ac:	4640      	mov	r0, r8
 80067ae:	f000 f88b 	bl	80068c8 <__swbuf_r>
 80067b2:	1c43      	adds	r3, r0, #1
 80067b4:	d1e4      	bne.n	8006780 <__fputwc+0x48>
 80067b6:	4606      	mov	r6, r0
 80067b8:	e7f3      	b.n	80067a2 <__fputwc+0x6a>

080067ba <_fputwc_r>:
 80067ba:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80067bc:	07db      	lsls	r3, r3, #31
 80067be:	b570      	push	{r4, r5, r6, lr}
 80067c0:	4605      	mov	r5, r0
 80067c2:	460e      	mov	r6, r1
 80067c4:	4614      	mov	r4, r2
 80067c6:	d405      	bmi.n	80067d4 <_fputwc_r+0x1a>
 80067c8:	8993      	ldrh	r3, [r2, #12]
 80067ca:	0598      	lsls	r0, r3, #22
 80067cc:	d402      	bmi.n	80067d4 <_fputwc_r+0x1a>
 80067ce:	6d90      	ldr	r0, [r2, #88]	; 0x58
 80067d0:	f7fe f930 	bl	8004a34 <__retarget_lock_acquire_recursive>
 80067d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80067d8:	0499      	lsls	r1, r3, #18
 80067da:	d406      	bmi.n	80067ea <_fputwc_r+0x30>
 80067dc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80067e0:	81a3      	strh	r3, [r4, #12]
 80067e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80067e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80067e8:	6663      	str	r3, [r4, #100]	; 0x64
 80067ea:	4622      	mov	r2, r4
 80067ec:	4628      	mov	r0, r5
 80067ee:	4631      	mov	r1, r6
 80067f0:	f7ff ffa2 	bl	8006738 <__fputwc>
 80067f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80067f6:	07da      	lsls	r2, r3, #31
 80067f8:	4605      	mov	r5, r0
 80067fa:	d405      	bmi.n	8006808 <_fputwc_r+0x4e>
 80067fc:	89a3      	ldrh	r3, [r4, #12]
 80067fe:	059b      	lsls	r3, r3, #22
 8006800:	d402      	bmi.n	8006808 <_fputwc_r+0x4e>
 8006802:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006804:	f7fe f917 	bl	8004a36 <__retarget_lock_release_recursive>
 8006808:	4628      	mov	r0, r5
 800680a:	bd70      	pop	{r4, r5, r6, pc}

0800680c <_fstat_r>:
 800680c:	b538      	push	{r3, r4, r5, lr}
 800680e:	4d07      	ldr	r5, [pc, #28]	; (800682c <_fstat_r+0x20>)
 8006810:	2300      	movs	r3, #0
 8006812:	4604      	mov	r4, r0
 8006814:	4608      	mov	r0, r1
 8006816:	4611      	mov	r1, r2
 8006818:	602b      	str	r3, [r5, #0]
 800681a:	f000 fa4e 	bl	8006cba <_fstat>
 800681e:	1c43      	adds	r3, r0, #1
 8006820:	d102      	bne.n	8006828 <_fstat_r+0x1c>
 8006822:	682b      	ldr	r3, [r5, #0]
 8006824:	b103      	cbz	r3, 8006828 <_fstat_r+0x1c>
 8006826:	6023      	str	r3, [r4, #0]
 8006828:	bd38      	pop	{r3, r4, r5, pc}
 800682a:	bf00      	nop
 800682c:	20001040 	.word	0x20001040

08006830 <_isatty_r>:
 8006830:	b538      	push	{r3, r4, r5, lr}
 8006832:	4d06      	ldr	r5, [pc, #24]	; (800684c <_isatty_r+0x1c>)
 8006834:	2300      	movs	r3, #0
 8006836:	4604      	mov	r4, r0
 8006838:	4608      	mov	r0, r1
 800683a:	602b      	str	r3, [r5, #0]
 800683c:	f000 fbb0 	bl	8006fa0 <_isatty>
 8006840:	1c43      	adds	r3, r0, #1
 8006842:	d102      	bne.n	800684a <_isatty_r+0x1a>
 8006844:	682b      	ldr	r3, [r5, #0]
 8006846:	b103      	cbz	r3, 800684a <_isatty_r+0x1a>
 8006848:	6023      	str	r3, [r4, #0]
 800684a:	bd38      	pop	{r3, r4, r5, pc}
 800684c:	20001040 	.word	0x20001040

08006850 <__locale_mb_cur_max>:
 8006850:	4b01      	ldr	r3, [pc, #4]	; (8006858 <__locale_mb_cur_max+0x8>)
 8006852:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8006856:	4770      	bx	lr
 8006858:	20000a4c 	.word	0x20000a4c

0800685c <_lseek_r>:
 800685c:	b538      	push	{r3, r4, r5, lr}
 800685e:	4d07      	ldr	r5, [pc, #28]	; (800687c <_lseek_r+0x20>)
 8006860:	4604      	mov	r4, r0
 8006862:	4608      	mov	r0, r1
 8006864:	4611      	mov	r1, r2
 8006866:	2200      	movs	r2, #0
 8006868:	602a      	str	r2, [r5, #0]
 800686a:	461a      	mov	r2, r3
 800686c:	f000 f979 	bl	8006b62 <_lseek>
 8006870:	1c43      	adds	r3, r0, #1
 8006872:	d102      	bne.n	800687a <_lseek_r+0x1e>
 8006874:	682b      	ldr	r3, [r5, #0]
 8006876:	b103      	cbz	r3, 800687a <_lseek_r+0x1e>
 8006878:	6023      	str	r3, [r4, #0]
 800687a:	bd38      	pop	{r3, r4, r5, pc}
 800687c:	20001040 	.word	0x20001040

08006880 <__ascii_mbtowc>:
 8006880:	b082      	sub	sp, #8
 8006882:	b901      	cbnz	r1, 8006886 <__ascii_mbtowc+0x6>
 8006884:	a901      	add	r1, sp, #4
 8006886:	b142      	cbz	r2, 800689a <__ascii_mbtowc+0x1a>
 8006888:	b14b      	cbz	r3, 800689e <__ascii_mbtowc+0x1e>
 800688a:	7813      	ldrb	r3, [r2, #0]
 800688c:	600b      	str	r3, [r1, #0]
 800688e:	7812      	ldrb	r2, [r2, #0]
 8006890:	1e10      	subs	r0, r2, #0
 8006892:	bf18      	it	ne
 8006894:	2001      	movne	r0, #1
 8006896:	b002      	add	sp, #8
 8006898:	4770      	bx	lr
 800689a:	4610      	mov	r0, r2
 800689c:	e7fb      	b.n	8006896 <__ascii_mbtowc+0x16>
 800689e:	f06f 0001 	mvn.w	r0, #1
 80068a2:	e7f8      	b.n	8006896 <__ascii_mbtowc+0x16>

080068a4 <_read_r>:
 80068a4:	b538      	push	{r3, r4, r5, lr}
 80068a6:	4d07      	ldr	r5, [pc, #28]	; (80068c4 <_read_r+0x20>)
 80068a8:	4604      	mov	r4, r0
 80068aa:	4608      	mov	r0, r1
 80068ac:	4611      	mov	r1, r2
 80068ae:	2200      	movs	r2, #0
 80068b0:	602a      	str	r2, [r5, #0]
 80068b2:	461a      	mov	r2, r3
 80068b4:	f000 f8ff 	bl	8006ab6 <_read>
 80068b8:	1c43      	adds	r3, r0, #1
 80068ba:	d102      	bne.n	80068c2 <_read_r+0x1e>
 80068bc:	682b      	ldr	r3, [r5, #0]
 80068be:	b103      	cbz	r3, 80068c2 <_read_r+0x1e>
 80068c0:	6023      	str	r3, [r4, #0]
 80068c2:	bd38      	pop	{r3, r4, r5, pc}
 80068c4:	20001040 	.word	0x20001040

080068c8 <__swbuf_r>:
 80068c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068ca:	460e      	mov	r6, r1
 80068cc:	4614      	mov	r4, r2
 80068ce:	4605      	mov	r5, r0
 80068d0:	b118      	cbz	r0, 80068da <__swbuf_r+0x12>
 80068d2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80068d4:	b90b      	cbnz	r3, 80068da <__swbuf_r+0x12>
 80068d6:	f7fd fdef 	bl	80044b8 <__sinit>
 80068da:	69a3      	ldr	r3, [r4, #24]
 80068dc:	60a3      	str	r3, [r4, #8]
 80068de:	89a3      	ldrh	r3, [r4, #12]
 80068e0:	0719      	lsls	r1, r3, #28
 80068e2:	d529      	bpl.n	8006938 <__swbuf_r+0x70>
 80068e4:	6923      	ldr	r3, [r4, #16]
 80068e6:	b33b      	cbz	r3, 8006938 <__swbuf_r+0x70>
 80068e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80068ec:	b2f6      	uxtb	r6, r6
 80068ee:	049a      	lsls	r2, r3, #18
 80068f0:	4637      	mov	r7, r6
 80068f2:	d52a      	bpl.n	800694a <__swbuf_r+0x82>
 80068f4:	6823      	ldr	r3, [r4, #0]
 80068f6:	6920      	ldr	r0, [r4, #16]
 80068f8:	1a18      	subs	r0, r3, r0
 80068fa:	6963      	ldr	r3, [r4, #20]
 80068fc:	4283      	cmp	r3, r0
 80068fe:	dc04      	bgt.n	800690a <__swbuf_r+0x42>
 8006900:	4621      	mov	r1, r4
 8006902:	4628      	mov	r0, r5
 8006904:	f7fd fd6c 	bl	80043e0 <_fflush_r>
 8006908:	b9e0      	cbnz	r0, 8006944 <__swbuf_r+0x7c>
 800690a:	68a3      	ldr	r3, [r4, #8]
 800690c:	3b01      	subs	r3, #1
 800690e:	60a3      	str	r3, [r4, #8]
 8006910:	6823      	ldr	r3, [r4, #0]
 8006912:	1c5a      	adds	r2, r3, #1
 8006914:	6022      	str	r2, [r4, #0]
 8006916:	701e      	strb	r6, [r3, #0]
 8006918:	6962      	ldr	r2, [r4, #20]
 800691a:	1c43      	adds	r3, r0, #1
 800691c:	429a      	cmp	r2, r3
 800691e:	d004      	beq.n	800692a <__swbuf_r+0x62>
 8006920:	89a3      	ldrh	r3, [r4, #12]
 8006922:	07db      	lsls	r3, r3, #31
 8006924:	d506      	bpl.n	8006934 <__swbuf_r+0x6c>
 8006926:	2e0a      	cmp	r6, #10
 8006928:	d104      	bne.n	8006934 <__swbuf_r+0x6c>
 800692a:	4621      	mov	r1, r4
 800692c:	4628      	mov	r0, r5
 800692e:	f7fd fd57 	bl	80043e0 <_fflush_r>
 8006932:	b938      	cbnz	r0, 8006944 <__swbuf_r+0x7c>
 8006934:	4638      	mov	r0, r7
 8006936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006938:	4621      	mov	r1, r4
 800693a:	4628      	mov	r0, r5
 800693c:	f7fc fe20 	bl	8003580 <__swsetup_r>
 8006940:	2800      	cmp	r0, #0
 8006942:	d0d1      	beq.n	80068e8 <__swbuf_r+0x20>
 8006944:	f04f 37ff 	mov.w	r7, #4294967295
 8006948:	e7f4      	b.n	8006934 <__swbuf_r+0x6c>
 800694a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800694e:	81a3      	strh	r3, [r4, #12]
 8006950:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006952:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006956:	6663      	str	r3, [r4, #100]	; 0x64
 8006958:	e7cc      	b.n	80068f4 <__swbuf_r+0x2c>
	...

0800695c <_wcrtomb_r>:
 800695c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800695e:	4c09      	ldr	r4, [pc, #36]	; (8006984 <_wcrtomb_r+0x28>)
 8006960:	b085      	sub	sp, #20
 8006962:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 8006966:	4605      	mov	r5, r0
 8006968:	461e      	mov	r6, r3
 800696a:	b909      	cbnz	r1, 8006970 <_wcrtomb_r+0x14>
 800696c:	460a      	mov	r2, r1
 800696e:	a901      	add	r1, sp, #4
 8006970:	47b8      	blx	r7
 8006972:	1c43      	adds	r3, r0, #1
 8006974:	bf01      	itttt	eq
 8006976:	2300      	moveq	r3, #0
 8006978:	6033      	streq	r3, [r6, #0]
 800697a:	238a      	moveq	r3, #138	; 0x8a
 800697c:	602b      	streq	r3, [r5, #0]
 800697e:	b005      	add	sp, #20
 8006980:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006982:	bf00      	nop
 8006984:	20000a4c 	.word	0x20000a4c

08006988 <__ascii_wctomb>:
 8006988:	4603      	mov	r3, r0
 800698a:	4608      	mov	r0, r1
 800698c:	b141      	cbz	r1, 80069a0 <__ascii_wctomb+0x18>
 800698e:	2aff      	cmp	r2, #255	; 0xff
 8006990:	d904      	bls.n	800699c <__ascii_wctomb+0x14>
 8006992:	228a      	movs	r2, #138	; 0x8a
 8006994:	601a      	str	r2, [r3, #0]
 8006996:	f04f 30ff 	mov.w	r0, #4294967295
 800699a:	4770      	bx	lr
 800699c:	700a      	strb	r2, [r1, #0]
 800699e:	2001      	movs	r0, #1
 80069a0:	4770      	bx	lr

080069a2 <abort>:
 80069a2:	b508      	push	{r3, lr}
 80069a4:	2006      	movs	r0, #6
 80069a6:	f000 f82d 	bl	8006a04 <raise>
 80069aa:	2001      	movs	r0, #1
 80069ac:	f000 fb14 	bl	8006fd8 <_exit>

080069b0 <_raise_r>:
 80069b0:	291f      	cmp	r1, #31
 80069b2:	b538      	push	{r3, r4, r5, lr}
 80069b4:	4604      	mov	r4, r0
 80069b6:	460d      	mov	r5, r1
 80069b8:	d904      	bls.n	80069c4 <_raise_r+0x14>
 80069ba:	2316      	movs	r3, #22
 80069bc:	6003      	str	r3, [r0, #0]
 80069be:	f04f 30ff 	mov.w	r0, #4294967295
 80069c2:	bd38      	pop	{r3, r4, r5, pc}
 80069c4:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 80069c8:	b112      	cbz	r2, 80069d0 <_raise_r+0x20>
 80069ca:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80069ce:	b94b      	cbnz	r3, 80069e4 <_raise_r+0x34>
 80069d0:	4620      	mov	r0, r4
 80069d2:	f000 f831 	bl	8006a38 <_getpid_r>
 80069d6:	462a      	mov	r2, r5
 80069d8:	4601      	mov	r1, r0
 80069da:	4620      	mov	r0, r4
 80069dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80069e0:	f000 b818 	b.w	8006a14 <_kill_r>
 80069e4:	2b01      	cmp	r3, #1
 80069e6:	d00a      	beq.n	80069fe <_raise_r+0x4e>
 80069e8:	1c59      	adds	r1, r3, #1
 80069ea:	d103      	bne.n	80069f4 <_raise_r+0x44>
 80069ec:	2316      	movs	r3, #22
 80069ee:	6003      	str	r3, [r0, #0]
 80069f0:	2001      	movs	r0, #1
 80069f2:	e7e6      	b.n	80069c2 <_raise_r+0x12>
 80069f4:	2400      	movs	r4, #0
 80069f6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80069fa:	4628      	mov	r0, r5
 80069fc:	4798      	blx	r3
 80069fe:	2000      	movs	r0, #0
 8006a00:	e7df      	b.n	80069c2 <_raise_r+0x12>
	...

08006a04 <raise>:
 8006a04:	4b02      	ldr	r3, [pc, #8]	; (8006a10 <raise+0xc>)
 8006a06:	4601      	mov	r1, r0
 8006a08:	6818      	ldr	r0, [r3, #0]
 8006a0a:	f7ff bfd1 	b.w	80069b0 <_raise_r>
 8006a0e:	bf00      	nop
 8006a10:	2000020c 	.word	0x2000020c

08006a14 <_kill_r>:
 8006a14:	b538      	push	{r3, r4, r5, lr}
 8006a16:	4d07      	ldr	r5, [pc, #28]	; (8006a34 <_kill_r+0x20>)
 8006a18:	2300      	movs	r3, #0
 8006a1a:	4604      	mov	r4, r0
 8006a1c:	4608      	mov	r0, r1
 8006a1e:	4611      	mov	r1, r2
 8006a20:	602b      	str	r3, [r5, #0]
 8006a22:	f000 faf7 	bl	8007014 <_kill>
 8006a26:	1c43      	adds	r3, r0, #1
 8006a28:	d102      	bne.n	8006a30 <_kill_r+0x1c>
 8006a2a:	682b      	ldr	r3, [r5, #0]
 8006a2c:	b103      	cbz	r3, 8006a30 <_kill_r+0x1c>
 8006a2e:	6023      	str	r3, [r4, #0]
 8006a30:	bd38      	pop	{r3, r4, r5, pc}
 8006a32:	bf00      	nop
 8006a34:	20001040 	.word	0x20001040

08006a38 <_getpid_r>:
 8006a38:	f000 b8f8 	b.w	8006c2c <_getpid>

08006a3c <findslot>:
 8006a3c:	4b0a      	ldr	r3, [pc, #40]	; (8006a68 <findslot+0x2c>)
 8006a3e:	b510      	push	{r4, lr}
 8006a40:	4604      	mov	r4, r0
 8006a42:	6818      	ldr	r0, [r3, #0]
 8006a44:	b118      	cbz	r0, 8006a4e <findslot+0x12>
 8006a46:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006a48:	b90b      	cbnz	r3, 8006a4e <findslot+0x12>
 8006a4a:	f7fd fd35 	bl	80044b8 <__sinit>
 8006a4e:	2c13      	cmp	r4, #19
 8006a50:	d807      	bhi.n	8006a62 <findslot+0x26>
 8006a52:	4806      	ldr	r0, [pc, #24]	; (8006a6c <findslot+0x30>)
 8006a54:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8006a58:	3201      	adds	r2, #1
 8006a5a:	d002      	beq.n	8006a62 <findslot+0x26>
 8006a5c:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8006a60:	bd10      	pop	{r4, pc}
 8006a62:	2000      	movs	r0, #0
 8006a64:	e7fc      	b.n	8006a60 <findslot+0x24>
 8006a66:	bf00      	nop
 8006a68:	2000020c 	.word	0x2000020c
 8006a6c:	20001054 	.word	0x20001054

08006a70 <error>:
 8006a70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a72:	4604      	mov	r4, r0
 8006a74:	f7ff fdf0 	bl	8006658 <__errno>
 8006a78:	2613      	movs	r6, #19
 8006a7a:	4605      	mov	r5, r0
 8006a7c:	2700      	movs	r7, #0
 8006a7e:	4630      	mov	r0, r6
 8006a80:	4639      	mov	r1, r7
 8006a82:	beab      	bkpt	0x00ab
 8006a84:	4606      	mov	r6, r0
 8006a86:	602e      	str	r6, [r5, #0]
 8006a88:	4620      	mov	r0, r4
 8006a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006a8c <checkerror>:
 8006a8c:	1c43      	adds	r3, r0, #1
 8006a8e:	d101      	bne.n	8006a94 <checkerror+0x8>
 8006a90:	f7ff bfee 	b.w	8006a70 <error>
 8006a94:	4770      	bx	lr

08006a96 <_swiread>:
 8006a96:	b530      	push	{r4, r5, lr}
 8006a98:	b085      	sub	sp, #20
 8006a9a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8006a9e:	9203      	str	r2, [sp, #12]
 8006aa0:	2406      	movs	r4, #6
 8006aa2:	ad01      	add	r5, sp, #4
 8006aa4:	4620      	mov	r0, r4
 8006aa6:	4629      	mov	r1, r5
 8006aa8:	beab      	bkpt	0x00ab
 8006aaa:	4604      	mov	r4, r0
 8006aac:	4620      	mov	r0, r4
 8006aae:	f7ff ffed 	bl	8006a8c <checkerror>
 8006ab2:	b005      	add	sp, #20
 8006ab4:	bd30      	pop	{r4, r5, pc}

08006ab6 <_read>:
 8006ab6:	b570      	push	{r4, r5, r6, lr}
 8006ab8:	460e      	mov	r6, r1
 8006aba:	4615      	mov	r5, r2
 8006abc:	f7ff ffbe 	bl	8006a3c <findslot>
 8006ac0:	4604      	mov	r4, r0
 8006ac2:	b930      	cbnz	r0, 8006ad2 <_read+0x1c>
 8006ac4:	f7ff fdc8 	bl	8006658 <__errno>
 8006ac8:	2309      	movs	r3, #9
 8006aca:	6003      	str	r3, [r0, #0]
 8006acc:	f04f 30ff 	mov.w	r0, #4294967295
 8006ad0:	bd70      	pop	{r4, r5, r6, pc}
 8006ad2:	6800      	ldr	r0, [r0, #0]
 8006ad4:	462a      	mov	r2, r5
 8006ad6:	4631      	mov	r1, r6
 8006ad8:	f7ff ffdd 	bl	8006a96 <_swiread>
 8006adc:	1c43      	adds	r3, r0, #1
 8006ade:	bf1f      	itttt	ne
 8006ae0:	6863      	ldrne	r3, [r4, #4]
 8006ae2:	1a28      	subne	r0, r5, r0
 8006ae4:	181b      	addne	r3, r3, r0
 8006ae6:	6063      	strne	r3, [r4, #4]
 8006ae8:	e7f2      	b.n	8006ad0 <_read+0x1a>

08006aea <_swilseek>:
 8006aea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006aec:	460c      	mov	r4, r1
 8006aee:	4616      	mov	r6, r2
 8006af0:	f7ff ffa4 	bl	8006a3c <findslot>
 8006af4:	4605      	mov	r5, r0
 8006af6:	b940      	cbnz	r0, 8006b0a <_swilseek+0x20>
 8006af8:	f7ff fdae 	bl	8006658 <__errno>
 8006afc:	2309      	movs	r3, #9
 8006afe:	6003      	str	r3, [r0, #0]
 8006b00:	f04f 34ff 	mov.w	r4, #4294967295
 8006b04:	4620      	mov	r0, r4
 8006b06:	b003      	add	sp, #12
 8006b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006b0a:	2e02      	cmp	r6, #2
 8006b0c:	d903      	bls.n	8006b16 <_swilseek+0x2c>
 8006b0e:	f7ff fda3 	bl	8006658 <__errno>
 8006b12:	2316      	movs	r3, #22
 8006b14:	e7f3      	b.n	8006afe <_swilseek+0x14>
 8006b16:	2e01      	cmp	r6, #1
 8006b18:	d112      	bne.n	8006b40 <_swilseek+0x56>
 8006b1a:	6843      	ldr	r3, [r0, #4]
 8006b1c:	18e4      	adds	r4, r4, r3
 8006b1e:	d4f6      	bmi.n	8006b0e <_swilseek+0x24>
 8006b20:	682b      	ldr	r3, [r5, #0]
 8006b22:	260a      	movs	r6, #10
 8006b24:	e9cd 3400 	strd	r3, r4, [sp]
 8006b28:	466f      	mov	r7, sp
 8006b2a:	4630      	mov	r0, r6
 8006b2c:	4639      	mov	r1, r7
 8006b2e:	beab      	bkpt	0x00ab
 8006b30:	4606      	mov	r6, r0
 8006b32:	4630      	mov	r0, r6
 8006b34:	f7ff ffaa 	bl	8006a8c <checkerror>
 8006b38:	2800      	cmp	r0, #0
 8006b3a:	dbe1      	blt.n	8006b00 <_swilseek+0x16>
 8006b3c:	606c      	str	r4, [r5, #4]
 8006b3e:	e7e1      	b.n	8006b04 <_swilseek+0x1a>
 8006b40:	2e02      	cmp	r6, #2
 8006b42:	d1ed      	bne.n	8006b20 <_swilseek+0x36>
 8006b44:	6803      	ldr	r3, [r0, #0]
 8006b46:	9300      	str	r3, [sp, #0]
 8006b48:	260c      	movs	r6, #12
 8006b4a:	466f      	mov	r7, sp
 8006b4c:	4630      	mov	r0, r6
 8006b4e:	4639      	mov	r1, r7
 8006b50:	beab      	bkpt	0x00ab
 8006b52:	4606      	mov	r6, r0
 8006b54:	4630      	mov	r0, r6
 8006b56:	f7ff ff99 	bl	8006a8c <checkerror>
 8006b5a:	1c43      	adds	r3, r0, #1
 8006b5c:	d0d0      	beq.n	8006b00 <_swilseek+0x16>
 8006b5e:	4404      	add	r4, r0
 8006b60:	e7de      	b.n	8006b20 <_swilseek+0x36>

08006b62 <_lseek>:
 8006b62:	f7ff bfc2 	b.w	8006aea <_swilseek>

08006b66 <_swiwrite>:
 8006b66:	b530      	push	{r4, r5, lr}
 8006b68:	b085      	sub	sp, #20
 8006b6a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8006b6e:	9203      	str	r2, [sp, #12]
 8006b70:	2405      	movs	r4, #5
 8006b72:	ad01      	add	r5, sp, #4
 8006b74:	4620      	mov	r0, r4
 8006b76:	4629      	mov	r1, r5
 8006b78:	beab      	bkpt	0x00ab
 8006b7a:	4604      	mov	r4, r0
 8006b7c:	4620      	mov	r0, r4
 8006b7e:	f7ff ff85 	bl	8006a8c <checkerror>
 8006b82:	b005      	add	sp, #20
 8006b84:	bd30      	pop	{r4, r5, pc}

08006b86 <_write>:
 8006b86:	b570      	push	{r4, r5, r6, lr}
 8006b88:	460e      	mov	r6, r1
 8006b8a:	4615      	mov	r5, r2
 8006b8c:	f7ff ff56 	bl	8006a3c <findslot>
 8006b90:	4604      	mov	r4, r0
 8006b92:	b930      	cbnz	r0, 8006ba2 <_write+0x1c>
 8006b94:	f7ff fd60 	bl	8006658 <__errno>
 8006b98:	2309      	movs	r3, #9
 8006b9a:	6003      	str	r3, [r0, #0]
 8006b9c:	f04f 30ff 	mov.w	r0, #4294967295
 8006ba0:	bd70      	pop	{r4, r5, r6, pc}
 8006ba2:	6800      	ldr	r0, [r0, #0]
 8006ba4:	462a      	mov	r2, r5
 8006ba6:	4631      	mov	r1, r6
 8006ba8:	f7ff ffdd 	bl	8006b66 <_swiwrite>
 8006bac:	1e03      	subs	r3, r0, #0
 8006bae:	dbf5      	blt.n	8006b9c <_write+0x16>
 8006bb0:	6862      	ldr	r2, [r4, #4]
 8006bb2:	1ae8      	subs	r0, r5, r3
 8006bb4:	4402      	add	r2, r0
 8006bb6:	42ab      	cmp	r3, r5
 8006bb8:	6062      	str	r2, [r4, #4]
 8006bba:	d1f1      	bne.n	8006ba0 <_write+0x1a>
 8006bbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006bc0:	2000      	movs	r0, #0
 8006bc2:	f7ff bf55 	b.w	8006a70 <error>

08006bc6 <_swiclose>:
 8006bc6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006bc8:	2402      	movs	r4, #2
 8006bca:	9001      	str	r0, [sp, #4]
 8006bcc:	ad01      	add	r5, sp, #4
 8006bce:	4620      	mov	r0, r4
 8006bd0:	4629      	mov	r1, r5
 8006bd2:	beab      	bkpt	0x00ab
 8006bd4:	4604      	mov	r4, r0
 8006bd6:	4620      	mov	r0, r4
 8006bd8:	f7ff ff58 	bl	8006a8c <checkerror>
 8006bdc:	b003      	add	sp, #12
 8006bde:	bd30      	pop	{r4, r5, pc}

08006be0 <_close>:
 8006be0:	b538      	push	{r3, r4, r5, lr}
 8006be2:	4605      	mov	r5, r0
 8006be4:	f7ff ff2a 	bl	8006a3c <findslot>
 8006be8:	4604      	mov	r4, r0
 8006bea:	b930      	cbnz	r0, 8006bfa <_close+0x1a>
 8006bec:	f7ff fd34 	bl	8006658 <__errno>
 8006bf0:	2309      	movs	r3, #9
 8006bf2:	6003      	str	r3, [r0, #0]
 8006bf4:	f04f 30ff 	mov.w	r0, #4294967295
 8006bf8:	bd38      	pop	{r3, r4, r5, pc}
 8006bfa:	3d01      	subs	r5, #1
 8006bfc:	2d01      	cmp	r5, #1
 8006bfe:	d809      	bhi.n	8006c14 <_close+0x34>
 8006c00:	4b09      	ldr	r3, [pc, #36]	; (8006c28 <_close+0x48>)
 8006c02:	689a      	ldr	r2, [r3, #8]
 8006c04:	691b      	ldr	r3, [r3, #16]
 8006c06:	429a      	cmp	r2, r3
 8006c08:	d104      	bne.n	8006c14 <_close+0x34>
 8006c0a:	f04f 33ff 	mov.w	r3, #4294967295
 8006c0e:	6003      	str	r3, [r0, #0]
 8006c10:	2000      	movs	r0, #0
 8006c12:	e7f1      	b.n	8006bf8 <_close+0x18>
 8006c14:	6820      	ldr	r0, [r4, #0]
 8006c16:	f7ff ffd6 	bl	8006bc6 <_swiclose>
 8006c1a:	2800      	cmp	r0, #0
 8006c1c:	d1ec      	bne.n	8006bf8 <_close+0x18>
 8006c1e:	f04f 33ff 	mov.w	r3, #4294967295
 8006c22:	6023      	str	r3, [r4, #0]
 8006c24:	e7e8      	b.n	8006bf8 <_close+0x18>
 8006c26:	bf00      	nop
 8006c28:	20001054 	.word	0x20001054

08006c2c <_getpid>:
 8006c2c:	2001      	movs	r0, #1
 8006c2e:	4770      	bx	lr

08006c30 <_sbrk>:
 8006c30:	4a0d      	ldr	r2, [pc, #52]	; (8006c68 <_sbrk+0x38>)
 8006c32:	6811      	ldr	r1, [r2, #0]
 8006c34:	b510      	push	{r4, lr}
 8006c36:	4603      	mov	r3, r0
 8006c38:	b909      	cbnz	r1, 8006c3e <_sbrk+0xe>
 8006c3a:	490c      	ldr	r1, [pc, #48]	; (8006c6c <_sbrk+0x3c>)
 8006c3c:	6011      	str	r1, [r2, #0]
 8006c3e:	6810      	ldr	r0, [r2, #0]
 8006c40:	4669      	mov	r1, sp
 8006c42:	4403      	add	r3, r0
 8006c44:	428b      	cmp	r3, r1
 8006c46:	d806      	bhi.n	8006c56 <_sbrk+0x26>
 8006c48:	4909      	ldr	r1, [pc, #36]	; (8006c70 <_sbrk+0x40>)
 8006c4a:	4c0a      	ldr	r4, [pc, #40]	; (8006c74 <_sbrk+0x44>)
 8006c4c:	6809      	ldr	r1, [r1, #0]
 8006c4e:	42a1      	cmp	r1, r4
 8006c50:	d008      	beq.n	8006c64 <_sbrk+0x34>
 8006c52:	428b      	cmp	r3, r1
 8006c54:	d906      	bls.n	8006c64 <_sbrk+0x34>
 8006c56:	f7ff fcff 	bl	8006658 <__errno>
 8006c5a:	230c      	movs	r3, #12
 8006c5c:	6003      	str	r3, [r0, #0]
 8006c5e:	f04f 30ff 	mov.w	r0, #4294967295
 8006c62:	bd10      	pop	{r4, pc}
 8006c64:	6013      	str	r3, [r2, #0]
 8006c66:	e7fc      	b.n	8006c62 <_sbrk+0x32>
 8006c68:	20001044 	.word	0x20001044
 8006c6c:	200010f8 	.word	0x200010f8
 8006c70:	20000bb8 	.word	0x20000bb8
 8006c74:	cafedead 	.word	0xcafedead

08006c78 <_swistat>:
 8006c78:	b570      	push	{r4, r5, r6, lr}
 8006c7a:	460c      	mov	r4, r1
 8006c7c:	f7ff fede 	bl	8006a3c <findslot>
 8006c80:	4605      	mov	r5, r0
 8006c82:	b930      	cbnz	r0, 8006c92 <_swistat+0x1a>
 8006c84:	f7ff fce8 	bl	8006658 <__errno>
 8006c88:	2309      	movs	r3, #9
 8006c8a:	6003      	str	r3, [r0, #0]
 8006c8c:	f04f 30ff 	mov.w	r0, #4294967295
 8006c90:	bd70      	pop	{r4, r5, r6, pc}
 8006c92:	6863      	ldr	r3, [r4, #4]
 8006c94:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006c98:	6063      	str	r3, [r4, #4]
 8006c9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006c9e:	64a3      	str	r3, [r4, #72]	; 0x48
 8006ca0:	260c      	movs	r6, #12
 8006ca2:	4630      	mov	r0, r6
 8006ca4:	4629      	mov	r1, r5
 8006ca6:	beab      	bkpt	0x00ab
 8006ca8:	4605      	mov	r5, r0
 8006caa:	4628      	mov	r0, r5
 8006cac:	f7ff feee 	bl	8006a8c <checkerror>
 8006cb0:	1c43      	adds	r3, r0, #1
 8006cb2:	bf1c      	itt	ne
 8006cb4:	6120      	strne	r0, [r4, #16]
 8006cb6:	2000      	movne	r0, #0
 8006cb8:	e7ea      	b.n	8006c90 <_swistat+0x18>

08006cba <_fstat>:
 8006cba:	460b      	mov	r3, r1
 8006cbc:	b510      	push	{r4, lr}
 8006cbe:	2100      	movs	r1, #0
 8006cc0:	4604      	mov	r4, r0
 8006cc2:	2258      	movs	r2, #88	; 0x58
 8006cc4:	4618      	mov	r0, r3
 8006cc6:	f7fb f995 	bl	8001ff4 <memset>
 8006cca:	4601      	mov	r1, r0
 8006ccc:	4620      	mov	r0, r4
 8006cce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006cd2:	f7ff bfd1 	b.w	8006c78 <_swistat>

08006cd6 <_stat>:
 8006cd6:	b538      	push	{r3, r4, r5, lr}
 8006cd8:	460d      	mov	r5, r1
 8006cda:	4604      	mov	r4, r0
 8006cdc:	2258      	movs	r2, #88	; 0x58
 8006cde:	2100      	movs	r1, #0
 8006ce0:	4628      	mov	r0, r5
 8006ce2:	f7fb f987 	bl	8001ff4 <memset>
 8006ce6:	4620      	mov	r0, r4
 8006ce8:	2100      	movs	r1, #0
 8006cea:	f000 f811 	bl	8006d10 <_swiopen>
 8006cee:	1c43      	adds	r3, r0, #1
 8006cf0:	4604      	mov	r4, r0
 8006cf2:	d00b      	beq.n	8006d0c <_stat+0x36>
 8006cf4:	686b      	ldr	r3, [r5, #4]
 8006cf6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8006cfa:	606b      	str	r3, [r5, #4]
 8006cfc:	4629      	mov	r1, r5
 8006cfe:	f7ff ffbb 	bl	8006c78 <_swistat>
 8006d02:	4605      	mov	r5, r0
 8006d04:	4620      	mov	r0, r4
 8006d06:	f7ff ff6b 	bl	8006be0 <_close>
 8006d0a:	462c      	mov	r4, r5
 8006d0c:	4620      	mov	r0, r4
 8006d0e:	bd38      	pop	{r3, r4, r5, pc}

08006d10 <_swiopen>:
 8006d10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d14:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8006dc0 <_swiopen+0xb0>
 8006d18:	b097      	sub	sp, #92	; 0x5c
 8006d1a:	4607      	mov	r7, r0
 8006d1c:	460e      	mov	r6, r1
 8006d1e:	2500      	movs	r5, #0
 8006d20:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 8006d24:	1c61      	adds	r1, r4, #1
 8006d26:	d037      	beq.n	8006d98 <_swiopen+0x88>
 8006d28:	3501      	adds	r5, #1
 8006d2a:	2d14      	cmp	r5, #20
 8006d2c:	d1f8      	bne.n	8006d20 <_swiopen+0x10>
 8006d2e:	f7ff fc93 	bl	8006658 <__errno>
 8006d32:	2318      	movs	r3, #24
 8006d34:	6003      	str	r3, [r0, #0]
 8006d36:	f04f 34ff 	mov.w	r4, #4294967295
 8006d3a:	e03d      	b.n	8006db8 <_swiopen+0xa8>
 8006d3c:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8006d40:	f240 6301 	movw	r3, #1537	; 0x601
 8006d44:	07b2      	lsls	r2, r6, #30
 8006d46:	bf48      	it	mi
 8006d48:	f044 0402 	orrmi.w	r4, r4, #2
 8006d4c:	421e      	tst	r6, r3
 8006d4e:	bf18      	it	ne
 8006d50:	f044 0404 	orrne.w	r4, r4, #4
 8006d54:	0733      	lsls	r3, r6, #28
 8006d56:	bf48      	it	mi
 8006d58:	f024 0404 	bicmi.w	r4, r4, #4
 8006d5c:	4638      	mov	r0, r7
 8006d5e:	bf48      	it	mi
 8006d60:	f044 0408 	orrmi.w	r4, r4, #8
 8006d64:	9700      	str	r7, [sp, #0]
 8006d66:	f7f9 fa43 	bl	80001f0 <strlen>
 8006d6a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8006d6e:	2401      	movs	r4, #1
 8006d70:	4620      	mov	r0, r4
 8006d72:	4649      	mov	r1, r9
 8006d74:	beab      	bkpt	0x00ab
 8006d76:	4604      	mov	r4, r0
 8006d78:	2c00      	cmp	r4, #0
 8006d7a:	db08      	blt.n	8006d8e <_swiopen+0x7e>
 8006d7c:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8006d80:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 8006d84:	2300      	movs	r3, #0
 8006d86:	f8c8 3004 	str.w	r3, [r8, #4]
 8006d8a:	462c      	mov	r4, r5
 8006d8c:	e014      	b.n	8006db8 <_swiopen+0xa8>
 8006d8e:	4620      	mov	r0, r4
 8006d90:	f7ff fe6e 	bl	8006a70 <error>
 8006d94:	4604      	mov	r4, r0
 8006d96:	e00f      	b.n	8006db8 <_swiopen+0xa8>
 8006d98:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 8006d9c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8006da0:	46e9      	mov	r9, sp
 8006da2:	d1cb      	bne.n	8006d3c <_swiopen+0x2c>
 8006da4:	4649      	mov	r1, r9
 8006da6:	4638      	mov	r0, r7
 8006da8:	f7ff ff95 	bl	8006cd6 <_stat>
 8006dac:	3001      	adds	r0, #1
 8006dae:	d0c5      	beq.n	8006d3c <_swiopen+0x2c>
 8006db0:	f7ff fc52 	bl	8006658 <__errno>
 8006db4:	2311      	movs	r3, #17
 8006db6:	6003      	str	r3, [r0, #0]
 8006db8:	4620      	mov	r0, r4
 8006dba:	b017      	add	sp, #92	; 0x5c
 8006dbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006dc0:	20001054 	.word	0x20001054

08006dc4 <_get_semihosting_exts>:
 8006dc4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006dc8:	4606      	mov	r6, r0
 8006dca:	460f      	mov	r7, r1
 8006dcc:	482a      	ldr	r0, [pc, #168]	; (8006e78 <_get_semihosting_exts+0xb4>)
 8006dce:	2100      	movs	r1, #0
 8006dd0:	4615      	mov	r5, r2
 8006dd2:	f7ff ff9d 	bl	8006d10 <_swiopen>
 8006dd6:	462a      	mov	r2, r5
 8006dd8:	4604      	mov	r4, r0
 8006dda:	2100      	movs	r1, #0
 8006ddc:	4630      	mov	r0, r6
 8006dde:	f7fb f909 	bl	8001ff4 <memset>
 8006de2:	1c63      	adds	r3, r4, #1
 8006de4:	d016      	beq.n	8006e14 <_get_semihosting_exts+0x50>
 8006de6:	4620      	mov	r0, r4
 8006de8:	f7ff fe28 	bl	8006a3c <findslot>
 8006dec:	f04f 080c 	mov.w	r8, #12
 8006df0:	4681      	mov	r9, r0
 8006df2:	4640      	mov	r0, r8
 8006df4:	4649      	mov	r1, r9
 8006df6:	beab      	bkpt	0x00ab
 8006df8:	4680      	mov	r8, r0
 8006dfa:	4640      	mov	r0, r8
 8006dfc:	f7ff fe46 	bl	8006a8c <checkerror>
 8006e00:	2803      	cmp	r0, #3
 8006e02:	dd02      	ble.n	8006e0a <_get_semihosting_exts+0x46>
 8006e04:	1ec3      	subs	r3, r0, #3
 8006e06:	42ab      	cmp	r3, r5
 8006e08:	dc08      	bgt.n	8006e1c <_get_semihosting_exts+0x58>
 8006e0a:	4620      	mov	r0, r4
 8006e0c:	f7ff fee8 	bl	8006be0 <_close>
 8006e10:	f04f 34ff 	mov.w	r4, #4294967295
 8006e14:	4620      	mov	r0, r4
 8006e16:	b003      	add	sp, #12
 8006e18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006e1c:	2204      	movs	r2, #4
 8006e1e:	eb0d 0102 	add.w	r1, sp, r2
 8006e22:	4620      	mov	r0, r4
 8006e24:	f7ff fe47 	bl	8006ab6 <_read>
 8006e28:	2803      	cmp	r0, #3
 8006e2a:	ddee      	ble.n	8006e0a <_get_semihosting_exts+0x46>
 8006e2c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8006e30:	2b53      	cmp	r3, #83	; 0x53
 8006e32:	d1ea      	bne.n	8006e0a <_get_semihosting_exts+0x46>
 8006e34:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8006e38:	2b48      	cmp	r3, #72	; 0x48
 8006e3a:	d1e6      	bne.n	8006e0a <_get_semihosting_exts+0x46>
 8006e3c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8006e40:	2b46      	cmp	r3, #70	; 0x46
 8006e42:	d1e2      	bne.n	8006e0a <_get_semihosting_exts+0x46>
 8006e44:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006e48:	2b42      	cmp	r3, #66	; 0x42
 8006e4a:	d1de      	bne.n	8006e0a <_get_semihosting_exts+0x46>
 8006e4c:	2201      	movs	r2, #1
 8006e4e:	4639      	mov	r1, r7
 8006e50:	4620      	mov	r0, r4
 8006e52:	f7ff fe4a 	bl	8006aea <_swilseek>
 8006e56:	2800      	cmp	r0, #0
 8006e58:	dbd7      	blt.n	8006e0a <_get_semihosting_exts+0x46>
 8006e5a:	462a      	mov	r2, r5
 8006e5c:	4631      	mov	r1, r6
 8006e5e:	4620      	mov	r0, r4
 8006e60:	f7ff fe29 	bl	8006ab6 <_read>
 8006e64:	4605      	mov	r5, r0
 8006e66:	4620      	mov	r0, r4
 8006e68:	f7ff feba 	bl	8006be0 <_close>
 8006e6c:	4628      	mov	r0, r5
 8006e6e:	f7ff fe0d 	bl	8006a8c <checkerror>
 8006e72:	4604      	mov	r4, r0
 8006e74:	e7ce      	b.n	8006e14 <_get_semihosting_exts+0x50>
 8006e76:	bf00      	nop
 8006e78:	08007453 	.word	0x08007453

08006e7c <initialise_semihosting_exts>:
 8006e7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e7e:	4d0a      	ldr	r5, [pc, #40]	; (8006ea8 <initialise_semihosting_exts+0x2c>)
 8006e80:	4c0a      	ldr	r4, [pc, #40]	; (8006eac <initialise_semihosting_exts+0x30>)
 8006e82:	2100      	movs	r1, #0
 8006e84:	2201      	movs	r2, #1
 8006e86:	a801      	add	r0, sp, #4
 8006e88:	6029      	str	r1, [r5, #0]
 8006e8a:	6022      	str	r2, [r4, #0]
 8006e8c:	f7ff ff9a 	bl	8006dc4 <_get_semihosting_exts>
 8006e90:	2800      	cmp	r0, #0
 8006e92:	dd07      	ble.n	8006ea4 <initialise_semihosting_exts+0x28>
 8006e94:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8006e98:	f003 0201 	and.w	r2, r3, #1
 8006e9c:	f003 0302 	and.w	r3, r3, #2
 8006ea0:	602a      	str	r2, [r5, #0]
 8006ea2:	6023      	str	r3, [r4, #0]
 8006ea4:	b003      	add	sp, #12
 8006ea6:	bd30      	pop	{r4, r5, pc}
 8006ea8:	20000bbc 	.word	0x20000bbc
 8006eac:	20000bc0 	.word	0x20000bc0

08006eb0 <_has_ext_exit_extended>:
 8006eb0:	b510      	push	{r4, lr}
 8006eb2:	4c04      	ldr	r4, [pc, #16]	; (8006ec4 <_has_ext_exit_extended+0x14>)
 8006eb4:	6823      	ldr	r3, [r4, #0]
 8006eb6:	2b00      	cmp	r3, #0
 8006eb8:	da01      	bge.n	8006ebe <_has_ext_exit_extended+0xe>
 8006eba:	f7ff ffdf 	bl	8006e7c <initialise_semihosting_exts>
 8006ebe:	6820      	ldr	r0, [r4, #0]
 8006ec0:	bd10      	pop	{r4, pc}
 8006ec2:	bf00      	nop
 8006ec4:	20000bbc 	.word	0x20000bbc

08006ec8 <_has_ext_stdout_stderr>:
 8006ec8:	b510      	push	{r4, lr}
 8006eca:	4c04      	ldr	r4, [pc, #16]	; (8006edc <_has_ext_stdout_stderr+0x14>)
 8006ecc:	6823      	ldr	r3, [r4, #0]
 8006ece:	2b00      	cmp	r3, #0
 8006ed0:	da01      	bge.n	8006ed6 <_has_ext_stdout_stderr+0xe>
 8006ed2:	f7ff ffd3 	bl	8006e7c <initialise_semihosting_exts>
 8006ed6:	6820      	ldr	r0, [r4, #0]
 8006ed8:	bd10      	pop	{r4, pc}
 8006eda:	bf00      	nop
 8006edc:	20000bc0 	.word	0x20000bc0

08006ee0 <initialise_monitor_handles>:
 8006ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ee4:	b085      	sub	sp, #20
 8006ee6:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 8006f8c <initialise_monitor_handles+0xac>
 8006eea:	f8cd 9004 	str.w	r9, [sp, #4]
 8006eee:	2303      	movs	r3, #3
 8006ef0:	2400      	movs	r4, #0
 8006ef2:	9303      	str	r3, [sp, #12]
 8006ef4:	af01      	add	r7, sp, #4
 8006ef6:	9402      	str	r4, [sp, #8]
 8006ef8:	2501      	movs	r5, #1
 8006efa:	4628      	mov	r0, r5
 8006efc:	4639      	mov	r1, r7
 8006efe:	beab      	bkpt	0x00ab
 8006f00:	4605      	mov	r5, r0
 8006f02:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8006f90 <initialise_monitor_handles+0xb0>
 8006f06:	4623      	mov	r3, r4
 8006f08:	4c22      	ldr	r4, [pc, #136]	; (8006f94 <initialise_monitor_handles+0xb4>)
 8006f0a:	f8c8 5000 	str.w	r5, [r8]
 8006f0e:	f04f 32ff 	mov.w	r2, #4294967295
 8006f12:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 8006f16:	3301      	adds	r3, #1
 8006f18:	2b14      	cmp	r3, #20
 8006f1a:	d1fa      	bne.n	8006f12 <initialise_monitor_handles+0x32>
 8006f1c:	f7ff ffd4 	bl	8006ec8 <_has_ext_stdout_stderr>
 8006f20:	4d1d      	ldr	r5, [pc, #116]	; (8006f98 <initialise_monitor_handles+0xb8>)
 8006f22:	b1d0      	cbz	r0, 8006f5a <initialise_monitor_handles+0x7a>
 8006f24:	f04f 0a03 	mov.w	sl, #3
 8006f28:	2304      	movs	r3, #4
 8006f2a:	f8cd 9004 	str.w	r9, [sp, #4]
 8006f2e:	2601      	movs	r6, #1
 8006f30:	f8cd a00c 	str.w	sl, [sp, #12]
 8006f34:	9302      	str	r3, [sp, #8]
 8006f36:	4630      	mov	r0, r6
 8006f38:	4639      	mov	r1, r7
 8006f3a:	beab      	bkpt	0x00ab
 8006f3c:	4683      	mov	fp, r0
 8006f3e:	4b17      	ldr	r3, [pc, #92]	; (8006f9c <initialise_monitor_handles+0xbc>)
 8006f40:	f8cd 9004 	str.w	r9, [sp, #4]
 8006f44:	f8c3 b000 	str.w	fp, [r3]
 8006f48:	2308      	movs	r3, #8
 8006f4a:	f8cd a00c 	str.w	sl, [sp, #12]
 8006f4e:	9302      	str	r3, [sp, #8]
 8006f50:	4630      	mov	r0, r6
 8006f52:	4639      	mov	r1, r7
 8006f54:	beab      	bkpt	0x00ab
 8006f56:	4606      	mov	r6, r0
 8006f58:	602e      	str	r6, [r5, #0]
 8006f5a:	682b      	ldr	r3, [r5, #0]
 8006f5c:	3301      	adds	r3, #1
 8006f5e:	bf02      	ittt	eq
 8006f60:	4b0e      	ldreq	r3, [pc, #56]	; (8006f9c <initialise_monitor_handles+0xbc>)
 8006f62:	681b      	ldreq	r3, [r3, #0]
 8006f64:	602b      	streq	r3, [r5, #0]
 8006f66:	2600      	movs	r6, #0
 8006f68:	f8d8 3000 	ldr.w	r3, [r8]
 8006f6c:	6023      	str	r3, [r4, #0]
 8006f6e:	6066      	str	r6, [r4, #4]
 8006f70:	f7ff ffaa 	bl	8006ec8 <_has_ext_stdout_stderr>
 8006f74:	b130      	cbz	r0, 8006f84 <initialise_monitor_handles+0xa4>
 8006f76:	4b09      	ldr	r3, [pc, #36]	; (8006f9c <initialise_monitor_handles+0xbc>)
 8006f78:	681b      	ldr	r3, [r3, #0]
 8006f7a:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8006f7e:	682b      	ldr	r3, [r5, #0]
 8006f80:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8006f84:	b005      	add	sp, #20
 8006f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f8a:	bf00      	nop
 8006f8c:	08007469 	.word	0x08007469
 8006f90:	2000104c 	.word	0x2000104c
 8006f94:	20001054 	.word	0x20001054
 8006f98:	20001048 	.word	0x20001048
 8006f9c:	20001050 	.word	0x20001050

08006fa0 <_isatty>:
 8006fa0:	b570      	push	{r4, r5, r6, lr}
 8006fa2:	f7ff fd4b 	bl	8006a3c <findslot>
 8006fa6:	2509      	movs	r5, #9
 8006fa8:	4604      	mov	r4, r0
 8006faa:	b920      	cbnz	r0, 8006fb6 <_isatty+0x16>
 8006fac:	f7ff fb54 	bl	8006658 <__errno>
 8006fb0:	6005      	str	r5, [r0, #0]
 8006fb2:	4620      	mov	r0, r4
 8006fb4:	bd70      	pop	{r4, r5, r6, pc}
 8006fb6:	4628      	mov	r0, r5
 8006fb8:	4621      	mov	r1, r4
 8006fba:	beab      	bkpt	0x00ab
 8006fbc:	4604      	mov	r4, r0
 8006fbe:	2c01      	cmp	r4, #1
 8006fc0:	d0f7      	beq.n	8006fb2 <_isatty+0x12>
 8006fc2:	f7ff fb49 	bl	8006658 <__errno>
 8006fc6:	2400      	movs	r4, #0
 8006fc8:	4605      	mov	r5, r0
 8006fca:	2613      	movs	r6, #19
 8006fcc:	4630      	mov	r0, r6
 8006fce:	4621      	mov	r1, r4
 8006fd0:	beab      	bkpt	0x00ab
 8006fd2:	4606      	mov	r6, r0
 8006fd4:	602e      	str	r6, [r5, #0]
 8006fd6:	e7ec      	b.n	8006fb2 <_isatty+0x12>

08006fd8 <_exit>:
 8006fd8:	4601      	mov	r1, r0
 8006fda:	b508      	push	{r3, lr}
 8006fdc:	4a02      	ldr	r2, [pc, #8]	; (8006fe8 <_exit+0x10>)
 8006fde:	f04f 30ff 	mov.w	r0, #4294967295
 8006fe2:	f000 f803 	bl	8006fec <_kill_shared>
 8006fe6:	bf00      	nop
 8006fe8:	00020026 	.word	0x00020026

08006fec <_kill_shared>:
 8006fec:	b507      	push	{r0, r1, r2, lr}
 8006fee:	e9cd 2100 	strd	r2, r1, [sp]
 8006ff2:	f7ff ff5d 	bl	8006eb0 <_has_ext_exit_extended>
 8006ff6:	2800      	cmp	r0, #0
 8006ff8:	bf14      	ite	ne
 8006ffa:	2420      	movne	r4, #32
 8006ffc:	2418      	moveq	r4, #24
 8006ffe:	f7ff ff57 	bl	8006eb0 <_has_ext_exit_extended>
 8007002:	b120      	cbz	r0, 800700e <_kill_shared+0x22>
 8007004:	466d      	mov	r5, sp
 8007006:	4620      	mov	r0, r4
 8007008:	4629      	mov	r1, r5
 800700a:	beab      	bkpt	0x00ab
 800700c:	4604      	mov	r4, r0
 800700e:	9d00      	ldr	r5, [sp, #0]
 8007010:	e7f9      	b.n	8007006 <_kill_shared+0x1a>
	...

08007014 <_kill>:
 8007014:	2906      	cmp	r1, #6
 8007016:	b508      	push	{r3, lr}
 8007018:	bf0c      	ite	eq
 800701a:	4a02      	ldreq	r2, [pc, #8]	; (8007024 <_kill+0x10>)
 800701c:	4a02      	ldrne	r2, [pc, #8]	; (8007028 <_kill+0x14>)
 800701e:	f7ff ffe5 	bl	8006fec <_kill_shared>
 8007022:	bf00      	nop
 8007024:	00020023 	.word	0x00020023
 8007028:	00020026 	.word	0x00020026

0800702c <_init>:
 800702c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800702e:	bf00      	nop
 8007030:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007032:	bc08      	pop	{r3}
 8007034:	469e      	mov	lr, r3
 8007036:	4770      	bx	lr

08007038 <_fini>:
 8007038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800703a:	bf00      	nop
 800703c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800703e:	bc08      	pop	{r3}
 8007040:	469e      	mov	lr, r3
 8007042:	4770      	bx	lr
