
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000079dc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004dc  08007b90  08007b90  00017b90  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800806c  0800806c  00020bbc  2**0
                  CONTENTS
  4 .ARM          00000008  0800806c  0800806c  0001806c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008074  08008074  00020bbc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08008074  08008074  00018074  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800807c  0800807c  0001807c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000bbc  20000000  08008080  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000140  20000bbc  08008c3c  00020bbc  2**2
                  ALLOC
 10 ._user_heap_stack 00000404  20000cfc  08008c3c  00020cfc  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020bbc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000031d9  00000000  00000000  00020be6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000b17  00000000  00000000  00023dbf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000370  00000000  00000000  000248d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000002f8  00000000  00000000  00024c48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003954  00000000  00000000  00024f40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003393  00000000  00000000  00028894  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000abb5  00000000  00000000  0002bc27  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000367dc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002628  00000000  00000000  0003682c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000bbc 	.word	0x20000bbc
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08007b74 	.word	0x08007b74

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000bc0 	.word	0x20000bc0
 80001ec:	08007b74 	.word	0x08007b74

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bdc:	f000 b974 	b.w	8000ec8 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9e08      	ldr	r6, [sp, #32]
 8000bfe:	460d      	mov	r5, r1
 8000c00:	4604      	mov	r4, r0
 8000c02:	4688      	mov	r8, r1
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d14d      	bne.n	8000ca4 <__udivmoddi4+0xac>
 8000c08:	428a      	cmp	r2, r1
 8000c0a:	4694      	mov	ip, r2
 8000c0c:	d968      	bls.n	8000ce0 <__udivmoddi4+0xe8>
 8000c0e:	fab2 f282 	clz	r2, r2
 8000c12:	b152      	cbz	r2, 8000c2a <__udivmoddi4+0x32>
 8000c14:	fa01 f302 	lsl.w	r3, r1, r2
 8000c18:	f1c2 0120 	rsb	r1, r2, #32
 8000c1c:	fa20 f101 	lsr.w	r1, r0, r1
 8000c20:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c24:	ea41 0803 	orr.w	r8, r1, r3
 8000c28:	4094      	lsls	r4, r2
 8000c2a:	ea4f 451c 	mov.w	r5, ip, lsr #16
 8000c2e:	0c21      	lsrs	r1, r4, #16
 8000c30:	fbb8 fef5 	udiv	lr, r8, r5
 8000c34:	fa1f f78c 	uxth.w	r7, ip
 8000c38:	fb05 831e 	mls	r3, r5, lr, r8
 8000c3c:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c40:	fb0e f107 	mul.w	r1, lr, r7
 8000c44:	4299      	cmp	r1, r3
 8000c46:	d90b      	bls.n	8000c60 <__udivmoddi4+0x68>
 8000c48:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4c:	f10e 30ff 	add.w	r0, lr, #4294967295
 8000c50:	f080 811e 	bcs.w	8000e90 <__udivmoddi4+0x298>
 8000c54:	4299      	cmp	r1, r3
 8000c56:	f240 811b 	bls.w	8000e90 <__udivmoddi4+0x298>
 8000c5a:	f1ae 0e02 	sub.w	lr, lr, #2
 8000c5e:	4463      	add	r3, ip
 8000c60:	1a5b      	subs	r3, r3, r1
 8000c62:	b2a4      	uxth	r4, r4
 8000c64:	fbb3 f0f5 	udiv	r0, r3, r5
 8000c68:	fb05 3310 	mls	r3, r5, r0, r3
 8000c6c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c70:	fb00 f707 	mul.w	r7, r0, r7
 8000c74:	42a7      	cmp	r7, r4
 8000c76:	d90a      	bls.n	8000c8e <__udivmoddi4+0x96>
 8000c78:	eb1c 0404 	adds.w	r4, ip, r4
 8000c7c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c80:	f080 8108 	bcs.w	8000e94 <__udivmoddi4+0x29c>
 8000c84:	42a7      	cmp	r7, r4
 8000c86:	f240 8105 	bls.w	8000e94 <__udivmoddi4+0x29c>
 8000c8a:	4464      	add	r4, ip
 8000c8c:	3802      	subs	r0, #2
 8000c8e:	1be4      	subs	r4, r4, r7
 8000c90:	ea40 400e 	orr.w	r0, r0, lr, lsl #16
 8000c94:	2100      	movs	r1, #0
 8000c96:	b11e      	cbz	r6, 8000ca0 <__udivmoddi4+0xa8>
 8000c98:	40d4      	lsrs	r4, r2
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	e9c6 4300 	strd	r4, r3, [r6]
 8000ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca4:	428b      	cmp	r3, r1
 8000ca6:	d908      	bls.n	8000cba <__udivmoddi4+0xc2>
 8000ca8:	2e00      	cmp	r6, #0
 8000caa:	f000 80ee 	beq.w	8000e8a <__udivmoddi4+0x292>
 8000cae:	2100      	movs	r1, #0
 8000cb0:	e9c6 0500 	strd	r0, r5, [r6]
 8000cb4:	4608      	mov	r0, r1
 8000cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cba:	fab3 f183 	clz	r1, r3
 8000cbe:	2900      	cmp	r1, #0
 8000cc0:	d14a      	bne.n	8000d58 <__udivmoddi4+0x160>
 8000cc2:	42ab      	cmp	r3, r5
 8000cc4:	d302      	bcc.n	8000ccc <__udivmoddi4+0xd4>
 8000cc6:	4282      	cmp	r2, r0
 8000cc8:	f200 80f9 	bhi.w	8000ebe <__udivmoddi4+0x2c6>
 8000ccc:	1a84      	subs	r4, r0, r2
 8000cce:	eb65 0303 	sbc.w	r3, r5, r3
 8000cd2:	2001      	movs	r0, #1
 8000cd4:	4698      	mov	r8, r3
 8000cd6:	2e00      	cmp	r6, #0
 8000cd8:	d0e2      	beq.n	8000ca0 <__udivmoddi4+0xa8>
 8000cda:	e9c6 4800 	strd	r4, r8, [r6]
 8000cde:	e7df      	b.n	8000ca0 <__udivmoddi4+0xa8>
 8000ce0:	b902      	cbnz	r2, 8000ce4 <__udivmoddi4+0xec>
 8000ce2:	deff      	udf	#255	; 0xff
 8000ce4:	fab2 f282 	clz	r2, r2
 8000ce8:	2a00      	cmp	r2, #0
 8000cea:	f040 8091 	bne.w	8000e10 <__udivmoddi4+0x218>
 8000cee:	eba1 050c 	sub.w	r5, r1, ip
 8000cf2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cf6:	fa1f fe8c 	uxth.w	lr, ip
 8000cfa:	2101      	movs	r1, #1
 8000cfc:	fbb5 f3f7 	udiv	r3, r5, r7
 8000d00:	fb07 5013 	mls	r0, r7, r3, r5
 8000d04:	0c25      	lsrs	r5, r4, #16
 8000d06:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8000d0a:	fb0e f003 	mul.w	r0, lr, r3
 8000d0e:	42a8      	cmp	r0, r5
 8000d10:	d908      	bls.n	8000d24 <__udivmoddi4+0x12c>
 8000d12:	eb1c 0505 	adds.w	r5, ip, r5
 8000d16:	f103 38ff 	add.w	r8, r3, #4294967295
 8000d1a:	d202      	bcs.n	8000d22 <__udivmoddi4+0x12a>
 8000d1c:	42a8      	cmp	r0, r5
 8000d1e:	f200 80cb 	bhi.w	8000eb8 <__udivmoddi4+0x2c0>
 8000d22:	4643      	mov	r3, r8
 8000d24:	1a2d      	subs	r5, r5, r0
 8000d26:	b2a4      	uxth	r4, r4
 8000d28:	fbb5 f0f7 	udiv	r0, r5, r7
 8000d2c:	fb07 5510 	mls	r5, r7, r0, r5
 8000d30:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d34:	fb0e fe00 	mul.w	lr, lr, r0
 8000d38:	45a6      	cmp	lr, r4
 8000d3a:	d908      	bls.n	8000d4e <__udivmoddi4+0x156>
 8000d3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000d40:	f100 35ff 	add.w	r5, r0, #4294967295
 8000d44:	d202      	bcs.n	8000d4c <__udivmoddi4+0x154>
 8000d46:	45a6      	cmp	lr, r4
 8000d48:	f200 80bb 	bhi.w	8000ec2 <__udivmoddi4+0x2ca>
 8000d4c:	4628      	mov	r0, r5
 8000d4e:	eba4 040e 	sub.w	r4, r4, lr
 8000d52:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d56:	e79e      	b.n	8000c96 <__udivmoddi4+0x9e>
 8000d58:	f1c1 0720 	rsb	r7, r1, #32
 8000d5c:	408b      	lsls	r3, r1
 8000d5e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d66:	fa20 f407 	lsr.w	r4, r0, r7
 8000d6a:	fa05 f301 	lsl.w	r3, r5, r1
 8000d6e:	431c      	orrs	r4, r3
 8000d70:	40fd      	lsrs	r5, r7
 8000d72:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d76:	fa00 f301 	lsl.w	r3, r0, r1
 8000d7a:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d7e:	0c20      	lsrs	r0, r4, #16
 8000d80:	fa1f fe8c 	uxth.w	lr, ip
 8000d84:	fb09 5518 	mls	r5, r9, r8, r5
 8000d88:	ea40 4505 	orr.w	r5, r0, r5, lsl #16
 8000d8c:	fb08 f00e 	mul.w	r0, r8, lr
 8000d90:	42a8      	cmp	r0, r5
 8000d92:	fa02 f201 	lsl.w	r2, r2, r1
 8000d96:	d90b      	bls.n	8000db0 <__udivmoddi4+0x1b8>
 8000d98:	eb1c 0505 	adds.w	r5, ip, r5
 8000d9c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000da0:	f080 8088 	bcs.w	8000eb4 <__udivmoddi4+0x2bc>
 8000da4:	42a8      	cmp	r0, r5
 8000da6:	f240 8085 	bls.w	8000eb4 <__udivmoddi4+0x2bc>
 8000daa:	f1a8 0802 	sub.w	r8, r8, #2
 8000dae:	4465      	add	r5, ip
 8000db0:	1a2d      	subs	r5, r5, r0
 8000db2:	b2a4      	uxth	r4, r4
 8000db4:	fbb5 f0f9 	udiv	r0, r5, r9
 8000db8:	fb09 5510 	mls	r5, r9, r0, r5
 8000dbc:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000dc0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dc4:	45ae      	cmp	lr, r5
 8000dc6:	d908      	bls.n	8000dda <__udivmoddi4+0x1e2>
 8000dc8:	eb1c 0505 	adds.w	r5, ip, r5
 8000dcc:	f100 34ff 	add.w	r4, r0, #4294967295
 8000dd0:	d26c      	bcs.n	8000eac <__udivmoddi4+0x2b4>
 8000dd2:	45ae      	cmp	lr, r5
 8000dd4:	d96a      	bls.n	8000eac <__udivmoddi4+0x2b4>
 8000dd6:	3802      	subs	r0, #2
 8000dd8:	4465      	add	r5, ip
 8000dda:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dde:	fba0 9402 	umull	r9, r4, r0, r2
 8000de2:	eba5 050e 	sub.w	r5, r5, lr
 8000de6:	42a5      	cmp	r5, r4
 8000de8:	46c8      	mov	r8, r9
 8000dea:	46a6      	mov	lr, r4
 8000dec:	d356      	bcc.n	8000e9c <__udivmoddi4+0x2a4>
 8000dee:	d053      	beq.n	8000e98 <__udivmoddi4+0x2a0>
 8000df0:	b15e      	cbz	r6, 8000e0a <__udivmoddi4+0x212>
 8000df2:	ebb3 0208 	subs.w	r2, r3, r8
 8000df6:	eb65 050e 	sbc.w	r5, r5, lr
 8000dfa:	fa05 f707 	lsl.w	r7, r5, r7
 8000dfe:	fa22 f301 	lsr.w	r3, r2, r1
 8000e02:	40cd      	lsrs	r5, r1
 8000e04:	431f      	orrs	r7, r3
 8000e06:	e9c6 7500 	strd	r7, r5, [r6]
 8000e0a:	2100      	movs	r1, #0
 8000e0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e10:	f1c2 0320 	rsb	r3, r2, #32
 8000e14:	fa20 f103 	lsr.w	r1, r0, r3
 8000e18:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e1c:	fa25 f303 	lsr.w	r3, r5, r3
 8000e20:	4095      	lsls	r5, r2
 8000e22:	430d      	orrs	r5, r1
 8000e24:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e28:	fa1f fe8c 	uxth.w	lr, ip
 8000e2c:	fbb3 f1f7 	udiv	r1, r3, r7
 8000e30:	fb07 3011 	mls	r0, r7, r1, r3
 8000e34:	0c2b      	lsrs	r3, r5, #16
 8000e36:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8000e3a:	fb01 f00e 	mul.w	r0, r1, lr
 8000e3e:	4298      	cmp	r0, r3
 8000e40:	fa04 f402 	lsl.w	r4, r4, r2
 8000e44:	d908      	bls.n	8000e58 <__udivmoddi4+0x260>
 8000e46:	eb1c 0303 	adds.w	r3, ip, r3
 8000e4a:	f101 38ff 	add.w	r8, r1, #4294967295
 8000e4e:	d22f      	bcs.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e50:	4298      	cmp	r0, r3
 8000e52:	d92d      	bls.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e54:	3902      	subs	r1, #2
 8000e56:	4463      	add	r3, ip
 8000e58:	1a1b      	subs	r3, r3, r0
 8000e5a:	b2ad      	uxth	r5, r5
 8000e5c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e60:	fb07 3310 	mls	r3, r7, r0, r3
 8000e64:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000e68:	fb00 f30e 	mul.w	r3, r0, lr
 8000e6c:	42ab      	cmp	r3, r5
 8000e6e:	d908      	bls.n	8000e82 <__udivmoddi4+0x28a>
 8000e70:	eb1c 0505 	adds.w	r5, ip, r5
 8000e74:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e78:	d216      	bcs.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7a:	42ab      	cmp	r3, r5
 8000e7c:	d914      	bls.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7e:	3802      	subs	r0, #2
 8000e80:	4465      	add	r5, ip
 8000e82:	1aed      	subs	r5, r5, r3
 8000e84:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e88:	e738      	b.n	8000cfc <__udivmoddi4+0x104>
 8000e8a:	4631      	mov	r1, r6
 8000e8c:	4630      	mov	r0, r6
 8000e8e:	e707      	b.n	8000ca0 <__udivmoddi4+0xa8>
 8000e90:	4686      	mov	lr, r0
 8000e92:	e6e5      	b.n	8000c60 <__udivmoddi4+0x68>
 8000e94:	4618      	mov	r0, r3
 8000e96:	e6fa      	b.n	8000c8e <__udivmoddi4+0x96>
 8000e98:	454b      	cmp	r3, r9
 8000e9a:	d2a9      	bcs.n	8000df0 <__udivmoddi4+0x1f8>
 8000e9c:	ebb9 0802 	subs.w	r8, r9, r2
 8000ea0:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ea4:	3801      	subs	r0, #1
 8000ea6:	e7a3      	b.n	8000df0 <__udivmoddi4+0x1f8>
 8000ea8:	4640      	mov	r0, r8
 8000eaa:	e7ea      	b.n	8000e82 <__udivmoddi4+0x28a>
 8000eac:	4620      	mov	r0, r4
 8000eae:	e794      	b.n	8000dda <__udivmoddi4+0x1e2>
 8000eb0:	4641      	mov	r1, r8
 8000eb2:	e7d1      	b.n	8000e58 <__udivmoddi4+0x260>
 8000eb4:	46d0      	mov	r8, sl
 8000eb6:	e77b      	b.n	8000db0 <__udivmoddi4+0x1b8>
 8000eb8:	3b02      	subs	r3, #2
 8000eba:	4465      	add	r5, ip
 8000ebc:	e732      	b.n	8000d24 <__udivmoddi4+0x12c>
 8000ebe:	4608      	mov	r0, r1
 8000ec0:	e709      	b.n	8000cd6 <__udivmoddi4+0xde>
 8000ec2:	4464      	add	r4, ip
 8000ec4:	3802      	subs	r0, #2
 8000ec6:	e742      	b.n	8000d4e <__udivmoddi4+0x156>

08000ec8 <__aeabi_idiv0>:
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop

08000ecc <ds1307_init>:
I2C_Handle_t g_ds1307I2cHandle;

//returns 1 : CH = 1 ; init failed
//returns 0 : CH = 0 ; init success
uint8_t ds1307_init(void)
{
 8000ecc:	b580      	push	{r7, lr}
 8000ece:	b082      	sub	sp, #8
 8000ed0:	af00      	add	r7, sp, #0

	//1. init the i2c pins
	ds1307_i2c_pin_config();
 8000ed2:	f000 f90c 	bl	80010ee <ds1307_i2c_pin_config>

	//2. initialize the i2c peripheral
	ds1307_i2c_config();
 8000ed6:	f000 f945 	bl	8001164 <ds1307_i2c_config>

	//3. Enable the I2C peripheral
	I2C_PeripheralControl(DS1307_I2C, ENABLE);
 8000eda:	2101      	movs	r1, #1
 8000edc:	2015      	movs	r0, #21
 8000ede:	f000 ffdb 	bl	8001e98 <I2C_PeripheralControl>

	//4. Make clock halt = 0;
	ds1307_write(0x00,DS1307_ADDR_SEC);
 8000ee2:	2100      	movs	r1, #0
 8000ee4:	2000      	movs	r0, #0
 8000ee6:	f000 f95f 	bl	80011a8 <ds1307_write>

	//5. Read back clock halt bit
	uint8_t clock_state = ds1307_read(DS1307_ADDR_SEC);
 8000eea:	2000      	movs	r0, #0
 8000eec:	f000 f986 	bl	80011fc <ds1307_read>
 8000ef0:	4603      	mov	r3, r0
 8000ef2:	71fb      	strb	r3, [r7, #7]

	return ((clock_state >> 7 ) & 0x1);
 8000ef4:	79fb      	ldrb	r3, [r7, #7]
 8000ef6:	09db      	lsrs	r3, r3, #7
 8000ef8:	b2db      	uxtb	r3, r3

}
 8000efa:	4618      	mov	r0, r3
 8000efc:	3708      	adds	r7, #8
 8000efe:	46bd      	mov	sp, r7
 8000f00:	bd80      	pop	{r7, pc}

08000f02 <ds1307_set_current_time>:


void ds1307_set_current_time(RTC_time_t *rtc_time)
{
 8000f02:	b580      	push	{r7, lr}
 8000f04:	b084      	sub	sp, #16
 8000f06:	af00      	add	r7, sp, #0
 8000f08:	6078      	str	r0, [r7, #4]
	uint8_t seconds, hrs;
	seconds = binary_to_bcd(rtc_time->seconds);
 8000f0a:	687b      	ldr	r3, [r7, #4]
 8000f0c:	781b      	ldrb	r3, [r3, #0]
 8000f0e:	4618      	mov	r0, r3
 8000f10:	f000 f9ae 	bl	8001270 <binary_to_bcd>
 8000f14:	4603      	mov	r3, r0
 8000f16:	73bb      	strb	r3, [r7, #14]
	seconds &= ~( 1 << 7);
 8000f18:	7bbb      	ldrb	r3, [r7, #14]
 8000f1a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000f1e:	73bb      	strb	r3, [r7, #14]
	ds1307_write(seconds, DS1307_ADDR_SEC);
 8000f20:	7bbb      	ldrb	r3, [r7, #14]
 8000f22:	2100      	movs	r1, #0
 8000f24:	4618      	mov	r0, r3
 8000f26:	f000 f93f 	bl	80011a8 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_time->minutes), DS1307_ADDR_MIN);
 8000f2a:	687b      	ldr	r3, [r7, #4]
 8000f2c:	785b      	ldrb	r3, [r3, #1]
 8000f2e:	4618      	mov	r0, r3
 8000f30:	f000 f99e 	bl	8001270 <binary_to_bcd>
 8000f34:	4603      	mov	r3, r0
 8000f36:	2101      	movs	r1, #1
 8000f38:	4618      	mov	r0, r3
 8000f3a:	f000 f935 	bl	80011a8 <ds1307_write>

	hrs = binary_to_bcd(rtc_time->hours);
 8000f3e:	687b      	ldr	r3, [r7, #4]
 8000f40:	789b      	ldrb	r3, [r3, #2]
 8000f42:	4618      	mov	r0, r3
 8000f44:	f000 f994 	bl	8001270 <binary_to_bcd>
 8000f48:	4603      	mov	r3, r0
 8000f4a:	73fb      	strb	r3, [r7, #15]

	if(rtc_time->time_format == TIME_FORMAT_24HRS){
 8000f4c:	687b      	ldr	r3, [r7, #4]
 8000f4e:	78db      	ldrb	r3, [r3, #3]
 8000f50:	2b02      	cmp	r3, #2
 8000f52:	d104      	bne.n	8000f5e <ds1307_set_current_time+0x5c>
		hrs &= ~(1 << 6);
 8000f54:	7bfb      	ldrb	r3, [r7, #15]
 8000f56:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000f5a:	73fb      	strb	r3, [r7, #15]
 8000f5c:	e011      	b.n	8000f82 <ds1307_set_current_time+0x80>
	}else{
		hrs |= (1 << 6);
 8000f5e:	7bfb      	ldrb	r3, [r7, #15]
 8000f60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f64:	73fb      	strb	r3, [r7, #15]
		hrs = (rtc_time->time_format  == TIME_FORMAT_12HRS_PM) ? hrs | ( 1 << 5) :  hrs & ~( 1 << 5) ;
 8000f66:	687b      	ldr	r3, [r7, #4]
 8000f68:	78db      	ldrb	r3, [r3, #3]
 8000f6a:	2b01      	cmp	r3, #1
 8000f6c:	d104      	bne.n	8000f78 <ds1307_set_current_time+0x76>
 8000f6e:	7bfb      	ldrb	r3, [r7, #15]
 8000f70:	f043 0320 	orr.w	r3, r3, #32
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	e003      	b.n	8000f80 <ds1307_set_current_time+0x7e>
 8000f78:	7bfb      	ldrb	r3, [r7, #15]
 8000f7a:	f023 0320 	bic.w	r3, r3, #32
 8000f7e:	b2db      	uxtb	r3, r3
 8000f80:	73fb      	strb	r3, [r7, #15]
	}

	ds1307_write(hrs,DS1307_ADDR_HRS);
 8000f82:	7bfb      	ldrb	r3, [r7, #15]
 8000f84:	2102      	movs	r1, #2
 8000f86:	4618      	mov	r0, r3
 8000f88:	f000 f90e 	bl	80011a8 <ds1307_write>

}
 8000f8c:	bf00      	nop
 8000f8e:	3710      	adds	r7, #16
 8000f90:	46bd      	mov	sp, r7
 8000f92:	bd80      	pop	{r7, pc}

08000f94 <ds1307_set_current_date>:

void ds1307_set_current_date(RTC_date_t *rtc_date)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b082      	sub	sp, #8
 8000f98:	af00      	add	r7, sp, #0
 8000f9a:	6078      	str	r0, [r7, #4]
	ds1307_write(binary_to_bcd(rtc_date->date),DS1307_ADDR_DATE);
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	781b      	ldrb	r3, [r3, #0]
 8000fa0:	4618      	mov	r0, r3
 8000fa2:	f000 f965 	bl	8001270 <binary_to_bcd>
 8000fa6:	4603      	mov	r3, r0
 8000fa8:	2104      	movs	r1, #4
 8000faa:	4618      	mov	r0, r3
 8000fac:	f000 f8fc 	bl	80011a8 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_date->month),DS1307_ADDR_MONTH);
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	785b      	ldrb	r3, [r3, #1]
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	f000 f95b 	bl	8001270 <binary_to_bcd>
 8000fba:	4603      	mov	r3, r0
 8000fbc:	2105      	movs	r1, #5
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	f000 f8f2 	bl	80011a8 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_date->year),DS1307_ADDR_YEAR);
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	789b      	ldrb	r3, [r3, #2]
 8000fc8:	4618      	mov	r0, r3
 8000fca:	f000 f951 	bl	8001270 <binary_to_bcd>
 8000fce:	4603      	mov	r3, r0
 8000fd0:	2106      	movs	r1, #6
 8000fd2:	4618      	mov	r0, r3
 8000fd4:	f000 f8e8 	bl	80011a8 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_date->day),DS1307_ADDR_DAY);
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	78db      	ldrb	r3, [r3, #3]
 8000fdc:	4618      	mov	r0, r3
 8000fde:	f000 f947 	bl	8001270 <binary_to_bcd>
 8000fe2:	4603      	mov	r3, r0
 8000fe4:	2103      	movs	r1, #3
 8000fe6:	4618      	mov	r0, r3
 8000fe8:	f000 f8de 	bl	80011a8 <ds1307_write>

}
 8000fec:	bf00      	nop
 8000fee:	3708      	adds	r7, #8
 8000ff0:	46bd      	mov	sp, r7
 8000ff2:	bd80      	pop	{r7, pc}

08000ff4 <ds1307_get_current_time>:

void ds1307_get_current_time(RTC_time_t *rtc_time)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b084      	sub	sp, #16
 8000ff8:	af00      	add	r7, sp, #0
 8000ffa:	6078      	str	r0, [r7, #4]

	uint8_t seconds,hrs;

	seconds = ds1307_read(DS1307_ADDR_SEC);
 8000ffc:	2000      	movs	r0, #0
 8000ffe:	f000 f8fd 	bl	80011fc <ds1307_read>
 8001002:	4603      	mov	r3, r0
 8001004:	73bb      	strb	r3, [r7, #14]

	seconds &= ~( 1 << 7);
 8001006:	7bbb      	ldrb	r3, [r7, #14]
 8001008:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800100c:	73bb      	strb	r3, [r7, #14]

	rtc_time->seconds = bcd_to_binary(seconds);
 800100e:	7bbb      	ldrb	r3, [r7, #14]
 8001010:	4618      	mov	r0, r3
 8001012:	f000 f959 	bl	80012c8 <bcd_to_binary>
 8001016:	4603      	mov	r3, r0
 8001018:	461a      	mov	r2, r3
 800101a:	687b      	ldr	r3, [r7, #4]
 800101c:	701a      	strb	r2, [r3, #0]
	rtc_time->minutes = bcd_to_binary(ds1307_read(DS1307_ADDR_MIN));
 800101e:	2001      	movs	r0, #1
 8001020:	f000 f8ec 	bl	80011fc <ds1307_read>
 8001024:	4603      	mov	r3, r0
 8001026:	4618      	mov	r0, r3
 8001028:	f000 f94e 	bl	80012c8 <bcd_to_binary>
 800102c:	4603      	mov	r3, r0
 800102e:	461a      	mov	r2, r3
 8001030:	687b      	ldr	r3, [r7, #4]
 8001032:	705a      	strb	r2, [r3, #1]

	hrs = ds1307_read(DS1307_ADDR_HRS);
 8001034:	2002      	movs	r0, #2
 8001036:	f000 f8e1 	bl	80011fc <ds1307_read>
 800103a:	4603      	mov	r3, r0
 800103c:	73fb      	strb	r3, [r7, #15]
	if(hrs & ( 1 << 6)){
 800103e:	7bfb      	ldrb	r3, [r7, #15]
 8001040:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001044:	2b00      	cmp	r3, #0
 8001046:	d00f      	beq.n	8001068 <ds1307_get_current_time+0x74>
		//12 hr format
		rtc_time->time_format =  !((hrs & ( 1 << 5)) == 0) ;
 8001048:	7bfb      	ldrb	r3, [r7, #15]
 800104a:	f003 0320 	and.w	r3, r3, #32
 800104e:	2b00      	cmp	r3, #0
 8001050:	bf14      	ite	ne
 8001052:	2301      	movne	r3, #1
 8001054:	2300      	moveq	r3, #0
 8001056:	b2db      	uxtb	r3, r3
 8001058:	461a      	mov	r2, r3
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	70da      	strb	r2, [r3, #3]
		hrs &= ~(0x3 << 5);//Clear 6 and 5
 800105e:	7bfb      	ldrb	r3, [r7, #15]
 8001060:	f023 0360 	bic.w	r3, r3, #96	; 0x60
 8001064:	73fb      	strb	r3, [r7, #15]
 8001066:	e002      	b.n	800106e <ds1307_get_current_time+0x7a>
	}else{
		//24 hr format
		rtc_time->time_format = TIME_FORMAT_24HRS;
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	2202      	movs	r2, #2
 800106c:	70da      	strb	r2, [r3, #3]
	}

	rtc_time->hours = bcd_to_binary(hrs);
 800106e:	7bfb      	ldrb	r3, [r7, #15]
 8001070:	4618      	mov	r0, r3
 8001072:	f000 f929 	bl	80012c8 <bcd_to_binary>
 8001076:	4603      	mov	r3, r0
 8001078:	461a      	mov	r2, r3
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	709a      	strb	r2, [r3, #2]
}
 800107e:	bf00      	nop
 8001080:	3710      	adds	r7, #16
 8001082:	46bd      	mov	sp, r7
 8001084:	bd80      	pop	{r7, pc}

08001086 <ds1307_get_current_date>:

void ds1307_get_current_date(RTC_date_t *rtc_date)
{
 8001086:	b580      	push	{r7, lr}
 8001088:	b082      	sub	sp, #8
 800108a:	af00      	add	r7, sp, #0
 800108c:	6078      	str	r0, [r7, #4]
	rtc_date->day =  bcd_to_binary(ds1307_read(DS1307_ADDR_DAY));
 800108e:	2003      	movs	r0, #3
 8001090:	f000 f8b4 	bl	80011fc <ds1307_read>
 8001094:	4603      	mov	r3, r0
 8001096:	4618      	mov	r0, r3
 8001098:	f000 f916 	bl	80012c8 <bcd_to_binary>
 800109c:	4603      	mov	r3, r0
 800109e:	461a      	mov	r2, r3
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	70da      	strb	r2, [r3, #3]
	rtc_date->date = bcd_to_binary(ds1307_read(DS1307_ADDR_DATE));
 80010a4:	2004      	movs	r0, #4
 80010a6:	f000 f8a9 	bl	80011fc <ds1307_read>
 80010aa:	4603      	mov	r3, r0
 80010ac:	4618      	mov	r0, r3
 80010ae:	f000 f90b 	bl	80012c8 <bcd_to_binary>
 80010b2:	4603      	mov	r3, r0
 80010b4:	461a      	mov	r2, r3
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	701a      	strb	r2, [r3, #0]
	rtc_date->month = bcd_to_binary(ds1307_read(DS1307_ADDR_MONTH));
 80010ba:	2005      	movs	r0, #5
 80010bc:	f000 f89e 	bl	80011fc <ds1307_read>
 80010c0:	4603      	mov	r3, r0
 80010c2:	4618      	mov	r0, r3
 80010c4:	f000 f900 	bl	80012c8 <bcd_to_binary>
 80010c8:	4603      	mov	r3, r0
 80010ca:	461a      	mov	r2, r3
 80010cc:	687b      	ldr	r3, [r7, #4]
 80010ce:	705a      	strb	r2, [r3, #1]
	rtc_date->year = bcd_to_binary(ds1307_read(DS1307_ADDR_YEAR));
 80010d0:	2006      	movs	r0, #6
 80010d2:	f000 f893 	bl	80011fc <ds1307_read>
 80010d6:	4603      	mov	r3, r0
 80010d8:	4618      	mov	r0, r3
 80010da:	f000 f8f5 	bl	80012c8 <bcd_to_binary>
 80010de:	4603      	mov	r3, r0
 80010e0:	461a      	mov	r2, r3
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	709a      	strb	r2, [r3, #2]

}
 80010e6:	bf00      	nop
 80010e8:	3708      	adds	r7, #8
 80010ea:	46bd      	mov	sp, r7
 80010ec:	bd80      	pop	{r7, pc}

080010ee <ds1307_i2c_pin_config>:

static void ds1307_i2c_pin_config(void)
{
 80010ee:	b580      	push	{r7, lr}
 80010f0:	b084      	sub	sp, #16
 80010f2:	af00      	add	r7, sp, #0
	GPIO_Handle_t i2c_sda,i2c_scl;

	memset(&i2c_sda,0,sizeof(i2c_sda));
 80010f4:	f107 0308 	add.w	r3, r7, #8
 80010f8:	2207      	movs	r2, #7
 80010fa:	2100      	movs	r1, #0
 80010fc:	4618      	mov	r0, r3
 80010fe:	f001 fd89 	bl	8002c14 <memset>
	memset(&i2c_scl,0,sizeof(i2c_scl));
 8001102:	463b      	mov	r3, r7
 8001104:	2207      	movs	r2, #7
 8001106:	2100      	movs	r1, #0
 8001108:	4618      	mov	r0, r3
 800110a:	f001 fd83 	bl	8002c14 <memset>
	/*
	 * I2C1_SCL ==> PB6
	 * I2C1_SDA ==> PB7
	 */

	i2c_sda.GPIOx = DS1307_I2C_GPIO_PORT;
 800110e:	2333      	movs	r3, #51	; 0x33
 8001110:	723b      	strb	r3, [r7, #8]
	i2c_sda.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
 8001112:	2304      	movs	r3, #4
 8001114:	73bb      	strb	r3, [r7, #14]
	i2c_sda.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8001116:	2302      	movs	r3, #2
 8001118:	72bb      	strb	r3, [r7, #10]
	i2c_sda.GPIO_PinConfig.GPIO_PinNumber = DS1307_I2C_SDA_PIN;
 800111a:	2307      	movs	r3, #7
 800111c:	727b      	strb	r3, [r7, #9]
	i2c_sda.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800111e:	2301      	movs	r3, #1
 8001120:	737b      	strb	r3, [r7, #13]
	i2c_sda.GPIO_PinConfig.GPIO_PinPuPdControl = DS1307_I2C_PUPD;
 8001122:	2301      	movs	r3, #1
 8001124:	733b      	strb	r3, [r7, #12]
	i2c_sda.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8001126:	2302      	movs	r3, #2
 8001128:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(i2c_sda);
 800112a:	f107 0308 	add.w	r3, r7, #8
 800112e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001132:	f000 f9b9 	bl	80014a8 <GPIO_Init>


	i2c_scl.GPIOx = DS1307_I2C_GPIO_PORT;
 8001136:	2333      	movs	r3, #51	; 0x33
 8001138:	703b      	strb	r3, [r7, #0]
	i2c_scl.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
 800113a:	2304      	movs	r3, #4
 800113c:	71bb      	strb	r3, [r7, #6]
	i2c_scl.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 800113e:	2302      	movs	r3, #2
 8001140:	70bb      	strb	r3, [r7, #2]
	i2c_scl.GPIO_PinConfig.GPIO_PinNumber = DS1307_I2C_SCL_PIN;
 8001142:	2306      	movs	r3, #6
 8001144:	707b      	strb	r3, [r7, #1]
	i2c_scl.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8001146:	2301      	movs	r3, #1
 8001148:	717b      	strb	r3, [r7, #5]
	i2c_scl.GPIO_PinConfig.GPIO_PinPuPdControl = DS1307_I2C_PUPD;
 800114a:	2301      	movs	r3, #1
 800114c:	713b      	strb	r3, [r7, #4]
	i2c_scl.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800114e:	2302      	movs	r3, #2
 8001150:	70fb      	strb	r3, [r7, #3]

	GPIO_Init(i2c_scl);
 8001152:	463b      	mov	r3, r7
 8001154:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001158:	f000 f9a6 	bl	80014a8 <GPIO_Init>

}
 800115c:	bf00      	nop
 800115e:	3710      	adds	r7, #16
 8001160:	46bd      	mov	sp, r7
 8001162:	bd80      	pop	{r7, pc}

08001164 <ds1307_i2c_config>:


static void ds1307_i2c_config(void)
{
 8001164:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001166:	b087      	sub	sp, #28
 8001168:	af06      	add	r7, sp, #24
	g_ds1307I2cHandle.I2Cx = DS1307_I2C;
 800116a:	4b0d      	ldr	r3, [pc, #52]	; (80011a0 <ds1307_i2c_config+0x3c>)
 800116c:	2215      	movs	r2, #21
 800116e:	701a      	strb	r2, [r3, #0]
	g_ds1307I2cHandle.I2C_Config.I2C_AckControl = I2C_ACK_ENABLE;
 8001170:	4b0b      	ldr	r3, [pc, #44]	; (80011a0 <ds1307_i2c_config+0x3c>)
 8001172:	2201      	movs	r2, #1
 8001174:	725a      	strb	r2, [r3, #9]
	g_ds1307I2cHandle.I2C_Config.I2C_SCLSpeed = DS1307_I2C_SPEED;
 8001176:	4b0a      	ldr	r3, [pc, #40]	; (80011a0 <ds1307_i2c_config+0x3c>)
 8001178:	4a0a      	ldr	r2, [pc, #40]	; (80011a4 <ds1307_i2c_config+0x40>)
 800117a:	605a      	str	r2, [r3, #4]
	I2C_Init(g_ds1307I2cHandle);
 800117c:	4e08      	ldr	r6, [pc, #32]	; (80011a0 <ds1307_i2c_config+0x3c>)
 800117e:	466d      	mov	r5, sp
 8001180:	f106 0410 	add.w	r4, r6, #16
 8001184:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001186:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001188:	e894 0003 	ldmia.w	r4, {r0, r1}
 800118c:	e885 0003 	stmia.w	r5, {r0, r1}
 8001190:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8001194:	f000 feb0 	bl	8001ef8 <I2C_Init>
}
 8001198:	bf00      	nop
 800119a:	3704      	adds	r7, #4
 800119c:	46bd      	mov	sp, r7
 800119e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011a0:	20000bd8 	.word	0x20000bd8
 80011a4:	000186a0 	.word	0x000186a0

080011a8 <ds1307_write>:


static void ds1307_write(uint8_t value,uint8_t reg_addr)
{
 80011a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011aa:	b08f      	sub	sp, #60	; 0x3c
 80011ac:	af0a      	add	r7, sp, #40	; 0x28
 80011ae:	4603      	mov	r3, r0
 80011b0:	460a      	mov	r2, r1
 80011b2:	71fb      	strb	r3, [r7, #7]
 80011b4:	4613      	mov	r3, r2
 80011b6:	71bb      	strb	r3, [r7, #6]
	uint8_t tx[2];
	tx[0] = reg_addr;
 80011b8:	79bb      	ldrb	r3, [r7, #6]
 80011ba:	733b      	strb	r3, [r7, #12]
	tx[1] = value;
 80011bc:	79fb      	ldrb	r3, [r7, #7]
 80011be:	737b      	strb	r3, [r7, #13]
	I2C_MasterSendData(g_ds1307I2cHandle, tx, 2, DS1307_I2C_ADDRESS, 0);
 80011c0:	4e0d      	ldr	r6, [pc, #52]	; (80011f8 <ds1307_write+0x50>)
 80011c2:	2300      	movs	r3, #0
 80011c4:	9309      	str	r3, [sp, #36]	; 0x24
 80011c6:	2368      	movs	r3, #104	; 0x68
 80011c8:	9308      	str	r3, [sp, #32]
 80011ca:	2302      	movs	r3, #2
 80011cc:	9307      	str	r3, [sp, #28]
 80011ce:	f107 030c 	add.w	r3, r7, #12
 80011d2:	9306      	str	r3, [sp, #24]
 80011d4:	466d      	mov	r5, sp
 80011d6:	f106 0410 	add.w	r4, r6, #16
 80011da:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011dc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011de:	e894 0003 	ldmia.w	r4, {r0, r1}
 80011e2:	e885 0003 	stmia.w	r5, {r0, r1}
 80011e6:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80011ea:	f001 f857 	bl	800229c <I2C_MasterSendData>
}
 80011ee:	bf00      	nop
 80011f0:	3714      	adds	r7, #20
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011f6:	bf00      	nop
 80011f8:	20000bd8 	.word	0x20000bd8

080011fc <ds1307_read>:



static uint8_t ds1307_read(uint8_t reg_addr)
{
 80011fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011fe:	b08f      	sub	sp, #60	; 0x3c
 8001200:	af0a      	add	r7, sp, #40	; 0x28
 8001202:	4603      	mov	r3, r0
 8001204:	71fb      	strb	r3, [r7, #7]
	uint8_t data;
    I2C_MasterSendData(g_ds1307I2cHandle, &reg_addr, 1, DS1307_I2C_ADDRESS, 0);
 8001206:	4e19      	ldr	r6, [pc, #100]	; (800126c <ds1307_read+0x70>)
 8001208:	2300      	movs	r3, #0
 800120a:	9309      	str	r3, [sp, #36]	; 0x24
 800120c:	2368      	movs	r3, #104	; 0x68
 800120e:	9308      	str	r3, [sp, #32]
 8001210:	2301      	movs	r3, #1
 8001212:	9307      	str	r3, [sp, #28]
 8001214:	1dfb      	adds	r3, r7, #7
 8001216:	9306      	str	r3, [sp, #24]
 8001218:	466d      	mov	r5, sp
 800121a:	f106 0410 	add.w	r4, r6, #16
 800121e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001220:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001222:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001226:	e885 0003 	stmia.w	r5, {r0, r1}
 800122a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800122e:	f001 f835 	bl	800229c <I2C_MasterSendData>
    I2C_MasterReceiveData(g_ds1307I2cHandle, &data, 1, DS1307_I2C_ADDRESS, 0);
 8001232:	4e0e      	ldr	r6, [pc, #56]	; (800126c <ds1307_read+0x70>)
 8001234:	2300      	movs	r3, #0
 8001236:	9309      	str	r3, [sp, #36]	; 0x24
 8001238:	2368      	movs	r3, #104	; 0x68
 800123a:	9308      	str	r3, [sp, #32]
 800123c:	2301      	movs	r3, #1
 800123e:	9307      	str	r3, [sp, #28]
 8001240:	f107 030f 	add.w	r3, r7, #15
 8001244:	9306      	str	r3, [sp, #24]
 8001246:	466d      	mov	r5, sp
 8001248:	f106 0410 	add.w	r4, r6, #16
 800124c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800124e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001250:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001254:	e885 0003 	stmia.w	r5, {r0, r1}
 8001258:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800125c:	f001 f894 	bl	8002388 <I2C_MasterReceiveData>

    return data;
 8001260:	7bfb      	ldrb	r3, [r7, #15]
}
 8001262:	4618      	mov	r0, r3
 8001264:	3714      	adds	r7, #20
 8001266:	46bd      	mov	sp, r7
 8001268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800126a:	bf00      	nop
 800126c:	20000bd8 	.word	0x20000bd8

08001270 <binary_to_bcd>:



static uint8_t binary_to_bcd(uint8_t value)
{
 8001270:	b480      	push	{r7}
 8001272:	b085      	sub	sp, #20
 8001274:	af00      	add	r7, sp, #0
 8001276:	4603      	mov	r3, r0
 8001278:	71fb      	strb	r3, [r7, #7]
	uint8_t m , n;
	uint8_t bcd;

	bcd = value;
 800127a:	79fb      	ldrb	r3, [r7, #7]
 800127c:	73fb      	strb	r3, [r7, #15]
	if(value >= 10)
 800127e:	79fb      	ldrb	r3, [r7, #7]
 8001280:	2b09      	cmp	r3, #9
 8001282:	d918      	bls.n	80012b6 <binary_to_bcd+0x46>
	{
		m = value /10;
 8001284:	79fb      	ldrb	r3, [r7, #7]
 8001286:	4a0f      	ldr	r2, [pc, #60]	; (80012c4 <binary_to_bcd+0x54>)
 8001288:	fba2 2303 	umull	r2, r3, r2, r3
 800128c:	08db      	lsrs	r3, r3, #3
 800128e:	73bb      	strb	r3, [r7, #14]
		n = value % 10;
 8001290:	79fa      	ldrb	r2, [r7, #7]
 8001292:	4b0c      	ldr	r3, [pc, #48]	; (80012c4 <binary_to_bcd+0x54>)
 8001294:	fba3 1302 	umull	r1, r3, r3, r2
 8001298:	08d9      	lsrs	r1, r3, #3
 800129a:	460b      	mov	r3, r1
 800129c:	009b      	lsls	r3, r3, #2
 800129e:	440b      	add	r3, r1
 80012a0:	005b      	lsls	r3, r3, #1
 80012a2:	1ad3      	subs	r3, r2, r3
 80012a4:	737b      	strb	r3, [r7, #13]
		bcd = (m << 4) | n ;
 80012a6:	7bbb      	ldrb	r3, [r7, #14]
 80012a8:	011b      	lsls	r3, r3, #4
 80012aa:	b25a      	sxtb	r2, r3
 80012ac:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80012b0:	4313      	orrs	r3, r2
 80012b2:	b25b      	sxtb	r3, r3
 80012b4:	73fb      	strb	r3, [r7, #15]
	}

	return bcd;
 80012b6:	7bfb      	ldrb	r3, [r7, #15]
}
 80012b8:	4618      	mov	r0, r3
 80012ba:	3714      	adds	r7, #20
 80012bc:	46bd      	mov	sp, r7
 80012be:	bc80      	pop	{r7}
 80012c0:	4770      	bx	lr
 80012c2:	bf00      	nop
 80012c4:	cccccccd 	.word	0xcccccccd

080012c8 <bcd_to_binary>:

static uint8_t bcd_to_binary(uint8_t value)
{
 80012c8:	b480      	push	{r7}
 80012ca:	b085      	sub	sp, #20
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	4603      	mov	r3, r0
 80012d0:	71fb      	strb	r3, [r7, #7]
	uint8_t m , n;
	m = (uint8_t) ((value >> 4 ) * 10);
 80012d2:	79fb      	ldrb	r3, [r7, #7]
 80012d4:	091b      	lsrs	r3, r3, #4
 80012d6:	b2db      	uxtb	r3, r3
 80012d8:	461a      	mov	r2, r3
 80012da:	0092      	lsls	r2, r2, #2
 80012dc:	4413      	add	r3, r2
 80012de:	005b      	lsls	r3, r3, #1
 80012e0:	73fb      	strb	r3, [r7, #15]
	n =  value & (uint8_t)0x0F;
 80012e2:	79fb      	ldrb	r3, [r7, #7]
 80012e4:	f003 030f 	and.w	r3, r3, #15
 80012e8:	73bb      	strb	r3, [r7, #14]
	return (m+n);
 80012ea:	7bfa      	ldrb	r2, [r7, #15]
 80012ec:	7bbb      	ldrb	r3, [r7, #14]
 80012ee:	4413      	add	r3, r2
 80012f0:	b2db      	uxtb	r3, r3
}
 80012f2:	4618      	mov	r0, r3
 80012f4:	3714      	adds	r7, #20
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bc80      	pop	{r7}
 80012fa:	4770      	bx	lr

080012fc <EXTI_INTR_EDGE_CONFIG>:
EXTI19_IRQx,
EXTI20_IRQx,
EXTI21_IRQx,
EXTI22_IRQx, };

void EXTI_INTR_EDGE_CONFIG(uint8_t EXTIx, uint8_t Edge) {
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b086      	sub	sp, #24
 8001300:	af00      	add	r7, sp, #0
 8001302:	4603      	mov	r3, r0
 8001304:	460a      	mov	r2, r1
 8001306:	71fb      	strb	r3, [r7, #7]
 8001308:	4613      	mov	r3, r2
 800130a:	71bb      	strb	r3, [r7, #6]
	void(*fptr[])(uint8_t)={EXTI_INTR_EDGE_FALLING_CONFIG,EXTI_INTR_EDGE_RISING_CONFIG,EXTI_INTR_EDGE_BOTH_CONFIG};
 800130c:	4a09      	ldr	r2, [pc, #36]	; (8001334 <EXTI_INTR_EDGE_CONFIG+0x38>)
 800130e:	f107 030c 	add.w	r3, r7, #12
 8001312:	ca07      	ldmia	r2, {r0, r1, r2}
 8001314:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	fptr[Edge](EXTIx);
 8001318:	79bb      	ldrb	r3, [r7, #6]
 800131a:	009b      	lsls	r3, r3, #2
 800131c:	3318      	adds	r3, #24
 800131e:	443b      	add	r3, r7
 8001320:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8001324:	79fa      	ldrb	r2, [r7, #7]
 8001326:	4610      	mov	r0, r2
 8001328:	4798      	blx	r3
}
 800132a:	bf00      	nop
 800132c:	3718      	adds	r7, #24
 800132e:	46bd      	mov	sp, r7
 8001330:	bd80      	pop	{r7, pc}
 8001332:	bf00      	nop
 8001334:	08007b90 	.word	0x08007b90

08001338 <EXTI_INTR_EDGE_RISING_CONFIG>:
void EXTI_INTR_EDGE_RISING_CONFIG(uint8_t EXTIx) {
 8001338:	b480      	push	{r7}
 800133a:	b083      	sub	sp, #12
 800133c:	af00      	add	r7, sp, #0
 800133e:	4603      	mov	r3, r0
 8001340:	71fb      	strb	r3, [r7, #7]
	MODIFY_BIT_N(EXTI_ptr->RTSR, EXTIx, 1);
 8001342:	4b1a      	ldr	r3, [pc, #104]	; (80013ac <EXTI_INTR_EDGE_RISING_CONFIG+0x74>)
 8001344:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001348:	689b      	ldr	r3, [r3, #8]
 800134a:	4a19      	ldr	r2, [pc, #100]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 800134c:	6013      	str	r3, [r2, #0]
 800134e:	79fb      	ldrb	r3, [r7, #7]
 8001350:	2201      	movs	r2, #1
 8001352:	fa02 f303 	lsl.w	r3, r2, r3
 8001356:	461a      	mov	r2, r3
 8001358:	4b15      	ldr	r3, [pc, #84]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	4313      	orrs	r3, r2
 800135e:	4a14      	ldr	r2, [pc, #80]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 8001360:	6013      	str	r3, [r2, #0]
 8001362:	4b12      	ldr	r3, [pc, #72]	; (80013ac <EXTI_INTR_EDGE_RISING_CONFIG+0x74>)
 8001364:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001368:	461a      	mov	r2, r3
 800136a:	4b11      	ldr	r3, [pc, #68]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 800136c:	681b      	ldr	r3, [r3, #0]
 800136e:	6093      	str	r3, [r2, #8]
	//Clear the corresponding FTSR bit
	MODIFY_BIT_N(EXTI_ptr->FTSR, EXTIx, 0);
 8001370:	4b0e      	ldr	r3, [pc, #56]	; (80013ac <EXTI_INTR_EDGE_RISING_CONFIG+0x74>)
 8001372:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001376:	68db      	ldr	r3, [r3, #12]
 8001378:	4a0d      	ldr	r2, [pc, #52]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 800137a:	6013      	str	r3, [r2, #0]
 800137c:	79fb      	ldrb	r3, [r7, #7]
 800137e:	2201      	movs	r2, #1
 8001380:	fa02 f303 	lsl.w	r3, r2, r3
 8001384:	43db      	mvns	r3, r3
 8001386:	461a      	mov	r2, r3
 8001388:	4b09      	ldr	r3, [pc, #36]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 800138a:	681b      	ldr	r3, [r3, #0]
 800138c:	4013      	ands	r3, r2
 800138e:	4a08      	ldr	r2, [pc, #32]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 8001390:	6013      	str	r3, [r2, #0]
 8001392:	4b06      	ldr	r3, [pc, #24]	; (80013ac <EXTI_INTR_EDGE_RISING_CONFIG+0x74>)
 8001394:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001398:	461a      	mov	r2, r3
 800139a:	4b05      	ldr	r3, [pc, #20]	; (80013b0 <EXTI_INTR_EDGE_RISING_CONFIG+0x78>)
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	60d3      	str	r3, [r2, #12]

}
 80013a0:	bf00      	nop
 80013a2:	370c      	adds	r7, #12
 80013a4:	46bd      	mov	sp, r7
 80013a6:	bc80      	pop	{r7}
 80013a8:	4770      	bx	lr
 80013aa:	bf00      	nop
 80013ac:	20000000 	.word	0x20000000
 80013b0:	20000c00 	.word	0x20000c00

080013b4 <EXTI_INTR_EDGE_FALLING_CONFIG>:
void EXTI_INTR_EDGE_FALLING_CONFIG(uint8_t EXTIx) {
 80013b4:	b480      	push	{r7}
 80013b6:	b083      	sub	sp, #12
 80013b8:	af00      	add	r7, sp, #0
 80013ba:	4603      	mov	r3, r0
 80013bc:	71fb      	strb	r3, [r7, #7]
	MODIFY_BIT_N(EXTI_ptr->FTSR, EXTIx, 1);
 80013be:	4b1a      	ldr	r3, [pc, #104]	; (8001428 <EXTI_INTR_EDGE_FALLING_CONFIG+0x74>)
 80013c0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80013c4:	68db      	ldr	r3, [r3, #12]
 80013c6:	4a19      	ldr	r2, [pc, #100]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 80013c8:	6013      	str	r3, [r2, #0]
 80013ca:	79fb      	ldrb	r3, [r7, #7]
 80013cc:	2201      	movs	r2, #1
 80013ce:	fa02 f303 	lsl.w	r3, r2, r3
 80013d2:	461a      	mov	r2, r3
 80013d4:	4b15      	ldr	r3, [pc, #84]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 80013d6:	681b      	ldr	r3, [r3, #0]
 80013d8:	4313      	orrs	r3, r2
 80013da:	4a14      	ldr	r2, [pc, #80]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 80013dc:	6013      	str	r3, [r2, #0]
 80013de:	4b12      	ldr	r3, [pc, #72]	; (8001428 <EXTI_INTR_EDGE_FALLING_CONFIG+0x74>)
 80013e0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80013e4:	461a      	mov	r2, r3
 80013e6:	4b11      	ldr	r3, [pc, #68]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	60d3      	str	r3, [r2, #12]
	//Clear the corresponding RTSR bit
	MODIFY_BIT_N(EXTI_ptr->RTSR, EXTIx, 0);
 80013ec:	4b0e      	ldr	r3, [pc, #56]	; (8001428 <EXTI_INTR_EDGE_FALLING_CONFIG+0x74>)
 80013ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80013f2:	689b      	ldr	r3, [r3, #8]
 80013f4:	4a0d      	ldr	r2, [pc, #52]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 80013f6:	6013      	str	r3, [r2, #0]
 80013f8:	79fb      	ldrb	r3, [r7, #7]
 80013fa:	2201      	movs	r2, #1
 80013fc:	fa02 f303 	lsl.w	r3, r2, r3
 8001400:	43db      	mvns	r3, r3
 8001402:	461a      	mov	r2, r3
 8001404:	4b09      	ldr	r3, [pc, #36]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	4013      	ands	r3, r2
 800140a:	4a08      	ldr	r2, [pc, #32]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 800140c:	6013      	str	r3, [r2, #0]
 800140e:	4b06      	ldr	r3, [pc, #24]	; (8001428 <EXTI_INTR_EDGE_FALLING_CONFIG+0x74>)
 8001410:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001414:	461a      	mov	r2, r3
 8001416:	4b05      	ldr	r3, [pc, #20]	; (800142c <EXTI_INTR_EDGE_FALLING_CONFIG+0x78>)
 8001418:	681b      	ldr	r3, [r3, #0]
 800141a:	6093      	str	r3, [r2, #8]
}
 800141c:	bf00      	nop
 800141e:	370c      	adds	r7, #12
 8001420:	46bd      	mov	sp, r7
 8001422:	bc80      	pop	{r7}
 8001424:	4770      	bx	lr
 8001426:	bf00      	nop
 8001428:	20000000 	.word	0x20000000
 800142c:	20000c00 	.word	0x20000c00

08001430 <EXTI_INTR_EDGE_BOTH_CONFIG>:
void EXTI_INTR_EDGE_BOTH_CONFIG(uint8_t EXTIx) {
 8001430:	b480      	push	{r7}
 8001432:	b083      	sub	sp, #12
 8001434:	af00      	add	r7, sp, #0
 8001436:	4603      	mov	r3, r0
 8001438:	71fb      	strb	r3, [r7, #7]
	MODIFY_BIT_N(EXTI_ptr->FTSR, EXTIx, 1);
 800143a:	4b19      	ldr	r3, [pc, #100]	; (80014a0 <EXTI_INTR_EDGE_BOTH_CONFIG+0x70>)
 800143c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001440:	68db      	ldr	r3, [r3, #12]
 8001442:	4a18      	ldr	r2, [pc, #96]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001444:	6013      	str	r3, [r2, #0]
 8001446:	79fb      	ldrb	r3, [r7, #7]
 8001448:	2201      	movs	r2, #1
 800144a:	fa02 f303 	lsl.w	r3, r2, r3
 800144e:	461a      	mov	r2, r3
 8001450:	4b14      	ldr	r3, [pc, #80]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	4313      	orrs	r3, r2
 8001456:	4a13      	ldr	r2, [pc, #76]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001458:	6013      	str	r3, [r2, #0]
 800145a:	4b11      	ldr	r3, [pc, #68]	; (80014a0 <EXTI_INTR_EDGE_BOTH_CONFIG+0x70>)
 800145c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8001460:	461a      	mov	r2, r3
 8001462:	4b10      	ldr	r3, [pc, #64]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	60d3      	str	r3, [r2, #12]
	MODIFY_BIT_N(EXTI_ptr->RTSR, EXTIx, 1);
 8001468:	4b0d      	ldr	r3, [pc, #52]	; (80014a0 <EXTI_INTR_EDGE_BOTH_CONFIG+0x70>)
 800146a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800146e:	689b      	ldr	r3, [r3, #8]
 8001470:	4a0c      	ldr	r2, [pc, #48]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001472:	6013      	str	r3, [r2, #0]
 8001474:	79fb      	ldrb	r3, [r7, #7]
 8001476:	2201      	movs	r2, #1
 8001478:	fa02 f303 	lsl.w	r3, r2, r3
 800147c:	461a      	mov	r2, r3
 800147e:	4b09      	ldr	r3, [pc, #36]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001480:	681b      	ldr	r3, [r3, #0]
 8001482:	4313      	orrs	r3, r2
 8001484:	4a07      	ldr	r2, [pc, #28]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001486:	6013      	str	r3, [r2, #0]
 8001488:	4b05      	ldr	r3, [pc, #20]	; (80014a0 <EXTI_INTR_EDGE_BOTH_CONFIG+0x70>)
 800148a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800148e:	461a      	mov	r2, r3
 8001490:	4b04      	ldr	r3, [pc, #16]	; (80014a4 <EXTI_INTR_EDGE_BOTH_CONFIG+0x74>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	6093      	str	r3, [r2, #8]
}
 8001496:	bf00      	nop
 8001498:	370c      	adds	r7, #12
 800149a:	46bd      	mov	sp, r7
 800149c:	bc80      	pop	{r7}
 800149e:	4770      	bx	lr
 80014a0:	20000000 	.word	0x20000000
 80014a4:	20000c00 	.word	0x20000c00

080014a8 <GPIO_Init>:
 void GPIO_SPEED_CNFG(GPIO_Handle_t GPIOHandle);
 void GPIO_PUPD_CNFG(GPIO_Handle_t GPIOHandle);
 void GPIO_OTYPE_CNFG(GPIO_Handle_t GPIOHandle);
 void GPIO_INTR_CNFG(GPIO_Handle_t GPIOHandle);

void GPIO_Init(GPIO_Handle_t GPIOHandle) {
 80014a8:	b580      	push	{r7, lr}
 80014aa:	b082      	sub	sp, #8
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	463b      	mov	r3, r7
 80014b0:	e883 0003 	stmia.w	r3, {r0, r1}
	//enable the peripheral clock

	RCC_AHB1_PER_CLK_CTRL(GPIOHandle.GPIOx - 50, ENABLE);
 80014b4:	4b1b      	ldr	r3, [pc, #108]	; (8001524 <GPIO_Init+0x7c>)
 80014b6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80014ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014bc:	4a1a      	ldr	r2, [pc, #104]	; (8001528 <GPIO_Init+0x80>)
 80014be:	6013      	str	r3, [r2, #0]
 80014c0:	783b      	ldrb	r3, [r7, #0]
 80014c2:	3b32      	subs	r3, #50	; 0x32
 80014c4:	2201      	movs	r2, #1
 80014c6:	fa02 f303 	lsl.w	r3, r2, r3
 80014ca:	461a      	mov	r2, r3
 80014cc:	4b16      	ldr	r3, [pc, #88]	; (8001528 <GPIO_Init+0x80>)
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	4313      	orrs	r3, r2
 80014d2:	4a15      	ldr	r2, [pc, #84]	; (8001528 <GPIO_Init+0x80>)
 80014d4:	6013      	str	r3, [r2, #0]
 80014d6:	4b13      	ldr	r3, [pc, #76]	; (8001524 <GPIO_Init+0x7c>)
 80014d8:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80014dc:	461a      	mov	r2, r3
 80014de:	4b12      	ldr	r3, [pc, #72]	; (8001528 <GPIO_Init+0x80>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	6313      	str	r3, [r2, #48]	; 0x30

	//1 . configure the mode of gpio pin
	GPIO_MODE_CNFG(GPIOHandle);
 80014e4:	463b      	mov	r3, r7
 80014e6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80014ea:	f000 f81f 	bl	800152c <GPIO_MODE_CNFG>

	//2. configure the speed
	GPIO_SPEED_CNFG(GPIOHandle);
 80014ee:	463b      	mov	r3, r7
 80014f0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80014f4:	f000 f8b0 	bl	8001658 <GPIO_SPEED_CNFG>

	//3. configure the pupd settings
	GPIO_PUPD_CNFG(GPIOHandle);
 80014f8:	463b      	mov	r3, r7
 80014fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80014fe:	f000 f8e5 	bl	80016cc <GPIO_PUPD_CNFG>

	//4. configure the optype
	GPIO_OTYPE_CNFG(GPIOHandle);
 8001502:	463b      	mov	r3, r7
 8001504:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001508:	f000 f91a 	bl	8001740 <GPIO_OTYPE_CNFG>
	//5. configure the alt functionality
	if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)//configure the alt function registers.
 800150c:	78bb      	ldrb	r3, [r7, #2]
 800150e:	2b02      	cmp	r3, #2
 8001510:	d104      	bne.n	800151c <GPIO_Init+0x74>
		GPIO_ALTFN_CNFG(GPIOHandle);
 8001512:	463b      	mov	r3, r7
 8001514:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001518:	f000 f84a 	bl	80015b0 <GPIO_ALTFN_CNFG>
}
 800151c:	bf00      	nop
 800151e:	3708      	adds	r7, #8
 8001520:	46bd      	mov	sp, r7
 8001522:	bd80      	pop	{r7, pc}
 8001524:	20000000 	.word	0x20000000
 8001528:	20000c00 	.word	0x20000c00

0800152c <GPIO_MODE_CNFG>:

 */
void GPIO_DeInit(uint8_t GPIOx) {
	GPIOx_REG_RESET(GPIOx);
}
 void GPIO_MODE_CNFG(GPIO_Handle_t GPIOHandle) {
 800152c:	b580      	push	{r7, lr}
 800152e:	b082      	sub	sp, #8
 8001530:	af00      	add	r7, sp, #0
 8001532:	463b      	mov	r3, r7
 8001534:	e883 0003 	stmia.w	r3, {r0, r1}
	if (GPIOHandle.GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8001538:	78bb      	ldrb	r3, [r7, #2]
 800153a:	2b03      	cmp	r3, #3
 800153c:	d829      	bhi.n	8001592 <GPIO_MODE_CNFG+0x66>
		//the non interrupt mode
		MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->MODER, 2,
 800153e:	783b      	ldrb	r3, [r7, #0]
 8001540:	461a      	mov	r2, r3
 8001542:	4b18      	ldr	r3, [pc, #96]	; (80015a4 <GPIO_MODE_CNFG+0x78>)
 8001544:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	4a17      	ldr	r2, [pc, #92]	; (80015a8 <GPIO_MODE_CNFG+0x7c>)
 800154c:	6013      	str	r3, [r2, #0]
 800154e:	4b17      	ldr	r3, [pc, #92]	; (80015ac <GPIO_MODE_CNFG+0x80>)
 8001550:	685a      	ldr	r2, [r3, #4]
 8001552:	787b      	ldrb	r3, [r7, #1]
 8001554:	005b      	lsls	r3, r3, #1
 8001556:	fa02 f303 	lsl.w	r3, r2, r3
 800155a:	43da      	mvns	r2, r3
 800155c:	4b12      	ldr	r3, [pc, #72]	; (80015a8 <GPIO_MODE_CNFG+0x7c>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	4013      	ands	r3, r2
 8001562:	4a11      	ldr	r2, [pc, #68]	; (80015a8 <GPIO_MODE_CNFG+0x7c>)
 8001564:	6013      	str	r3, [r2, #0]
 8001566:	78bb      	ldrb	r3, [r7, #2]
 8001568:	461a      	mov	r2, r3
 800156a:	787b      	ldrb	r3, [r7, #1]
 800156c:	005b      	lsls	r3, r3, #1
 800156e:	fa02 f303 	lsl.w	r3, r2, r3
 8001572:	461a      	mov	r2, r3
 8001574:	4b0c      	ldr	r3, [pc, #48]	; (80015a8 <GPIO_MODE_CNFG+0x7c>)
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	4313      	orrs	r3, r2
 800157a:	4a0b      	ldr	r2, [pc, #44]	; (80015a8 <GPIO_MODE_CNFG+0x7c>)
 800157c:	6013      	str	r3, [r2, #0]
 800157e:	783b      	ldrb	r3, [r7, #0]
 8001580:	461a      	mov	r2, r3
 8001582:	4b08      	ldr	r3, [pc, #32]	; (80015a4 <GPIO_MODE_CNFG+0x78>)
 8001584:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001588:	461a      	mov	r2, r3
 800158a:	4b07      	ldr	r3, [pc, #28]	; (80015a8 <GPIO_MODE_CNFG+0x7c>)
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	6013      	str	r3, [r2, #0]
	} else {
		//Interrupt mode
		GPIO_INTR_CNFG(GPIOHandle);
	}

}
 8001590:	e004      	b.n	800159c <GPIO_MODE_CNFG+0x70>
		GPIO_INTR_CNFG(GPIOHandle);
 8001592:	463b      	mov	r3, r7
 8001594:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001598:	f000 f90a 	bl	80017b0 <GPIO_INTR_CNFG>
}
 800159c:	bf00      	nop
 800159e:	3708      	adds	r7, #8
 80015a0:	46bd      	mov	sp, r7
 80015a2:	bd80      	pop	{r7, pc}
 80015a4:	20000000 	.word	0x20000000
 80015a8:	20000c00 	.word	0x20000c00
 80015ac:	2000016c 	.word	0x2000016c

080015b0 <GPIO_ALTFN_CNFG>:
 void GPIO_ALTFN_CNFG(GPIO_Handle_t GPIOHandle) {
 80015b0:	b480      	push	{r7}
 80015b2:	b083      	sub	sp, #12
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	463b      	mov	r3, r7
 80015b8:	e883 0003 	stmia.w	r3, {r0, r1}
	MODIFY_KBITS(
 80015bc:	783b      	ldrb	r3, [r7, #0]
 80015be:	461a      	mov	r2, r3
 80015c0:	4b22      	ldr	r3, [pc, #136]	; (800164c <GPIO_ALTFN_CNFG+0x9c>)
 80015c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80015c6:	461a      	mov	r2, r3
 80015c8:	787b      	ldrb	r3, [r7, #1]
 80015ca:	08db      	lsrs	r3, r3, #3
 80015cc:	b2db      	uxtb	r3, r3
 80015ce:	3308      	adds	r3, #8
 80015d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015d4:	4a1e      	ldr	r2, [pc, #120]	; (8001650 <GPIO_ALTFN_CNFG+0xa0>)
 80015d6:	6013      	str	r3, [r2, #0]
 80015d8:	4b1e      	ldr	r3, [pc, #120]	; (8001654 <GPIO_ALTFN_CNFG+0xa4>)
 80015da:	68da      	ldr	r2, [r3, #12]
 80015dc:	787b      	ldrb	r3, [r7, #1]
 80015de:	4619      	mov	r1, r3
 80015e0:	4b1c      	ldr	r3, [pc, #112]	; (8001654 <GPIO_ALTFN_CNFG+0xa4>)
 80015e2:	689b      	ldr	r3, [r3, #8]
 80015e4:	400b      	ands	r3, r1
 80015e6:	fa02 f303 	lsl.w	r3, r2, r3
 80015ea:	43da      	mvns	r2, r3
 80015ec:	4b18      	ldr	r3, [pc, #96]	; (8001650 <GPIO_ALTFN_CNFG+0xa0>)
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	4013      	ands	r3, r2
 80015f2:	4a17      	ldr	r2, [pc, #92]	; (8001650 <GPIO_ALTFN_CNFG+0xa0>)
 80015f4:	6013      	str	r3, [r2, #0]
 80015f6:	79bb      	ldrb	r3, [r7, #6]
 80015f8:	461a      	mov	r2, r3
 80015fa:	787b      	ldrb	r3, [r7, #1]
 80015fc:	4619      	mov	r1, r3
 80015fe:	4b15      	ldr	r3, [pc, #84]	; (8001654 <GPIO_ALTFN_CNFG+0xa4>)
 8001600:	689b      	ldr	r3, [r3, #8]
 8001602:	400b      	ands	r3, r1
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	409a      	lsls	r2, r3
 8001608:	787b      	ldrb	r3, [r7, #1]
 800160a:	4619      	mov	r1, r3
 800160c:	4b11      	ldr	r3, [pc, #68]	; (8001654 <GPIO_ALTFN_CNFG+0xa4>)
 800160e:	689b      	ldr	r3, [r3, #8]
 8001610:	400b      	ands	r3, r1
 8001612:	fa02 f303 	lsl.w	r3, r2, r3
 8001616:	461a      	mov	r2, r3
 8001618:	4b0d      	ldr	r3, [pc, #52]	; (8001650 <GPIO_ALTFN_CNFG+0xa0>)
 800161a:	681b      	ldr	r3, [r3, #0]
 800161c:	4313      	orrs	r3, r2
 800161e:	4a0c      	ldr	r2, [pc, #48]	; (8001650 <GPIO_ALTFN_CNFG+0xa0>)
 8001620:	6013      	str	r3, [r2, #0]
 8001622:	783b      	ldrb	r3, [r7, #0]
 8001624:	461a      	mov	r2, r3
 8001626:	4b09      	ldr	r3, [pc, #36]	; (800164c <GPIO_ALTFN_CNFG+0x9c>)
 8001628:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800162c:	4619      	mov	r1, r3
 800162e:	787b      	ldrb	r3, [r7, #1]
 8001630:	08db      	lsrs	r3, r3, #3
 8001632:	b2db      	uxtb	r3, r3
 8001634:	4618      	mov	r0, r3
 8001636:	4b06      	ldr	r3, [pc, #24]	; (8001650 <GPIO_ALTFN_CNFG+0xa0>)
 8001638:	681a      	ldr	r2, [r3, #0]
 800163a:	f100 0308 	add.w	r3, r0, #8
 800163e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			GPIOx_ptr(GPIOHandle.GPIOx)->AFR[DIV2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,3)],
			4, MOD2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,3),
			(GPIOHandle.GPIO_PinConfig.GPIO_PinAltFunMode << MUL2PK(MOD2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,3),2)));
}
 8001642:	bf00      	nop
 8001644:	370c      	adds	r7, #12
 8001646:	46bd      	mov	sp, r7
 8001648:	bc80      	pop	{r7}
 800164a:	4770      	bx	lr
 800164c:	20000000 	.word	0x20000000
 8001650:	20000c00 	.word	0x20000c00
 8001654:	2000016c 	.word	0x2000016c

08001658 <GPIO_SPEED_CNFG>:
 void GPIO_SPEED_CNFG(GPIO_Handle_t GPIOHandle) {
 8001658:	b480      	push	{r7}
 800165a:	b083      	sub	sp, #12
 800165c:	af00      	add	r7, sp, #0
 800165e:	463b      	mov	r3, r7
 8001660:	e883 0003 	stmia.w	r3, {r0, r1}
	MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->OSPEEDR, 2,
 8001664:	783b      	ldrb	r3, [r7, #0]
 8001666:	461a      	mov	r2, r3
 8001668:	4b15      	ldr	r3, [pc, #84]	; (80016c0 <GPIO_SPEED_CNFG+0x68>)
 800166a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800166e:	689b      	ldr	r3, [r3, #8]
 8001670:	4a14      	ldr	r2, [pc, #80]	; (80016c4 <GPIO_SPEED_CNFG+0x6c>)
 8001672:	6013      	str	r3, [r2, #0]
 8001674:	4b14      	ldr	r3, [pc, #80]	; (80016c8 <GPIO_SPEED_CNFG+0x70>)
 8001676:	685a      	ldr	r2, [r3, #4]
 8001678:	787b      	ldrb	r3, [r7, #1]
 800167a:	005b      	lsls	r3, r3, #1
 800167c:	fa02 f303 	lsl.w	r3, r2, r3
 8001680:	43da      	mvns	r2, r3
 8001682:	4b10      	ldr	r3, [pc, #64]	; (80016c4 <GPIO_SPEED_CNFG+0x6c>)
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	4013      	ands	r3, r2
 8001688:	4a0e      	ldr	r2, [pc, #56]	; (80016c4 <GPIO_SPEED_CNFG+0x6c>)
 800168a:	6013      	str	r3, [r2, #0]
 800168c:	78fb      	ldrb	r3, [r7, #3]
 800168e:	461a      	mov	r2, r3
 8001690:	787b      	ldrb	r3, [r7, #1]
 8001692:	005b      	lsls	r3, r3, #1
 8001694:	fa02 f303 	lsl.w	r3, r2, r3
 8001698:	461a      	mov	r2, r3
 800169a:	4b0a      	ldr	r3, [pc, #40]	; (80016c4 <GPIO_SPEED_CNFG+0x6c>)
 800169c:	681b      	ldr	r3, [r3, #0]
 800169e:	4313      	orrs	r3, r2
 80016a0:	4a08      	ldr	r2, [pc, #32]	; (80016c4 <GPIO_SPEED_CNFG+0x6c>)
 80016a2:	6013      	str	r3, [r2, #0]
 80016a4:	783b      	ldrb	r3, [r7, #0]
 80016a6:	461a      	mov	r2, r3
 80016a8:	4b05      	ldr	r3, [pc, #20]	; (80016c0 <GPIO_SPEED_CNFG+0x68>)
 80016aa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80016ae:	461a      	mov	r2, r3
 80016b0:	4b04      	ldr	r3, [pc, #16]	; (80016c4 <GPIO_SPEED_CNFG+0x6c>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	6093      	str	r3, [r2, #8]
			MUL2PK (GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,1),
			GPIOHandle.GPIO_PinConfig.GPIO_PinSpeed);
}
 80016b6:	bf00      	nop
 80016b8:	370c      	adds	r7, #12
 80016ba:	46bd      	mov	sp, r7
 80016bc:	bc80      	pop	{r7}
 80016be:	4770      	bx	lr
 80016c0:	20000000 	.word	0x20000000
 80016c4:	20000c00 	.word	0x20000c00
 80016c8:	2000016c 	.word	0x2000016c

080016cc <GPIO_PUPD_CNFG>:
 void GPIO_PUPD_CNFG(GPIO_Handle_t GPIOHandle) {
 80016cc:	b480      	push	{r7}
 80016ce:	b083      	sub	sp, #12
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	463b      	mov	r3, r7
 80016d4:	e883 0003 	stmia.w	r3, {r0, r1}
	MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->PUPDR, 2,
 80016d8:	783b      	ldrb	r3, [r7, #0]
 80016da:	461a      	mov	r2, r3
 80016dc:	4b15      	ldr	r3, [pc, #84]	; (8001734 <GPIO_PUPD_CNFG+0x68>)
 80016de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80016e2:	68db      	ldr	r3, [r3, #12]
 80016e4:	4a14      	ldr	r2, [pc, #80]	; (8001738 <GPIO_PUPD_CNFG+0x6c>)
 80016e6:	6013      	str	r3, [r2, #0]
 80016e8:	4b14      	ldr	r3, [pc, #80]	; (800173c <GPIO_PUPD_CNFG+0x70>)
 80016ea:	685a      	ldr	r2, [r3, #4]
 80016ec:	787b      	ldrb	r3, [r7, #1]
 80016ee:	005b      	lsls	r3, r3, #1
 80016f0:	fa02 f303 	lsl.w	r3, r2, r3
 80016f4:	43da      	mvns	r2, r3
 80016f6:	4b10      	ldr	r3, [pc, #64]	; (8001738 <GPIO_PUPD_CNFG+0x6c>)
 80016f8:	681b      	ldr	r3, [r3, #0]
 80016fa:	4013      	ands	r3, r2
 80016fc:	4a0e      	ldr	r2, [pc, #56]	; (8001738 <GPIO_PUPD_CNFG+0x6c>)
 80016fe:	6013      	str	r3, [r2, #0]
 8001700:	793b      	ldrb	r3, [r7, #4]
 8001702:	461a      	mov	r2, r3
 8001704:	787b      	ldrb	r3, [r7, #1]
 8001706:	005b      	lsls	r3, r3, #1
 8001708:	fa02 f303 	lsl.w	r3, r2, r3
 800170c:	461a      	mov	r2, r3
 800170e:	4b0a      	ldr	r3, [pc, #40]	; (8001738 <GPIO_PUPD_CNFG+0x6c>)
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	4313      	orrs	r3, r2
 8001714:	4a08      	ldr	r2, [pc, #32]	; (8001738 <GPIO_PUPD_CNFG+0x6c>)
 8001716:	6013      	str	r3, [r2, #0]
 8001718:	783b      	ldrb	r3, [r7, #0]
 800171a:	461a      	mov	r2, r3
 800171c:	4b05      	ldr	r3, [pc, #20]	; (8001734 <GPIO_PUPD_CNFG+0x68>)
 800171e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001722:	461a      	mov	r2, r3
 8001724:	4b04      	ldr	r3, [pc, #16]	; (8001738 <GPIO_PUPD_CNFG+0x6c>)
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	60d3      	str	r3, [r2, #12]
			MUL2PK(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,1),
			GPIOHandle.GPIO_PinConfig.GPIO_PinPuPdControl);

}
 800172a:	bf00      	nop
 800172c:	370c      	adds	r7, #12
 800172e:	46bd      	mov	sp, r7
 8001730:	bc80      	pop	{r7}
 8001732:	4770      	bx	lr
 8001734:	20000000 	.word	0x20000000
 8001738:	20000c00 	.word	0x20000c00
 800173c:	2000016c 	.word	0x2000016c

08001740 <GPIO_OTYPE_CNFG>:
 void GPIO_OTYPE_CNFG(GPIO_Handle_t GPIOHandle) {
 8001740:	b480      	push	{r7}
 8001742:	b083      	sub	sp, #12
 8001744:	af00      	add	r7, sp, #0
 8001746:	463b      	mov	r3, r7
 8001748:	e883 0003 	stmia.w	r3, {r0, r1}
	MODIFY_KBITS(GPIOx_ptr(GPIOHandle.GPIOx)->OTYPER, 2,
 800174c:	783b      	ldrb	r3, [r7, #0]
 800174e:	461a      	mov	r2, r3
 8001750:	4b14      	ldr	r3, [pc, #80]	; (80017a4 <GPIO_OTYPE_CNFG+0x64>)
 8001752:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001756:	685b      	ldr	r3, [r3, #4]
 8001758:	4a13      	ldr	r2, [pc, #76]	; (80017a8 <GPIO_OTYPE_CNFG+0x68>)
 800175a:	6013      	str	r3, [r2, #0]
 800175c:	4b13      	ldr	r3, [pc, #76]	; (80017ac <GPIO_OTYPE_CNFG+0x6c>)
 800175e:	685b      	ldr	r3, [r3, #4]
 8001760:	787a      	ldrb	r2, [r7, #1]
 8001762:	4093      	lsls	r3, r2
 8001764:	43da      	mvns	r2, r3
 8001766:	4b10      	ldr	r3, [pc, #64]	; (80017a8 <GPIO_OTYPE_CNFG+0x68>)
 8001768:	681b      	ldr	r3, [r3, #0]
 800176a:	4013      	ands	r3, r2
 800176c:	4a0e      	ldr	r2, [pc, #56]	; (80017a8 <GPIO_OTYPE_CNFG+0x68>)
 800176e:	6013      	str	r3, [r2, #0]
 8001770:	797b      	ldrb	r3, [r7, #5]
 8001772:	461a      	mov	r2, r3
 8001774:	787b      	ldrb	r3, [r7, #1]
 8001776:	fa02 f303 	lsl.w	r3, r2, r3
 800177a:	461a      	mov	r2, r3
 800177c:	4b0a      	ldr	r3, [pc, #40]	; (80017a8 <GPIO_OTYPE_CNFG+0x68>)
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	4313      	orrs	r3, r2
 8001782:	4a09      	ldr	r2, [pc, #36]	; (80017a8 <GPIO_OTYPE_CNFG+0x68>)
 8001784:	6013      	str	r3, [r2, #0]
 8001786:	783b      	ldrb	r3, [r7, #0]
 8001788:	461a      	mov	r2, r3
 800178a:	4b06      	ldr	r3, [pc, #24]	; (80017a4 <GPIO_OTYPE_CNFG+0x64>)
 800178c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001790:	461a      	mov	r2, r3
 8001792:	4b05      	ldr	r3, [pc, #20]	; (80017a8 <GPIO_OTYPE_CNFG+0x68>)
 8001794:	681b      	ldr	r3, [r3, #0]
 8001796:	6053      	str	r3, [r2, #4]
			GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,
			GPIOHandle.GPIO_PinConfig.GPIO_PinOPType);
}
 8001798:	bf00      	nop
 800179a:	370c      	adds	r7, #12
 800179c:	46bd      	mov	sp, r7
 800179e:	bc80      	pop	{r7}
 80017a0:	4770      	bx	lr
 80017a2:	bf00      	nop
 80017a4:	20000000 	.word	0x20000000
 80017a8:	20000c00 	.word	0x20000c00
 80017ac:	2000016c 	.word	0x2000016c

080017b0 <GPIO_INTR_CNFG>:
 void GPIO_INTR_CNFG(GPIO_Handle_t GPIOHandle) {
 80017b0:	b580      	push	{r7, lr}
 80017b2:	b082      	sub	sp, #8
 80017b4:	af00      	add	r7, sp, #0
 80017b6:	463b      	mov	r3, r7
 80017b8:	e883 0003 	stmia.w	r3, {r0, r1}
	EXTI_INTR_EDGE_CONFIG(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,
 80017bc:	787a      	ldrb	r2, [r7, #1]
			GPIOHandle.GPIO_PinConfig.GPIO_PinMode - 4);
 80017be:	78bb      	ldrb	r3, [r7, #2]
	EXTI_INTR_EDGE_CONFIG(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber,
 80017c0:	3b04      	subs	r3, #4
 80017c2:	b2db      	uxtb	r3, r3
 80017c4:	4619      	mov	r1, r3
 80017c6:	4610      	mov	r0, r2
 80017c8:	f7ff fd98 	bl	80012fc <EXTI_INTR_EDGE_CONFIG>
	SYSCFG_PCLK_EN();
 80017cc:	4b33      	ldr	r3, [pc, #204]	; (800189c <GPIO_INTR_CNFG+0xec>)
 80017ce:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80017d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017d4:	4a32      	ldr	r2, [pc, #200]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 80017d6:	6013      	str	r3, [r2, #0]
 80017d8:	4b31      	ldr	r3, [pc, #196]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80017e0:	4a2f      	ldr	r2, [pc, #188]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 80017e2:	6013      	str	r3, [r2, #0]
 80017e4:	4b2d      	ldr	r3, [pc, #180]	; (800189c <GPIO_INTR_CNFG+0xec>)
 80017e6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80017ea:	461a      	mov	r2, r3
 80017ec:	4b2c      	ldr	r3, [pc, #176]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	6413      	str	r3, [r2, #64]	; 0x40
	SYSCFG_EXTI_CNFG(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber);
 80017f2:	4b2a      	ldr	r3, [pc, #168]	; (800189c <GPIO_INTR_CNFG+0xec>)
 80017f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80017f8:	461a      	mov	r2, r3
 80017fa:	787b      	ldrb	r3, [r7, #1]
 80017fc:	089b      	lsrs	r3, r3, #2
 80017fe:	b2db      	uxtb	r3, r3
 8001800:	3302      	adds	r3, #2
 8001802:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001806:	4a26      	ldr	r2, [pc, #152]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 8001808:	6013      	str	r3, [r2, #0]
 800180a:	4b26      	ldr	r3, [pc, #152]	; (80018a4 <GPIO_INTR_CNFG+0xf4>)
 800180c:	68da      	ldr	r2, [r3, #12]
 800180e:	787b      	ldrb	r3, [r7, #1]
 8001810:	4619      	mov	r1, r3
 8001812:	4b24      	ldr	r3, [pc, #144]	; (80018a4 <GPIO_INTR_CNFG+0xf4>)
 8001814:	685b      	ldr	r3, [r3, #4]
 8001816:	400b      	ands	r3, r1
 8001818:	009b      	lsls	r3, r3, #2
 800181a:	fa02 f303 	lsl.w	r3, r2, r3
 800181e:	43da      	mvns	r2, r3
 8001820:	4b1f      	ldr	r3, [pc, #124]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	4013      	ands	r3, r2
 8001826:	4a1e      	ldr	r2, [pc, #120]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 8001828:	6013      	str	r3, [r2, #0]
 800182a:	787b      	ldrb	r3, [r7, #1]
 800182c:	461a      	mov	r2, r3
 800182e:	787b      	ldrb	r3, [r7, #1]
 8001830:	4619      	mov	r1, r3
 8001832:	4b1c      	ldr	r3, [pc, #112]	; (80018a4 <GPIO_INTR_CNFG+0xf4>)
 8001834:	685b      	ldr	r3, [r3, #4]
 8001836:	400b      	ands	r3, r1
 8001838:	009b      	lsls	r3, r3, #2
 800183a:	fa02 f303 	lsl.w	r3, r2, r3
 800183e:	461a      	mov	r2, r3
 8001840:	4b17      	ldr	r3, [pc, #92]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	4313      	orrs	r3, r2
 8001846:	4a16      	ldr	r2, [pc, #88]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 8001848:	6013      	str	r3, [r2, #0]
 800184a:	4b14      	ldr	r3, [pc, #80]	; (800189c <GPIO_INTR_CNFG+0xec>)
 800184c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8001850:	4619      	mov	r1, r3
 8001852:	787b      	ldrb	r3, [r7, #1]
 8001854:	089b      	lsrs	r3, r3, #2
 8001856:	b2db      	uxtb	r3, r3
 8001858:	4618      	mov	r0, r3
 800185a:	4b11      	ldr	r3, [pc, #68]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 800185c:	681a      	ldr	r2, [r3, #0]
 800185e:	1c83      	adds	r3, r0, #2
 8001860:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	//3 . enable the exti interrupt delivery using IMR
	EXTI_MASK_CTRL(GPIOHandle.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 8001864:	4b0d      	ldr	r3, [pc, #52]	; (800189c <GPIO_INTR_CNFG+0xec>)
 8001866:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	4a0c      	ldr	r2, [pc, #48]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 800186e:	6013      	str	r3, [r2, #0]
 8001870:	787b      	ldrb	r3, [r7, #1]
 8001872:	461a      	mov	r2, r3
 8001874:	2301      	movs	r3, #1
 8001876:	4093      	lsls	r3, r2
 8001878:	461a      	mov	r2, r3
 800187a:	4b09      	ldr	r3, [pc, #36]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	4313      	orrs	r3, r2
 8001880:	4a07      	ldr	r2, [pc, #28]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 8001882:	6013      	str	r3, [r2, #0]
 8001884:	4b05      	ldr	r3, [pc, #20]	; (800189c <GPIO_INTR_CNFG+0xec>)
 8001886:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800188a:	461a      	mov	r2, r3
 800188c:	4b04      	ldr	r3, [pc, #16]	; (80018a0 <GPIO_INTR_CNFG+0xf0>)
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	6013      	str	r3, [r2, #0]
}
 8001892:	bf00      	nop
 8001894:	3708      	adds	r7, #8
 8001896:	46bd      	mov	sp, r7
 8001898:	bd80      	pop	{r7, pc}
 800189a:	bf00      	nop
 800189c:	20000000 	.word	0x20000000
 80018a0:	20000c00 	.word	0x20000c00
 80018a4:	2000016c 	.word	0x2000016c

080018a8 <I2C_GenerateStartCondition>:
 void I2C_ADDR_SlvClear(I2C_Handle_t I2CHandle);
 void ConfigureCCRVal(I2C_Handle_t I2CHandle);
 void ConfigureTRISEVal(I2C_Handle_t I2CHandle);
 void I2C_MasterHandleRXNEInterrupt(I2C_Handle_t I2CHandle );
 void I2C_MasterHandleTXEInterrupt(I2C_Handle_t I2CHandle );
 void I2C_GenerateStartCondition(uint8_t I2Cx) {
 80018a8:	b480      	push	{r7}
 80018aa:	b083      	sub	sp, #12
 80018ac:	af00      	add	r7, sp, #0
 80018ae:	4603      	mov	r3, r0
 80018b0:	71fb      	strb	r3, [r7, #7]
	SET_BIT_N(I2Cx_ptr(I2Cx)->CR1, I2C_CR1_START);
 80018b2:	79fb      	ldrb	r3, [r7, #7]
 80018b4:	4a07      	ldr	r2, [pc, #28]	; (80018d4 <I2C_GenerateStartCondition+0x2c>)
 80018b6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	79fa      	ldrb	r2, [r7, #7]
 80018be:	4905      	ldr	r1, [pc, #20]	; (80018d4 <I2C_GenerateStartCondition+0x2c>)
 80018c0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80018c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80018c8:	6013      	str	r3, [r2, #0]
}
 80018ca:	bf00      	nop
 80018cc:	370c      	adds	r7, #12
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bc80      	pop	{r7}
 80018d2:	4770      	bx	lr
 80018d4:	20000000 	.word	0x20000000

080018d8 <I2C_ExecuteAddressPhase>:

 void I2C_ExecuteAddressPhase(uint8_t I2Cx, uint8_t SlaveAddr,
		uint8_t RnW) {
 80018d8:	b480      	push	{r7}
 80018da:	b083      	sub	sp, #12
 80018dc:	af00      	add	r7, sp, #0
 80018de:	4603      	mov	r3, r0
 80018e0:	71fb      	strb	r3, [r7, #7]
 80018e2:	460b      	mov	r3, r1
 80018e4:	71bb      	strb	r3, [r7, #6]
 80018e6:	4613      	mov	r3, r2
 80018e8:	717b      	strb	r3, [r7, #5]
	I2Cx_ptr(I2Cx)->DR = (SlaveAddr << 1) | (RnW & 1); //We need only one bit value,so we take LSB only.
 80018ea:	79bb      	ldrb	r3, [r7, #6]
 80018ec:	005a      	lsls	r2, r3, #1
 80018ee:	797b      	ldrb	r3, [r7, #5]
 80018f0:	f003 0301 	and.w	r3, r3, #1
 80018f4:	ea42 0103 	orr.w	r1, r2, r3
 80018f8:	79fb      	ldrb	r3, [r7, #7]
 80018fa:	4a05      	ldr	r2, [pc, #20]	; (8001910 <I2C_ExecuteAddressPhase+0x38>)
 80018fc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001900:	460a      	mov	r2, r1
 8001902:	611a      	str	r2, [r3, #16]
}
 8001904:	bf00      	nop
 8001906:	370c      	adds	r7, #12
 8001908:	46bd      	mov	sp, r7
 800190a:	bc80      	pop	{r7}
 800190c:	4770      	bx	lr
 800190e:	bf00      	nop
 8001910:	20000000 	.word	0x20000000

08001914 <I2C_SB_EV>:

 void I2C_SB_EV(I2C_Handle_t I2CHandle) {
 8001914:	b084      	sub	sp, #16
 8001916:	b580      	push	{r7, lr}
 8001918:	af00      	add	r7, sp, #0
 800191a:	f107 0c08 	add.w	ip, r7, #8
 800191e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	//The interrupt is generated because of SB event
	//This block will not be executed in slave mode because for slave SB is always zero
	//In this block lets executed the address phase
	if (I2CHandle.TxRxState == I2C_BUSY_IN_TX) {
 8001922:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001926:	2b02      	cmp	r3, #2
 8001928:	d107      	bne.n	800193a <I2C_SB_EV+0x26>
		I2C_ExecuteAddressPhase(I2CHandle.I2Cx, I2CHandle.DevAddr, 0);
 800192a:	7a3b      	ldrb	r3, [r7, #8]
 800192c:	f897 1025 	ldrb.w	r1, [r7, #37]	; 0x25
 8001930:	2200      	movs	r2, #0
 8001932:	4618      	mov	r0, r3
 8001934:	f7ff ffd0 	bl	80018d8 <I2C_ExecuteAddressPhase>
	} else if (I2CHandle.TxRxState == I2C_BUSY_IN_RX) {
		I2C_ExecuteAddressPhase(I2CHandle.I2Cx, I2CHandle.DevAddr, 1);

	}

}
 8001938:	e00a      	b.n	8001950 <I2C_SB_EV+0x3c>
	} else if (I2CHandle.TxRxState == I2C_BUSY_IN_RX) {
 800193a:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800193e:	2b01      	cmp	r3, #1
 8001940:	d106      	bne.n	8001950 <I2C_SB_EV+0x3c>
		I2C_ExecuteAddressPhase(I2CHandle.I2Cx, I2CHandle.DevAddr, 1);
 8001942:	7a3b      	ldrb	r3, [r7, #8]
 8001944:	f897 1025 	ldrb.w	r1, [r7, #37]	; 0x25
 8001948:	2201      	movs	r2, #1
 800194a:	4618      	mov	r0, r3
 800194c:	f7ff ffc4 	bl	80018d8 <I2C_ExecuteAddressPhase>
}
 8001950:	bf00      	nop
 8001952:	46bd      	mov	sp, r7
 8001954:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8001958:	b004      	add	sp, #16
 800195a:	4770      	bx	lr

0800195c <I2C_ADDR_EV>:

 void I2C_ADDR_EV(I2C_Handle_t I2CHandle) {
 800195c:	b084      	sub	sp, #16
 800195e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001960:	b089      	sub	sp, #36	; 0x24
 8001962:	af06      	add	r7, sp, #24
 8001964:	f107 0420 	add.w	r4, r7, #32
 8001968:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//check for device mode
	void(*fptr[])(I2C_Handle_t)={I2C_ADDR_SlvClear,I2C_ADDR_MstrClear};
 800196c:	4a13      	ldr	r2, [pc, #76]	; (80019bc <I2C_ADDR_EV+0x60>)
 800196e:	463b      	mov	r3, r7
 8001970:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001974:	e883 0003 	stmia.w	r3, {r0, r1}
	fptr[GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_MSL)](I2CHandle);
 8001978:	f897 3020 	ldrb.w	r3, [r7, #32]
 800197c:	461a      	mov	r2, r3
 800197e:	4b10      	ldr	r3, [pc, #64]	; (80019c0 <I2C_ADDR_EV+0x64>)
 8001980:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001984:	699b      	ldr	r3, [r3, #24]
 8001986:	f003 0301 	and.w	r3, r3, #1
 800198a:	009b      	lsls	r3, r3, #2
 800198c:	3308      	adds	r3, #8
 800198e:	443b      	add	r3, r7
 8001990:	f853 6c08 	ldr.w	r6, [r3, #-8]
 8001994:	466d      	mov	r5, sp
 8001996:	f107 0430 	add.w	r4, r7, #48	; 0x30
 800199a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800199c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800199e:	e894 0003 	ldmia.w	r4, {r0, r1}
 80019a2:	e885 0003 	stmia.w	r5, {r0, r1}
 80019a6:	f107 0320 	add.w	r3, r7, #32
 80019aa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80019ac:	47b0      	blx	r6
}
 80019ae:	bf00      	nop
 80019b0:	370c      	adds	r7, #12
 80019b2:	46bd      	mov	sp, r7
 80019b4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80019b8:	b004      	add	sp, #16
 80019ba:	4770      	bx	lr
 80019bc:	08007b9c 	.word	0x08007b9c
 80019c0:	20000000 	.word	0x20000000

080019c4 <I2C_ADDR_MstrClear>:
 void I2C_ADDR_MstrClear(I2C_Handle_t I2CHandle) {
 80019c4:	b084      	sub	sp, #16
 80019c6:	b580      	push	{r7, lr}
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	f107 0c08 	add.w	ip, r7, #8
 80019ce:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	if (I2CHandle.TxRxState == I2C_BUSY_IN_RX) {
 80019d2:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80019d6:	2b01      	cmp	r3, #1
 80019d8:	d114      	bne.n	8001a04 <I2C_ADDR_MstrClear+0x40>
		if (I2CHandle.RxSize == 1) {
 80019da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80019dc:	2b01      	cmp	r3, #1
 80019de:	d11d      	bne.n	8001a1c <I2C_ADDR_MstrClear+0x58>
			//first disable the ack
			I2C_ManageAcking(I2CHandle.I2Cx, DISABLE);
 80019e0:	7a3b      	ldrb	r3, [r7, #8]
 80019e2:	2100      	movs	r1, #0
 80019e4:	4618      	mov	r0, r3
 80019e6:	f000 fd83 	bl	80024f0 <I2C_ManageAcking>

			//clear the ADDR flag ( read SR1 , read SR2)
			I2Cx_ptr(I2CHandle.I2Cx)->SR1;
 80019ea:	7a3b      	ldrb	r3, [r7, #8]
 80019ec:	461a      	mov	r2, r3
 80019ee:	4b0e      	ldr	r3, [pc, #56]	; (8001a28 <I2C_ADDR_MstrClear+0x64>)
 80019f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80019f4:	695b      	ldr	r3, [r3, #20]
			I2Cx_ptr(I2CHandle.I2Cx)->SR2;
 80019f6:	7a3b      	ldrb	r3, [r7, #8]
 80019f8:	461a      	mov	r2, r3
 80019fa:	4b0b      	ldr	r3, [pc, #44]	; (8001a28 <I2C_ADDR_MstrClear+0x64>)
 80019fc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a00:	699b      	ldr	r3, [r3, #24]
	} else {
		//clear the ADDR flag ( read SR1 , read SR2)
		I2Cx_ptr(I2CHandle.I2Cx)->SR1;
		I2Cx_ptr(I2CHandle.I2Cx)->SR2;
	}
}
 8001a02:	e00b      	b.n	8001a1c <I2C_ADDR_MstrClear+0x58>
		I2Cx_ptr(I2CHandle.I2Cx)->SR1;
 8001a04:	7a3b      	ldrb	r3, [r7, #8]
 8001a06:	461a      	mov	r2, r3
 8001a08:	4b07      	ldr	r3, [pc, #28]	; (8001a28 <I2C_ADDR_MstrClear+0x64>)
 8001a0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a0e:	695b      	ldr	r3, [r3, #20]
		I2Cx_ptr(I2CHandle.I2Cx)->SR2;
 8001a10:	7a3b      	ldrb	r3, [r7, #8]
 8001a12:	461a      	mov	r2, r3
 8001a14:	4b04      	ldr	r3, [pc, #16]	; (8001a28 <I2C_ADDR_MstrClear+0x64>)
 8001a16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a1a:	699b      	ldr	r3, [r3, #24]
}
 8001a1c:	bf00      	nop
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8001a24:	b004      	add	sp, #16
 8001a26:	4770      	bx	lr
 8001a28:	20000000 	.word	0x20000000

08001a2c <I2C_ADDR_SlvClear>:
 void I2C_ADDR_SlvClear(I2C_Handle_t I2CHandle) {
 8001a2c:	b084      	sub	sp, #16
 8001a2e:	b490      	push	{r4, r7}
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	f107 0408 	add.w	r4, r7, #8
 8001a36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	I2Cx_ptr(I2CHandle.I2Cx)->SR1;
 8001a3a:	7a3b      	ldrb	r3, [r7, #8]
 8001a3c:	461a      	mov	r2, r3
 8001a3e:	4b07      	ldr	r3, [pc, #28]	; (8001a5c <I2C_ADDR_SlvClear+0x30>)
 8001a40:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a44:	695b      	ldr	r3, [r3, #20]
	I2Cx_ptr(I2CHandle.I2Cx)->SR2;
 8001a46:	7a3b      	ldrb	r3, [r7, #8]
 8001a48:	461a      	mov	r2, r3
 8001a4a:	4b04      	ldr	r3, [pc, #16]	; (8001a5c <I2C_ADDR_SlvClear+0x30>)
 8001a4c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a50:	699b      	ldr	r3, [r3, #24]
}
 8001a52:	bf00      	nop
 8001a54:	46bd      	mov	sp, r7
 8001a56:	bc90      	pop	{r4, r7}
 8001a58:	b004      	add	sp, #16
 8001a5a:	4770      	bx	lr
 8001a5c:	20000000 	.word	0x20000000

08001a60 <I2C_BTF_EV>:
 void I2C_BTF_EV(I2C_Handle_t I2CHandle) {
 8001a60:	b084      	sub	sp, #16
 8001a62:	b5b0      	push	{r4, r5, r7, lr}
 8001a64:	b088      	sub	sp, #32
 8001a66:	af08      	add	r7, sp, #32
 8001a68:	f107 0410 	add.w	r4, r7, #16
 8001a6c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	if (I2CHandle.TxRxState == I2C_BUSY_IN_TX) {
 8001a70:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001a74:	2b02      	cmp	r3, #2
 8001a76:	d133      	bne.n	8001ae0 <I2C_BTF_EV+0x80>
		//make sure that TXE is also set .
		if (GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_TXE)) {
 8001a78:	7c3b      	ldrb	r3, [r7, #16]
 8001a7a:	461a      	mov	r2, r3
 8001a7c:	4b1b      	ldr	r3, [pc, #108]	; (8001aec <I2C_BTF_EV+0x8c>)
 8001a7e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a82:	695b      	ldr	r3, [r3, #20]
 8001a84:	09db      	lsrs	r3, r3, #7
 8001a86:	f003 0301 	and.w	r3, r3, #1
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d028      	beq.n	8001ae0 <I2C_BTF_EV+0x80>
			//BTF, TXE = 1
			if (I2CHandle.TxLen == 0) {
 8001a8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a90:	2b00      	cmp	r3, #0
 8001a92:	d125      	bne.n	8001ae0 <I2C_BTF_EV+0x80>
				//1. generate the STOP condition
				if (I2CHandle.Sr == I2C_DISABLE_SR)
 8001a94:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8001a98:	2b00      	cmp	r3, #0
 8001a9a:	d103      	bne.n	8001aa4 <I2C_BTF_EV+0x44>
					I2C_GenerateStopCondition(I2CHandle.I2Cx);
 8001a9c:	7c3b      	ldrb	r3, [r7, #16]
 8001a9e:	4618      	mov	r0, r3
 8001aa0:	f000 f9e2 	bl	8001e68 <I2C_GenerateStopCondition>

				//2. reset all the member elements of the handle structure.
				I2C_CloseSendData(I2CHandle);
 8001aa4:	466d      	mov	r5, sp
 8001aa6:	f107 0420 	add.w	r4, r7, #32
 8001aaa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001aac:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001aae:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001ab2:	e885 0003 	stmia.w	r5, {r0, r1}
 8001ab6:	f107 0310 	add.w	r3, r7, #16
 8001aba:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001abc:	f000 fe0c 	bl	80026d8 <I2C_CloseSendData>

				//3. notify the application about transmission complete
				I2C_ApplicationEventCallback(I2CHandle, I2C_EV_TX_CMPLT);
 8001ac0:	2300      	movs	r3, #0
 8001ac2:	9306      	str	r3, [sp, #24]
 8001ac4:	466d      	mov	r5, sp
 8001ac6:	f107 0420 	add.w	r4, r7, #32
 8001aca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001acc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001ace:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001ad2:	e885 0003 	stmia.w	r5, {r0, r1}
 8001ad6:	f107 0310 	add.w	r3, r7, #16
 8001ada:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001adc:	f000 fe40 	bl	8002760 <I2C_ApplicationEventCallback>
		}

	} else if (I2CHandle.TxRxState == I2C_BUSY_IN_RX) {
		;
	}
}
 8001ae0:	bf00      	nop
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001ae8:	b004      	add	sp, #16
 8001aea:	4770      	bx	lr
 8001aec:	20000000 	.word	0x20000000

08001af0 <I2C_ADD10_EV>:
 void I2C_ADD10_EV() {
 8001af0:	b480      	push	{r7}
 8001af2:	af00      	add	r7, sp, #0

}
 8001af4:	bf00      	nop
 8001af6:	46bd      	mov	sp, r7
 8001af8:	bc80      	pop	{r7}
 8001afa:	4770      	bx	lr

08001afc <I2C_STOPF_EV>:
 void I2C_STOPF_EV(I2C_Handle_t I2CHandle) {
 8001afc:	b084      	sub	sp, #16
 8001afe:	b5b0      	push	{r4, r5, r7, lr}
 8001b00:	b088      	sub	sp, #32
 8001b02:	af08      	add	r7, sp, #32
 8001b04:	f107 0410 	add.w	r4, r7, #16
 8001b08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Clear the STOPF ( i.e 1) read SR1 2) Write to CR1 )

	I2Cx_ptr(I2CHandle.I2Cx)->CR1 |= 0x0000;
 8001b0c:	7c3b      	ldrb	r3, [r7, #16]
 8001b0e:	461a      	mov	r2, r3
 8001b10:	4b10      	ldr	r3, [pc, #64]	; (8001b54 <I2C_STOPF_EV+0x58>)
 8001b12:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b16:	4619      	mov	r1, r3
 8001b18:	7c3b      	ldrb	r3, [r7, #16]
 8001b1a:	461a      	mov	r2, r3
 8001b1c:	4b0d      	ldr	r3, [pc, #52]	; (8001b54 <I2C_STOPF_EV+0x58>)
 8001b1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b22:	461a      	mov	r2, r3
 8001b24:	680b      	ldr	r3, [r1, #0]
 8001b26:	6013      	str	r3, [r2, #0]

	//Notify the application that STOP is detected
	I2C_ApplicationEventCallback(I2CHandle, I2C_EV_STOP);
 8001b28:	2302      	movs	r3, #2
 8001b2a:	9306      	str	r3, [sp, #24]
 8001b2c:	466d      	mov	r5, sp
 8001b2e:	f107 0420 	add.w	r4, r7, #32
 8001b32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b34:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001b36:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001b3a:	e885 0003 	stmia.w	r5, {r0, r1}
 8001b3e:	f107 0310 	add.w	r3, r7, #16
 8001b42:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001b44:	f000 fe0c 	bl	8002760 <I2C_ApplicationEventCallback>
}
 8001b48:	bf00      	nop
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001b50:	b004      	add	sp, #16
 8001b52:	4770      	bx	lr
 8001b54:	20000000 	.word	0x20000000

08001b58 <I2C_RXNE_EV>:

 void I2C_RXNE_EV(I2C_Handle_t I2CHandle) {
 8001b58:	b084      	sub	sp, #16
 8001b5a:	b5b0      	push	{r4, r5, r7, lr}
 8001b5c:	b088      	sub	sp, #32
 8001b5e:	af08      	add	r7, sp, #32
 8001b60:	f107 0410 	add.w	r4, r7, #16
 8001b64:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//check device mode .

	if (GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_MSL)) {
 8001b68:	7c3b      	ldrb	r3, [r7, #16]
 8001b6a:	461a      	mov	r2, r3
 8001b6c:	4b1d      	ldr	r3, [pc, #116]	; (8001be4 <I2C_RXNE_EV+0x8c>)
 8001b6e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b72:	699b      	ldr	r3, [r3, #24]
 8001b74:	f003 0301 	and.w	r3, r3, #1
 8001b78:	2b00      	cmp	r3, #0
 8001b7a:	d012      	beq.n	8001ba2 <I2C_RXNE_EV+0x4a>
		//The device is master
		//RXNE flag is set
		if (I2CHandle.TxRxState == I2C_BUSY_IN_RX) {
 8001b7c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001b80:	2b01      	cmp	r3, #1
 8001b82:	d129      	bne.n	8001bd8 <I2C_RXNE_EV+0x80>
			I2C_MasterHandleRXNEInterrupt(I2CHandle);
 8001b84:	466d      	mov	r5, sp
 8001b86:	f107 0420 	add.w	r4, r7, #32
 8001b8a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b8c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001b8e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001b92:	e885 0003 	stmia.w	r5, {r0, r1}
 8001b96:	f107 0310 	add.w	r3, r7, #16
 8001b9a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001b9c:	f000 fcf8 	bl	8002590 <I2C_MasterHandleRXNEInterrupt>
		if (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_TRA)) {
			I2C_ApplicationEventCallback(I2CHandle, I2C_EV_DATA_RCV);
		}
	}

}
 8001ba0:	e01a      	b.n	8001bd8 <I2C_RXNE_EV+0x80>
		if (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_TRA)) {
 8001ba2:	7c3b      	ldrb	r3, [r7, #16]
 8001ba4:	461a      	mov	r2, r3
 8001ba6:	4b0f      	ldr	r3, [pc, #60]	; (8001be4 <I2C_RXNE_EV+0x8c>)
 8001ba8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001bac:	699b      	ldr	r3, [r3, #24]
 8001bae:	089b      	lsrs	r3, r3, #2
 8001bb0:	f003 0301 	and.w	r3, r3, #1
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d10f      	bne.n	8001bd8 <I2C_RXNE_EV+0x80>
			I2C_ApplicationEventCallback(I2CHandle, I2C_EV_DATA_RCV);
 8001bb8:	2309      	movs	r3, #9
 8001bba:	9306      	str	r3, [sp, #24]
 8001bbc:	466d      	mov	r5, sp
 8001bbe:	f107 0420 	add.w	r4, r7, #32
 8001bc2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001bc4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001bc6:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001bca:	e885 0003 	stmia.w	r5, {r0, r1}
 8001bce:	f107 0310 	add.w	r3, r7, #16
 8001bd2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001bd4:	f000 fdc4 	bl	8002760 <I2C_ApplicationEventCallback>
}
 8001bd8:	bf00      	nop
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001be0:	b004      	add	sp, #16
 8001be2:	4770      	bx	lr
 8001be4:	20000000 	.word	0x20000000

08001be8 <I2C_TXE_EV>:

 void I2C_TXE_EV(I2C_Handle_t I2CHandle) {
 8001be8:	b084      	sub	sp, #16
 8001bea:	b5b0      	push	{r4, r5, r7, lr}
 8001bec:	b088      	sub	sp, #32
 8001bee:	af08      	add	r7, sp, #32
 8001bf0:	f107 0410 	add.w	r4, r7, #16
 8001bf4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Check for device mode

	if (GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_MSL)) {
 8001bf8:	7c3b      	ldrb	r3, [r7, #16]
 8001bfa:	461a      	mov	r2, r3
 8001bfc:	4b1d      	ldr	r3, [pc, #116]	; (8001c74 <I2C_TXE_EV+0x8c>)
 8001bfe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c02:	699b      	ldr	r3, [r3, #24]
 8001c04:	f003 0301 	and.w	r3, r3, #1
 8001c08:	2b00      	cmp	r3, #0
 8001c0a:	d012      	beq.n	8001c32 <I2C_TXE_EV+0x4a>
		//TXE flag is set
		//We have to do the data transmission
		if (I2CHandle.TxRxState == I2C_BUSY_IN_TX) {
 8001c0c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001c10:	2b02      	cmp	r3, #2
 8001c12:	d129      	bne.n	8001c68 <I2C_TXE_EV+0x80>
			I2C_MasterHandleTXEInterrupt(I2CHandle);
 8001c14:	466d      	mov	r5, sp
 8001c16:	f107 0420 	add.w	r4, r7, #32
 8001c1a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c1c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001c1e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001c22:	e885 0003 	stmia.w	r5, {r0, r1}
 8001c26:	f107 0310 	add.w	r3, r7, #16
 8001c2a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001c2c:	f000 fc90 	bl	8002550 <I2C_MasterHandleTXEInterrupt>
		if (GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_TRA)) {
			I2C_ApplicationEventCallback(I2CHandle, I2C_EV_DATA_REQ);
		}
	}

}
 8001c30:	e01a      	b.n	8001c68 <I2C_TXE_EV+0x80>
		if (GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR2_TRA)) {
 8001c32:	7c3b      	ldrb	r3, [r7, #16]
 8001c34:	461a      	mov	r2, r3
 8001c36:	4b0f      	ldr	r3, [pc, #60]	; (8001c74 <I2C_TXE_EV+0x8c>)
 8001c38:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c3c:	699b      	ldr	r3, [r3, #24]
 8001c3e:	089b      	lsrs	r3, r3, #2
 8001c40:	f003 0301 	and.w	r3, r3, #1
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d00f      	beq.n	8001c68 <I2C_TXE_EV+0x80>
			I2C_ApplicationEventCallback(I2CHandle, I2C_EV_DATA_REQ);
 8001c48:	2308      	movs	r3, #8
 8001c4a:	9306      	str	r3, [sp, #24]
 8001c4c:	466d      	mov	r5, sp
 8001c4e:	f107 0420 	add.w	r4, r7, #32
 8001c52:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c54:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001c56:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001c5a:	e885 0003 	stmia.w	r5, {r0, r1}
 8001c5e:	f107 0310 	add.w	r3, r7, #16
 8001c62:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001c64:	f000 fd7c 	bl	8002760 <I2C_ApplicationEventCallback>
}
 8001c68:	bf00      	nop
 8001c6a:	46bd      	mov	sp, r7
 8001c6c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001c70:	b004      	add	sp, #16
 8001c72:	4770      	bx	lr
 8001c74:	20000000 	.word	0x20000000

08001c78 <I2C_BERR_EV>:

 void I2C_BERR_EV(I2C_Handle_t I2CHandle) {
 8001c78:	b084      	sub	sp, #16
 8001c7a:	b5b0      	push	{r4, r5, r7, lr}
 8001c7c:	b088      	sub	sp, #32
 8001c7e:	af08      	add	r7, sp, #32
 8001c80:	f107 0410 	add.w	r4, r7, #16
 8001c84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Implement the code to clear the buss error flag
	CLR_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1,I2C_SR1_BERR);
 8001c88:	7c3b      	ldrb	r3, [r7, #16]
 8001c8a:	461a      	mov	r2, r3
 8001c8c:	4b10      	ldr	r3, [pc, #64]	; (8001cd0 <I2C_BERR_EV+0x58>)
 8001c8e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c92:	695b      	ldr	r3, [r3, #20]
 8001c94:	7c3a      	ldrb	r2, [r7, #16]
 8001c96:	4611      	mov	r1, r2
 8001c98:	4a0d      	ldr	r2, [pc, #52]	; (8001cd0 <I2C_BERR_EV+0x58>)
 8001c9a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001c9e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001ca2:	6153      	str	r3, [r2, #20]

	//Implement the code to notify the application about the error
	I2C_ApplicationEventCallback(I2CHandle, I2C_ERROR_BERR);
 8001ca4:	2303      	movs	r3, #3
 8001ca6:	9306      	str	r3, [sp, #24]
 8001ca8:	466d      	mov	r5, sp
 8001caa:	f107 0420 	add.w	r4, r7, #32
 8001cae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001cb0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001cb2:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001cb6:	e885 0003 	stmia.w	r5, {r0, r1}
 8001cba:	f107 0310 	add.w	r3, r7, #16
 8001cbe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cc0:	f000 fd4e 	bl	8002760 <I2C_ApplicationEventCallback>

}
 8001cc4:	bf00      	nop
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001ccc:	b004      	add	sp, #16
 8001cce:	4770      	bx	lr
 8001cd0:	20000000 	.word	0x20000000

08001cd4 <I2C_ARLO_EV>:
 void I2C_ARLO_EV(I2C_Handle_t I2CHandle) {
 8001cd4:	b084      	sub	sp, #16
 8001cd6:	b5b0      	push	{r4, r5, r7, lr}
 8001cd8:	b088      	sub	sp, #32
 8001cda:	af08      	add	r7, sp, #32
 8001cdc:	f107 0410 	add.w	r4, r7, #16
 8001ce0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Implement the code to clear the arbitration lost error flag
	CLR_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1,I2C_SR1_ARLO);
 8001ce4:	7c3b      	ldrb	r3, [r7, #16]
 8001ce6:	461a      	mov	r2, r3
 8001ce8:	4b10      	ldr	r3, [pc, #64]	; (8001d2c <I2C_ARLO_EV+0x58>)
 8001cea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001cee:	695b      	ldr	r3, [r3, #20]
 8001cf0:	7c3a      	ldrb	r2, [r7, #16]
 8001cf2:	4611      	mov	r1, r2
 8001cf4:	4a0d      	ldr	r2, [pc, #52]	; (8001d2c <I2C_ARLO_EV+0x58>)
 8001cf6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001cfa:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001cfe:	6153      	str	r3, [r2, #20]

	//Implement the code to notify the application about the error
	I2C_ApplicationEventCallback(I2CHandle, I2C_ERROR_ARLO);
 8001d00:	2304      	movs	r3, #4
 8001d02:	9306      	str	r3, [sp, #24]
 8001d04:	466d      	mov	r5, sp
 8001d06:	f107 0420 	add.w	r4, r7, #32
 8001d0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001d0c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001d0e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001d12:	e885 0003 	stmia.w	r5, {r0, r1}
 8001d16:	f107 0310 	add.w	r3, r7, #16
 8001d1a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001d1c:	f000 fd20 	bl	8002760 <I2C_ApplicationEventCallback>
}
 8001d20:	bf00      	nop
 8001d22:	46bd      	mov	sp, r7
 8001d24:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001d28:	b004      	add	sp, #16
 8001d2a:	4770      	bx	lr
 8001d2c:	20000000 	.word	0x20000000

08001d30 <I2C_AF_EV>:
 void I2C_AF_EV(I2C_Handle_t I2CHandle) {
 8001d30:	b084      	sub	sp, #16
 8001d32:	b5b0      	push	{r4, r5, r7, lr}
 8001d34:	b088      	sub	sp, #32
 8001d36:	af08      	add	r7, sp, #32
 8001d38:	f107 0410 	add.w	r4, r7, #16
 8001d3c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Implement the code to clear the ACK failure error flag
	CLR_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1,I2C_SR1_AF);
 8001d40:	7c3b      	ldrb	r3, [r7, #16]
 8001d42:	461a      	mov	r2, r3
 8001d44:	4b10      	ldr	r3, [pc, #64]	; (8001d88 <I2C_AF_EV+0x58>)
 8001d46:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001d4a:	695b      	ldr	r3, [r3, #20]
 8001d4c:	7c3a      	ldrb	r2, [r7, #16]
 8001d4e:	4611      	mov	r1, r2
 8001d50:	4a0d      	ldr	r2, [pc, #52]	; (8001d88 <I2C_AF_EV+0x58>)
 8001d52:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001d56:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001d5a:	6153      	str	r3, [r2, #20]

	//Implement the code to notify the application about the error
	I2C_ApplicationEventCallback(I2CHandle, I2C_ERROR_AF);
 8001d5c:	2305      	movs	r3, #5
 8001d5e:	9306      	str	r3, [sp, #24]
 8001d60:	466d      	mov	r5, sp
 8001d62:	f107 0420 	add.w	r4, r7, #32
 8001d66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001d68:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001d6a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001d6e:	e885 0003 	stmia.w	r5, {r0, r1}
 8001d72:	f107 0310 	add.w	r3, r7, #16
 8001d76:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001d78:	f000 fcf2 	bl	8002760 <I2C_ApplicationEventCallback>

}
 8001d7c:	bf00      	nop
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001d84:	b004      	add	sp, #16
 8001d86:	4770      	bx	lr
 8001d88:	20000000 	.word	0x20000000

08001d8c <I2C_OVR_EV>:

 void I2C_OVR_EV(I2C_Handle_t I2CHandle) {
 8001d8c:	b084      	sub	sp, #16
 8001d8e:	b5b0      	push	{r4, r5, r7, lr}
 8001d90:	b088      	sub	sp, #32
 8001d92:	af08      	add	r7, sp, #32
 8001d94:	f107 0410 	add.w	r4, r7, #16
 8001d98:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Implement the code to clear the Overrun/underrun error flag
	CLR_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1,I2C_SR1_OVR);
 8001d9c:	7c3b      	ldrb	r3, [r7, #16]
 8001d9e:	461a      	mov	r2, r3
 8001da0:	4b10      	ldr	r3, [pc, #64]	; (8001de4 <I2C_OVR_EV+0x58>)
 8001da2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001da6:	695b      	ldr	r3, [r3, #20]
 8001da8:	7c3a      	ldrb	r2, [r7, #16]
 8001daa:	4611      	mov	r1, r2
 8001dac:	4a0d      	ldr	r2, [pc, #52]	; (8001de4 <I2C_OVR_EV+0x58>)
 8001dae:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001db2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001db6:	6153      	str	r3, [r2, #20]

	//Implement the code to notify the application about the error
	I2C_ApplicationEventCallback(I2CHandle, I2C_ERROR_OVR);
 8001db8:	2306      	movs	r3, #6
 8001dba:	9306      	str	r3, [sp, #24]
 8001dbc:	466d      	mov	r5, sp
 8001dbe:	f107 0420 	add.w	r4, r7, #32
 8001dc2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001dc4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001dc6:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001dca:	e885 0003 	stmia.w	r5, {r0, r1}
 8001dce:	f107 0310 	add.w	r3, r7, #16
 8001dd2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001dd4:	f000 fcc4 	bl	8002760 <I2C_ApplicationEventCallback>

}
 8001dd8:	bf00      	nop
 8001dda:	46bd      	mov	sp, r7
 8001ddc:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001de0:	b004      	add	sp, #16
 8001de2:	4770      	bx	lr
 8001de4:	20000000 	.word	0x20000000

08001de8 <I2C_PECERR_EV>:
 void I2C_PECERR_EV(I2C_Handle_t I2CHandle) {
 8001de8:	b084      	sub	sp, #16
 8001dea:	b490      	push	{r4, r7}
 8001dec:	af00      	add	r7, sp, #0
 8001dee:	f107 0408 	add.w	r4, r7, #8
 8001df2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

}
 8001df6:	bf00      	nop
 8001df8:	46bd      	mov	sp, r7
 8001dfa:	bc90      	pop	{r4, r7}
 8001dfc:	b004      	add	sp, #16
 8001dfe:	4770      	bx	lr

08001e00 <I2C_TIMEOUT_EV>:
 void I2C_TIMEOUT_EV(I2C_Handle_t I2CHandle) {
 8001e00:	b084      	sub	sp, #16
 8001e02:	b5b0      	push	{r4, r5, r7, lr}
 8001e04:	b088      	sub	sp, #32
 8001e06:	af08      	add	r7, sp, #32
 8001e08:	f107 0410 	add.w	r4, r7, #16
 8001e0c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Implement the code to clear the Time out error flag
	CLR_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1,I2C_SR1_TIMEOUT);
 8001e10:	7c3b      	ldrb	r3, [r7, #16]
 8001e12:	461a      	mov	r2, r3
 8001e14:	4b10      	ldr	r3, [pc, #64]	; (8001e58 <I2C_TIMEOUT_EV+0x58>)
 8001e16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e1a:	695b      	ldr	r3, [r3, #20]
 8001e1c:	7c3a      	ldrb	r2, [r7, #16]
 8001e1e:	4611      	mov	r1, r2
 8001e20:	4a0d      	ldr	r2, [pc, #52]	; (8001e58 <I2C_TIMEOUT_EV+0x58>)
 8001e22:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001e26:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001e2a:	6153      	str	r3, [r2, #20]

	//Implement the code to notify the application about the error
	I2C_ApplicationEventCallback(I2CHandle, I2C_ERROR_TIMEOUT);
 8001e2c:	2307      	movs	r3, #7
 8001e2e:	9306      	str	r3, [sp, #24]
 8001e30:	466d      	mov	r5, sp
 8001e32:	f107 0420 	add.w	r4, r7, #32
 8001e36:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001e38:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001e3a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001e3e:	e885 0003 	stmia.w	r5, {r0, r1}
 8001e42:	f107 0310 	add.w	r3, r7, #16
 8001e46:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001e48:	f000 fc8a 	bl	8002760 <I2C_ApplicationEventCallback>

}
 8001e4c:	bf00      	nop
 8001e4e:	46bd      	mov	sp, r7
 8001e50:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8001e54:	b004      	add	sp, #16
 8001e56:	4770      	bx	lr
 8001e58:	20000000 	.word	0x20000000

08001e5c <I2C_SMBALERT_EV>:
 void I2C_SMBALERT_EV() {
 8001e5c:	b480      	push	{r7}
 8001e5e:	af00      	add	r7, sp, #0

}
 8001e60:	bf00      	nop
 8001e62:	46bd      	mov	sp, r7
 8001e64:	bc80      	pop	{r7}
 8001e66:	4770      	bx	lr

08001e68 <I2C_GenerateStopCondition>:

void I2C_GenerateStopCondition(uint8_t I2Cx) {
 8001e68:	b480      	push	{r7}
 8001e6a:	b083      	sub	sp, #12
 8001e6c:	af00      	add	r7, sp, #0
 8001e6e:	4603      	mov	r3, r0
 8001e70:	71fb      	strb	r3, [r7, #7]
	SET_BIT_N(I2Cx_ptr(I2Cx)->CR1, I2C_CR1_STOP);
 8001e72:	79fb      	ldrb	r3, [r7, #7]
 8001e74:	4a07      	ldr	r2, [pc, #28]	; (8001e94 <I2C_GenerateStopCondition+0x2c>)
 8001e76:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	79fa      	ldrb	r2, [r7, #7]
 8001e7e:	4905      	ldr	r1, [pc, #20]	; (8001e94 <I2C_GenerateStopCondition+0x2c>)
 8001e80:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e84:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001e88:	6013      	str	r3, [r2, #0]
}
 8001e8a:	bf00      	nop
 8001e8c:	370c      	adds	r7, #12
 8001e8e:	46bd      	mov	sp, r7
 8001e90:	bc80      	pop	{r7}
 8001e92:	4770      	bx	lr
 8001e94:	20000000 	.word	0x20000000

08001e98 <I2C_PeripheralControl>:
 * @return            -
 *
 * @Note              -

 */
void I2C_PeripheralControl(uint8_t I2Cx, uint8_t State) {
 8001e98:	b480      	push	{r7}
 8001e9a:	b083      	sub	sp, #12
 8001e9c:	af00      	add	r7, sp, #0
 8001e9e:	4603      	mov	r3, r0
 8001ea0:	460a      	mov	r2, r1
 8001ea2:	71fb      	strb	r3, [r7, #7]
 8001ea4:	4613      	mov	r3, r2
 8001ea6:	71bb      	strb	r3, [r7, #6]
	MODIFY_BIT_N(I2Cx_ptr(I2Cx)->CR1, I2C_CR1_PE, State);
 8001ea8:	79fb      	ldrb	r3, [r7, #7]
 8001eaa:	4a11      	ldr	r2, [pc, #68]	; (8001ef0 <I2C_PeripheralControl+0x58>)
 8001eac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	4a10      	ldr	r2, [pc, #64]	; (8001ef4 <I2C_PeripheralControl+0x5c>)
 8001eb4:	6013      	str	r3, [r2, #0]
 8001eb6:	79bb      	ldrb	r3, [r7, #6]
 8001eb8:	2b00      	cmp	r3, #0
 8001eba:	d106      	bne.n	8001eca <I2C_PeripheralControl+0x32>
 8001ebc:	4b0d      	ldr	r3, [pc, #52]	; (8001ef4 <I2C_PeripheralControl+0x5c>)
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	f023 0301 	bic.w	r3, r3, #1
 8001ec4:	4a0b      	ldr	r2, [pc, #44]	; (8001ef4 <I2C_PeripheralControl+0x5c>)
 8001ec6:	6013      	str	r3, [r2, #0]
 8001ec8:	e005      	b.n	8001ed6 <I2C_PeripheralControl+0x3e>
 8001eca:	4b0a      	ldr	r3, [pc, #40]	; (8001ef4 <I2C_PeripheralControl+0x5c>)
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	f043 0301 	orr.w	r3, r3, #1
 8001ed2:	4a08      	ldr	r2, [pc, #32]	; (8001ef4 <I2C_PeripheralControl+0x5c>)
 8001ed4:	6013      	str	r3, [r2, #0]
 8001ed6:	79fb      	ldrb	r3, [r7, #7]
 8001ed8:	4a05      	ldr	r2, [pc, #20]	; (8001ef0 <I2C_PeripheralControl+0x58>)
 8001eda:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ede:	461a      	mov	r2, r3
 8001ee0:	4b04      	ldr	r3, [pc, #16]	; (8001ef4 <I2C_PeripheralControl+0x5c>)
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	6013      	str	r3, [r2, #0]
}
 8001ee6:	bf00      	nop
 8001ee8:	370c      	adds	r7, #12
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bc80      	pop	{r7}
 8001eee:	4770      	bx	lr
 8001ef0:	20000000 	.word	0x20000000
 8001ef4:	20000c00 	.word	0x20000c00

08001ef8 <I2C_Init>:
 * @return            -
 *
 * @Note              -

 */
void I2C_Init(I2C_Handle_t I2CHandle) {
 8001ef8:	b084      	sub	sp, #16
 8001efa:	b5b0      	push	{r4, r5, r7, lr}
 8001efc:	b086      	sub	sp, #24
 8001efe:	af06      	add	r7, sp, #24
 8001f00:	f107 0410 	add.w	r4, r7, #16
 8001f04:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	//enable the clock for the i2cx peripheral
	RCC_APB1_PER_CLK_CTRL(I2CHandle.I2Cx, ENABLE);
 8001f08:	4b57      	ldr	r3, [pc, #348]	; (8002068 <I2C_Init+0x170>)
 8001f0a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8001f0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f10:	4a56      	ldr	r2, [pc, #344]	; (800206c <I2C_Init+0x174>)
 8001f12:	6013      	str	r3, [r2, #0]
 8001f14:	7c3b      	ldrb	r3, [r7, #16]
 8001f16:	461a      	mov	r2, r3
 8001f18:	2301      	movs	r3, #1
 8001f1a:	4093      	lsls	r3, r2
 8001f1c:	461a      	mov	r2, r3
 8001f1e:	4b53      	ldr	r3, [pc, #332]	; (800206c <I2C_Init+0x174>)
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	4313      	orrs	r3, r2
 8001f24:	4a51      	ldr	r2, [pc, #324]	; (800206c <I2C_Init+0x174>)
 8001f26:	6013      	str	r3, [r2, #0]
 8001f28:	4b4f      	ldr	r3, [pc, #316]	; (8002068 <I2C_Init+0x170>)
 8001f2a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8001f2e:	461a      	mov	r2, r3
 8001f30:	4b4e      	ldr	r3, [pc, #312]	; (800206c <I2C_Init+0x174>)
 8001f32:	681b      	ldr	r3, [r3, #0]
 8001f34:	6413      	str	r3, [r2, #64]	; 0x40

	//ack control bit
	MODIFY_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->CR1, I2C_CR1_ACK,
 8001f36:	7c3b      	ldrb	r3, [r7, #16]
 8001f38:	461a      	mov	r2, r3
 8001f3a:	4b4b      	ldr	r3, [pc, #300]	; (8002068 <I2C_Init+0x170>)
 8001f3c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	4a4a      	ldr	r2, [pc, #296]	; (800206c <I2C_Init+0x174>)
 8001f44:	6013      	str	r3, [r2, #0]
 8001f46:	7e7b      	ldrb	r3, [r7, #25]
 8001f48:	2b00      	cmp	r3, #0
 8001f4a:	d106      	bne.n	8001f5a <I2C_Init+0x62>
 8001f4c:	4b47      	ldr	r3, [pc, #284]	; (800206c <I2C_Init+0x174>)
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001f54:	4a45      	ldr	r2, [pc, #276]	; (800206c <I2C_Init+0x174>)
 8001f56:	6013      	str	r3, [r2, #0]
 8001f58:	e005      	b.n	8001f66 <I2C_Init+0x6e>
 8001f5a:	4b44      	ldr	r3, [pc, #272]	; (800206c <I2C_Init+0x174>)
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001f62:	4a42      	ldr	r2, [pc, #264]	; (800206c <I2C_Init+0x174>)
 8001f64:	6013      	str	r3, [r2, #0]
 8001f66:	7c3b      	ldrb	r3, [r7, #16]
 8001f68:	461a      	mov	r2, r3
 8001f6a:	4b3f      	ldr	r3, [pc, #252]	; (8002068 <I2C_Init+0x170>)
 8001f6c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f70:	461a      	mov	r2, r3
 8001f72:	4b3e      	ldr	r3, [pc, #248]	; (800206c <I2C_Init+0x174>)
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	6013      	str	r3, [r2, #0]
			I2CHandle.I2C_Config.I2C_AckControl);

	//configure the FREQ field of CR2

	MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->CR2, 6, 0,
 8001f78:	7c3b      	ldrb	r3, [r7, #16]
 8001f7a:	461a      	mov	r2, r3
 8001f7c:	4b3a      	ldr	r3, [pc, #232]	; (8002068 <I2C_Init+0x170>)
 8001f7e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f82:	685b      	ldr	r3, [r3, #4]
 8001f84:	4a39      	ldr	r2, [pc, #228]	; (800206c <I2C_Init+0x174>)
 8001f86:	6013      	str	r3, [r2, #0]
 8001f88:	4b39      	ldr	r3, [pc, #228]	; (8002070 <I2C_Init+0x178>)
 8001f8a:	695b      	ldr	r3, [r3, #20]
 8001f8c:	43da      	mvns	r2, r3
 8001f8e:	4b37      	ldr	r3, [pc, #220]	; (800206c <I2C_Init+0x174>)
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4013      	ands	r3, r2
 8001f94:	4a35      	ldr	r2, [pc, #212]	; (800206c <I2C_Init+0x174>)
 8001f96:	6013      	str	r3, [r2, #0]
 8001f98:	f000 fbee 	bl	8002778 <RCC_GetPCLK1Value>
 8001f9c:	4603      	mov	r3, r0
 8001f9e:	4a35      	ldr	r2, [pc, #212]	; (8002074 <I2C_Init+0x17c>)
 8001fa0:	fba2 2303 	umull	r2, r3, r2, r3
 8001fa4:	0c9a      	lsrs	r2, r3, #18
 8001fa6:	4b31      	ldr	r3, [pc, #196]	; (800206c <I2C_Init+0x174>)
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	4313      	orrs	r3, r2
 8001fac:	4a2f      	ldr	r2, [pc, #188]	; (800206c <I2C_Init+0x174>)
 8001fae:	6013      	str	r3, [r2, #0]
 8001fb0:	7c3b      	ldrb	r3, [r7, #16]
 8001fb2:	461a      	mov	r2, r3
 8001fb4:	4b2c      	ldr	r3, [pc, #176]	; (8002068 <I2C_Init+0x170>)
 8001fb6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001fba:	461a      	mov	r2, r3
 8001fbc:	4b2b      	ldr	r3, [pc, #172]	; (800206c <I2C_Init+0x174>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	6053      	str	r3, [r2, #4]
			RCC_GetPCLK1Value() / 1000000U);

	//program the device own address
	SET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->OAR1, 14); //According to reference manual this bit must be set to 1.
 8001fc2:	7c3b      	ldrb	r3, [r7, #16]
 8001fc4:	461a      	mov	r2, r3
 8001fc6:	4b28      	ldr	r3, [pc, #160]	; (8002068 <I2C_Init+0x170>)
 8001fc8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001fcc:	689b      	ldr	r3, [r3, #8]
 8001fce:	7c3a      	ldrb	r2, [r7, #16]
 8001fd0:	4611      	mov	r1, r2
 8001fd2:	4a25      	ldr	r2, [pc, #148]	; (8002068 <I2C_Init+0x170>)
 8001fd4:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8001fd8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001fdc:	6093      	str	r3, [r2, #8]
	MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->OAR1, 7, I2C_OAR_ADDR,
 8001fde:	7c3b      	ldrb	r3, [r7, #16]
 8001fe0:	461a      	mov	r2, r3
 8001fe2:	4b21      	ldr	r3, [pc, #132]	; (8002068 <I2C_Init+0x170>)
 8001fe4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001fe8:	689b      	ldr	r3, [r3, #8]
 8001fea:	4a20      	ldr	r2, [pc, #128]	; (800206c <I2C_Init+0x174>)
 8001fec:	6013      	str	r3, [r2, #0]
 8001fee:	4b20      	ldr	r3, [pc, #128]	; (8002070 <I2C_Init+0x178>)
 8001ff0:	699b      	ldr	r3, [r3, #24]
 8001ff2:	005b      	lsls	r3, r3, #1
 8001ff4:	43da      	mvns	r2, r3
 8001ff6:	4b1d      	ldr	r3, [pc, #116]	; (800206c <I2C_Init+0x174>)
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	4013      	ands	r3, r2
 8001ffc:	4a1b      	ldr	r2, [pc, #108]	; (800206c <I2C_Init+0x174>)
 8001ffe:	6013      	str	r3, [r2, #0]
 8002000:	7e3b      	ldrb	r3, [r7, #24]
 8002002:	005b      	lsls	r3, r3, #1
 8002004:	461a      	mov	r2, r3
 8002006:	4b19      	ldr	r3, [pc, #100]	; (800206c <I2C_Init+0x174>)
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	4313      	orrs	r3, r2
 800200c:	4a17      	ldr	r2, [pc, #92]	; (800206c <I2C_Init+0x174>)
 800200e:	6013      	str	r3, [r2, #0]
 8002010:	7c3b      	ldrb	r3, [r7, #16]
 8002012:	461a      	mov	r2, r3
 8002014:	4b14      	ldr	r3, [pc, #80]	; (8002068 <I2C_Init+0x170>)
 8002016:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800201a:	461a      	mov	r2, r3
 800201c:	4b13      	ldr	r3, [pc, #76]	; (800206c <I2C_Init+0x174>)
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	6093      	str	r3, [r2, #8]
			I2CHandle.I2C_Config.I2C_DeviceAddress);

	//CCR calculations
	ConfigureCCRVal(I2CHandle);
 8002022:	466d      	mov	r5, sp
 8002024:	f107 0420 	add.w	r4, r7, #32
 8002028:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800202a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800202c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002030:	e885 0003 	stmia.w	r5, {r0, r1}
 8002034:	f107 0310 	add.w	r3, r7, #16
 8002038:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800203a:	f000 f81d 	bl	8002078 <ConfigureCCRVal>

	//TRISE Configuration
	ConfigureTRISEVal(I2CHandle);
 800203e:	466d      	mov	r5, sp
 8002040:	f107 0420 	add.w	r4, r7, #32
 8002044:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002046:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002048:	e894 0003 	ldmia.w	r4, {r0, r1}
 800204c:	e885 0003 	stmia.w	r5, {r0, r1}
 8002050:	f107 0310 	add.w	r3, r7, #16
 8002054:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002056:	f000 f8b1 	bl	80021bc <ConfigureTRISEVal>

}
 800205a:	bf00      	nop
 800205c:	46bd      	mov	sp, r7
 800205e:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8002062:	b004      	add	sp, #16
 8002064:	4770      	bx	lr
 8002066:	bf00      	nop
 8002068:	20000000 	.word	0x20000000
 800206c:	20000c00 	.word	0x20000c00
 8002070:	2000016c 	.word	0x2000016c
 8002074:	431bde83 	.word	0x431bde83

08002078 <ConfigureCCRVal>:
 void ConfigureCCRVal(I2C_Handle_t I2CHandle) {
 8002078:	b084      	sub	sp, #16
 800207a:	b580      	push	{r7, lr}
 800207c:	b082      	sub	sp, #8
 800207e:	af00      	add	r7, sp, #0
 8002080:	f107 0c10 	add.w	ip, r7, #16
 8002084:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	if (I2CHandle.I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM) {
 8002088:	697b      	ldr	r3, [r7, #20]
 800208a:	4a48      	ldr	r2, [pc, #288]	; (80021ac <ConfigureCCRVal+0x134>)
 800208c:	4293      	cmp	r3, r2
 800208e:	d825      	bhi.n	80020dc <ConfigureCCRVal+0x64>
		//mode is standard mode
		MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->CCR, 12, 0,
 8002090:	7c3b      	ldrb	r3, [r7, #16]
 8002092:	461a      	mov	r2, r3
 8002094:	4b46      	ldr	r3, [pc, #280]	; (80021b0 <ConfigureCCRVal+0x138>)
 8002096:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800209a:	69db      	ldr	r3, [r3, #28]
 800209c:	4a45      	ldr	r2, [pc, #276]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800209e:	6013      	str	r3, [r2, #0]
 80020a0:	4b45      	ldr	r3, [pc, #276]	; (80021b8 <ConfigureCCRVal+0x140>)
 80020a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80020a4:	43da      	mvns	r2, r3
 80020a6:	4b43      	ldr	r3, [pc, #268]	; (80021b4 <ConfigureCCRVal+0x13c>)
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	4013      	ands	r3, r2
 80020ac:	4a41      	ldr	r2, [pc, #260]	; (80021b4 <ConfigureCCRVal+0x13c>)
 80020ae:	6013      	str	r3, [r2, #0]
 80020b0:	f000 fb62 	bl	8002778 <RCC_GetPCLK1Value>
 80020b4:	4602      	mov	r2, r0
 80020b6:	697b      	ldr	r3, [r7, #20]
 80020b8:	005b      	lsls	r3, r3, #1
 80020ba:	fbb2 f2f3 	udiv	r2, r2, r3
 80020be:	4b3d      	ldr	r3, [pc, #244]	; (80021b4 <ConfigureCCRVal+0x13c>)
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	4313      	orrs	r3, r2
 80020c4:	4a3b      	ldr	r2, [pc, #236]	; (80021b4 <ConfigureCCRVal+0x13c>)
 80020c6:	6013      	str	r3, [r2, #0]
 80020c8:	7c3b      	ldrb	r3, [r7, #16]
 80020ca:	461a      	mov	r2, r3
 80020cc:	4b38      	ldr	r3, [pc, #224]	; (80021b0 <ConfigureCCRVal+0x138>)
 80020ce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80020d2:	461a      	mov	r2, r3
 80020d4:	4b37      	ldr	r3, [pc, #220]	; (80021b4 <ConfigureCCRVal+0x13c>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	61d3      	str	r3, [r2, #28]
					RCC_GetPCLK1Value()
							/ (mulFact[I2CHandle.I2C_Config.I2C_FMDutyCycle]
									* I2CHandle.I2C_Config.I2C_SCLSpeed));
		}
	}
}
 80020da:	e060      	b.n	800219e <ConfigureCCRVal+0x126>
		SET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->CCR, I2C_CCR_F_S);
 80020dc:	7c3b      	ldrb	r3, [r7, #16]
 80020de:	461a      	mov	r2, r3
 80020e0:	4b33      	ldr	r3, [pc, #204]	; (80021b0 <ConfigureCCRVal+0x138>)
 80020e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80020e6:	69db      	ldr	r3, [r3, #28]
 80020e8:	7c3a      	ldrb	r2, [r7, #16]
 80020ea:	4611      	mov	r1, r2
 80020ec:	4a30      	ldr	r2, [pc, #192]	; (80021b0 <ConfigureCCRVal+0x138>)
 80020ee:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80020f2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80020f6:	61d3      	str	r3, [r2, #28]
		uint8_t mulFact[] = { 3, 25 };
 80020f8:	f641 1303 	movw	r3, #6403	; 0x1903
 80020fc:	80bb      	strh	r3, [r7, #4]
		MODIFY_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->CCR, I2C_CCR_DUTY,
 80020fe:	7c3b      	ldrb	r3, [r7, #16]
 8002100:	461a      	mov	r2, r3
 8002102:	4b2b      	ldr	r3, [pc, #172]	; (80021b0 <ConfigureCCRVal+0x138>)
 8002104:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002108:	69db      	ldr	r3, [r3, #28]
 800210a:	4a2a      	ldr	r2, [pc, #168]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800210c:	6013      	str	r3, [r2, #0]
 800210e:	7ebb      	ldrb	r3, [r7, #26]
 8002110:	2b00      	cmp	r3, #0
 8002112:	d106      	bne.n	8002122 <ConfigureCCRVal+0xaa>
 8002114:	4b27      	ldr	r3, [pc, #156]	; (80021b4 <ConfigureCCRVal+0x13c>)
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800211c:	4a25      	ldr	r2, [pc, #148]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800211e:	6013      	str	r3, [r2, #0]
 8002120:	e005      	b.n	800212e <ConfigureCCRVal+0xb6>
 8002122:	4b24      	ldr	r3, [pc, #144]	; (80021b4 <ConfigureCCRVal+0x13c>)
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800212a:	4a22      	ldr	r2, [pc, #136]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800212c:	6013      	str	r3, [r2, #0]
 800212e:	7c3b      	ldrb	r3, [r7, #16]
 8002130:	461a      	mov	r2, r3
 8002132:	4b1f      	ldr	r3, [pc, #124]	; (80021b0 <ConfigureCCRVal+0x138>)
 8002134:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002138:	461a      	mov	r2, r3
 800213a:	4b1e      	ldr	r3, [pc, #120]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	61d3      	str	r3, [r2, #28]
		if (I2CHandle.I2C_Config.I2C_FMDutyCycle == I2C_FM_DUTY_2) {
 8002140:	7ebb      	ldrb	r3, [r7, #26]
 8002142:	2b00      	cmp	r3, #0
 8002144:	d12b      	bne.n	800219e <ConfigureCCRVal+0x126>
			MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->CCR, 12, 0,
 8002146:	7c3b      	ldrb	r3, [r7, #16]
 8002148:	461a      	mov	r2, r3
 800214a:	4b19      	ldr	r3, [pc, #100]	; (80021b0 <ConfigureCCRVal+0x138>)
 800214c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002150:	69db      	ldr	r3, [r3, #28]
 8002152:	4a18      	ldr	r2, [pc, #96]	; (80021b4 <ConfigureCCRVal+0x13c>)
 8002154:	6013      	str	r3, [r2, #0]
 8002156:	4b18      	ldr	r3, [pc, #96]	; (80021b8 <ConfigureCCRVal+0x140>)
 8002158:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800215a:	43da      	mvns	r2, r3
 800215c:	4b15      	ldr	r3, [pc, #84]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	4013      	ands	r3, r2
 8002162:	4a14      	ldr	r2, [pc, #80]	; (80021b4 <ConfigureCCRVal+0x13c>)
 8002164:	6013      	str	r3, [r2, #0]
 8002166:	f000 fb07 	bl	8002778 <RCC_GetPCLK1Value>
 800216a:	4602      	mov	r2, r0
 800216c:	7ebb      	ldrb	r3, [r7, #26]
 800216e:	3308      	adds	r3, #8
 8002170:	443b      	add	r3, r7
 8002172:	f813 3c04 	ldrb.w	r3, [r3, #-4]
 8002176:	4619      	mov	r1, r3
 8002178:	697b      	ldr	r3, [r7, #20]
 800217a:	fb01 f303 	mul.w	r3, r1, r3
 800217e:	fbb2 f2f3 	udiv	r2, r2, r3
 8002182:	4b0c      	ldr	r3, [pc, #48]	; (80021b4 <ConfigureCCRVal+0x13c>)
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	4313      	orrs	r3, r2
 8002188:	4a0a      	ldr	r2, [pc, #40]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800218a:	6013      	str	r3, [r2, #0]
 800218c:	7c3b      	ldrb	r3, [r7, #16]
 800218e:	461a      	mov	r2, r3
 8002190:	4b07      	ldr	r3, [pc, #28]	; (80021b0 <ConfigureCCRVal+0x138>)
 8002192:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002196:	461a      	mov	r2, r3
 8002198:	4b06      	ldr	r3, [pc, #24]	; (80021b4 <ConfigureCCRVal+0x13c>)
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	61d3      	str	r3, [r2, #28]
}
 800219e:	bf00      	nop
 80021a0:	3708      	adds	r7, #8
 80021a2:	46bd      	mov	sp, r7
 80021a4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80021a8:	b004      	add	sp, #16
 80021aa:	4770      	bx	lr
 80021ac:	000186a0 	.word	0x000186a0
 80021b0:	20000000 	.word	0x20000000
 80021b4:	20000c00 	.word	0x20000c00
 80021b8:	2000016c 	.word	0x2000016c

080021bc <ConfigureTRISEVal>:
 void ConfigureTRISEVal(I2C_Handle_t I2CHandle) {
 80021bc:	b084      	sub	sp, #16
 80021be:	b580      	push	{r7, lr}
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	f107 0c08 	add.w	ip, r7, #8
 80021c6:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	if (I2CHandle.I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM) {
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	4a2d      	ldr	r2, [pc, #180]	; (8002284 <ConfigureTRISEVal+0xc8>)
 80021ce:	4293      	cmp	r3, r2
 80021d0:	d826      	bhi.n	8002220 <ConfigureTRISEVal+0x64>
		//mode is standard mode
		MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->TRISE, 6, 0,
 80021d2:	7a3b      	ldrb	r3, [r7, #8]
 80021d4:	461a      	mov	r2, r3
 80021d6:	4b2c      	ldr	r3, [pc, #176]	; (8002288 <ConfigureTRISEVal+0xcc>)
 80021d8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80021dc:	6a1b      	ldr	r3, [r3, #32]
 80021de:	4a2b      	ldr	r2, [pc, #172]	; (800228c <ConfigureTRISEVal+0xd0>)
 80021e0:	6013      	str	r3, [r2, #0]
 80021e2:	4b2b      	ldr	r3, [pc, #172]	; (8002290 <ConfigureTRISEVal+0xd4>)
 80021e4:	695b      	ldr	r3, [r3, #20]
 80021e6:	43da      	mvns	r2, r3
 80021e8:	4b28      	ldr	r3, [pc, #160]	; (800228c <ConfigureTRISEVal+0xd0>)
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	4013      	ands	r3, r2
 80021ee:	4a27      	ldr	r2, [pc, #156]	; (800228c <ConfigureTRISEVal+0xd0>)
 80021f0:	6013      	str	r3, [r2, #0]
 80021f2:	f000 fac1 	bl	8002778 <RCC_GetPCLK1Value>
 80021f6:	4603      	mov	r3, r0
 80021f8:	4a26      	ldr	r2, [pc, #152]	; (8002294 <ConfigureTRISEVal+0xd8>)
 80021fa:	fba2 2303 	umull	r2, r3, r2, r3
 80021fe:	0c9b      	lsrs	r3, r3, #18
 8002200:	1c5a      	adds	r2, r3, #1
 8002202:	4b22      	ldr	r3, [pc, #136]	; (800228c <ConfigureTRISEVal+0xd0>)
 8002204:	681b      	ldr	r3, [r3, #0]
 8002206:	4313      	orrs	r3, r2
 8002208:	4a20      	ldr	r2, [pc, #128]	; (800228c <ConfigureTRISEVal+0xd0>)
 800220a:	6013      	str	r3, [r2, #0]
 800220c:	7a3b      	ldrb	r3, [r7, #8]
 800220e:	461a      	mov	r2, r3
 8002210:	4b1d      	ldr	r3, [pc, #116]	; (8002288 <ConfigureTRISEVal+0xcc>)
 8002212:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002216:	461a      	mov	r2, r3
 8002218:	4b1c      	ldr	r3, [pc, #112]	; (800228c <ConfigureTRISEVal+0xd0>)
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	6213      	str	r3, [r2, #32]
	} else {
		//mode is fast mode
		MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->TRISE, 6, 0,
				((RCC_GetPCLK1Value() * 300) / 1000000000U) + 1);
	}
}
 800221e:	e02a      	b.n	8002276 <ConfigureTRISEVal+0xba>
		MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->TRISE, 6, 0,
 8002220:	7a3b      	ldrb	r3, [r7, #8]
 8002222:	461a      	mov	r2, r3
 8002224:	4b18      	ldr	r3, [pc, #96]	; (8002288 <ConfigureTRISEVal+0xcc>)
 8002226:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800222a:	6a1b      	ldr	r3, [r3, #32]
 800222c:	4a17      	ldr	r2, [pc, #92]	; (800228c <ConfigureTRISEVal+0xd0>)
 800222e:	6013      	str	r3, [r2, #0]
 8002230:	4b17      	ldr	r3, [pc, #92]	; (8002290 <ConfigureTRISEVal+0xd4>)
 8002232:	695b      	ldr	r3, [r3, #20]
 8002234:	43da      	mvns	r2, r3
 8002236:	4b15      	ldr	r3, [pc, #84]	; (800228c <ConfigureTRISEVal+0xd0>)
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	4013      	ands	r3, r2
 800223c:	4a13      	ldr	r2, [pc, #76]	; (800228c <ConfigureTRISEVal+0xd0>)
 800223e:	6013      	str	r3, [r2, #0]
 8002240:	f000 fa9a 	bl	8002778 <RCC_GetPCLK1Value>
 8002244:	4603      	mov	r3, r0
 8002246:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800224a:	fb02 f303 	mul.w	r3, r2, r3
 800224e:	0a5b      	lsrs	r3, r3, #9
 8002250:	4a11      	ldr	r2, [pc, #68]	; (8002298 <ConfigureTRISEVal+0xdc>)
 8002252:	fba2 2303 	umull	r2, r3, r2, r3
 8002256:	09db      	lsrs	r3, r3, #7
 8002258:	1c5a      	adds	r2, r3, #1
 800225a:	4b0c      	ldr	r3, [pc, #48]	; (800228c <ConfigureTRISEVal+0xd0>)
 800225c:	681b      	ldr	r3, [r3, #0]
 800225e:	4313      	orrs	r3, r2
 8002260:	4a0a      	ldr	r2, [pc, #40]	; (800228c <ConfigureTRISEVal+0xd0>)
 8002262:	6013      	str	r3, [r2, #0]
 8002264:	7a3b      	ldrb	r3, [r7, #8]
 8002266:	461a      	mov	r2, r3
 8002268:	4b07      	ldr	r3, [pc, #28]	; (8002288 <ConfigureTRISEVal+0xcc>)
 800226a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800226e:	461a      	mov	r2, r3
 8002270:	4b06      	ldr	r3, [pc, #24]	; (800228c <ConfigureTRISEVal+0xd0>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	6213      	str	r3, [r2, #32]
}
 8002276:	bf00      	nop
 8002278:	46bd      	mov	sp, r7
 800227a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800227e:	b004      	add	sp, #16
 8002280:	4770      	bx	lr
 8002282:	bf00      	nop
 8002284:	000186a0 	.word	0x000186a0
 8002288:	20000000 	.word	0x20000000
 800228c:	20000c00 	.word	0x20000c00
 8002290:	2000016c 	.word	0x2000016c
 8002294:	431bde83 	.word	0x431bde83
 8002298:	00044b83 	.word	0x00044b83

0800229c <I2C_MasterSendData>:
void I2C_DeInit(uint8_t I2Cx) {

}

void I2C_MasterSendData(I2C_Handle_t I2CHandle, uint8_t *pTxbuffer,
		uint32_t Len, uint8_t SlaveAddr, uint8_t Sr) {
 800229c:	b084      	sub	sp, #16
 800229e:	b5b0      	push	{r4, r5, r7, lr}
 80022a0:	b086      	sub	sp, #24
 80022a2:	af06      	add	r7, sp, #24
 80022a4:	f107 0410 	add.w	r4, r7, #16
 80022a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	// 1. Generate the START condition
	I2C_GenerateStartCondition(I2CHandle.I2Cx);
 80022ac:	7c3b      	ldrb	r3, [r7, #16]
 80022ae:	4618      	mov	r0, r3
 80022b0:	f7ff fafa 	bl	80018a8 <I2C_GenerateStartCondition>

	//2. confirm that start generation is completed by checking the SB flag in the SR1
	//   Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_SB))
 80022b4:	bf00      	nop
 80022b6:	7c3b      	ldrb	r3, [r7, #16]
 80022b8:	461a      	mov	r2, r3
 80022ba:	4b32      	ldr	r3, [pc, #200]	; (8002384 <I2C_MasterSendData+0xe8>)
 80022bc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80022c0:	695b      	ldr	r3, [r3, #20]
 80022c2:	f003 0301 	and.w	r3, r3, #1
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d0f5      	beq.n	80022b6 <I2C_MasterSendData+0x1a>
		;

	//3. Send the address of the slave with r/nw bit set to w(0) (total 8 bits )
	I2C_ExecuteAddressPhase(I2CHandle.I2Cx, SlaveAddr, 0);
 80022ca:	7c3b      	ldrb	r3, [r7, #16]
 80022cc:	f897 1040 	ldrb.w	r1, [r7, #64]	; 0x40
 80022d0:	2200      	movs	r2, #0
 80022d2:	4618      	mov	r0, r3
 80022d4:	f7ff fb00 	bl	80018d8 <I2C_ExecuteAddressPhase>

	//4. Confirm that address phase is completed by checking the ADDR flag in teh SR1
	while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_ADDR))
 80022d8:	bf00      	nop
 80022da:	7c3b      	ldrb	r3, [r7, #16]
 80022dc:	461a      	mov	r2, r3
 80022de:	4b29      	ldr	r3, [pc, #164]	; (8002384 <I2C_MasterSendData+0xe8>)
 80022e0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80022e4:	695b      	ldr	r3, [r3, #20]
 80022e6:	085b      	lsrs	r3, r3, #1
 80022e8:	f003 0301 	and.w	r3, r3, #1
 80022ec:	2b00      	cmp	r3, #0
 80022ee:	d0f4      	beq.n	80022da <I2C_MasterSendData+0x3e>
		;

	//5. clear the ADDR flag according to its software sequence
	//   Note: Until ADDR is cleared SCL will be stretched (pulled to LOW)
	I2C_ADDR_EV(I2CHandle);
 80022f0:	466d      	mov	r5, sp
 80022f2:	f107 0420 	add.w	r4, r7, #32
 80022f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80022f8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80022fa:	e894 0003 	ldmia.w	r4, {r0, r1}
 80022fe:	e885 0003 	stmia.w	r5, {r0, r1}
 8002302:	f107 0310 	add.w	r3, r7, #16
 8002306:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002308:	f7ff fb28 	bl	800195c <I2C_ADDR_EV>

	//6. send the data until len becomes 0

	while (Len > 0) {
 800230c:	e019      	b.n	8002342 <I2C_MasterSendData+0xa6>
		while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR2, I2C_SR1_TXE))
 800230e:	bf00      	nop
 8002310:	7c3b      	ldrb	r3, [r7, #16]
 8002312:	461a      	mov	r2, r3
 8002314:	4b1b      	ldr	r3, [pc, #108]	; (8002384 <I2C_MasterSendData+0xe8>)
 8002316:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800231a:	699b      	ldr	r3, [r3, #24]
 800231c:	09db      	lsrs	r3, r3, #7
 800231e:	f003 0301 	and.w	r3, r3, #1
 8002322:	2b00      	cmp	r3, #0
 8002324:	d0f4      	beq.n	8002310 <I2C_MasterSendData+0x74>
			; //Wait till TXE is set
		I2Cx_ptr(I2CHandle.I2Cx)->DR = *pTxbuffer;
 8002326:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002328:	781a      	ldrb	r2, [r3, #0]
 800232a:	7c3b      	ldrb	r3, [r7, #16]
 800232c:	4619      	mov	r1, r3
 800232e:	4b15      	ldr	r3, [pc, #84]	; (8002384 <I2C_MasterSendData+0xe8>)
 8002330:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8002334:	611a      	str	r2, [r3, #16]
		pTxbuffer++;
 8002336:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002338:	3301      	adds	r3, #1
 800233a:	63bb      	str	r3, [r7, #56]	; 0x38
		Len--;
 800233c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800233e:	3b01      	subs	r3, #1
 8002340:	63fb      	str	r3, [r7, #60]	; 0x3c
	while (Len > 0) {
 8002342:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002344:	2b00      	cmp	r3, #0
 8002346:	d1e2      	bne.n	800230e <I2C_MasterSendData+0x72>

	//7. when Len becomes zero wait for TXE=1 and BTF=1 before generating the STOP condition
	//   Note: TXE=1 , BTF=1 , means that both SR and DR are empty and next transmission should begin
	//   when BTF=1 SCL will be stretched (pulled to LOW)

	while (!GET_BIT_N(I2CHandle.I2Cx, I2C_SR1_TXE))
 8002348:	bf00      	nop
 800234a:	7c3b      	ldrb	r3, [r7, #16]
 800234c:	09db      	lsrs	r3, r3, #7
 800234e:	b2db      	uxtb	r3, r3
 8002350:	f003 0301 	and.w	r3, r3, #1
 8002354:	2b00      	cmp	r3, #0
 8002356:	d0f8      	beq.n	800234a <I2C_MasterSendData+0xae>
		;

	while (!GET_BIT_N(I2CHandle.I2Cx, I2C_SR1_BTF))
 8002358:	bf00      	nop
 800235a:	7c3b      	ldrb	r3, [r7, #16]
 800235c:	089b      	lsrs	r3, r3, #2
 800235e:	b2db      	uxtb	r3, r3
 8002360:	f003 0301 	and.w	r3, r3, #1
 8002364:	2b00      	cmp	r3, #0
 8002366:	d0f8      	beq.n	800235a <I2C_MasterSendData+0xbe>
		;

	//8. Generate STOP condition and master need not to wait for the completion of stop condition.
	//   Note: generating STOP, automatically clears the BTF
	if (Sr == I2C_DISABLE_SR)
 8002368:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800236c:	2b00      	cmp	r3, #0
 800236e:	d103      	bne.n	8002378 <I2C_MasterSendData+0xdc>
		I2C_GenerateStopCondition(I2CHandle.I2Cx);
 8002370:	7c3b      	ldrb	r3, [r7, #16]
 8002372:	4618      	mov	r0, r3
 8002374:	f7ff fd78 	bl	8001e68 <I2C_GenerateStopCondition>

}
 8002378:	bf00      	nop
 800237a:	46bd      	mov	sp, r7
 800237c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8002380:	b004      	add	sp, #16
 8002382:	4770      	bx	lr
 8002384:	20000000 	.word	0x20000000

08002388 <I2C_MasterReceiveData>:

void I2C_MasterReceiveData(I2C_Handle_t I2CHandle, uint8_t *pRxBuffer,
		uint8_t Len, uint8_t SlaveAddr, uint8_t Sr) {
 8002388:	b084      	sub	sp, #16
 800238a:	b5b0      	push	{r4, r5, r7, lr}
 800238c:	b088      	sub	sp, #32
 800238e:	af06      	add	r7, sp, #24
 8002390:	f107 0418 	add.w	r4, r7, #24
 8002394:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	//1. Generate the START condition
	I2C_GenerateStartCondition(I2CHandle.I2Cx);
 8002398:	7e3b      	ldrb	r3, [r7, #24]
 800239a:	4618      	mov	r0, r3
 800239c:	f7ff fa84 	bl	80018a8 <I2C_GenerateStartCondition>

	//2. confirm that start generation is completed by checking the SB flag in the SR1
	//   Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_SB))
 80023a0:	bf00      	nop
 80023a2:	7e3b      	ldrb	r3, [r7, #24]
 80023a4:	461a      	mov	r2, r3
 80023a6:	4b51      	ldr	r3, [pc, #324]	; (80024ec <I2C_MasterReceiveData+0x164>)
 80023a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80023ac:	695b      	ldr	r3, [r3, #20]
 80023ae:	f003 0301 	and.w	r3, r3, #1
 80023b2:	2b00      	cmp	r3, #0
 80023b4:	d0f5      	beq.n	80023a2 <I2C_MasterReceiveData+0x1a>
		;

	//3. Send the address of the slave with r/nw bit set to R(1) (total 8 bits )
	I2C_ExecuteAddressPhase(I2CHandle.I2Cx, SlaveAddr, 1);
 80023b6:	7e3b      	ldrb	r3, [r7, #24]
 80023b8:	f897 1048 	ldrb.w	r1, [r7, #72]	; 0x48
 80023bc:	2201      	movs	r2, #1
 80023be:	4618      	mov	r0, r3
 80023c0:	f7ff fa8a 	bl	80018d8 <I2C_ExecuteAddressPhase>

	//4. wait until address phase is completed by checking the ADDR flag in teh SR1
	while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_ADDR))
 80023c4:	bf00      	nop
 80023c6:	7e3b      	ldrb	r3, [r7, #24]
 80023c8:	461a      	mov	r2, r3
 80023ca:	4b48      	ldr	r3, [pc, #288]	; (80024ec <I2C_MasterReceiveData+0x164>)
 80023cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80023d0:	695b      	ldr	r3, [r3, #20]
 80023d2:	085b      	lsrs	r3, r3, #1
 80023d4:	f003 0301 	and.w	r3, r3, #1
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d0f4      	beq.n	80023c6 <I2C_MasterReceiveData+0x3e>
		;

	//procedure to read only 1 byte from slave
	if (Len == 1) {
 80023dc:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 80023e0:	2b01      	cmp	r3, #1
 80023e2:	d12f      	bne.n	8002444 <I2C_MasterReceiveData+0xbc>
		//Disable Acking
		I2C_ManageAcking(I2CHandle.I2Cx, I2C_ACK_DISABLE);
 80023e4:	7e3b      	ldrb	r3, [r7, #24]
 80023e6:	2100      	movs	r1, #0
 80023e8:	4618      	mov	r0, r3
 80023ea:	f000 f881 	bl	80024f0 <I2C_ManageAcking>

		//clear the ADDR flag
		I2C_ADDR_EV(I2CHandle);
 80023ee:	466d      	mov	r5, sp
 80023f0:	f107 0428 	add.w	r4, r7, #40	; 0x28
 80023f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80023f6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80023f8:	e894 0003 	ldmia.w	r4, {r0, r1}
 80023fc:	e885 0003 	stmia.w	r5, {r0, r1}
 8002400:	f107 0318 	add.w	r3, r7, #24
 8002404:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002406:	f7ff faa9 	bl	800195c <I2C_ADDR_EV>

		//wait until  RXNE becomes 1
		while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_RXNE))
 800240a:	bf00      	nop
 800240c:	7e3b      	ldrb	r3, [r7, #24]
 800240e:	461a      	mov	r2, r3
 8002410:	4b36      	ldr	r3, [pc, #216]	; (80024ec <I2C_MasterReceiveData+0x164>)
 8002412:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002416:	695b      	ldr	r3, [r3, #20]
 8002418:	099b      	lsrs	r3, r3, #6
 800241a:	f003 0301 	and.w	r3, r3, #1
 800241e:	2b00      	cmp	r3, #0
 8002420:	d0f4      	beq.n	800240c <I2C_MasterReceiveData+0x84>
			;

		//generate STOP condition
		if (Sr == I2C_DISABLE_SR)
 8002422:	f897 304c 	ldrb.w	r3, [r7, #76]	; 0x4c
 8002426:	2b00      	cmp	r3, #0
 8002428:	d103      	bne.n	8002432 <I2C_MasterReceiveData+0xaa>
			I2C_GenerateStopCondition(I2CHandle.I2Cx);
 800242a:	7e3b      	ldrb	r3, [r7, #24]
 800242c:	4618      	mov	r0, r3
 800242e:	f7ff fd1b 	bl	8001e68 <I2C_GenerateStopCondition>

		//read data in to buffer
		*pRxBuffer = I2Cx_ptr(I2CHandle.I2Cx)->DR;
 8002432:	7e3b      	ldrb	r3, [r7, #24]
 8002434:	461a      	mov	r2, r3
 8002436:	4b2d      	ldr	r3, [pc, #180]	; (80024ec <I2C_MasterReceiveData+0x164>)
 8002438:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800243c:	691b      	ldr	r3, [r3, #16]
 800243e:	b2da      	uxtb	r2, r3
 8002440:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002442:	701a      	strb	r2, [r3, #0]

	}

	//procedure to read data from slave when Len > 1
	if (Len > 1) {
 8002444:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002448:	2b01      	cmp	r3, #1
 800244a:	d93f      	bls.n	80024cc <I2C_MasterReceiveData+0x144>
		//clear the ADDR flag
		I2C_ADDR_EV(I2CHandle);
 800244c:	466d      	mov	r5, sp
 800244e:	f107 0428 	add.w	r4, r7, #40	; 0x28
 8002452:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002454:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002456:	e894 0003 	ldmia.w	r4, {r0, r1}
 800245a:	e885 0003 	stmia.w	r5, {r0, r1}
 800245e:	f107 0318 	add.w	r3, r7, #24
 8002462:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002464:	f7ff fa7a 	bl	800195c <I2C_ADDR_EV>

		//read the data until Len becomes zero
		for (uint32_t i = Len; i > 0; i--) {
 8002468:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800246c:	607b      	str	r3, [r7, #4]
 800246e:	e02a      	b.n	80024c6 <I2C_MasterReceiveData+0x13e>
			//wait until RXNE becomes 1
			while (!GET_BIT_N(I2Cx_ptr(I2CHandle.I2Cx)->SR1, I2C_SR1_RXNE))
 8002470:	bf00      	nop
 8002472:	7e3b      	ldrb	r3, [r7, #24]
 8002474:	461a      	mov	r2, r3
 8002476:	4b1d      	ldr	r3, [pc, #116]	; (80024ec <I2C_MasterReceiveData+0x164>)
 8002478:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800247c:	695b      	ldr	r3, [r3, #20]
 800247e:	099b      	lsrs	r3, r3, #6
 8002480:	f003 0301 	and.w	r3, r3, #1
 8002484:	2b00      	cmp	r3, #0
 8002486:	d0f4      	beq.n	8002472 <I2C_MasterReceiveData+0xea>
				;

			if (i == 2) //if last 2 bytes are remaining
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	2b02      	cmp	r3, #2
 800248c:	d10c      	bne.n	80024a8 <I2C_MasterReceiveData+0x120>
					{
				//Disable Acking
				I2C_ManageAcking(I2CHandle.I2Cx, I2C_ACK_DISABLE);
 800248e:	7e3b      	ldrb	r3, [r7, #24]
 8002490:	2100      	movs	r1, #0
 8002492:	4618      	mov	r0, r3
 8002494:	f000 f82c 	bl	80024f0 <I2C_ManageAcking>

				//generate STOP condition
				if (Sr == I2C_DISABLE_SR)
 8002498:	f897 304c 	ldrb.w	r3, [r7, #76]	; 0x4c
 800249c:	2b00      	cmp	r3, #0
 800249e:	d103      	bne.n	80024a8 <I2C_MasterReceiveData+0x120>
					I2C_GenerateStopCondition(I2CHandle.I2Cx);
 80024a0:	7e3b      	ldrb	r3, [r7, #24]
 80024a2:	4618      	mov	r0, r3
 80024a4:	f7ff fce0 	bl	8001e68 <I2C_GenerateStopCondition>

			}

			//read the data from data register in to buffer
			*pRxBuffer = I2Cx_ptr(I2CHandle.I2Cx)->DR;
 80024a8:	7e3b      	ldrb	r3, [r7, #24]
 80024aa:	461a      	mov	r2, r3
 80024ac:	4b0f      	ldr	r3, [pc, #60]	; (80024ec <I2C_MasterReceiveData+0x164>)
 80024ae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80024b2:	691b      	ldr	r3, [r3, #16]
 80024b4:	b2da      	uxtb	r2, r3
 80024b6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80024b8:	701a      	strb	r2, [r3, #0]

			//increment the buffer address
			pRxBuffer++;
 80024ba:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80024bc:	3301      	adds	r3, #1
 80024be:	643b      	str	r3, [r7, #64]	; 0x40
		for (uint32_t i = Len; i > 0; i--) {
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	3b01      	subs	r3, #1
 80024c4:	607b      	str	r3, [r7, #4]
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	2b00      	cmp	r3, #0
 80024ca:	d1d1      	bne.n	8002470 <I2C_MasterReceiveData+0xe8>
		}

	}

	//re-enable ACKing
	if (I2CHandle.I2C_Config.I2C_AckControl == I2C_ACK_ENABLE) {
 80024cc:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 80024d0:	2b01      	cmp	r3, #1
 80024d2:	d104      	bne.n	80024de <I2C_MasterReceiveData+0x156>
		I2C_ManageAcking(I2CHandle.I2Cx, I2C_ACK_ENABLE);
 80024d4:	7e3b      	ldrb	r3, [r7, #24]
 80024d6:	2101      	movs	r1, #1
 80024d8:	4618      	mov	r0, r3
 80024da:	f000 f809 	bl	80024f0 <I2C_ManageAcking>
	}

}
 80024de:	bf00      	nop
 80024e0:	3708      	adds	r7, #8
 80024e2:	46bd      	mov	sp, r7
 80024e4:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 80024e8:	b004      	add	sp, #16
 80024ea:	4770      	bx	lr
 80024ec:	20000000 	.word	0x20000000

080024f0 <I2C_ManageAcking>:

void I2C_ManageAcking(uint8_t I2Cx, uint8_t State) {
 80024f0:	b480      	push	{r7}
 80024f2:	b083      	sub	sp, #12
 80024f4:	af00      	add	r7, sp, #0
 80024f6:	4603      	mov	r3, r0
 80024f8:	460a      	mov	r2, r1
 80024fa:	71fb      	strb	r3, [r7, #7]
 80024fc:	4613      	mov	r3, r2
 80024fe:	71bb      	strb	r3, [r7, #6]
	MODIFY_BIT_N(I2Cx_ptr(I2Cx)->CR1, I2C_CR1_ACK, State);
 8002500:	79fb      	ldrb	r3, [r7, #7]
 8002502:	4a11      	ldr	r2, [pc, #68]	; (8002548 <I2C_ManageAcking+0x58>)
 8002504:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	4a10      	ldr	r2, [pc, #64]	; (800254c <I2C_ManageAcking+0x5c>)
 800250c:	6013      	str	r3, [r2, #0]
 800250e:	79bb      	ldrb	r3, [r7, #6]
 8002510:	2b00      	cmp	r3, #0
 8002512:	d106      	bne.n	8002522 <I2C_ManageAcking+0x32>
 8002514:	4b0d      	ldr	r3, [pc, #52]	; (800254c <I2C_ManageAcking+0x5c>)
 8002516:	681b      	ldr	r3, [r3, #0]
 8002518:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800251c:	4a0b      	ldr	r2, [pc, #44]	; (800254c <I2C_ManageAcking+0x5c>)
 800251e:	6013      	str	r3, [r2, #0]
 8002520:	e005      	b.n	800252e <I2C_ManageAcking+0x3e>
 8002522:	4b0a      	ldr	r3, [pc, #40]	; (800254c <I2C_ManageAcking+0x5c>)
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800252a:	4a08      	ldr	r2, [pc, #32]	; (800254c <I2C_ManageAcking+0x5c>)
 800252c:	6013      	str	r3, [r2, #0]
 800252e:	79fb      	ldrb	r3, [r7, #7]
 8002530:	4a05      	ldr	r2, [pc, #20]	; (8002548 <I2C_ManageAcking+0x58>)
 8002532:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002536:	461a      	mov	r2, r3
 8002538:	4b04      	ldr	r3, [pc, #16]	; (800254c <I2C_ManageAcking+0x5c>)
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	6013      	str	r3, [r2, #0]
}
 800253e:	bf00      	nop
 8002540:	370c      	adds	r7, #12
 8002542:	46bd      	mov	sp, r7
 8002544:	bc80      	pop	{r7}
 8002546:	4770      	bx	lr
 8002548:	20000000 	.word	0x20000000
 800254c:	20000c00 	.word	0x20000c00

08002550 <I2C_MasterHandleTXEInterrupt>:
	}

	return busystate;
}

 void I2C_MasterHandleTXEInterrupt(I2C_Handle_t I2CHandle) {
 8002550:	b084      	sub	sp, #16
 8002552:	b490      	push	{r4, r7}
 8002554:	af00      	add	r7, sp, #0
 8002556:	f107 0408 	add.w	r4, r7, #8
 800255a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	if (I2CHandle.TxLen > 0) {
 800255e:	69fb      	ldr	r3, [r7, #28]
 8002560:	2b00      	cmp	r3, #0
 8002562:	d00d      	beq.n	8002580 <I2C_MasterHandleTXEInterrupt+0x30>
		//1. load the data in to DR
		I2Cx_ptr(I2CHandle.I2Cx)->DR = *(I2CHandle.pTxBuffer);
 8002564:	697b      	ldr	r3, [r7, #20]
 8002566:	781a      	ldrb	r2, [r3, #0]
 8002568:	7a3b      	ldrb	r3, [r7, #8]
 800256a:	4619      	mov	r1, r3
 800256c:	4b07      	ldr	r3, [pc, #28]	; (800258c <I2C_MasterHandleTXEInterrupt+0x3c>)
 800256e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8002572:	611a      	str	r2, [r3, #16]

		//2. decrement the TxLen
		I2CHandle.TxLen--;
 8002574:	69fb      	ldr	r3, [r7, #28]
 8002576:	3b01      	subs	r3, #1
 8002578:	61fb      	str	r3, [r7, #28]

		//3. Increment the buffer address
		I2CHandle.pTxBuffer++;
 800257a:	697b      	ldr	r3, [r7, #20]
 800257c:	3301      	adds	r3, #1
 800257e:	617b      	str	r3, [r7, #20]

	}

}
 8002580:	bf00      	nop
 8002582:	46bd      	mov	sp, r7
 8002584:	bc90      	pop	{r4, r7}
 8002586:	b004      	add	sp, #16
 8002588:	4770      	bx	lr
 800258a:	bf00      	nop
 800258c:	20000000 	.word	0x20000000

08002590 <I2C_MasterHandleRXNEInterrupt>:

 void I2C_MasterHandleRXNEInterrupt(I2C_Handle_t I2CHandle) {
 8002590:	b084      	sub	sp, #16
 8002592:	b5b0      	push	{r4, r5, r7, lr}
 8002594:	b088      	sub	sp, #32
 8002596:	af08      	add	r7, sp, #32
 8002598:	f107 0410 	add.w	r4, r7, #16
 800259c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//We have to do the data reception
	if (I2CHandle.RxSize == 1) {
 80025a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80025a2:	2b01      	cmp	r3, #1
 80025a4:	d10b      	bne.n	80025be <I2C_MasterHandleRXNEInterrupt+0x2e>
		*I2CHandle.pRxBuffer = I2Cx_ptr(I2CHandle.I2Cx)->DR;
 80025a6:	7c3b      	ldrb	r3, [r7, #16]
 80025a8:	461a      	mov	r2, r3
 80025aa:	4b29      	ldr	r3, [pc, #164]	; (8002650 <I2C_MasterHandleRXNEInterrupt+0xc0>)
 80025ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80025b0:	691a      	ldr	r2, [r3, #16]
 80025b2:	6a3b      	ldr	r3, [r7, #32]
 80025b4:	b2d2      	uxtb	r2, r2
 80025b6:	701a      	strb	r2, [r3, #0]
		I2CHandle.RxLen--;
 80025b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80025ba:	3b01      	subs	r3, #1
 80025bc:	62bb      	str	r3, [r7, #40]	; 0x28

	}

	if (I2CHandle.RxSize > 1) {
 80025be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80025c0:	2b01      	cmp	r3, #1
 80025c2:	d916      	bls.n	80025f2 <I2C_MasterHandleRXNEInterrupt+0x62>
		if (I2CHandle.RxLen == 2) {
 80025c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80025c6:	2b02      	cmp	r3, #2
 80025c8:	d104      	bne.n	80025d4 <I2C_MasterHandleRXNEInterrupt+0x44>
			//clear the ack bit
			I2C_ManageAcking(I2CHandle.I2Cx, DISABLE);
 80025ca:	7c3b      	ldrb	r3, [r7, #16]
 80025cc:	2100      	movs	r1, #0
 80025ce:	4618      	mov	r0, r3
 80025d0:	f7ff ff8e 	bl	80024f0 <I2C_ManageAcking>
		}

		//read DR
		*I2CHandle.pRxBuffer = I2Cx_ptr(I2CHandle.I2Cx)->DR;
 80025d4:	7c3b      	ldrb	r3, [r7, #16]
 80025d6:	461a      	mov	r2, r3
 80025d8:	4b1d      	ldr	r3, [pc, #116]	; (8002650 <I2C_MasterHandleRXNEInterrupt+0xc0>)
 80025da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80025de:	691a      	ldr	r2, [r3, #16]
 80025e0:	6a3b      	ldr	r3, [r7, #32]
 80025e2:	b2d2      	uxtb	r2, r2
 80025e4:	701a      	strb	r2, [r3, #0]
		I2CHandle.pRxBuffer++;
 80025e6:	6a3b      	ldr	r3, [r7, #32]
 80025e8:	3301      	adds	r3, #1
 80025ea:	623b      	str	r3, [r7, #32]
		I2CHandle.RxLen--;
 80025ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80025ee:	3b01      	subs	r3, #1
 80025f0:	62bb      	str	r3, [r7, #40]	; 0x28
	}

	if (I2CHandle.RxLen == 0) {
 80025f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d125      	bne.n	8002644 <I2C_MasterHandleRXNEInterrupt+0xb4>
		//close the I2C data reception and notify the application

		//1. generate the stop condition
		if (I2CHandle.Sr == I2C_DISABLE_SR)
 80025f8:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 80025fc:	2b00      	cmp	r3, #0
 80025fe:	d103      	bne.n	8002608 <I2C_MasterHandleRXNEInterrupt+0x78>
			I2C_GenerateStopCondition(I2CHandle.I2Cx);
 8002600:	7c3b      	ldrb	r3, [r7, #16]
 8002602:	4618      	mov	r0, r3
 8002604:	f7ff fc30 	bl	8001e68 <I2C_GenerateStopCondition>

		//2 . Close the I2C rx
		I2C_CloseReceiveData(I2CHandle);
 8002608:	466d      	mov	r5, sp
 800260a:	f107 0420 	add.w	r4, r7, #32
 800260e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002610:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002612:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002616:	e885 0003 	stmia.w	r5, {r0, r1}
 800261a:	f107 0310 	add.w	r3, r7, #16
 800261e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002620:	f000 f818 	bl	8002654 <I2C_CloseReceiveData>

		//3. Notify the application
		I2C_ApplicationEventCallback(I2CHandle, I2C_EV_RX_CMPLT);
 8002624:	2301      	movs	r3, #1
 8002626:	9306      	str	r3, [sp, #24]
 8002628:	466d      	mov	r5, sp
 800262a:	f107 0420 	add.w	r4, r7, #32
 800262e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002630:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002632:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002636:	e885 0003 	stmia.w	r5, {r0, r1}
 800263a:	f107 0310 	add.w	r3, r7, #16
 800263e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002640:	f000 f88e 	bl	8002760 <I2C_ApplicationEventCallback>
	}
}
 8002644:	bf00      	nop
 8002646:	46bd      	mov	sp, r7
 8002648:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 800264c:	b004      	add	sp, #16
 800264e:	4770      	bx	lr
 8002650:	20000000 	.word	0x20000000

08002654 <I2C_CloseReceiveData>:

void I2C_CloseReceiveData(I2C_Handle_t I2CHandle) {
 8002654:	b084      	sub	sp, #16
 8002656:	b580      	push	{r7, lr}
 8002658:	af00      	add	r7, sp, #0
 800265a:	f107 0c08 	add.w	ip, r7, #8
 800265e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	//Implement the code to disable ITBUFEN & ITEVFEN Control Bit but not ITEVERR
	MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->CR2, 2, I2C_CR2_ITEVTEN, 0);
 8002662:	7a3b      	ldrb	r3, [r7, #8]
 8002664:	461a      	mov	r2, r3
 8002666:	4b19      	ldr	r3, [pc, #100]	; (80026cc <I2C_CloseReceiveData+0x78>)
 8002668:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800266c:	685b      	ldr	r3, [r3, #4]
 800266e:	4a18      	ldr	r2, [pc, #96]	; (80026d0 <I2C_CloseReceiveData+0x7c>)
 8002670:	6013      	str	r3, [r2, #0]
 8002672:	4b18      	ldr	r3, [pc, #96]	; (80026d4 <I2C_CloseReceiveData+0x80>)
 8002674:	685b      	ldr	r3, [r3, #4]
 8002676:	025b      	lsls	r3, r3, #9
 8002678:	43da      	mvns	r2, r3
 800267a:	4b15      	ldr	r3, [pc, #84]	; (80026d0 <I2C_CloseReceiveData+0x7c>)
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	4013      	ands	r3, r2
 8002680:	4a13      	ldr	r2, [pc, #76]	; (80026d0 <I2C_CloseReceiveData+0x7c>)
 8002682:	6013      	str	r3, [r2, #0]
 8002684:	4b12      	ldr	r3, [pc, #72]	; (80026d0 <I2C_CloseReceiveData+0x7c>)
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4a11      	ldr	r2, [pc, #68]	; (80026d0 <I2C_CloseReceiveData+0x7c>)
 800268a:	6013      	str	r3, [r2, #0]
 800268c:	7a3b      	ldrb	r3, [r7, #8]
 800268e:	461a      	mov	r2, r3
 8002690:	4b0e      	ldr	r3, [pc, #56]	; (80026cc <I2C_CloseReceiveData+0x78>)
 8002692:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002696:	461a      	mov	r2, r3
 8002698:	4b0d      	ldr	r3, [pc, #52]	; (80026d0 <I2C_CloseReceiveData+0x7c>)
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	6053      	str	r3, [r2, #4]

	I2CHandle.TxRxState = I2C_READY;
 800269e:	2300      	movs	r3, #0
 80026a0:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	I2CHandle.pRxBuffer = NULL;
 80026a4:	2300      	movs	r3, #0
 80026a6:	61bb      	str	r3, [r7, #24]
	I2CHandle.RxLen = 0;
 80026a8:	2300      	movs	r3, #0
 80026aa:	623b      	str	r3, [r7, #32]
	I2CHandle.RxSize = 0;
 80026ac:	2300      	movs	r3, #0
 80026ae:	62bb      	str	r3, [r7, #40]	; 0x28

	if (I2CHandle.I2C_Config.I2C_AckControl == I2C_ACK_ENABLE) {
 80026b0:	7c7b      	ldrb	r3, [r7, #17]
 80026b2:	2b01      	cmp	r3, #1
 80026b4:	d104      	bne.n	80026c0 <I2C_CloseReceiveData+0x6c>
		I2C_ManageAcking(I2CHandle.I2Cx, ENABLE);
 80026b6:	7a3b      	ldrb	r3, [r7, #8]
 80026b8:	2101      	movs	r1, #1
 80026ba:	4618      	mov	r0, r3
 80026bc:	f7ff ff18 	bl	80024f0 <I2C_ManageAcking>
	}

}
 80026c0:	bf00      	nop
 80026c2:	46bd      	mov	sp, r7
 80026c4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80026c8:	b004      	add	sp, #16
 80026ca:	4770      	bx	lr
 80026cc:	20000000 	.word	0x20000000
 80026d0:	20000c00 	.word	0x20000c00
 80026d4:	2000016c 	.word	0x2000016c

080026d8 <I2C_CloseSendData>:

void I2C_CloseSendData(I2C_Handle_t I2CHandle) {
 80026d8:	b084      	sub	sp, #16
 80026da:	b490      	push	{r4, r7}
 80026dc:	af00      	add	r7, sp, #0
 80026de:	f107 0408 	add.w	r4, r7, #8
 80026e2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	//Implement the code to disable ITBUFEN & ITEVFEN Control Bit but not ITEVERR
	MODIFY_KBITS(I2Cx_ptr(I2CHandle.I2Cx)->CR2, 2, I2C_CR2_ITEVTEN, 0);
 80026e6:	7a3b      	ldrb	r3, [r7, #8]
 80026e8:	461a      	mov	r2, r3
 80026ea:	4b14      	ldr	r3, [pc, #80]	; (800273c <I2C_CloseSendData+0x64>)
 80026ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80026f0:	685b      	ldr	r3, [r3, #4]
 80026f2:	4a13      	ldr	r2, [pc, #76]	; (8002740 <I2C_CloseSendData+0x68>)
 80026f4:	6013      	str	r3, [r2, #0]
 80026f6:	4b13      	ldr	r3, [pc, #76]	; (8002744 <I2C_CloseSendData+0x6c>)
 80026f8:	685b      	ldr	r3, [r3, #4]
 80026fa:	025b      	lsls	r3, r3, #9
 80026fc:	43da      	mvns	r2, r3
 80026fe:	4b10      	ldr	r3, [pc, #64]	; (8002740 <I2C_CloseSendData+0x68>)
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	4013      	ands	r3, r2
 8002704:	4a0e      	ldr	r2, [pc, #56]	; (8002740 <I2C_CloseSendData+0x68>)
 8002706:	6013      	str	r3, [r2, #0]
 8002708:	4b0d      	ldr	r3, [pc, #52]	; (8002740 <I2C_CloseSendData+0x68>)
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	4a0c      	ldr	r2, [pc, #48]	; (8002740 <I2C_CloseSendData+0x68>)
 800270e:	6013      	str	r3, [r2, #0]
 8002710:	7a3b      	ldrb	r3, [r7, #8]
 8002712:	461a      	mov	r2, r3
 8002714:	4b09      	ldr	r3, [pc, #36]	; (800273c <I2C_CloseSendData+0x64>)
 8002716:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800271a:	461a      	mov	r2, r3
 800271c:	4b08      	ldr	r3, [pc, #32]	; (8002740 <I2C_CloseSendData+0x68>)
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	6053      	str	r3, [r2, #4]

	I2CHandle.TxRxState = I2C_READY;
 8002722:	2300      	movs	r3, #0
 8002724:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	I2CHandle.pTxBuffer = NULL;
 8002728:	2300      	movs	r3, #0
 800272a:	617b      	str	r3, [r7, #20]
	I2CHandle.TxLen = 0;
 800272c:	2300      	movs	r3, #0
 800272e:	61fb      	str	r3, [r7, #28]
}
 8002730:	bf00      	nop
 8002732:	46bd      	mov	sp, r7
 8002734:	bc90      	pop	{r4, r7}
 8002736:	b004      	add	sp, #16
 8002738:	4770      	bx	lr
 800273a:	bf00      	nop
 800273c:	20000000 	.word	0x20000000
 8002740:	20000c00 	.word	0x20000c00
 8002744:	2000016c 	.word	0x2000016c

08002748 <I2C_NULL_EV>:
}

uint8_t I2C_SlaveReceiveData(uint8_t I2Cx) {
	return (uint8_t) I2Cx_ptr(I2Cx)->DR;
}
 void I2C_NULL_EV(I2C_Handle_t I2CHandle) {
 8002748:	b084      	sub	sp, #16
 800274a:	b490      	push	{r4, r7}
 800274c:	af00      	add	r7, sp, #0
 800274e:	f107 0408 	add.w	r4, r7, #8
 8002752:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

}
 8002756:	bf00      	nop
 8002758:	46bd      	mov	sp, r7
 800275a:	bc90      	pop	{r4, r7}
 800275c:	b004      	add	sp, #16
 800275e:	4770      	bx	lr

08002760 <I2C_ApplicationEventCallback>:


void I2C_ER_IRQHandling(I2C_Handle_t I2CHandle) {
	I2C_EV_IRQHandling(I2CHandle);
}
__weak void I2C_ApplicationEventCallback(I2C_Handle_t I2CHandle,uint8_t AppEv) {
 8002760:	b084      	sub	sp, #16
 8002762:	b490      	push	{r4, r7}
 8002764:	af00      	add	r7, sp, #0
 8002766:	f107 0408 	add.w	r4, r7, #8
 800276a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	//This is a weak implementation . the user application may override this function.
}
 800276e:	bf00      	nop
 8002770:	46bd      	mov	sp, r7
 8002772:	bc90      	pop	{r4, r7}
 8002774:	b004      	add	sp, #16
 8002776:	4770      	bx	lr

08002778 <RCC_GetPCLK1Value>:
#include "stm32f407xx_rcc_driver.h"

uint16_t AHB_PreScaler[8] = { 2, 4, 8, 16, 64, 128, 256, 512 };
uint8_t APB1_PreScaler[4] = { 2, 4, 8, 16 };

uint32_t RCC_GetPCLK1Value(void) {
 8002778:	b580      	push	{r7, lr}
 800277a:	b086      	sub	sp, #24
 800277c:	af00      	add	r7, sp, #0
	uint32_t pclk1;

	uint8_t  temp, ahbp, apb1p;
	uint32_t sysclkArr[] = { 16000000, 8000000, 0 };
 800277e:	4a27      	ldr	r2, [pc, #156]	; (800281c <RCC_GetPCLK1Value+0xa4>)
 8002780:	1d3b      	adds	r3, r7, #4
 8002782:	ca07      	ldmia	r2, {r0, r1, r2}
 8002784:	e883 0007 	stmia.w	r3, {r0, r1, r2}
		sysclkArr[2] = RCC_GetPLLOutputClock();
 8002788:	f000 f852 	bl	8002830 <RCC_GetPLLOutputClock>
 800278c:	4603      	mov	r3, r0
 800278e:	60fb      	str	r3, [r7, #12]

	//for ahb
	temp = GET_KBITS(RCC_ptr->CFGR, 4, RCC_CFGR_HPRE);
 8002790:	4b23      	ldr	r3, [pc, #140]	; (8002820 <RCC_GetPCLK1Value+0xa8>)
 8002792:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8002796:	689b      	ldr	r3, [r3, #8]
 8002798:	091b      	lsrs	r3, r3, #4
 800279a:	b2da      	uxtb	r2, r3
 800279c:	4b21      	ldr	r3, [pc, #132]	; (8002824 <RCC_GetPCLK1Value+0xac>)
 800279e:	68db      	ldr	r3, [r3, #12]
 80027a0:	b2db      	uxtb	r3, r3
 80027a2:	4013      	ands	r3, r2
 80027a4:	757b      	strb	r3, [r7, #21]

	temp < 8 ? (ahbp = 1) : (ahbp = AHB_PreScaler[temp - 8]);//Get AHB1 prescalar
 80027a6:	7d7b      	ldrb	r3, [r7, #21]
 80027a8:	2b07      	cmp	r3, #7
 80027aa:	d802      	bhi.n	80027b2 <RCC_GetPCLK1Value+0x3a>
 80027ac:	2301      	movs	r3, #1
 80027ae:	75fb      	strb	r3, [r7, #23]
 80027b0:	e005      	b.n	80027be <RCC_GetPCLK1Value+0x46>
 80027b2:	7d7b      	ldrb	r3, [r7, #21]
 80027b4:	3b08      	subs	r3, #8
 80027b6:	4a1c      	ldr	r2, [pc, #112]	; (8002828 <RCC_GetPCLK1Value+0xb0>)
 80027b8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80027bc:	75fb      	strb	r3, [r7, #23]

	//apb1
	temp = GET_KBITS(RCC_ptr->CFGR, 3, RCC_CFGR_PRE1);//Get APB1 prescalar
 80027be:	4b18      	ldr	r3, [pc, #96]	; (8002820 <RCC_GetPCLK1Value+0xa8>)
 80027c0:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80027c4:	689b      	ldr	r3, [r3, #8]
 80027c6:	0a9b      	lsrs	r3, r3, #10
 80027c8:	b2da      	uxtb	r2, r3
 80027ca:	4b16      	ldr	r3, [pc, #88]	; (8002824 <RCC_GetPCLK1Value+0xac>)
 80027cc:	689b      	ldr	r3, [r3, #8]
 80027ce:	b2db      	uxtb	r3, r3
 80027d0:	4013      	ands	r3, r2
 80027d2:	757b      	strb	r3, [r7, #21]

	temp < 4 ? (apb1p = 1) : (apb1p = APB1_PreScaler[temp - 4]);
 80027d4:	7d7b      	ldrb	r3, [r7, #21]
 80027d6:	2b03      	cmp	r3, #3
 80027d8:	d802      	bhi.n	80027e0 <RCC_GetPCLK1Value+0x68>
 80027da:	2301      	movs	r3, #1
 80027dc:	75bb      	strb	r3, [r7, #22]
 80027de:	e004      	b.n	80027ea <RCC_GetPCLK1Value+0x72>
 80027e0:	7d7b      	ldrb	r3, [r7, #21]
 80027e2:	3b04      	subs	r3, #4
 80027e4:	4a11      	ldr	r2, [pc, #68]	; (800282c <RCC_GetPCLK1Value+0xb4>)
 80027e6:	5cd3      	ldrb	r3, [r2, r3]
 80027e8:	75bb      	strb	r3, [r7, #22]

	pclk1 = (sysclkArr[GET_KBITS(RCC_ptr->CFGR, 2, RCC_CFGR_SWS0)] / ahbp)
 80027ea:	4b0d      	ldr	r3, [pc, #52]	; (8002820 <RCC_GetPCLK1Value+0xa8>)
 80027ec:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80027f0:	689b      	ldr	r3, [r3, #8]
 80027f2:	089a      	lsrs	r2, r3, #2
 80027f4:	4b0b      	ldr	r3, [pc, #44]	; (8002824 <RCC_GetPCLK1Value+0xac>)
 80027f6:	685b      	ldr	r3, [r3, #4]
 80027f8:	4013      	ands	r3, r2
 80027fa:	009b      	lsls	r3, r3, #2
 80027fc:	3318      	adds	r3, #24
 80027fe:	443b      	add	r3, r7
 8002800:	f853 2c14 	ldr.w	r2, [r3, #-20]
 8002804:	7dfb      	ldrb	r3, [r7, #23]
 8002806:	fbb2 f2f3 	udiv	r2, r2, r3
			/ apb1p;
 800280a:	7dbb      	ldrb	r3, [r7, #22]
	pclk1 = (sysclkArr[GET_KBITS(RCC_ptr->CFGR, 2, RCC_CFGR_SWS0)] / ahbp)
 800280c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002810:	613b      	str	r3, [r7, #16]

	return pclk1;
 8002812:	693b      	ldr	r3, [r7, #16]
}
 8002814:	4618      	mov	r0, r3
 8002816:	3718      	adds	r7, #24
 8002818:	46bd      	mov	sp, r7
 800281a:	bd80      	pop	{r7, pc}
 800281c:	08007be4 	.word	0x08007be4
 8002820:	20000000 	.word	0x20000000
 8002824:	2000016c 	.word	0x2000016c
 8002828:	200001ec 	.word	0x200001ec
 800282c:	200001fc 	.word	0x200001fc

08002830 <RCC_GetPLLOutputClock>:
			/ apb2p;

	return pclk2;
}

uint32_t RCC_GetPLLOutputClock() {
 8002830:	b480      	push	{r7}
 8002832:	af00      	add	r7, sp, #0

	return 0;
 8002834:	2300      	movs	r3, #0
}
 8002836:	4618      	mov	r0, r3
 8002838:	46bd      	mov	sp, r7
 800283a:	bc80      	pop	{r7}
 800283c:	4770      	bx	lr
	...

08002840 <init_systick_timer>:
/* Enable this macro if you want to test RTC on LCD */
//#define PRINT_LCD


void init_systick_timer(uint32_t tick_hz)
{
 8002840:	b480      	push	{r7}
 8002842:	b087      	sub	sp, #28
 8002844:	af00      	add	r7, sp, #0
 8002846:	6078      	str	r0, [r7, #4]
	uint32_t *pSRVR = (uint32_t*)0xE000E014;
 8002848:	4b14      	ldr	r3, [pc, #80]	; (800289c <init_systick_timer+0x5c>)
 800284a:	617b      	str	r3, [r7, #20]
	uint32_t *pSCSR = (uint32_t*)0xE000E010;
 800284c:	4b14      	ldr	r3, [pc, #80]	; (80028a0 <init_systick_timer+0x60>)
 800284e:	613b      	str	r3, [r7, #16]

    /* calculation of reload value */
    uint32_t count_value = (SYSTICK_TIM_CLK/tick_hz)-1;
 8002850:	4a14      	ldr	r2, [pc, #80]	; (80028a4 <init_systick_timer+0x64>)
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	fbb2 f3f3 	udiv	r3, r2, r3
 8002858:	3b01      	subs	r3, #1
 800285a:	60fb      	str	r3, [r7, #12]

    //Clear the value of SVR
    *pSRVR &= ~(0x00FFFFFFFF);
 800285c:	697b      	ldr	r3, [r7, #20]
 800285e:	2200      	movs	r2, #0
 8002860:	601a      	str	r2, [r3, #0]

    //load the value in to SVR
    *pSRVR |= count_value;
 8002862:	697b      	ldr	r3, [r7, #20]
 8002864:	681a      	ldr	r2, [r3, #0]
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	431a      	orrs	r2, r3
 800286a:	697b      	ldr	r3, [r7, #20]
 800286c:	601a      	str	r2, [r3, #0]

    //do some settings
    *pSCSR |= ( 1 << 1); //Enables SysTick exception request:
 800286e:	693b      	ldr	r3, [r7, #16]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	f043 0202 	orr.w	r2, r3, #2
 8002876:	693b      	ldr	r3, [r7, #16]
 8002878:	601a      	str	r2, [r3, #0]
    *pSCSR |= ( 1 << 2);  //Indicates the clock source, processor clock source
 800287a:	693b      	ldr	r3, [r7, #16]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	f043 0204 	orr.w	r2, r3, #4
 8002882:	693b      	ldr	r3, [r7, #16]
 8002884:	601a      	str	r2, [r3, #0]

    //enable the systick
    *pSCSR |= ( 1 << 0); //enables the counter
 8002886:	693b      	ldr	r3, [r7, #16]
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	f043 0201 	orr.w	r2, r3, #1
 800288e:	693b      	ldr	r3, [r7, #16]
 8002890:	601a      	str	r2, [r3, #0]

}
 8002892:	bf00      	nop
 8002894:	371c      	adds	r7, #28
 8002896:	46bd      	mov	sp, r7
 8002898:	bc80      	pop	{r7}
 800289a:	4770      	bx	lr
 800289c:	e000e014 	.word	0xe000e014
 80028a0:	e000e010 	.word	0xe000e010
 80028a4:	00f42400 	.word	0x00f42400

080028a8 <get_day_of_week>:


char* get_day_of_week(uint8_t i)
{
 80028a8:	b4b0      	push	{r4, r5, r7}
 80028aa:	b08b      	sub	sp, #44	; 0x2c
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	4603      	mov	r3, r0
 80028b0:	71fb      	strb	r3, [r7, #7]
	char* days[] = { "Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
 80028b2:	4b0b      	ldr	r3, [pc, #44]	; (80028e0 <get_day_of_week+0x38>)
 80028b4:	f107 040c 	add.w	r4, r7, #12
 80028b8:	461d      	mov	r5, r3
 80028ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80028bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80028be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028c2:	e884 0007 	stmia.w	r4, {r0, r1, r2}

	return days[i-1];
 80028c6:	79fb      	ldrb	r3, [r7, #7]
 80028c8:	3b01      	subs	r3, #1
 80028ca:	009b      	lsls	r3, r3, #2
 80028cc:	3328      	adds	r3, #40	; 0x28
 80028ce:	443b      	add	r3, r7
 80028d0:	f853 3c1c 	ldr.w	r3, [r3, #-28]
}
 80028d4:	4618      	mov	r0, r3
 80028d6:	372c      	adds	r7, #44	; 0x2c
 80028d8:	46bd      	mov	sp, r7
 80028da:	bcb0      	pop	{r4, r5, r7}
 80028dc:	4770      	bx	lr
 80028de:	bf00      	nop
 80028e0:	08007c34 	.word	0x08007c34

080028e4 <number_to_string>:


void number_to_string(uint8_t num , char* buf)
{
 80028e4:	b480      	push	{r7}
 80028e6:	b083      	sub	sp, #12
 80028e8:	af00      	add	r7, sp, #0
 80028ea:	4603      	mov	r3, r0
 80028ec:	6039      	str	r1, [r7, #0]
 80028ee:	71fb      	strb	r3, [r7, #7]

	if(num < 10){
 80028f0:	79fb      	ldrb	r3, [r7, #7]
 80028f2:	2b09      	cmp	r3, #9
 80028f4:	d809      	bhi.n	800290a <number_to_string+0x26>
		buf[0] = '0';
 80028f6:	683b      	ldr	r3, [r7, #0]
 80028f8:	2230      	movs	r2, #48	; 0x30
 80028fa:	701a      	strb	r2, [r3, #0]
		buf[1] = num+48;
 80028fc:	683b      	ldr	r3, [r7, #0]
 80028fe:	3301      	adds	r3, #1
 8002900:	79fa      	ldrb	r2, [r7, #7]
 8002902:	3230      	adds	r2, #48	; 0x30
 8002904:	b2d2      	uxtb	r2, r2
 8002906:	701a      	strb	r2, [r3, #0]
	}else if(num >= 10 && num < 99)
	{
		buf[0] = (num/10) + 48;
		buf[1]= (num % 10) + 48;
	}
}
 8002908:	e01f      	b.n	800294a <number_to_string+0x66>
	}else if(num >= 10 && num < 99)
 800290a:	79fb      	ldrb	r3, [r7, #7]
 800290c:	2b09      	cmp	r3, #9
 800290e:	d91c      	bls.n	800294a <number_to_string+0x66>
 8002910:	79fb      	ldrb	r3, [r7, #7]
 8002912:	2b62      	cmp	r3, #98	; 0x62
 8002914:	d819      	bhi.n	800294a <number_to_string+0x66>
		buf[0] = (num/10) + 48;
 8002916:	79fb      	ldrb	r3, [r7, #7]
 8002918:	4a0e      	ldr	r2, [pc, #56]	; (8002954 <number_to_string+0x70>)
 800291a:	fba2 2303 	umull	r2, r3, r2, r3
 800291e:	08db      	lsrs	r3, r3, #3
 8002920:	b2db      	uxtb	r3, r3
 8002922:	3330      	adds	r3, #48	; 0x30
 8002924:	b2da      	uxtb	r2, r3
 8002926:	683b      	ldr	r3, [r7, #0]
 8002928:	701a      	strb	r2, [r3, #0]
		buf[1]= (num % 10) + 48;
 800292a:	79fa      	ldrb	r2, [r7, #7]
 800292c:	4b09      	ldr	r3, [pc, #36]	; (8002954 <number_to_string+0x70>)
 800292e:	fba3 1302 	umull	r1, r3, r3, r2
 8002932:	08d9      	lsrs	r1, r3, #3
 8002934:	460b      	mov	r3, r1
 8002936:	009b      	lsls	r3, r3, #2
 8002938:	440b      	add	r3, r1
 800293a:	005b      	lsls	r3, r3, #1
 800293c:	1ad3      	subs	r3, r2, r3
 800293e:	b2da      	uxtb	r2, r3
 8002940:	683b      	ldr	r3, [r7, #0]
 8002942:	3301      	adds	r3, #1
 8002944:	3230      	adds	r2, #48	; 0x30
 8002946:	b2d2      	uxtb	r2, r2
 8002948:	701a      	strb	r2, [r3, #0]
}
 800294a:	bf00      	nop
 800294c:	370c      	adds	r7, #12
 800294e:	46bd      	mov	sp, r7
 8002950:	bc80      	pop	{r7}
 8002952:	4770      	bx	lr
 8002954:	cccccccd 	.word	0xcccccccd

08002958 <time_to_string>:



//hh:mm:ss
char* time_to_string(RTC_time_t *rtc_time)
{
 8002958:	b580      	push	{r7, lr}
 800295a:	b082      	sub	sp, #8
 800295c:	af00      	add	r7, sp, #0
 800295e:	6078      	str	r0, [r7, #4]
	static char buf[9];

	buf[2]= ':';
 8002960:	4b0f      	ldr	r3, [pc, #60]	; (80029a0 <time_to_string+0x48>)
 8002962:	223a      	movs	r2, #58	; 0x3a
 8002964:	709a      	strb	r2, [r3, #2]
	buf[5]= ':';
 8002966:	4b0e      	ldr	r3, [pc, #56]	; (80029a0 <time_to_string+0x48>)
 8002968:	223a      	movs	r2, #58	; 0x3a
 800296a:	715a      	strb	r2, [r3, #5]

	number_to_string(rtc_time->hours,buf);
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	789b      	ldrb	r3, [r3, #2]
 8002970:	490b      	ldr	r1, [pc, #44]	; (80029a0 <time_to_string+0x48>)
 8002972:	4618      	mov	r0, r3
 8002974:	f7ff ffb6 	bl	80028e4 <number_to_string>
	number_to_string(rtc_time->minutes,&buf[3]);
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	785b      	ldrb	r3, [r3, #1]
 800297c:	4909      	ldr	r1, [pc, #36]	; (80029a4 <time_to_string+0x4c>)
 800297e:	4618      	mov	r0, r3
 8002980:	f7ff ffb0 	bl	80028e4 <number_to_string>
	number_to_string(rtc_time->seconds,&buf[6]);
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	781b      	ldrb	r3, [r3, #0]
 8002988:	4907      	ldr	r1, [pc, #28]	; (80029a8 <time_to_string+0x50>)
 800298a:	4618      	mov	r0, r3
 800298c:	f7ff ffaa 	bl	80028e4 <number_to_string>

	buf[8] = '\0';
 8002990:	4b03      	ldr	r3, [pc, #12]	; (80029a0 <time_to_string+0x48>)
 8002992:	2200      	movs	r2, #0
 8002994:	721a      	strb	r2, [r3, #8]

	return buf;
 8002996:	4b02      	ldr	r3, [pc, #8]	; (80029a0 <time_to_string+0x48>)

}
 8002998:	4618      	mov	r0, r3
 800299a:	3708      	adds	r7, #8
 800299c:	46bd      	mov	sp, r7
 800299e:	bd80      	pop	{r7, pc}
 80029a0:	20000c04 	.word	0x20000c04
 80029a4:	20000c07 	.word	0x20000c07
 80029a8:	20000c0a 	.word	0x20000c0a

080029ac <date_to_string>:

//dd/mm/yy
char* date_to_string(RTC_date_t *rtc_date)
{
 80029ac:	b580      	push	{r7, lr}
 80029ae:	b082      	sub	sp, #8
 80029b0:	af00      	add	r7, sp, #0
 80029b2:	6078      	str	r0, [r7, #4]
	static char buf[9];

	buf[2]= '/';
 80029b4:	4b0f      	ldr	r3, [pc, #60]	; (80029f4 <date_to_string+0x48>)
 80029b6:	222f      	movs	r2, #47	; 0x2f
 80029b8:	709a      	strb	r2, [r3, #2]
	buf[5]= '/';
 80029ba:	4b0e      	ldr	r3, [pc, #56]	; (80029f4 <date_to_string+0x48>)
 80029bc:	222f      	movs	r2, #47	; 0x2f
 80029be:	715a      	strb	r2, [r3, #5]

	number_to_string(rtc_date->date,buf);
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	781b      	ldrb	r3, [r3, #0]
 80029c4:	490b      	ldr	r1, [pc, #44]	; (80029f4 <date_to_string+0x48>)
 80029c6:	4618      	mov	r0, r3
 80029c8:	f7ff ff8c 	bl	80028e4 <number_to_string>
	number_to_string(rtc_date->month,&buf[3]);
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	785b      	ldrb	r3, [r3, #1]
 80029d0:	4909      	ldr	r1, [pc, #36]	; (80029f8 <date_to_string+0x4c>)
 80029d2:	4618      	mov	r0, r3
 80029d4:	f7ff ff86 	bl	80028e4 <number_to_string>
	number_to_string(rtc_date->year,&buf[6]);
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	789b      	ldrb	r3, [r3, #2]
 80029dc:	4907      	ldr	r1, [pc, #28]	; (80029fc <date_to_string+0x50>)
 80029de:	4618      	mov	r0, r3
 80029e0:	f7ff ff80 	bl	80028e4 <number_to_string>

	buf[8]= '\0';
 80029e4:	4b03      	ldr	r3, [pc, #12]	; (80029f4 <date_to_string+0x48>)
 80029e6:	2200      	movs	r2, #0
 80029e8:	721a      	strb	r2, [r3, #8]

	return buf;
 80029ea:	4b02      	ldr	r3, [pc, #8]	; (80029f4 <date_to_string+0x48>)

}
 80029ec:	4618      	mov	r0, r3
 80029ee:	3708      	adds	r7, #8
 80029f0:	46bd      	mov	sp, r7
 80029f2:	bd80      	pop	{r7, pc}
 80029f4:	20000c10 	.word	0x20000c10
 80029f8:	20000c13 	.word	0x20000c13
 80029fc:	20000c16 	.word	0x20000c16

08002a00 <main>:


int main(void)
{
 8002a00:	b590      	push	{r4, r7, lr}
 8002a02:	b085      	sub	sp, #20
 8002a04:	af00      	add	r7, sp, #0

	RTC_time_t current_time;
	RTC_date_t current_date;

#ifndef PRINT_LCD
	printf("RTC test\n");
 8002a06:	4830      	ldr	r0, [pc, #192]	; (8002ac8 <main+0xc8>)
 8002a08:	f000 f964 	bl	8002cd4 <puts>

	lcd_display_clear();
	lcd_display_return_home();
#endif

	if(ds1307_init()){
 8002a0c:	f7fe fa5e 	bl	8000ecc <ds1307_init>
 8002a10:	4603      	mov	r3, r0
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d003      	beq.n	8002a1e <main+0x1e>
		printf("RTC init has failed\n");
 8002a16:	482d      	ldr	r0, [pc, #180]	; (8002acc <main+0xcc>)
 8002a18:	f000 f95c 	bl	8002cd4 <puts>
		while(1);
 8002a1c:	e7fe      	b.n	8002a1c <main+0x1c>
	}

	init_systick_timer(1);
 8002a1e:	2001      	movs	r0, #1
 8002a20:	f7ff ff0e 	bl	8002840 <init_systick_timer>

	current_date.day = FRIDAY;
 8002a24:	2306      	movs	r3, #6
 8002a26:	71fb      	strb	r3, [r7, #7]
	current_date.date = 15;
 8002a28:	230f      	movs	r3, #15
 8002a2a:	713b      	strb	r3, [r7, #4]
	current_date.month = 1;
 8002a2c:	2301      	movs	r3, #1
 8002a2e:	717b      	strb	r3, [r7, #5]
	current_date.year = 21;
 8002a30:	2315      	movs	r3, #21
 8002a32:	71bb      	strb	r3, [r7, #6]

	current_time.hours = 11;
 8002a34:	230b      	movs	r3, #11
 8002a36:	72bb      	strb	r3, [r7, #10]
	current_time.minutes = 59;
 8002a38:	233b      	movs	r3, #59	; 0x3b
 8002a3a:	727b      	strb	r3, [r7, #9]
	current_time.seconds = 30;
 8002a3c:	231e      	movs	r3, #30
 8002a3e:	723b      	strb	r3, [r7, #8]
	current_time.time_format = TIME_FORMAT_12HRS_PM;
 8002a40:	2301      	movs	r3, #1
 8002a42:	72fb      	strb	r3, [r7, #11]

	ds1307_set_current_date(&current_date);
 8002a44:	1d3b      	adds	r3, r7, #4
 8002a46:	4618      	mov	r0, r3
 8002a48:	f7fe faa4 	bl	8000f94 <ds1307_set_current_date>
	ds1307_set_current_time(&current_time);
 8002a4c:	f107 0308 	add.w	r3, r7, #8
 8002a50:	4618      	mov	r0, r3
 8002a52:	f7fe fa56 	bl	8000f02 <ds1307_set_current_time>

	ds1307_get_current_time(&current_time);
 8002a56:	f107 0308 	add.w	r3, r7, #8
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	f7fe faca 	bl	8000ff4 <ds1307_get_current_time>
	ds1307_get_current_date(&current_date);
 8002a60:	1d3b      	adds	r3, r7, #4
 8002a62:	4618      	mov	r0, r3
 8002a64:	f7fe fb0f 	bl	8001086 <ds1307_get_current_date>

	char *am_pm;
	if(current_time.time_format != TIME_FORMAT_24HRS){
 8002a68:	7afb      	ldrb	r3, [r7, #11]
 8002a6a:	2b02      	cmp	r3, #2
 8002a6c:	d012      	beq.n	8002a94 <main+0x94>
		am_pm = (current_time.time_format) ? "PM" : "AM";
 8002a6e:	7afb      	ldrb	r3, [r7, #11]
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	d001      	beq.n	8002a78 <main+0x78>
 8002a74:	4b16      	ldr	r3, [pc, #88]	; (8002ad0 <main+0xd0>)
 8002a76:	e000      	b.n	8002a7a <main+0x7a>
 8002a78:	4b16      	ldr	r3, [pc, #88]	; (8002ad4 <main+0xd4>)
 8002a7a:	60fb      	str	r3, [r7, #12]
#ifndef PRINT_LCD
		printf("Current time = %s %s\n",time_to_string(&current_time),am_pm); // 04:25:41 PM
 8002a7c:	f107 0308 	add.w	r3, r7, #8
 8002a80:	4618      	mov	r0, r3
 8002a82:	f7ff ff69 	bl	8002958 <time_to_string>
 8002a86:	4603      	mov	r3, r0
 8002a88:	68fa      	ldr	r2, [r7, #12]
 8002a8a:	4619      	mov	r1, r3
 8002a8c:	4812      	ldr	r0, [pc, #72]	; (8002ad8 <main+0xd8>)
 8002a8e:	f000 f8c9 	bl	8002c24 <printf>
 8002a92:	e009      	b.n	8002aa8 <main+0xa8>
		lcd_print_string(time_to_string(&current_time));
		lcd_print_string(am_pm);
#endif
	}else{
#ifndef PRINT_LCD
		printf("Current time = %s\n",time_to_string(&current_time)); // 04:25:41
 8002a94:	f107 0308 	add.w	r3, r7, #8
 8002a98:	4618      	mov	r0, r3
 8002a9a:	f7ff ff5d 	bl	8002958 <time_to_string>
 8002a9e:	4603      	mov	r3, r0
 8002aa0:	4619      	mov	r1, r3
 8002aa2:	480e      	ldr	r0, [pc, #56]	; (8002adc <main+0xdc>)
 8002aa4:	f000 f8be 	bl	8002c24 <printf>
		lcd_print_string(time_to_string(&current_time));
#endif
	}

#ifndef PRINT_LCD
	printf("Current date = %s <%s>\n",date_to_string(&current_date), get_day_of_week(current_date.day));
 8002aa8:	1d3b      	adds	r3, r7, #4
 8002aaa:	4618      	mov	r0, r3
 8002aac:	f7ff ff7e 	bl	80029ac <date_to_string>
 8002ab0:	4604      	mov	r4, r0
 8002ab2:	79fb      	ldrb	r3, [r7, #7]
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	f7ff fef7 	bl	80028a8 <get_day_of_week>
 8002aba:	4603      	mov	r3, r0
 8002abc:	461a      	mov	r2, r3
 8002abe:	4621      	mov	r1, r4
 8002ac0:	4807      	ldr	r0, [pc, #28]	; (8002ae0 <main+0xe0>)
 8002ac2:	f000 f8af 	bl	8002c24 <printf>
	lcd_set_cursor(2, 1);
	lcd_print_string(date_to_string(&current_date));
#endif


	while(1);
 8002ac6:	e7fe      	b.n	8002ac6 <main+0xc6>
 8002ac8:	08007c50 	.word	0x08007c50
 8002acc:	08007c5c 	.word	0x08007c5c
 8002ad0:	08007c70 	.word	0x08007c70
 8002ad4:	08007c74 	.word	0x08007c74
 8002ad8:	08007c78 	.word	0x08007c78
 8002adc:	08007c90 	.word	0x08007c90
 8002ae0:	08007ca4 	.word	0x08007ca4

08002ae4 <SysTick_Handler>:
	return 0;
}


void SysTick_Handler(void)
{
 8002ae4:	b590      	push	{r4, r7, lr}
 8002ae6:	b085      	sub	sp, #20
 8002ae8:	af00      	add	r7, sp, #0
	RTC_time_t current_time;
	RTC_date_t current_date;

	ds1307_get_current_time(&current_time);
 8002aea:	f107 0308 	add.w	r3, r7, #8
 8002aee:	4618      	mov	r0, r3
 8002af0:	f7fe fa80 	bl	8000ff4 <ds1307_get_current_time>

	char *am_pm;
	if(current_time.time_format != TIME_FORMAT_24HRS){
 8002af4:	7afb      	ldrb	r3, [r7, #11]
 8002af6:	2b02      	cmp	r3, #2
 8002af8:	d012      	beq.n	8002b20 <SysTick_Handler+0x3c>
		am_pm = (current_time.time_format) ? "PM" : "AM";
 8002afa:	7afb      	ldrb	r3, [r7, #11]
 8002afc:	2b00      	cmp	r3, #0
 8002afe:	d001      	beq.n	8002b04 <SysTick_Handler+0x20>
 8002b00:	4b18      	ldr	r3, [pc, #96]	; (8002b64 <SysTick_Handler+0x80>)
 8002b02:	e000      	b.n	8002b06 <SysTick_Handler+0x22>
 8002b04:	4b18      	ldr	r3, [pc, #96]	; (8002b68 <SysTick_Handler+0x84>)
 8002b06:	60fb      	str	r3, [r7, #12]
#ifndef PRINT_LCD
		printf("Current time = %s %s\n",time_to_string(&current_time),am_pm); // 04:25:41 PM
 8002b08:	f107 0308 	add.w	r3, r7, #8
 8002b0c:	4618      	mov	r0, r3
 8002b0e:	f7ff ff23 	bl	8002958 <time_to_string>
 8002b12:	4603      	mov	r3, r0
 8002b14:	68fa      	ldr	r2, [r7, #12]
 8002b16:	4619      	mov	r1, r3
 8002b18:	4814      	ldr	r0, [pc, #80]	; (8002b6c <SysTick_Handler+0x88>)
 8002b1a:	f000 f883 	bl	8002c24 <printf>
 8002b1e:	e009      	b.n	8002b34 <SysTick_Handler+0x50>
		lcd_print_string(am_pm);
#endif

	}else{
#ifndef PRINT_LCD
		printf("Current time = %s\n",time_to_string(&current_time)); // 04:25:41
 8002b20:	f107 0308 	add.w	r3, r7, #8
 8002b24:	4618      	mov	r0, r3
 8002b26:	f7ff ff17 	bl	8002958 <time_to_string>
 8002b2a:	4603      	mov	r3, r0
 8002b2c:	4619      	mov	r1, r3
 8002b2e:	4810      	ldr	r0, [pc, #64]	; (8002b70 <SysTick_Handler+0x8c>)
 8002b30:	f000 f878 	bl	8002c24 <printf>
		lcd_set_cursor(1, 1);
		lcd_print_string(time_to_string(&current_time));
#endif
	}

	ds1307_get_current_date(&current_date);
 8002b34:	1d3b      	adds	r3, r7, #4
 8002b36:	4618      	mov	r0, r3
 8002b38:	f7fe faa5 	bl	8001086 <ds1307_get_current_date>

#ifndef PRINT_LCD
	printf("Current date = %s <%s>\n",date_to_string(&current_date), get_day_of_week(current_date.day));
 8002b3c:	1d3b      	adds	r3, r7, #4
 8002b3e:	4618      	mov	r0, r3
 8002b40:	f7ff ff34 	bl	80029ac <date_to_string>
 8002b44:	4604      	mov	r4, r0
 8002b46:	79fb      	ldrb	r3, [r7, #7]
 8002b48:	4618      	mov	r0, r3
 8002b4a:	f7ff fead 	bl	80028a8 <get_day_of_week>
 8002b4e:	4603      	mov	r3, r0
 8002b50:	461a      	mov	r2, r3
 8002b52:	4621      	mov	r1, r4
 8002b54:	4807      	ldr	r0, [pc, #28]	; (8002b74 <SysTick_Handler+0x90>)
 8002b56:	f000 f865 	bl	8002c24 <printf>
	lcd_print_string(get_day_of_week(current_date.day));
	lcd_print_char('>');
#endif


}
 8002b5a:	bf00      	nop
 8002b5c:	3714      	adds	r7, #20
 8002b5e:	46bd      	mov	sp, r7
 8002b60:	bd90      	pop	{r4, r7, pc}
 8002b62:	bf00      	nop
 8002b64:	08007c70 	.word	0x08007c70
 8002b68:	08007c74 	.word	0x08007c74
 8002b6c:	08007c78 	.word	0x08007c78
 8002b70:	08007c90 	.word	0x08007c90
 8002b74:	08007ca4 	.word	0x08007ca4

08002b78 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002b78:	480d      	ldr	r0, [pc, #52]	; (8002bb0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002b7a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002b7c:	480d      	ldr	r0, [pc, #52]	; (8002bb4 <LoopForever+0x6>)
  ldr r1, =_edata
 8002b7e:	490e      	ldr	r1, [pc, #56]	; (8002bb8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002b80:	4a0e      	ldr	r2, [pc, #56]	; (8002bbc <LoopForever+0xe>)
  movs r3, #0
 8002b82:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002b84:	e002      	b.n	8002b8c <LoopCopyDataInit>

08002b86 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002b86:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002b88:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002b8a:	3304      	adds	r3, #4

08002b8c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002b8c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002b8e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002b90:	d3f9      	bcc.n	8002b86 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002b92:	4a0b      	ldr	r2, [pc, #44]	; (8002bc0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002b94:	4c0b      	ldr	r4, [pc, #44]	; (8002bc4 <LoopForever+0x16>)
  movs r3, #0
 8002b96:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002b98:	e001      	b.n	8002b9e <LoopFillZerobss>

08002b9a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002b9a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002b9c:	3204      	adds	r2, #4

08002b9e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002b9e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002ba0:	d3fb      	bcc.n	8002b9a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002ba2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8002ba6:	f000 f811 	bl	8002bcc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002baa:	f7ff ff29 	bl	8002a00 <main>

08002bae <LoopForever>:

LoopForever:
    b LoopForever
 8002bae:	e7fe      	b.n	8002bae <LoopForever>
  ldr   r0, =_estack
 8002bb0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002bb4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002bb8:	20000bbc 	.word	0x20000bbc
  ldr r2, =_sidata
 8002bbc:	08008080 	.word	0x08008080
  ldr r2, =_sbss
 8002bc0:	20000bbc 	.word	0x20000bbc
  ldr r4, =_ebss
 8002bc4:	20000cfc 	.word	0x20000cfc

08002bc8 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002bc8:	e7fe      	b.n	8002bc8 <ADC_IRQHandler>
	...

08002bcc <__libc_init_array>:
 8002bcc:	b570      	push	{r4, r5, r6, lr}
 8002bce:	4d0d      	ldr	r5, [pc, #52]	; (8002c04 <__libc_init_array+0x38>)
 8002bd0:	4c0d      	ldr	r4, [pc, #52]	; (8002c08 <__libc_init_array+0x3c>)
 8002bd2:	1b64      	subs	r4, r4, r5
 8002bd4:	10a4      	asrs	r4, r4, #2
 8002bd6:	2600      	movs	r6, #0
 8002bd8:	42a6      	cmp	r6, r4
 8002bda:	d109      	bne.n	8002bf0 <__libc_init_array+0x24>
 8002bdc:	4d0b      	ldr	r5, [pc, #44]	; (8002c0c <__libc_init_array+0x40>)
 8002bde:	4c0c      	ldr	r4, [pc, #48]	; (8002c10 <__libc_init_array+0x44>)
 8002be0:	f004 ffc8 	bl	8007b74 <_init>
 8002be4:	1b64      	subs	r4, r4, r5
 8002be6:	10a4      	asrs	r4, r4, #2
 8002be8:	2600      	movs	r6, #0
 8002bea:	42a6      	cmp	r6, r4
 8002bec:	d105      	bne.n	8002bfa <__libc_init_array+0x2e>
 8002bee:	bd70      	pop	{r4, r5, r6, pc}
 8002bf0:	f855 3b04 	ldr.w	r3, [r5], #4
 8002bf4:	4798      	blx	r3
 8002bf6:	3601      	adds	r6, #1
 8002bf8:	e7ee      	b.n	8002bd8 <__libc_init_array+0xc>
 8002bfa:	f855 3b04 	ldr.w	r3, [r5], #4
 8002bfe:	4798      	blx	r3
 8002c00:	3601      	adds	r6, #1
 8002c02:	e7f2      	b.n	8002bea <__libc_init_array+0x1e>
 8002c04:	08008074 	.word	0x08008074
 8002c08:	08008074 	.word	0x08008074
 8002c0c:	08008074 	.word	0x08008074
 8002c10:	0800807c 	.word	0x0800807c

08002c14 <memset>:
 8002c14:	4402      	add	r2, r0
 8002c16:	4603      	mov	r3, r0
 8002c18:	4293      	cmp	r3, r2
 8002c1a:	d100      	bne.n	8002c1e <memset+0xa>
 8002c1c:	4770      	bx	lr
 8002c1e:	f803 1b01 	strb.w	r1, [r3], #1
 8002c22:	e7f9      	b.n	8002c18 <memset+0x4>

08002c24 <printf>:
 8002c24:	b40f      	push	{r0, r1, r2, r3}
 8002c26:	b507      	push	{r0, r1, r2, lr}
 8002c28:	4906      	ldr	r1, [pc, #24]	; (8002c44 <printf+0x20>)
 8002c2a:	ab04      	add	r3, sp, #16
 8002c2c:	6808      	ldr	r0, [r1, #0]
 8002c2e:	f853 2b04 	ldr.w	r2, [r3], #4
 8002c32:	6881      	ldr	r1, [r0, #8]
 8002c34:	9301      	str	r3, [sp, #4]
 8002c36:	f000 f855 	bl	8002ce4 <_vfprintf_r>
 8002c3a:	b003      	add	sp, #12
 8002c3c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002c40:	b004      	add	sp, #16
 8002c42:	4770      	bx	lr
 8002c44:	20000200 	.word	0x20000200

08002c48 <_puts_r>:
 8002c48:	b530      	push	{r4, r5, lr}
 8002c4a:	4605      	mov	r5, r0
 8002c4c:	b089      	sub	sp, #36	; 0x24
 8002c4e:	4608      	mov	r0, r1
 8002c50:	460c      	mov	r4, r1
 8002c52:	f7fd facd 	bl	80001f0 <strlen>
 8002c56:	4b1e      	ldr	r3, [pc, #120]	; (8002cd0 <_puts_r+0x88>)
 8002c58:	9306      	str	r3, [sp, #24]
 8002c5a:	2301      	movs	r3, #1
 8002c5c:	e9cd 4004 	strd	r4, r0, [sp, #16]
 8002c60:	9307      	str	r3, [sp, #28]
 8002c62:	4418      	add	r0, r3
 8002c64:	ab04      	add	r3, sp, #16
 8002c66:	9301      	str	r3, [sp, #4]
 8002c68:	2302      	movs	r3, #2
 8002c6a:	9302      	str	r3, [sp, #8]
 8002c6c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002c6e:	68ac      	ldr	r4, [r5, #8]
 8002c70:	9003      	str	r0, [sp, #12]
 8002c72:	b913      	cbnz	r3, 8002c7a <_puts_r+0x32>
 8002c74:	4628      	mov	r0, r5
 8002c76:	f002 fa2f 	bl	80050d8 <__sinit>
 8002c7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002c7c:	07db      	lsls	r3, r3, #31
 8002c7e:	d405      	bmi.n	8002c8c <_puts_r+0x44>
 8002c80:	89a3      	ldrh	r3, [r4, #12]
 8002c82:	0598      	lsls	r0, r3, #22
 8002c84:	d402      	bmi.n	8002c8c <_puts_r+0x44>
 8002c86:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002c88:	f002 fce4 	bl	8005654 <__retarget_lock_acquire_recursive>
 8002c8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002c90:	0499      	lsls	r1, r3, #18
 8002c92:	d406      	bmi.n	8002ca2 <_puts_r+0x5a>
 8002c94:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002c98:	81a3      	strh	r3, [r4, #12]
 8002c9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002c9c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002ca0:	6663      	str	r3, [r4, #100]	; 0x64
 8002ca2:	4628      	mov	r0, r5
 8002ca4:	aa01      	add	r2, sp, #4
 8002ca6:	4621      	mov	r1, r4
 8002ca8:	f002 fb66 	bl	8005378 <__sfvwrite_r>
 8002cac:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002cae:	2800      	cmp	r0, #0
 8002cb0:	bf14      	ite	ne
 8002cb2:	f04f 35ff 	movne.w	r5, #4294967295
 8002cb6:	250a      	moveq	r5, #10
 8002cb8:	07da      	lsls	r2, r3, #31
 8002cba:	d405      	bmi.n	8002cc8 <_puts_r+0x80>
 8002cbc:	89a3      	ldrh	r3, [r4, #12]
 8002cbe:	059b      	lsls	r3, r3, #22
 8002cc0:	d402      	bmi.n	8002cc8 <_puts_r+0x80>
 8002cc2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002cc4:	f002 fcc7 	bl	8005656 <__retarget_lock_release_recursive>
 8002cc8:	4628      	mov	r0, r5
 8002cca:	b009      	add	sp, #36	; 0x24
 8002ccc:	bd30      	pop	{r4, r5, pc}
 8002cce:	bf00      	nop
 8002cd0:	08007f46 	.word	0x08007f46

08002cd4 <puts>:
 8002cd4:	4b02      	ldr	r3, [pc, #8]	; (8002ce0 <puts+0xc>)
 8002cd6:	4601      	mov	r1, r0
 8002cd8:	6818      	ldr	r0, [r3, #0]
 8002cda:	f7ff bfb5 	b.w	8002c48 <_puts_r>
 8002cde:	bf00      	nop
 8002ce0:	20000200 	.word	0x20000200

08002ce4 <_vfprintf_r>:
 8002ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ce8:	b0d3      	sub	sp, #332	; 0x14c
 8002cea:	468a      	mov	sl, r1
 8002cec:	4691      	mov	r9, r2
 8002cee:	461c      	mov	r4, r3
 8002cf0:	461e      	mov	r6, r3
 8002cf2:	4680      	mov	r8, r0
 8002cf4:	f002 fca8 	bl	8005648 <_localeconv_r>
 8002cf8:	6803      	ldr	r3, [r0, #0]
 8002cfa:	9317      	str	r3, [sp, #92]	; 0x5c
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	f7fd fa77 	bl	80001f0 <strlen>
 8002d02:	9012      	str	r0, [sp, #72]	; 0x48
 8002d04:	f1b8 0f00 	cmp.w	r8, #0
 8002d08:	d005      	beq.n	8002d16 <_vfprintf_r+0x32>
 8002d0a:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 8002d0e:	b913      	cbnz	r3, 8002d16 <_vfprintf_r+0x32>
 8002d10:	4640      	mov	r0, r8
 8002d12:	f002 f9e1 	bl	80050d8 <__sinit>
 8002d16:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 8002d1a:	07d8      	lsls	r0, r3, #31
 8002d1c:	d407      	bmi.n	8002d2e <_vfprintf_r+0x4a>
 8002d1e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002d22:	0599      	lsls	r1, r3, #22
 8002d24:	d403      	bmi.n	8002d2e <_vfprintf_r+0x4a>
 8002d26:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 8002d2a:	f002 fc93 	bl	8005654 <__retarget_lock_acquire_recursive>
 8002d2e:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 8002d32:	049a      	lsls	r2, r3, #18
 8002d34:	d409      	bmi.n	8002d4a <_vfprintf_r+0x66>
 8002d36:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002d3a:	f8aa 300c 	strh.w	r3, [sl, #12]
 8002d3e:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 8002d42:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002d46:	f8ca 3064 	str.w	r3, [sl, #100]	; 0x64
 8002d4a:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002d4e:	071b      	lsls	r3, r3, #28
 8002d50:	d502      	bpl.n	8002d58 <_vfprintf_r+0x74>
 8002d52:	f8da 3010 	ldr.w	r3, [sl, #16]
 8002d56:	b9c3      	cbnz	r3, 8002d8a <_vfprintf_r+0xa6>
 8002d58:	4651      	mov	r1, sl
 8002d5a:	4640      	mov	r0, r8
 8002d5c:	f001 fa20 	bl	80041a0 <__swsetup_r>
 8002d60:	b198      	cbz	r0, 8002d8a <_vfprintf_r+0xa6>
 8002d62:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 8002d66:	07df      	lsls	r7, r3, #31
 8002d68:	d506      	bpl.n	8002d78 <_vfprintf_r+0x94>
 8002d6a:	f04f 33ff 	mov.w	r3, #4294967295
 8002d6e:	9313      	str	r3, [sp, #76]	; 0x4c
 8002d70:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8002d72:	b053      	add	sp, #332	; 0x14c
 8002d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d78:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002d7c:	059e      	lsls	r6, r3, #22
 8002d7e:	d4f4      	bmi.n	8002d6a <_vfprintf_r+0x86>
 8002d80:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 8002d84:	f002 fc67 	bl	8005656 <__retarget_lock_release_recursive>
 8002d88:	e7ef      	b.n	8002d6a <_vfprintf_r+0x86>
 8002d8a:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002d8e:	f003 021a 	and.w	r2, r3, #26
 8002d92:	2a0a      	cmp	r2, #10
 8002d94:	d116      	bne.n	8002dc4 <_vfprintf_r+0xe0>
 8002d96:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
 8002d9a:	2a00      	cmp	r2, #0
 8002d9c:	db12      	blt.n	8002dc4 <_vfprintf_r+0xe0>
 8002d9e:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
 8002da2:	07d5      	lsls	r5, r2, #31
 8002da4:	d405      	bmi.n	8002db2 <_vfprintf_r+0xce>
 8002da6:	0598      	lsls	r0, r3, #22
 8002da8:	d403      	bmi.n	8002db2 <_vfprintf_r+0xce>
 8002daa:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 8002dae:	f002 fc52 	bl	8005656 <__retarget_lock_release_recursive>
 8002db2:	4623      	mov	r3, r4
 8002db4:	464a      	mov	r2, r9
 8002db6:	4651      	mov	r1, sl
 8002db8:	4640      	mov	r0, r8
 8002dba:	b053      	add	sp, #332	; 0x14c
 8002dbc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dc0:	f001 b9ae 	b.w	8004120 <__sbprintf>
 8002dc4:	2500      	movs	r5, #0
 8002dc6:	2200      	movs	r2, #0
 8002dc8:	2300      	movs	r3, #0
 8002dca:	e9cd 5527 	strd	r5, r5, [sp, #156]	; 0x9c
 8002dce:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8002dd2:	e9cd 5519 	strd	r5, r5, [sp, #100]	; 0x64
 8002dd6:	ac29      	add	r4, sp, #164	; 0xa4
 8002dd8:	9426      	str	r4, [sp, #152]	; 0x98
 8002dda:	9509      	str	r5, [sp, #36]	; 0x24
 8002ddc:	950e      	str	r5, [sp, #56]	; 0x38
 8002dde:	9516      	str	r5, [sp, #88]	; 0x58
 8002de0:	9518      	str	r5, [sp, #96]	; 0x60
 8002de2:	9513      	str	r5, [sp, #76]	; 0x4c
 8002de4:	464b      	mov	r3, r9
 8002de6:	461d      	mov	r5, r3
 8002de8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002dec:	b10a      	cbz	r2, 8002df2 <_vfprintf_r+0x10e>
 8002dee:	2a25      	cmp	r2, #37	; 0x25
 8002df0:	d1f9      	bne.n	8002de6 <_vfprintf_r+0x102>
 8002df2:	ebb5 0709 	subs.w	r7, r5, r9
 8002df6:	d00d      	beq.n	8002e14 <_vfprintf_r+0x130>
 8002df8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002dfa:	443b      	add	r3, r7
 8002dfc:	9328      	str	r3, [sp, #160]	; 0xa0
 8002dfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002e00:	3301      	adds	r3, #1
 8002e02:	2b07      	cmp	r3, #7
 8002e04:	e9c4 9700 	strd	r9, r7, [r4]
 8002e08:	9327      	str	r3, [sp, #156]	; 0x9c
 8002e0a:	dc79      	bgt.n	8002f00 <_vfprintf_r+0x21c>
 8002e0c:	3408      	adds	r4, #8
 8002e0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002e10:	443b      	add	r3, r7
 8002e12:	9313      	str	r3, [sp, #76]	; 0x4c
 8002e14:	782b      	ldrb	r3, [r5, #0]
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	f001 813e 	beq.w	8004098 <_vfprintf_r+0x13b4>
 8002e1c:	2300      	movs	r3, #0
 8002e1e:	f04f 32ff 	mov.w	r2, #4294967295
 8002e22:	3501      	adds	r5, #1
 8002e24:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002e28:	9207      	str	r2, [sp, #28]
 8002e2a:	9314      	str	r3, [sp, #80]	; 0x50
 8002e2c:	469b      	mov	fp, r3
 8002e2e:	270a      	movs	r7, #10
 8002e30:	212b      	movs	r1, #43	; 0x2b
 8002e32:	462b      	mov	r3, r5
 8002e34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002e38:	920a      	str	r2, [sp, #40]	; 0x28
 8002e3a:	930f      	str	r3, [sp, #60]	; 0x3c
 8002e3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e3e:	3b20      	subs	r3, #32
 8002e40:	2b5a      	cmp	r3, #90	; 0x5a
 8002e42:	f200 85b3 	bhi.w	80039ac <_vfprintf_r+0xcc8>
 8002e46:	e8df f013 	tbh	[pc, r3, lsl #1]
 8002e4a:	007e      	.short	0x007e
 8002e4c:	05b105b1 	.word	0x05b105b1
 8002e50:	05b10086 	.word	0x05b10086
 8002e54:	05b105b1 	.word	0x05b105b1
 8002e58:	05b10065 	.word	0x05b10065
 8002e5c:	008905b1 	.word	0x008905b1
 8002e60:	05b10093 	.word	0x05b10093
 8002e64:	00960090 	.word	0x00960090
 8002e68:	00b205b1 	.word	0x00b205b1
 8002e6c:	00b500b5 	.word	0x00b500b5
 8002e70:	00b500b5 	.word	0x00b500b5
 8002e74:	00b500b5 	.word	0x00b500b5
 8002e78:	00b500b5 	.word	0x00b500b5
 8002e7c:	05b100b5 	.word	0x05b100b5
 8002e80:	05b105b1 	.word	0x05b105b1
 8002e84:	05b105b1 	.word	0x05b105b1
 8002e88:	05b105b1 	.word	0x05b105b1
 8002e8c:	05b10125 	.word	0x05b10125
 8002e90:	00f500e2 	.word	0x00f500e2
 8002e94:	01250125 	.word	0x01250125
 8002e98:	05b10125 	.word	0x05b10125
 8002e9c:	05b105b1 	.word	0x05b105b1
 8002ea0:	00c505b1 	.word	0x00c505b1
 8002ea4:	05b105b1 	.word	0x05b105b1
 8002ea8:	05b1048b 	.word	0x05b1048b
 8002eac:	05b105b1 	.word	0x05b105b1
 8002eb0:	05b104d5 	.word	0x05b104d5
 8002eb4:	05b104f6 	.word	0x05b104f6
 8002eb8:	051805b1 	.word	0x051805b1
 8002ebc:	05b105b1 	.word	0x05b105b1
 8002ec0:	05b105b1 	.word	0x05b105b1
 8002ec4:	05b105b1 	.word	0x05b105b1
 8002ec8:	05b105b1 	.word	0x05b105b1
 8002ecc:	05b10125 	.word	0x05b10125
 8002ed0:	00f700e2 	.word	0x00f700e2
 8002ed4:	01250125 	.word	0x01250125
 8002ed8:	00c80125 	.word	0x00c80125
 8002edc:	00dc00f7 	.word	0x00dc00f7
 8002ee0:	00d505b1 	.word	0x00d505b1
 8002ee4:	046605b1 	.word	0x046605b1
 8002ee8:	04c3048d 	.word	0x04c3048d
 8002eec:	05b100dc 	.word	0x05b100dc
 8002ef0:	007c04d5 	.word	0x007c04d5
 8002ef4:	05b104f8 	.word	0x05b104f8
 8002ef8:	053705b1 	.word	0x053705b1
 8002efc:	007c05b1 	.word	0x007c05b1
 8002f00:	aa26      	add	r2, sp, #152	; 0x98
 8002f02:	4651      	mov	r1, sl
 8002f04:	4640      	mov	r0, r8
 8002f06:	f003 fbfe 	bl	8006706 <__sprint_r>
 8002f0a:	2800      	cmp	r0, #0
 8002f0c:	f040 812d 	bne.w	800316a <_vfprintf_r+0x486>
 8002f10:	ac29      	add	r4, sp, #164	; 0xa4
 8002f12:	e77c      	b.n	8002e0e <_vfprintf_r+0x12a>
 8002f14:	4640      	mov	r0, r8
 8002f16:	f002 fb97 	bl	8005648 <_localeconv_r>
 8002f1a:	6843      	ldr	r3, [r0, #4]
 8002f1c:	9318      	str	r3, [sp, #96]	; 0x60
 8002f1e:	4618      	mov	r0, r3
 8002f20:	f7fd f966 	bl	80001f0 <strlen>
 8002f24:	9016      	str	r0, [sp, #88]	; 0x58
 8002f26:	4640      	mov	r0, r8
 8002f28:	f002 fb8e 	bl	8005648 <_localeconv_r>
 8002f2c:	6883      	ldr	r3, [r0, #8]
 8002f2e:	930e      	str	r3, [sp, #56]	; 0x38
 8002f30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002f32:	212b      	movs	r1, #43	; 0x2b
 8002f34:	b12b      	cbz	r3, 8002f42 <_vfprintf_r+0x25e>
 8002f36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002f38:	b11b      	cbz	r3, 8002f42 <_vfprintf_r+0x25e>
 8002f3a:	781b      	ldrb	r3, [r3, #0]
 8002f3c:	b10b      	cbz	r3, 8002f42 <_vfprintf_r+0x25e>
 8002f3e:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
 8002f42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002f44:	e775      	b.n	8002e32 <_vfprintf_r+0x14e>
 8002f46:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	d1f9      	bne.n	8002f42 <_vfprintf_r+0x25e>
 8002f4e:	2320      	movs	r3, #32
 8002f50:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002f54:	e7f5      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002f56:	f04b 0b01 	orr.w	fp, fp, #1
 8002f5a:	e7f2      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002f5c:	f856 3b04 	ldr.w	r3, [r6], #4
 8002f60:	9314      	str	r3, [sp, #80]	; 0x50
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	daed      	bge.n	8002f42 <_vfprintf_r+0x25e>
 8002f66:	425b      	negs	r3, r3
 8002f68:	9314      	str	r3, [sp, #80]	; 0x50
 8002f6a:	f04b 0b04 	orr.w	fp, fp, #4
 8002f6e:	e7e8      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002f70:	f88d 107b 	strb.w	r1, [sp, #123]	; 0x7b
 8002f74:	e7e5      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002f76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002f78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002f7c:	920a      	str	r2, [sp, #40]	; 0x28
 8002f7e:	2a2a      	cmp	r2, #42	; 0x2a
 8002f80:	d112      	bne.n	8002fa8 <_vfprintf_r+0x2c4>
 8002f82:	f856 0b04 	ldr.w	r0, [r6], #4
 8002f86:	930f      	str	r3, [sp, #60]	; 0x3c
 8002f88:	ea40 72e0 	orr.w	r2, r0, r0, asr #31
 8002f8c:	9207      	str	r2, [sp, #28]
 8002f8e:	e7d8      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002f90:	9807      	ldr	r0, [sp, #28]
 8002f92:	fb07 2200 	mla	r2, r7, r0, r2
 8002f96:	9207      	str	r2, [sp, #28]
 8002f98:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002f9c:	920a      	str	r2, [sp, #40]	; 0x28
 8002f9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002fa0:	3a30      	subs	r2, #48	; 0x30
 8002fa2:	2a09      	cmp	r2, #9
 8002fa4:	d9f4      	bls.n	8002f90 <_vfprintf_r+0x2ac>
 8002fa6:	e748      	b.n	8002e3a <_vfprintf_r+0x156>
 8002fa8:	2200      	movs	r2, #0
 8002faa:	9207      	str	r2, [sp, #28]
 8002fac:	e7f7      	b.n	8002f9e <_vfprintf_r+0x2ba>
 8002fae:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
 8002fb2:	e7c6      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002fb4:	2200      	movs	r2, #0
 8002fb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002fb8:	9214      	str	r2, [sp, #80]	; 0x50
 8002fba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002fbc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8002fbe:	3a30      	subs	r2, #48	; 0x30
 8002fc0:	fb07 2200 	mla	r2, r7, r0, r2
 8002fc4:	9214      	str	r2, [sp, #80]	; 0x50
 8002fc6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002fca:	920a      	str	r2, [sp, #40]	; 0x28
 8002fcc:	3a30      	subs	r2, #48	; 0x30
 8002fce:	2a09      	cmp	r2, #9
 8002fd0:	d9f3      	bls.n	8002fba <_vfprintf_r+0x2d6>
 8002fd2:	e732      	b.n	8002e3a <_vfprintf_r+0x156>
 8002fd4:	f04b 0b08 	orr.w	fp, fp, #8
 8002fd8:	e7b3      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002fda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002fdc:	781b      	ldrb	r3, [r3, #0]
 8002fde:	2b68      	cmp	r3, #104	; 0x68
 8002fe0:	bf01      	itttt	eq
 8002fe2:	9b0f      	ldreq	r3, [sp, #60]	; 0x3c
 8002fe4:	3301      	addeq	r3, #1
 8002fe6:	930f      	streq	r3, [sp, #60]	; 0x3c
 8002fe8:	f44b 7b00 	orreq.w	fp, fp, #512	; 0x200
 8002fec:	bf18      	it	ne
 8002fee:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
 8002ff2:	e7a6      	b.n	8002f42 <_vfprintf_r+0x25e>
 8002ff4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002ff6:	781b      	ldrb	r3, [r3, #0]
 8002ff8:	2b6c      	cmp	r3, #108	; 0x6c
 8002ffa:	d105      	bne.n	8003008 <_vfprintf_r+0x324>
 8002ffc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002ffe:	3301      	adds	r3, #1
 8003000:	930f      	str	r3, [sp, #60]	; 0x3c
 8003002:	f04b 0b20 	orr.w	fp, fp, #32
 8003006:	e79c      	b.n	8002f42 <_vfprintf_r+0x25e>
 8003008:	f04b 0b10 	orr.w	fp, fp, #16
 800300c:	e799      	b.n	8002f42 <_vfprintf_r+0x25e>
 800300e:	4632      	mov	r2, r6
 8003010:	2000      	movs	r0, #0
 8003012:	f852 3b04 	ldr.w	r3, [r2], #4
 8003016:	920b      	str	r2, [sp, #44]	; 0x2c
 8003018:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 800301c:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 8003020:	2301      	movs	r3, #1
 8003022:	e9cd 000c 	strd	r0, r0, [sp, #48]	; 0x30
 8003026:	9008      	str	r0, [sp, #32]
 8003028:	9307      	str	r3, [sp, #28]
 800302a:	4606      	mov	r6, r0
 800302c:	4605      	mov	r5, r0
 800302e:	f10d 09e4 	add.w	r9, sp, #228	; 0xe4
 8003032:	e1ba      	b.n	80033aa <_vfprintf_r+0x6c6>
 8003034:	f04b 0b10 	orr.w	fp, fp, #16
 8003038:	f01b 0f20 	tst.w	fp, #32
 800303c:	d012      	beq.n	8003064 <_vfprintf_r+0x380>
 800303e:	3607      	adds	r6, #7
 8003040:	f026 0307 	bic.w	r3, r6, #7
 8003044:	461a      	mov	r2, r3
 8003046:	685d      	ldr	r5, [r3, #4]
 8003048:	f852 6b08 	ldr.w	r6, [r2], #8
 800304c:	920b      	str	r2, [sp, #44]	; 0x2c
 800304e:	2d00      	cmp	r5, #0
 8003050:	da06      	bge.n	8003060 <_vfprintf_r+0x37c>
 8003052:	4276      	negs	r6, r6
 8003054:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8003058:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 800305c:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8003060:	2301      	movs	r3, #1
 8003062:	e390      	b.n	8003786 <_vfprintf_r+0xaa2>
 8003064:	4633      	mov	r3, r6
 8003066:	f01b 0f10 	tst.w	fp, #16
 800306a:	f853 5b04 	ldr.w	r5, [r3], #4
 800306e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003070:	d002      	beq.n	8003078 <_vfprintf_r+0x394>
 8003072:	462e      	mov	r6, r5
 8003074:	17ed      	asrs	r5, r5, #31
 8003076:	e7ea      	b.n	800304e <_vfprintf_r+0x36a>
 8003078:	f01b 0f40 	tst.w	fp, #64	; 0x40
 800307c:	d003      	beq.n	8003086 <_vfprintf_r+0x3a2>
 800307e:	b22e      	sxth	r6, r5
 8003080:	f345 35c0 	sbfx	r5, r5, #15, #1
 8003084:	e7e3      	b.n	800304e <_vfprintf_r+0x36a>
 8003086:	f41b 7f00 	tst.w	fp, #512	; 0x200
 800308a:	d0f2      	beq.n	8003072 <_vfprintf_r+0x38e>
 800308c:	b26e      	sxtb	r6, r5
 800308e:	f345 15c0 	sbfx	r5, r5, #7, #1
 8003092:	e7dc      	b.n	800304e <_vfprintf_r+0x36a>
 8003094:	3607      	adds	r6, #7
 8003096:	f026 0307 	bic.w	r3, r6, #7
 800309a:	4619      	mov	r1, r3
 800309c:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 80030a0:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80030a4:	e9dd 6310 	ldrd	r6, r3, [sp, #64]	; 0x40
 80030a8:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 80030ac:	910b      	str	r1, [sp, #44]	; 0x2c
 80030ae:	4b40      	ldr	r3, [pc, #256]	; (80031b0 <_vfprintf_r+0x4cc>)
 80030b0:	f04f 32ff 	mov.w	r2, #4294967295
 80030b4:	4630      	mov	r0, r6
 80030b6:	4629      	mov	r1, r5
 80030b8:	f7fd fd48 	bl	8000b4c <__aeabi_dcmpun>
 80030bc:	bb10      	cbnz	r0, 8003104 <_vfprintf_r+0x420>
 80030be:	4b3c      	ldr	r3, [pc, #240]	; (80031b0 <_vfprintf_r+0x4cc>)
 80030c0:	f04f 32ff 	mov.w	r2, #4294967295
 80030c4:	4630      	mov	r0, r6
 80030c6:	4629      	mov	r1, r5
 80030c8:	f7fd fd22 	bl	8000b10 <__aeabi_dcmple>
 80030cc:	b9d0      	cbnz	r0, 8003104 <_vfprintf_r+0x420>
 80030ce:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80030d2:	2200      	movs	r2, #0
 80030d4:	2300      	movs	r3, #0
 80030d6:	f7fd fd11 	bl	8000afc <__aeabi_dcmplt>
 80030da:	b110      	cbz	r0, 80030e2 <_vfprintf_r+0x3fe>
 80030dc:	232d      	movs	r3, #45	; 0x2d
 80030de:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 80030e2:	4a34      	ldr	r2, [pc, #208]	; (80031b4 <_vfprintf_r+0x4d0>)
 80030e4:	4834      	ldr	r0, [pc, #208]	; (80031b8 <_vfprintf_r+0x4d4>)
 80030e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80030e8:	2100      	movs	r1, #0
 80030ea:	2b47      	cmp	r3, #71	; 0x47
 80030ec:	bfd4      	ite	le
 80030ee:	4691      	movle	r9, r2
 80030f0:	4681      	movgt	r9, r0
 80030f2:	2303      	movs	r3, #3
 80030f4:	e9cd 3107 	strd	r3, r1, [sp, #28]
 80030f8:	f02b 0b80 	bic.w	fp, fp, #128	; 0x80
 80030fc:	2600      	movs	r6, #0
 80030fe:	4633      	mov	r3, r6
 8003100:	f001 b804 	b.w	800410c <_vfprintf_r+0x1428>
 8003104:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003108:	4610      	mov	r0, r2
 800310a:	4619      	mov	r1, r3
 800310c:	f7fd fd1e 	bl	8000b4c <__aeabi_dcmpun>
 8003110:	b140      	cbz	r0, 8003124 <_vfprintf_r+0x440>
 8003112:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003114:	4a29      	ldr	r2, [pc, #164]	; (80031bc <_vfprintf_r+0x4d8>)
 8003116:	482a      	ldr	r0, [pc, #168]	; (80031c0 <_vfprintf_r+0x4dc>)
 8003118:	2b00      	cmp	r3, #0
 800311a:	bfbc      	itt	lt
 800311c:	232d      	movlt	r3, #45	; 0x2d
 800311e:	f88d 307b 	strblt.w	r3, [sp, #123]	; 0x7b
 8003122:	e7e0      	b.n	80030e6 <_vfprintf_r+0x402>
 8003124:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003126:	f023 0320 	bic.w	r3, r3, #32
 800312a:	2b41      	cmp	r3, #65	; 0x41
 800312c:	930c      	str	r3, [sp, #48]	; 0x30
 800312e:	d12e      	bne.n	800318e <_vfprintf_r+0x4aa>
 8003130:	2330      	movs	r3, #48	; 0x30
 8003132:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8003136:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003138:	2b61      	cmp	r3, #97	; 0x61
 800313a:	bf0c      	ite	eq
 800313c:	2378      	moveq	r3, #120	; 0x78
 800313e:	2358      	movne	r3, #88	; 0x58
 8003140:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 8003144:	9b07      	ldr	r3, [sp, #28]
 8003146:	2b63      	cmp	r3, #99	; 0x63
 8003148:	f04b 0b02 	orr.w	fp, fp, #2
 800314c:	dd3a      	ble.n	80031c4 <_vfprintf_r+0x4e0>
 800314e:	1c59      	adds	r1, r3, #1
 8003150:	4640      	mov	r0, r8
 8003152:	f002 faed 	bl	8005730 <_malloc_r>
 8003156:	4681      	mov	r9, r0
 8003158:	2800      	cmp	r0, #0
 800315a:	f040 81fd 	bne.w	8003558 <_vfprintf_r+0x874>
 800315e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8003162:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003166:	f8aa 300c 	strh.w	r3, [sl, #12]
 800316a:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 800316e:	07d9      	lsls	r1, r3, #31
 8003170:	d407      	bmi.n	8003182 <_vfprintf_r+0x49e>
 8003172:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8003176:	059a      	lsls	r2, r3, #22
 8003178:	d403      	bmi.n	8003182 <_vfprintf_r+0x49e>
 800317a:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 800317e:	f002 fa6a 	bl	8005656 <__retarget_lock_release_recursive>
 8003182:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8003186:	065b      	lsls	r3, r3, #25
 8003188:	f57f adf2 	bpl.w	8002d70 <_vfprintf_r+0x8c>
 800318c:	e5ed      	b.n	8002d6a <_vfprintf_r+0x86>
 800318e:	9b07      	ldr	r3, [sp, #28]
 8003190:	3301      	adds	r3, #1
 8003192:	f000 81e3 	beq.w	800355c <_vfprintf_r+0x878>
 8003196:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003198:	2b47      	cmp	r3, #71	; 0x47
 800319a:	f040 81e2 	bne.w	8003562 <_vfprintf_r+0x87e>
 800319e:	9b07      	ldr	r3, [sp, #28]
 80031a0:	2b00      	cmp	r3, #0
 80031a2:	f040 81de 	bne.w	8003562 <_vfprintf_r+0x87e>
 80031a6:	9308      	str	r3, [sp, #32]
 80031a8:	2301      	movs	r3, #1
 80031aa:	9307      	str	r3, [sp, #28]
 80031ac:	e00d      	b.n	80031ca <_vfprintf_r+0x4e6>
 80031ae:	bf00      	nop
 80031b0:	7fefffff 	.word	0x7fefffff
 80031b4:	08007cc0 	.word	0x08007cc0
 80031b8:	08007cc4 	.word	0x08007cc4
 80031bc:	08007cc8 	.word	0x08007cc8
 80031c0:	08007ccc 	.word	0x08007ccc
 80031c4:	9008      	str	r0, [sp, #32]
 80031c6:	f10d 09e4 	add.w	r9, sp, #228	; 0xe4
 80031ca:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
 80031ce:	9315      	str	r3, [sp, #84]	; 0x54
 80031d0:	e9dd 7310 	ldrd	r7, r3, [sp, #64]	; 0x40
 80031d4:	1e1d      	subs	r5, r3, #0
 80031d6:	bfb6      	itet	lt
 80031d8:	f103 4500 	addlt.w	r5, r3, #2147483648	; 0x80000000
 80031dc:	2300      	movge	r3, #0
 80031de:	232d      	movlt	r3, #45	; 0x2d
 80031e0:	931c      	str	r3, [sp, #112]	; 0x70
 80031e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80031e4:	2b41      	cmp	r3, #65	; 0x41
 80031e6:	f040 81d4 	bne.w	8003592 <_vfprintf_r+0x8ae>
 80031ea:	aa20      	add	r2, sp, #128	; 0x80
 80031ec:	4638      	mov	r0, r7
 80031ee:	4629      	mov	r1, r5
 80031f0:	f003 f9e2 	bl	80065b8 <frexp>
 80031f4:	2200      	movs	r2, #0
 80031f6:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80031fa:	f7fd fa0d 	bl	8000618 <__aeabi_dmul>
 80031fe:	2200      	movs	r2, #0
 8003200:	2300      	movs	r3, #0
 8003202:	4606      	mov	r6, r0
 8003204:	460f      	mov	r7, r1
 8003206:	f7fd fc6f 	bl	8000ae8 <__aeabi_dcmpeq>
 800320a:	b108      	cbz	r0, 8003210 <_vfprintf_r+0x52c>
 800320c:	2301      	movs	r3, #1
 800320e:	9320      	str	r3, [sp, #128]	; 0x80
 8003210:	4ba6      	ldr	r3, [pc, #664]	; (80034ac <_vfprintf_r+0x7c8>)
 8003212:	4aa7      	ldr	r2, [pc, #668]	; (80034b0 <_vfprintf_r+0x7cc>)
 8003214:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003216:	2961      	cmp	r1, #97	; 0x61
 8003218:	bf18      	it	ne
 800321a:	461a      	movne	r2, r3
 800321c:	9b07      	ldr	r3, [sp, #28]
 800321e:	921b      	str	r2, [sp, #108]	; 0x6c
 8003220:	3b01      	subs	r3, #1
 8003222:	9309      	str	r3, [sp, #36]	; 0x24
 8003224:	464d      	mov	r5, r9
 8003226:	4ba3      	ldr	r3, [pc, #652]	; (80034b4 <_vfprintf_r+0x7d0>)
 8003228:	2200      	movs	r2, #0
 800322a:	4630      	mov	r0, r6
 800322c:	4639      	mov	r1, r7
 800322e:	f7fd f9f3 	bl	8000618 <__aeabi_dmul>
 8003232:	460f      	mov	r7, r1
 8003234:	4606      	mov	r6, r0
 8003236:	f7fd fc9f 	bl	8000b78 <__aeabi_d2iz>
 800323a:	901d      	str	r0, [sp, #116]	; 0x74
 800323c:	f7fd f982 	bl	8000544 <__aeabi_i2d>
 8003240:	4602      	mov	r2, r0
 8003242:	460b      	mov	r3, r1
 8003244:	4630      	mov	r0, r6
 8003246:	4639      	mov	r1, r7
 8003248:	f7fd f82e 	bl	80002a8 <__aeabi_dsub>
 800324c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800324e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003250:	5c9b      	ldrb	r3, [r3, r2]
 8003252:	f805 3b01 	strb.w	r3, [r5], #1
 8003256:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003258:	930d      	str	r3, [sp, #52]	; 0x34
 800325a:	1c5a      	adds	r2, r3, #1
 800325c:	4606      	mov	r6, r0
 800325e:	460f      	mov	r7, r1
 8003260:	d007      	beq.n	8003272 <_vfprintf_r+0x58e>
 8003262:	3b01      	subs	r3, #1
 8003264:	9309      	str	r3, [sp, #36]	; 0x24
 8003266:	2200      	movs	r2, #0
 8003268:	2300      	movs	r3, #0
 800326a:	f7fd fc3d 	bl	8000ae8 <__aeabi_dcmpeq>
 800326e:	2800      	cmp	r0, #0
 8003270:	d0d9      	beq.n	8003226 <_vfprintf_r+0x542>
 8003272:	4b91      	ldr	r3, [pc, #580]	; (80034b8 <_vfprintf_r+0x7d4>)
 8003274:	2200      	movs	r2, #0
 8003276:	4630      	mov	r0, r6
 8003278:	4639      	mov	r1, r7
 800327a:	f7fd fc5d 	bl	8000b38 <__aeabi_dcmpgt>
 800327e:	b960      	cbnz	r0, 800329a <_vfprintf_r+0x5b6>
 8003280:	4b8d      	ldr	r3, [pc, #564]	; (80034b8 <_vfprintf_r+0x7d4>)
 8003282:	2200      	movs	r2, #0
 8003284:	4630      	mov	r0, r6
 8003286:	4639      	mov	r1, r7
 8003288:	f7fd fc2e 	bl	8000ae8 <__aeabi_dcmpeq>
 800328c:	2800      	cmp	r0, #0
 800328e:	f000 817b 	beq.w	8003588 <_vfprintf_r+0x8a4>
 8003292:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003294:	07da      	lsls	r2, r3, #31
 8003296:	f140 8177 	bpl.w	8003588 <_vfprintf_r+0x8a4>
 800329a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800329c:	9524      	str	r5, [sp, #144]	; 0x90
 800329e:	7bd9      	ldrb	r1, [r3, #15]
 80032a0:	2030      	movs	r0, #48	; 0x30
 80032a2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80032a4:	1e53      	subs	r3, r2, #1
 80032a6:	9324      	str	r3, [sp, #144]	; 0x90
 80032a8:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 80032ac:	428b      	cmp	r3, r1
 80032ae:	f000 815a 	beq.w	8003566 <_vfprintf_r+0x882>
 80032b2:	2b39      	cmp	r3, #57	; 0x39
 80032b4:	bf0b      	itete	eq
 80032b6:	9b1b      	ldreq	r3, [sp, #108]	; 0x6c
 80032b8:	3301      	addne	r3, #1
 80032ba:	7a9b      	ldrbeq	r3, [r3, #10]
 80032bc:	b2db      	uxtbne	r3, r3
 80032be:	f802 3c01 	strb.w	r3, [r2, #-1]
 80032c2:	eba5 0309 	sub.w	r3, r5, r9
 80032c6:	9309      	str	r3, [sp, #36]	; 0x24
 80032c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80032ca:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80032cc:	2b47      	cmp	r3, #71	; 0x47
 80032ce:	f040 81ad 	bne.w	800362c <_vfprintf_r+0x948>
 80032d2:	1ceb      	adds	r3, r5, #3
 80032d4:	db03      	blt.n	80032de <_vfprintf_r+0x5fa>
 80032d6:	9b07      	ldr	r3, [sp, #28]
 80032d8:	42ab      	cmp	r3, r5
 80032da:	f280 81d2 	bge.w	8003682 <_vfprintf_r+0x99e>
 80032de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80032e0:	3b02      	subs	r3, #2
 80032e2:	930a      	str	r3, [sp, #40]	; 0x28
 80032e4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80032e6:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 80032ea:	f021 0120 	bic.w	r1, r1, #32
 80032ee:	2941      	cmp	r1, #65	; 0x41
 80032f0:	bf08      	it	eq
 80032f2:	320f      	addeq	r2, #15
 80032f4:	f105 33ff 	add.w	r3, r5, #4294967295
 80032f8:	bf06      	itte	eq
 80032fa:	b2d2      	uxtbeq	r2, r2
 80032fc:	2101      	moveq	r1, #1
 80032fe:	2100      	movne	r1, #0
 8003300:	2b00      	cmp	r3, #0
 8003302:	9320      	str	r3, [sp, #128]	; 0x80
 8003304:	bfb8      	it	lt
 8003306:	f1c5 0301 	rsblt	r3, r5, #1
 800330a:	f88d 2088 	strb.w	r2, [sp, #136]	; 0x88
 800330e:	bfb4      	ite	lt
 8003310:	222d      	movlt	r2, #45	; 0x2d
 8003312:	222b      	movge	r2, #43	; 0x2b
 8003314:	2b09      	cmp	r3, #9
 8003316:	f88d 2089 	strb.w	r2, [sp, #137]	; 0x89
 800331a:	f340 81a0 	ble.w	800365e <_vfprintf_r+0x97a>
 800331e:	f10d 0297 	add.w	r2, sp, #151	; 0x97
 8003322:	260a      	movs	r6, #10
 8003324:	4611      	mov	r1, r2
 8003326:	fb93 f5f6 	sdiv	r5, r3, r6
 800332a:	fb06 3015 	mls	r0, r6, r5, r3
 800332e:	3030      	adds	r0, #48	; 0x30
 8003330:	f801 0c01 	strb.w	r0, [r1, #-1]
 8003334:	4618      	mov	r0, r3
 8003336:	2863      	cmp	r0, #99	; 0x63
 8003338:	f102 32ff 	add.w	r2, r2, #4294967295
 800333c:	462b      	mov	r3, r5
 800333e:	dcf1      	bgt.n	8003324 <_vfprintf_r+0x640>
 8003340:	3330      	adds	r3, #48	; 0x30
 8003342:	1e88      	subs	r0, r1, #2
 8003344:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003348:	f10d 0597 	add.w	r5, sp, #151	; 0x97
 800334c:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 8003350:	4603      	mov	r3, r0
 8003352:	42ab      	cmp	r3, r5
 8003354:	f0c0 817e 	bcc.w	8003654 <_vfprintf_r+0x970>
 8003358:	f10d 0299 	add.w	r2, sp, #153	; 0x99
 800335c:	1a52      	subs	r2, r2, r1
 800335e:	42a8      	cmp	r0, r5
 8003360:	bf88      	it	hi
 8003362:	2200      	movhi	r2, #0
 8003364:	f10d 038a 	add.w	r3, sp, #138	; 0x8a
 8003368:	441a      	add	r2, r3
 800336a:	ab22      	add	r3, sp, #136	; 0x88
 800336c:	1ad3      	subs	r3, r2, r3
 800336e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003370:	9319      	str	r3, [sp, #100]	; 0x64
 8003372:	2a01      	cmp	r2, #1
 8003374:	4413      	add	r3, r2
 8003376:	9307      	str	r3, [sp, #28]
 8003378:	dc02      	bgt.n	8003380 <_vfprintf_r+0x69c>
 800337a:	f01b 0f01 	tst.w	fp, #1
 800337e:	d003      	beq.n	8003388 <_vfprintf_r+0x6a4>
 8003380:	9b07      	ldr	r3, [sp, #28]
 8003382:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003384:	4413      	add	r3, r2
 8003386:	9307      	str	r3, [sp, #28]
 8003388:	f42b 6380 	bic.w	r3, fp, #1024	; 0x400
 800338c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003390:	9315      	str	r3, [sp, #84]	; 0x54
 8003392:	2300      	movs	r3, #0
 8003394:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 8003398:	461d      	mov	r5, r3
 800339a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800339c:	b113      	cbz	r3, 80033a4 <_vfprintf_r+0x6c0>
 800339e:	232d      	movs	r3, #45	; 0x2d
 80033a0:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 80033a4:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
 80033a8:	2600      	movs	r6, #0
 80033aa:	9b07      	ldr	r3, [sp, #28]
 80033ac:	42b3      	cmp	r3, r6
 80033ae:	bfb8      	it	lt
 80033b0:	4633      	movlt	r3, r6
 80033b2:	9315      	str	r3, [sp, #84]	; 0x54
 80033b4:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 80033b8:	b113      	cbz	r3, 80033c0 <_vfprintf_r+0x6dc>
 80033ba:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80033bc:	3301      	adds	r3, #1
 80033be:	9315      	str	r3, [sp, #84]	; 0x54
 80033c0:	f01b 0302 	ands.w	r3, fp, #2
 80033c4:	931b      	str	r3, [sp, #108]	; 0x6c
 80033c6:	bf1e      	ittt	ne
 80033c8:	9b15      	ldrne	r3, [sp, #84]	; 0x54
 80033ca:	3302      	addne	r3, #2
 80033cc:	9315      	strne	r3, [sp, #84]	; 0x54
 80033ce:	f01b 0384 	ands.w	r3, fp, #132	; 0x84
 80033d2:	931c      	str	r3, [sp, #112]	; 0x70
 80033d4:	d11f      	bne.n	8003416 <_vfprintf_r+0x732>
 80033d6:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 80033da:	1a9f      	subs	r7, r3, r2
 80033dc:	2f00      	cmp	r7, #0
 80033de:	dd1a      	ble.n	8003416 <_vfprintf_r+0x732>
 80033e0:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80033e4:	4835      	ldr	r0, [pc, #212]	; (80034bc <_vfprintf_r+0x7d8>)
 80033e6:	6020      	str	r0, [r4, #0]
 80033e8:	2f10      	cmp	r7, #16
 80033ea:	f103 0301 	add.w	r3, r3, #1
 80033ee:	f104 0108 	add.w	r1, r4, #8
 80033f2:	f300 82ea 	bgt.w	80039ca <_vfprintf_r+0xce6>
 80033f6:	443a      	add	r2, r7
 80033f8:	2b07      	cmp	r3, #7
 80033fa:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80033fe:	6067      	str	r7, [r4, #4]
 8003400:	f340 82f6 	ble.w	80039f0 <_vfprintf_r+0xd0c>
 8003404:	aa26      	add	r2, sp, #152	; 0x98
 8003406:	4651      	mov	r1, sl
 8003408:	4640      	mov	r0, r8
 800340a:	f003 f97c 	bl	8006706 <__sprint_r>
 800340e:	2800      	cmp	r0, #0
 8003410:	f040 8620 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003414:	ac29      	add	r4, sp, #164	; 0xa4
 8003416:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800341a:	b173      	cbz	r3, 800343a <_vfprintf_r+0x756>
 800341c:	f10d 037b 	add.w	r3, sp, #123	; 0x7b
 8003420:	6023      	str	r3, [r4, #0]
 8003422:	2301      	movs	r3, #1
 8003424:	6063      	str	r3, [r4, #4]
 8003426:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003428:	3301      	adds	r3, #1
 800342a:	9328      	str	r3, [sp, #160]	; 0xa0
 800342c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800342e:	3301      	adds	r3, #1
 8003430:	2b07      	cmp	r3, #7
 8003432:	9327      	str	r3, [sp, #156]	; 0x9c
 8003434:	f300 82de 	bgt.w	80039f4 <_vfprintf_r+0xd10>
 8003438:	3408      	adds	r4, #8
 800343a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800343c:	b16b      	cbz	r3, 800345a <_vfprintf_r+0x776>
 800343e:	ab1f      	add	r3, sp, #124	; 0x7c
 8003440:	6023      	str	r3, [r4, #0]
 8003442:	2302      	movs	r3, #2
 8003444:	6063      	str	r3, [r4, #4]
 8003446:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003448:	3302      	adds	r3, #2
 800344a:	9328      	str	r3, [sp, #160]	; 0xa0
 800344c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800344e:	3301      	adds	r3, #1
 8003450:	2b07      	cmp	r3, #7
 8003452:	9327      	str	r3, [sp, #156]	; 0x9c
 8003454:	f300 82d8 	bgt.w	8003a08 <_vfprintf_r+0xd24>
 8003458:	3408      	adds	r4, #8
 800345a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800345c:	2b80      	cmp	r3, #128	; 0x80
 800345e:	d11f      	bne.n	80034a0 <_vfprintf_r+0x7bc>
 8003460:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 8003464:	1a9f      	subs	r7, r3, r2
 8003466:	2f00      	cmp	r7, #0
 8003468:	dd1a      	ble.n	80034a0 <_vfprintf_r+0x7bc>
 800346a:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800346e:	4814      	ldr	r0, [pc, #80]	; (80034c0 <_vfprintf_r+0x7dc>)
 8003470:	6020      	str	r0, [r4, #0]
 8003472:	2f10      	cmp	r7, #16
 8003474:	f103 0301 	add.w	r3, r3, #1
 8003478:	f104 0108 	add.w	r1, r4, #8
 800347c:	f300 82ce 	bgt.w	8003a1c <_vfprintf_r+0xd38>
 8003480:	6067      	str	r7, [r4, #4]
 8003482:	2b07      	cmp	r3, #7
 8003484:	4417      	add	r7, r2
 8003486:	e9cd 3727 	strd	r3, r7, [sp, #156]	; 0x9c
 800348a:	f340 82da 	ble.w	8003a42 <_vfprintf_r+0xd5e>
 800348e:	aa26      	add	r2, sp, #152	; 0x98
 8003490:	4651      	mov	r1, sl
 8003492:	4640      	mov	r0, r8
 8003494:	f003 f937 	bl	8006706 <__sprint_r>
 8003498:	2800      	cmp	r0, #0
 800349a:	f040 85db 	bne.w	8004054 <_vfprintf_r+0x1370>
 800349e:	ac29      	add	r4, sp, #164	; 0xa4
 80034a0:	9b07      	ldr	r3, [sp, #28]
 80034a2:	1af6      	subs	r6, r6, r3
 80034a4:	2e00      	cmp	r6, #0
 80034a6:	dd27      	ble.n	80034f8 <_vfprintf_r+0x814>
 80034a8:	4f05      	ldr	r7, [pc, #20]	; (80034c0 <_vfprintf_r+0x7dc>)
 80034aa:	e00b      	b.n	80034c4 <_vfprintf_r+0x7e0>
 80034ac:	08007ce1 	.word	0x08007ce1
 80034b0:	08007cd0 	.word	0x08007cd0
 80034b4:	40300000 	.word	0x40300000
 80034b8:	3fe00000 	.word	0x3fe00000
 80034bc:	08007cf4 	.word	0x08007cf4
 80034c0:	08007d04 	.word	0x08007d04
 80034c4:	6027      	str	r7, [r4, #0]
 80034c6:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80034ca:	2e10      	cmp	r6, #16
 80034cc:	f103 0301 	add.w	r3, r3, #1
 80034d0:	f104 0108 	add.w	r1, r4, #8
 80034d4:	f300 82b7 	bgt.w	8003a46 <_vfprintf_r+0xd62>
 80034d8:	6066      	str	r6, [r4, #4]
 80034da:	2b07      	cmp	r3, #7
 80034dc:	4416      	add	r6, r2
 80034de:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80034e2:	f340 82c3 	ble.w	8003a6c <_vfprintf_r+0xd88>
 80034e6:	aa26      	add	r2, sp, #152	; 0x98
 80034e8:	4651      	mov	r1, sl
 80034ea:	4640      	mov	r0, r8
 80034ec:	f003 f90b 	bl	8006706 <__sprint_r>
 80034f0:	2800      	cmp	r0, #0
 80034f2:	f040 85af 	bne.w	8004054 <_vfprintf_r+0x1370>
 80034f6:	ac29      	add	r4, sp, #164	; 0xa4
 80034f8:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80034fc:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 80034fe:	f040 82bb 	bne.w	8003a78 <_vfprintf_r+0xd94>
 8003502:	9b07      	ldr	r3, [sp, #28]
 8003504:	f8c4 9000 	str.w	r9, [r4]
 8003508:	441e      	add	r6, r3
 800350a:	6063      	str	r3, [r4, #4]
 800350c:	9628      	str	r6, [sp, #160]	; 0xa0
 800350e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003510:	3301      	adds	r3, #1
 8003512:	2b07      	cmp	r3, #7
 8003514:	9327      	str	r3, [sp, #156]	; 0x9c
 8003516:	f300 82f4 	bgt.w	8003b02 <_vfprintf_r+0xe1e>
 800351a:	3408      	adds	r4, #8
 800351c:	f01b 0f04 	tst.w	fp, #4
 8003520:	f040 857a 	bne.w	8004018 <_vfprintf_r+0x1334>
 8003524:	e9dd 3213 	ldrd	r3, r2, [sp, #76]	; 0x4c
 8003528:	9915      	ldr	r1, [sp, #84]	; 0x54
 800352a:	428a      	cmp	r2, r1
 800352c:	bfac      	ite	ge
 800352e:	189b      	addge	r3, r3, r2
 8003530:	185b      	addlt	r3, r3, r1
 8003532:	9313      	str	r3, [sp, #76]	; 0x4c
 8003534:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003536:	b13b      	cbz	r3, 8003548 <_vfprintf_r+0x864>
 8003538:	aa26      	add	r2, sp, #152	; 0x98
 800353a:	4651      	mov	r1, sl
 800353c:	4640      	mov	r0, r8
 800353e:	f003 f8e2 	bl	8006706 <__sprint_r>
 8003542:	2800      	cmp	r0, #0
 8003544:	f040 8586 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003548:	2300      	movs	r3, #0
 800354a:	9327      	str	r3, [sp, #156]	; 0x9c
 800354c:	9b08      	ldr	r3, [sp, #32]
 800354e:	2b00      	cmp	r3, #0
 8003550:	f040 859c 	bne.w	800408c <_vfprintf_r+0x13a8>
 8003554:	ac29      	add	r4, sp, #164	; 0xa4
 8003556:	e0e9      	b.n	800372c <_vfprintf_r+0xa48>
 8003558:	9008      	str	r0, [sp, #32]
 800355a:	e636      	b.n	80031ca <_vfprintf_r+0x4e6>
 800355c:	9008      	str	r0, [sp, #32]
 800355e:	2306      	movs	r3, #6
 8003560:	e623      	b.n	80031aa <_vfprintf_r+0x4c6>
 8003562:	9008      	str	r0, [sp, #32]
 8003564:	e631      	b.n	80031ca <_vfprintf_r+0x4e6>
 8003566:	f802 0c01 	strb.w	r0, [r2, #-1]
 800356a:	e69a      	b.n	80032a2 <_vfprintf_r+0x5be>
 800356c:	f803 0b01 	strb.w	r0, [r3], #1
 8003570:	1aca      	subs	r2, r1, r3
 8003572:	2a00      	cmp	r2, #0
 8003574:	dafa      	bge.n	800356c <_vfprintf_r+0x888>
 8003576:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003578:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800357a:	3201      	adds	r2, #1
 800357c:	f103 0301 	add.w	r3, r3, #1
 8003580:	bfb8      	it	lt
 8003582:	2300      	movlt	r3, #0
 8003584:	441d      	add	r5, r3
 8003586:	e69c      	b.n	80032c2 <_vfprintf_r+0x5de>
 8003588:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800358a:	462b      	mov	r3, r5
 800358c:	18a9      	adds	r1, r5, r2
 800358e:	2030      	movs	r0, #48	; 0x30
 8003590:	e7ee      	b.n	8003570 <_vfprintf_r+0x88c>
 8003592:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003594:	2b46      	cmp	r3, #70	; 0x46
 8003596:	d005      	beq.n	80035a4 <_vfprintf_r+0x8c0>
 8003598:	2b45      	cmp	r3, #69	; 0x45
 800359a:	d11b      	bne.n	80035d4 <_vfprintf_r+0x8f0>
 800359c:	9b07      	ldr	r3, [sp, #28]
 800359e:	1c5e      	adds	r6, r3, #1
 80035a0:	2302      	movs	r3, #2
 80035a2:	e001      	b.n	80035a8 <_vfprintf_r+0x8c4>
 80035a4:	9e07      	ldr	r6, [sp, #28]
 80035a6:	2303      	movs	r3, #3
 80035a8:	aa24      	add	r2, sp, #144	; 0x90
 80035aa:	9204      	str	r2, [sp, #16]
 80035ac:	aa21      	add	r2, sp, #132	; 0x84
 80035ae:	9203      	str	r2, [sp, #12]
 80035b0:	aa20      	add	r2, sp, #128	; 0x80
 80035b2:	e9cd 6201 	strd	r6, r2, [sp, #4]
 80035b6:	9300      	str	r3, [sp, #0]
 80035b8:	463a      	mov	r2, r7
 80035ba:	462b      	mov	r3, r5
 80035bc:	4640      	mov	r0, r8
 80035be:	f000 fedf 	bl	8004380 <_dtoa_r>
 80035c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035c4:	2b47      	cmp	r3, #71	; 0x47
 80035c6:	4681      	mov	r9, r0
 80035c8:	d106      	bne.n	80035d8 <_vfprintf_r+0x8f4>
 80035ca:	f01b 0f01 	tst.w	fp, #1
 80035ce:	d103      	bne.n	80035d8 <_vfprintf_r+0x8f4>
 80035d0:	9d24      	ldr	r5, [sp, #144]	; 0x90
 80035d2:	e676      	b.n	80032c2 <_vfprintf_r+0x5de>
 80035d4:	9e07      	ldr	r6, [sp, #28]
 80035d6:	e7e3      	b.n	80035a0 <_vfprintf_r+0x8bc>
 80035d8:	eb09 0306 	add.w	r3, r9, r6
 80035dc:	9309      	str	r3, [sp, #36]	; 0x24
 80035de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035e0:	2b46      	cmp	r3, #70	; 0x46
 80035e2:	d111      	bne.n	8003608 <_vfprintf_r+0x924>
 80035e4:	f899 3000 	ldrb.w	r3, [r9]
 80035e8:	2b30      	cmp	r3, #48	; 0x30
 80035ea:	d109      	bne.n	8003600 <_vfprintf_r+0x91c>
 80035ec:	2200      	movs	r2, #0
 80035ee:	2300      	movs	r3, #0
 80035f0:	4638      	mov	r0, r7
 80035f2:	4629      	mov	r1, r5
 80035f4:	f7fd fa78 	bl	8000ae8 <__aeabi_dcmpeq>
 80035f8:	b910      	cbnz	r0, 8003600 <_vfprintf_r+0x91c>
 80035fa:	f1c6 0601 	rsb	r6, r6, #1
 80035fe:	9620      	str	r6, [sp, #128]	; 0x80
 8003600:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003602:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003604:	441a      	add	r2, r3
 8003606:	9209      	str	r2, [sp, #36]	; 0x24
 8003608:	2200      	movs	r2, #0
 800360a:	2300      	movs	r3, #0
 800360c:	4638      	mov	r0, r7
 800360e:	4629      	mov	r1, r5
 8003610:	f7fd fa6a 	bl	8000ae8 <__aeabi_dcmpeq>
 8003614:	b108      	cbz	r0, 800361a <_vfprintf_r+0x936>
 8003616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003618:	9324      	str	r3, [sp, #144]	; 0x90
 800361a:	2230      	movs	r2, #48	; 0x30
 800361c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800361e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003620:	4299      	cmp	r1, r3
 8003622:	d9d5      	bls.n	80035d0 <_vfprintf_r+0x8ec>
 8003624:	1c59      	adds	r1, r3, #1
 8003626:	9124      	str	r1, [sp, #144]	; 0x90
 8003628:	701a      	strb	r2, [r3, #0]
 800362a:	e7f7      	b.n	800361c <_vfprintf_r+0x938>
 800362c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800362e:	2b46      	cmp	r3, #70	; 0x46
 8003630:	f47f ae58 	bne.w	80032e4 <_vfprintf_r+0x600>
 8003634:	9a07      	ldr	r2, [sp, #28]
 8003636:	f00b 0301 	and.w	r3, fp, #1
 800363a:	2d00      	cmp	r5, #0
 800363c:	ea43 0302 	orr.w	r3, r3, r2
 8003640:	dd1a      	ble.n	8003678 <_vfprintf_r+0x994>
 8003642:	2b00      	cmp	r3, #0
 8003644:	d034      	beq.n	80036b0 <_vfprintf_r+0x9cc>
 8003646:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003648:	18eb      	adds	r3, r5, r3
 800364a:	441a      	add	r2, r3
 800364c:	9207      	str	r2, [sp, #28]
 800364e:	2366      	movs	r3, #102	; 0x66
 8003650:	930a      	str	r3, [sp, #40]	; 0x28
 8003652:	e033      	b.n	80036bc <_vfprintf_r+0x9d8>
 8003654:	f813 6b01 	ldrb.w	r6, [r3], #1
 8003658:	f802 6b01 	strb.w	r6, [r2], #1
 800365c:	e679      	b.n	8003352 <_vfprintf_r+0x66e>
 800365e:	b941      	cbnz	r1, 8003672 <_vfprintf_r+0x98e>
 8003660:	2230      	movs	r2, #48	; 0x30
 8003662:	f88d 208a 	strb.w	r2, [sp, #138]	; 0x8a
 8003666:	f10d 028b 	add.w	r2, sp, #139	; 0x8b
 800366a:	3330      	adds	r3, #48	; 0x30
 800366c:	f802 3b01 	strb.w	r3, [r2], #1
 8003670:	e67b      	b.n	800336a <_vfprintf_r+0x686>
 8003672:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 8003676:	e7f8      	b.n	800366a <_vfprintf_r+0x986>
 8003678:	b1e3      	cbz	r3, 80036b4 <_vfprintf_r+0x9d0>
 800367a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800367c:	9a07      	ldr	r2, [sp, #28]
 800367e:	3301      	adds	r3, #1
 8003680:	e7e3      	b.n	800364a <_vfprintf_r+0x966>
 8003682:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003684:	42ab      	cmp	r3, r5
 8003686:	dc07      	bgt.n	8003698 <_vfprintf_r+0x9b4>
 8003688:	f01b 0f01 	tst.w	fp, #1
 800368c:	d02d      	beq.n	80036ea <_vfprintf_r+0xa06>
 800368e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003690:	18eb      	adds	r3, r5, r3
 8003692:	9307      	str	r3, [sp, #28]
 8003694:	2367      	movs	r3, #103	; 0x67
 8003696:	e7db      	b.n	8003650 <_vfprintf_r+0x96c>
 8003698:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800369a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800369c:	2d00      	cmp	r5, #0
 800369e:	4413      	add	r3, r2
 80036a0:	9307      	str	r3, [sp, #28]
 80036a2:	dcf7      	bgt.n	8003694 <_vfprintf_r+0x9b0>
 80036a4:	9a07      	ldr	r2, [sp, #28]
 80036a6:	f1c5 0301 	rsb	r3, r5, #1
 80036aa:	441a      	add	r2, r3
 80036ac:	9207      	str	r2, [sp, #28]
 80036ae:	e7f1      	b.n	8003694 <_vfprintf_r+0x9b0>
 80036b0:	9507      	str	r5, [sp, #28]
 80036b2:	e7cc      	b.n	800364e <_vfprintf_r+0x96a>
 80036b4:	2366      	movs	r3, #102	; 0x66
 80036b6:	930a      	str	r3, [sp, #40]	; 0x28
 80036b8:	2301      	movs	r3, #1
 80036ba:	9307      	str	r3, [sp, #28]
 80036bc:	f41b 6380 	ands.w	r3, fp, #1024	; 0x400
 80036c0:	930d      	str	r3, [sp, #52]	; 0x34
 80036c2:	d025      	beq.n	8003710 <_vfprintf_r+0xa2c>
 80036c4:	2300      	movs	r3, #0
 80036c6:	2d00      	cmp	r5, #0
 80036c8:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 80036cc:	f77f ae65 	ble.w	800339a <_vfprintf_r+0x6b6>
 80036d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80036d2:	781b      	ldrb	r3, [r3, #0]
 80036d4:	2bff      	cmp	r3, #255	; 0xff
 80036d6:	d10a      	bne.n	80036ee <_vfprintf_r+0xa0a>
 80036d8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80036dc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80036de:	4413      	add	r3, r2
 80036e0:	9a07      	ldr	r2, [sp, #28]
 80036e2:	fb01 2303 	mla	r3, r1, r3, r2
 80036e6:	9307      	str	r3, [sp, #28]
 80036e8:	e657      	b.n	800339a <_vfprintf_r+0x6b6>
 80036ea:	9507      	str	r5, [sp, #28]
 80036ec:	e7d2      	b.n	8003694 <_vfprintf_r+0x9b0>
 80036ee:	42ab      	cmp	r3, r5
 80036f0:	daf2      	bge.n	80036d8 <_vfprintf_r+0x9f4>
 80036f2:	1aed      	subs	r5, r5, r3
 80036f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80036f6:	785b      	ldrb	r3, [r3, #1]
 80036f8:	b133      	cbz	r3, 8003708 <_vfprintf_r+0xa24>
 80036fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80036fc:	3301      	adds	r3, #1
 80036fe:	930d      	str	r3, [sp, #52]	; 0x34
 8003700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003702:	3301      	adds	r3, #1
 8003704:	930e      	str	r3, [sp, #56]	; 0x38
 8003706:	e7e3      	b.n	80036d0 <_vfprintf_r+0x9ec>
 8003708:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800370a:	3301      	adds	r3, #1
 800370c:	930c      	str	r3, [sp, #48]	; 0x30
 800370e:	e7df      	b.n	80036d0 <_vfprintf_r+0x9ec>
 8003710:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003712:	930c      	str	r3, [sp, #48]	; 0x30
 8003714:	e641      	b.n	800339a <_vfprintf_r+0x6b6>
 8003716:	1d33      	adds	r3, r6, #4
 8003718:	f01b 0f20 	tst.w	fp, #32
 800371c:	930b      	str	r3, [sp, #44]	; 0x2c
 800371e:	d00a      	beq.n	8003736 <_vfprintf_r+0xa52>
 8003720:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003722:	6833      	ldr	r3, [r6, #0]
 8003724:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003726:	17d2      	asrs	r2, r2, #31
 8003728:	e9c3 1200 	strd	r1, r2, [r3]
 800372c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800372e:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8003732:	f7ff bb57 	b.w	8002de4 <_vfprintf_r+0x100>
 8003736:	f01b 0f10 	tst.w	fp, #16
 800373a:	d003      	beq.n	8003744 <_vfprintf_r+0xa60>
 800373c:	6833      	ldr	r3, [r6, #0]
 800373e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003740:	601a      	str	r2, [r3, #0]
 8003742:	e7f3      	b.n	800372c <_vfprintf_r+0xa48>
 8003744:	f01b 0f40 	tst.w	fp, #64	; 0x40
 8003748:	d003      	beq.n	8003752 <_vfprintf_r+0xa6e>
 800374a:	6833      	ldr	r3, [r6, #0]
 800374c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800374e:	801a      	strh	r2, [r3, #0]
 8003750:	e7ec      	b.n	800372c <_vfprintf_r+0xa48>
 8003752:	f41b 7f00 	tst.w	fp, #512	; 0x200
 8003756:	d0f1      	beq.n	800373c <_vfprintf_r+0xa58>
 8003758:	6833      	ldr	r3, [r6, #0]
 800375a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800375c:	701a      	strb	r2, [r3, #0]
 800375e:	e7e5      	b.n	800372c <_vfprintf_r+0xa48>
 8003760:	f04b 0b10 	orr.w	fp, fp, #16
 8003764:	f01b 0320 	ands.w	r3, fp, #32
 8003768:	d01f      	beq.n	80037aa <_vfprintf_r+0xac6>
 800376a:	3607      	adds	r6, #7
 800376c:	f026 0307 	bic.w	r3, r6, #7
 8003770:	461a      	mov	r2, r3
 8003772:	685d      	ldr	r5, [r3, #4]
 8003774:	f852 6b08 	ldr.w	r6, [r2], #8
 8003778:	920b      	str	r2, [sp, #44]	; 0x2c
 800377a:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 800377e:	2300      	movs	r3, #0
 8003780:	2200      	movs	r2, #0
 8003782:	f88d 207b 	strb.w	r2, [sp, #123]	; 0x7b
 8003786:	9a07      	ldr	r2, [sp, #28]
 8003788:	3201      	adds	r2, #1
 800378a:	f000 8494 	beq.w	80040b6 <_vfprintf_r+0x13d2>
 800378e:	ea56 0205 	orrs.w	r2, r6, r5
 8003792:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
 8003796:	f040 8493 	bne.w	80040c0 <_vfprintf_r+0x13dc>
 800379a:	9a07      	ldr	r2, [sp, #28]
 800379c:	2a00      	cmp	r2, #0
 800379e:	f000 80fa 	beq.w	8003996 <_vfprintf_r+0xcb2>
 80037a2:	2b01      	cmp	r3, #1
 80037a4:	f040 848f 	bne.w	80040c6 <_vfprintf_r+0x13e2>
 80037a8:	e09f      	b.n	80038ea <_vfprintf_r+0xc06>
 80037aa:	4632      	mov	r2, r6
 80037ac:	f01b 0510 	ands.w	r5, fp, #16
 80037b0:	f852 6b04 	ldr.w	r6, [r2], #4
 80037b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80037b6:	d001      	beq.n	80037bc <_vfprintf_r+0xad8>
 80037b8:	461d      	mov	r5, r3
 80037ba:	e7de      	b.n	800377a <_vfprintf_r+0xa96>
 80037bc:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 80037c0:	d001      	beq.n	80037c6 <_vfprintf_r+0xae2>
 80037c2:	b2b6      	uxth	r6, r6
 80037c4:	e7d9      	b.n	800377a <_vfprintf_r+0xa96>
 80037c6:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 80037ca:	d0d6      	beq.n	800377a <_vfprintf_r+0xa96>
 80037cc:	b2f6      	uxtb	r6, r6
 80037ce:	e7f3      	b.n	80037b8 <_vfprintf_r+0xad4>
 80037d0:	4633      	mov	r3, r6
 80037d2:	2278      	movs	r2, #120	; 0x78
 80037d4:	f853 6b04 	ldr.w	r6, [r3], #4
 80037d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80037da:	2330      	movs	r3, #48	; 0x30
 80037dc:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 80037e0:	4ba3      	ldr	r3, [pc, #652]	; (8003a70 <_vfprintf_r+0xd8c>)
 80037e2:	931a      	str	r3, [sp, #104]	; 0x68
 80037e4:	2500      	movs	r5, #0
 80037e6:	f04b 0b02 	orr.w	fp, fp, #2
 80037ea:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
 80037ee:	2302      	movs	r3, #2
 80037f0:	920a      	str	r2, [sp, #40]	; 0x28
 80037f2:	e7c5      	b.n	8003780 <_vfprintf_r+0xa9c>
 80037f4:	4633      	mov	r3, r6
 80037f6:	2500      	movs	r5, #0
 80037f8:	f853 9b04 	ldr.w	r9, [r3], #4
 80037fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80037fe:	9b07      	ldr	r3, [sp, #28]
 8003800:	f88d 507b 	strb.w	r5, [sp, #123]	; 0x7b
 8003804:	1c5e      	adds	r6, r3, #1
 8003806:	d010      	beq.n	800382a <_vfprintf_r+0xb46>
 8003808:	461a      	mov	r2, r3
 800380a:	4629      	mov	r1, r5
 800380c:	4648      	mov	r0, r9
 800380e:	f7fc fcf7 	bl	8000200 <memchr>
 8003812:	9008      	str	r0, [sp, #32]
 8003814:	2800      	cmp	r0, #0
 8003816:	f000 80d5 	beq.w	80039c4 <_vfprintf_r+0xce0>
 800381a:	eba0 0309 	sub.w	r3, r0, r9
 800381e:	e9cd 3507 	strd	r3, r5, [sp, #28]
 8003822:	e9cd 550c 	strd	r5, r5, [sp, #48]	; 0x30
 8003826:	462e      	mov	r6, r5
 8003828:	e5bf      	b.n	80033aa <_vfprintf_r+0x6c6>
 800382a:	4648      	mov	r0, r9
 800382c:	f7fc fce0 	bl	80001f0 <strlen>
 8003830:	e9cd 0507 	strd	r0, r5, [sp, #28]
 8003834:	e462      	b.n	80030fc <_vfprintf_r+0x418>
 8003836:	f04b 0b10 	orr.w	fp, fp, #16
 800383a:	f01b 0320 	ands.w	r3, fp, #32
 800383e:	d009      	beq.n	8003854 <_vfprintf_r+0xb70>
 8003840:	3607      	adds	r6, #7
 8003842:	f026 0307 	bic.w	r3, r6, #7
 8003846:	461a      	mov	r2, r3
 8003848:	685d      	ldr	r5, [r3, #4]
 800384a:	f852 6b08 	ldr.w	r6, [r2], #8
 800384e:	920b      	str	r2, [sp, #44]	; 0x2c
 8003850:	2301      	movs	r3, #1
 8003852:	e795      	b.n	8003780 <_vfprintf_r+0xa9c>
 8003854:	4632      	mov	r2, r6
 8003856:	f01b 0510 	ands.w	r5, fp, #16
 800385a:	f852 6b04 	ldr.w	r6, [r2], #4
 800385e:	920b      	str	r2, [sp, #44]	; 0x2c
 8003860:	d001      	beq.n	8003866 <_vfprintf_r+0xb82>
 8003862:	461d      	mov	r5, r3
 8003864:	e7f4      	b.n	8003850 <_vfprintf_r+0xb6c>
 8003866:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 800386a:	d001      	beq.n	8003870 <_vfprintf_r+0xb8c>
 800386c:	b2b6      	uxth	r6, r6
 800386e:	e7ef      	b.n	8003850 <_vfprintf_r+0xb6c>
 8003870:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 8003874:	d0ec      	beq.n	8003850 <_vfprintf_r+0xb6c>
 8003876:	b2f6      	uxtb	r6, r6
 8003878:	e7f3      	b.n	8003862 <_vfprintf_r+0xb7e>
 800387a:	4b7e      	ldr	r3, [pc, #504]	; (8003a74 <_vfprintf_r+0xd90>)
 800387c:	931a      	str	r3, [sp, #104]	; 0x68
 800387e:	f01b 0320 	ands.w	r3, fp, #32
 8003882:	d01b      	beq.n	80038bc <_vfprintf_r+0xbd8>
 8003884:	3607      	adds	r6, #7
 8003886:	f026 0307 	bic.w	r3, r6, #7
 800388a:	461a      	mov	r2, r3
 800388c:	685d      	ldr	r5, [r3, #4]
 800388e:	f852 6b08 	ldr.w	r6, [r2], #8
 8003892:	920b      	str	r2, [sp, #44]	; 0x2c
 8003894:	f01b 0f01 	tst.w	fp, #1
 8003898:	d00a      	beq.n	80038b0 <_vfprintf_r+0xbcc>
 800389a:	ea56 0305 	orrs.w	r3, r6, r5
 800389e:	d007      	beq.n	80038b0 <_vfprintf_r+0xbcc>
 80038a0:	2330      	movs	r3, #48	; 0x30
 80038a2:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 80038a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80038a8:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 80038ac:	f04b 0b02 	orr.w	fp, fp, #2
 80038b0:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 80038b4:	2302      	movs	r3, #2
 80038b6:	e763      	b.n	8003780 <_vfprintf_r+0xa9c>
 80038b8:	4b6d      	ldr	r3, [pc, #436]	; (8003a70 <_vfprintf_r+0xd8c>)
 80038ba:	e7df      	b.n	800387c <_vfprintf_r+0xb98>
 80038bc:	4632      	mov	r2, r6
 80038be:	f01b 0510 	ands.w	r5, fp, #16
 80038c2:	f852 6b04 	ldr.w	r6, [r2], #4
 80038c6:	920b      	str	r2, [sp, #44]	; 0x2c
 80038c8:	d001      	beq.n	80038ce <_vfprintf_r+0xbea>
 80038ca:	461d      	mov	r5, r3
 80038cc:	e7e2      	b.n	8003894 <_vfprintf_r+0xbb0>
 80038ce:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 80038d2:	d001      	beq.n	80038d8 <_vfprintf_r+0xbf4>
 80038d4:	b2b6      	uxth	r6, r6
 80038d6:	e7dd      	b.n	8003894 <_vfprintf_r+0xbb0>
 80038d8:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 80038dc:	d0da      	beq.n	8003894 <_vfprintf_r+0xbb0>
 80038de:	b2f6      	uxtb	r6, r6
 80038e0:	e7f3      	b.n	80038ca <_vfprintf_r+0xbe6>
 80038e2:	2e0a      	cmp	r6, #10
 80038e4:	f175 0300 	sbcs.w	r3, r5, #0
 80038e8:	d206      	bcs.n	80038f8 <_vfprintf_r+0xc14>
 80038ea:	3630      	adds	r6, #48	; 0x30
 80038ec:	f88d 6147 	strb.w	r6, [sp, #327]	; 0x147
 80038f0:	f20d 1947 	addw	r9, sp, #327	; 0x147
 80038f4:	f000 bc02 	b.w	80040fc <_vfprintf_r+0x1418>
 80038f8:	2300      	movs	r3, #0
 80038fa:	9309      	str	r3, [sp, #36]	; 0x24
 80038fc:	f407 6380 	and.w	r3, r7, #1024	; 0x400
 8003900:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 8003904:	9308      	str	r3, [sp, #32]
 8003906:	220a      	movs	r2, #10
 8003908:	2300      	movs	r3, #0
 800390a:	4630      	mov	r0, r6
 800390c:	4629      	mov	r1, r5
 800390e:	f7fd f95b 	bl	8000bc8 <__aeabi_uldivmod>
 8003912:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003914:	3301      	adds	r3, #1
 8003916:	9309      	str	r3, [sp, #36]	; 0x24
 8003918:	9b08      	ldr	r3, [sp, #32]
 800391a:	3230      	adds	r2, #48	; 0x30
 800391c:	f10b 39ff 	add.w	r9, fp, #4294967295
 8003920:	f80b 2c01 	strb.w	r2, [fp, #-1]
 8003924:	b1d3      	cbz	r3, 800395c <_vfprintf_r+0xc78>
 8003926:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003928:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800392a:	781b      	ldrb	r3, [r3, #0]
 800392c:	429a      	cmp	r2, r3
 800392e:	d115      	bne.n	800395c <_vfprintf_r+0xc78>
 8003930:	2aff      	cmp	r2, #255	; 0xff
 8003932:	d013      	beq.n	800395c <_vfprintf_r+0xc78>
 8003934:	2e0a      	cmp	r6, #10
 8003936:	f175 0300 	sbcs.w	r3, r5, #0
 800393a:	d30f      	bcc.n	800395c <_vfprintf_r+0xc78>
 800393c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800393e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003940:	eba9 0903 	sub.w	r9, r9, r3
 8003944:	461a      	mov	r2, r3
 8003946:	4648      	mov	r0, r9
 8003948:	f002 febd 	bl	80066c6 <strncpy>
 800394c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800394e:	785b      	ldrb	r3, [r3, #1]
 8003950:	b11b      	cbz	r3, 800395a <_vfprintf_r+0xc76>
 8003952:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003954:	3301      	adds	r3, #1
 8003956:	930e      	str	r3, [sp, #56]	; 0x38
 8003958:	2300      	movs	r3, #0
 800395a:	9309      	str	r3, [sp, #36]	; 0x24
 800395c:	2300      	movs	r3, #0
 800395e:	220a      	movs	r2, #10
 8003960:	4630      	mov	r0, r6
 8003962:	4629      	mov	r1, r5
 8003964:	f7fd f930 	bl	8000bc8 <__aeabi_uldivmod>
 8003968:	2e0a      	cmp	r6, #10
 800396a:	f175 0300 	sbcs.w	r3, r5, #0
 800396e:	f0c0 83c5 	bcc.w	80040fc <_vfprintf_r+0x1418>
 8003972:	4606      	mov	r6, r0
 8003974:	460d      	mov	r5, r1
 8003976:	46cb      	mov	fp, r9
 8003978:	e7c5      	b.n	8003906 <_vfprintf_r+0xc22>
 800397a:	f006 030f 	and.w	r3, r6, #15
 800397e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8003980:	0936      	lsrs	r6, r6, #4
 8003982:	5cd3      	ldrb	r3, [r2, r3]
 8003984:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8003988:	ea46 7605 	orr.w	r6, r6, r5, lsl #28
 800398c:	092d      	lsrs	r5, r5, #4
 800398e:	ea56 0305 	orrs.w	r3, r6, r5
 8003992:	d1f2      	bne.n	800397a <_vfprintf_r+0xc96>
 8003994:	e3b2      	b.n	80040fc <_vfprintf_r+0x1418>
 8003996:	b933      	cbnz	r3, 80039a6 <_vfprintf_r+0xcc2>
 8003998:	f01b 0f01 	tst.w	fp, #1
 800399c:	d003      	beq.n	80039a6 <_vfprintf_r+0xcc2>
 800399e:	2330      	movs	r3, #48	; 0x30
 80039a0:	f88d 3147 	strb.w	r3, [sp, #327]	; 0x147
 80039a4:	e7a4      	b.n	80038f0 <_vfprintf_r+0xc0c>
 80039a6:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 80039aa:	e3a7      	b.n	80040fc <_vfprintf_r+0x1418>
 80039ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	f000 8372 	beq.w	8004098 <_vfprintf_r+0x13b4>
 80039b4:	2000      	movs	r0, #0
 80039b6:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 80039ba:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 80039be:	960b      	str	r6, [sp, #44]	; 0x2c
 80039c0:	f7ff bb2e 	b.w	8003020 <_vfprintf_r+0x33c>
 80039c4:	9e08      	ldr	r6, [sp, #32]
 80039c6:	f7ff bb9a 	b.w	80030fe <_vfprintf_r+0x41a>
 80039ca:	2010      	movs	r0, #16
 80039cc:	4402      	add	r2, r0
 80039ce:	2b07      	cmp	r3, #7
 80039d0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80039d4:	6060      	str	r0, [r4, #4]
 80039d6:	dd08      	ble.n	80039ea <_vfprintf_r+0xd06>
 80039d8:	aa26      	add	r2, sp, #152	; 0x98
 80039da:	4651      	mov	r1, sl
 80039dc:	4640      	mov	r0, r8
 80039de:	f002 fe92 	bl	8006706 <__sprint_r>
 80039e2:	2800      	cmp	r0, #0
 80039e4:	f040 8336 	bne.w	8004054 <_vfprintf_r+0x1370>
 80039e8:	a929      	add	r1, sp, #164	; 0xa4
 80039ea:	3f10      	subs	r7, #16
 80039ec:	460c      	mov	r4, r1
 80039ee:	e4f7      	b.n	80033e0 <_vfprintf_r+0x6fc>
 80039f0:	460c      	mov	r4, r1
 80039f2:	e510      	b.n	8003416 <_vfprintf_r+0x732>
 80039f4:	aa26      	add	r2, sp, #152	; 0x98
 80039f6:	4651      	mov	r1, sl
 80039f8:	4640      	mov	r0, r8
 80039fa:	f002 fe84 	bl	8006706 <__sprint_r>
 80039fe:	2800      	cmp	r0, #0
 8003a00:	f040 8328 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003a04:	ac29      	add	r4, sp, #164	; 0xa4
 8003a06:	e518      	b.n	800343a <_vfprintf_r+0x756>
 8003a08:	aa26      	add	r2, sp, #152	; 0x98
 8003a0a:	4651      	mov	r1, sl
 8003a0c:	4640      	mov	r0, r8
 8003a0e:	f002 fe7a 	bl	8006706 <__sprint_r>
 8003a12:	2800      	cmp	r0, #0
 8003a14:	f040 831e 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003a18:	ac29      	add	r4, sp, #164	; 0xa4
 8003a1a:	e51e      	b.n	800345a <_vfprintf_r+0x776>
 8003a1c:	2010      	movs	r0, #16
 8003a1e:	4402      	add	r2, r0
 8003a20:	2b07      	cmp	r3, #7
 8003a22:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003a26:	6060      	str	r0, [r4, #4]
 8003a28:	dd08      	ble.n	8003a3c <_vfprintf_r+0xd58>
 8003a2a:	aa26      	add	r2, sp, #152	; 0x98
 8003a2c:	4651      	mov	r1, sl
 8003a2e:	4640      	mov	r0, r8
 8003a30:	f002 fe69 	bl	8006706 <__sprint_r>
 8003a34:	2800      	cmp	r0, #0
 8003a36:	f040 830d 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003a3a:	a929      	add	r1, sp, #164	; 0xa4
 8003a3c:	3f10      	subs	r7, #16
 8003a3e:	460c      	mov	r4, r1
 8003a40:	e513      	b.n	800346a <_vfprintf_r+0x786>
 8003a42:	460c      	mov	r4, r1
 8003a44:	e52c      	b.n	80034a0 <_vfprintf_r+0x7bc>
 8003a46:	2010      	movs	r0, #16
 8003a48:	4402      	add	r2, r0
 8003a4a:	2b07      	cmp	r3, #7
 8003a4c:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003a50:	6060      	str	r0, [r4, #4]
 8003a52:	dd08      	ble.n	8003a66 <_vfprintf_r+0xd82>
 8003a54:	aa26      	add	r2, sp, #152	; 0x98
 8003a56:	4651      	mov	r1, sl
 8003a58:	4640      	mov	r0, r8
 8003a5a:	f002 fe54 	bl	8006706 <__sprint_r>
 8003a5e:	2800      	cmp	r0, #0
 8003a60:	f040 82f8 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003a64:	a929      	add	r1, sp, #164	; 0xa4
 8003a66:	3e10      	subs	r6, #16
 8003a68:	460c      	mov	r4, r1
 8003a6a:	e52b      	b.n	80034c4 <_vfprintf_r+0x7e0>
 8003a6c:	460c      	mov	r4, r1
 8003a6e:	e543      	b.n	80034f8 <_vfprintf_r+0x814>
 8003a70:	08007cd0 	.word	0x08007cd0
 8003a74:	08007ce1 	.word	0x08007ce1
 8003a78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a7a:	2b65      	cmp	r3, #101	; 0x65
 8003a7c:	f340 8232 	ble.w	8003ee4 <_vfprintf_r+0x1200>
 8003a80:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003a84:	2200      	movs	r2, #0
 8003a86:	2300      	movs	r3, #0
 8003a88:	f7fd f82e 	bl	8000ae8 <__aeabi_dcmpeq>
 8003a8c:	2800      	cmp	r0, #0
 8003a8e:	d068      	beq.n	8003b62 <_vfprintf_r+0xe7e>
 8003a90:	4b6d      	ldr	r3, [pc, #436]	; (8003c48 <_vfprintf_r+0xf64>)
 8003a92:	6023      	str	r3, [r4, #0]
 8003a94:	2301      	movs	r3, #1
 8003a96:	441e      	add	r6, r3
 8003a98:	6063      	str	r3, [r4, #4]
 8003a9a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003a9c:	9628      	str	r6, [sp, #160]	; 0xa0
 8003a9e:	3301      	adds	r3, #1
 8003aa0:	2b07      	cmp	r3, #7
 8003aa2:	9327      	str	r3, [sp, #156]	; 0x9c
 8003aa4:	dc37      	bgt.n	8003b16 <_vfprintf_r+0xe32>
 8003aa6:	3408      	adds	r4, #8
 8003aa8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003aaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003aac:	4293      	cmp	r3, r2
 8003aae:	db03      	blt.n	8003ab8 <_vfprintf_r+0xdd4>
 8003ab0:	f01b 0f01 	tst.w	fp, #1
 8003ab4:	f43f ad32 	beq.w	800351c <_vfprintf_r+0x838>
 8003ab8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003aba:	6023      	str	r3, [r4, #0]
 8003abc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003abe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003ac0:	6063      	str	r3, [r4, #4]
 8003ac2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003ac4:	4413      	add	r3, r2
 8003ac6:	9328      	str	r3, [sp, #160]	; 0xa0
 8003ac8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003aca:	3301      	adds	r3, #1
 8003acc:	2b07      	cmp	r3, #7
 8003ace:	9327      	str	r3, [sp, #156]	; 0x9c
 8003ad0:	dc2b      	bgt.n	8003b2a <_vfprintf_r+0xe46>
 8003ad2:	3408      	adds	r4, #8
 8003ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ad6:	1e5d      	subs	r5, r3, #1
 8003ad8:	2d00      	cmp	r5, #0
 8003ada:	f77f ad1f 	ble.w	800351c <_vfprintf_r+0x838>
 8003ade:	4e5b      	ldr	r6, [pc, #364]	; (8003c4c <_vfprintf_r+0xf68>)
 8003ae0:	2710      	movs	r7, #16
 8003ae2:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003ae6:	2d10      	cmp	r5, #16
 8003ae8:	f103 0301 	add.w	r3, r3, #1
 8003aec:	f104 0108 	add.w	r1, r4, #8
 8003af0:	6026      	str	r6, [r4, #0]
 8003af2:	dc24      	bgt.n	8003b3e <_vfprintf_r+0xe5a>
 8003af4:	442a      	add	r2, r5
 8003af6:	6065      	str	r5, [r4, #4]
 8003af8:	9228      	str	r2, [sp, #160]	; 0xa0
 8003afa:	2b07      	cmp	r3, #7
 8003afc:	9327      	str	r3, [sp, #156]	; 0x9c
 8003afe:	f340 8288 	ble.w	8004012 <_vfprintf_r+0x132e>
 8003b02:	aa26      	add	r2, sp, #152	; 0x98
 8003b04:	4651      	mov	r1, sl
 8003b06:	4640      	mov	r0, r8
 8003b08:	f002 fdfd 	bl	8006706 <__sprint_r>
 8003b0c:	2800      	cmp	r0, #0
 8003b0e:	f040 82a1 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003b12:	ac29      	add	r4, sp, #164	; 0xa4
 8003b14:	e502      	b.n	800351c <_vfprintf_r+0x838>
 8003b16:	aa26      	add	r2, sp, #152	; 0x98
 8003b18:	4651      	mov	r1, sl
 8003b1a:	4640      	mov	r0, r8
 8003b1c:	f002 fdf3 	bl	8006706 <__sprint_r>
 8003b20:	2800      	cmp	r0, #0
 8003b22:	f040 8297 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003b26:	ac29      	add	r4, sp, #164	; 0xa4
 8003b28:	e7be      	b.n	8003aa8 <_vfprintf_r+0xdc4>
 8003b2a:	aa26      	add	r2, sp, #152	; 0x98
 8003b2c:	4651      	mov	r1, sl
 8003b2e:	4640      	mov	r0, r8
 8003b30:	f002 fde9 	bl	8006706 <__sprint_r>
 8003b34:	2800      	cmp	r0, #0
 8003b36:	f040 828d 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003b3a:	ac29      	add	r4, sp, #164	; 0xa4
 8003b3c:	e7ca      	b.n	8003ad4 <_vfprintf_r+0xdf0>
 8003b3e:	3210      	adds	r2, #16
 8003b40:	2b07      	cmp	r3, #7
 8003b42:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003b46:	6067      	str	r7, [r4, #4]
 8003b48:	dd08      	ble.n	8003b5c <_vfprintf_r+0xe78>
 8003b4a:	aa26      	add	r2, sp, #152	; 0x98
 8003b4c:	4651      	mov	r1, sl
 8003b4e:	4640      	mov	r0, r8
 8003b50:	f002 fdd9 	bl	8006706 <__sprint_r>
 8003b54:	2800      	cmp	r0, #0
 8003b56:	f040 827d 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003b5a:	a929      	add	r1, sp, #164	; 0xa4
 8003b5c:	3d10      	subs	r5, #16
 8003b5e:	460c      	mov	r4, r1
 8003b60:	e7bf      	b.n	8003ae2 <_vfprintf_r+0xdfe>
 8003b62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	dc73      	bgt.n	8003c50 <_vfprintf_r+0xf6c>
 8003b68:	4b37      	ldr	r3, [pc, #220]	; (8003c48 <_vfprintf_r+0xf64>)
 8003b6a:	6023      	str	r3, [r4, #0]
 8003b6c:	2301      	movs	r3, #1
 8003b6e:	441e      	add	r6, r3
 8003b70:	6063      	str	r3, [r4, #4]
 8003b72:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003b74:	9628      	str	r6, [sp, #160]	; 0xa0
 8003b76:	3301      	adds	r3, #1
 8003b78:	2b07      	cmp	r3, #7
 8003b7a:	9327      	str	r3, [sp, #156]	; 0x9c
 8003b7c:	dc3d      	bgt.n	8003bfa <_vfprintf_r+0xf16>
 8003b7e:	3408      	adds	r4, #8
 8003b80:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003b82:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003b84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003b86:	430a      	orrs	r2, r1
 8003b88:	f00b 0101 	and.w	r1, fp, #1
 8003b8c:	430a      	orrs	r2, r1
 8003b8e:	f43f acc5 	beq.w	800351c <_vfprintf_r+0x838>
 8003b92:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003b94:	6022      	str	r2, [r4, #0]
 8003b96:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003b98:	6062      	str	r2, [r4, #4]
 8003b9a:	4413      	add	r3, r2
 8003b9c:	9328      	str	r3, [sp, #160]	; 0xa0
 8003b9e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003ba0:	3301      	adds	r3, #1
 8003ba2:	2b07      	cmp	r3, #7
 8003ba4:	9327      	str	r3, [sp, #156]	; 0x9c
 8003ba6:	dc32      	bgt.n	8003c0e <_vfprintf_r+0xf2a>
 8003ba8:	3408      	adds	r4, #8
 8003baa:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8003bac:	2d00      	cmp	r5, #0
 8003bae:	da1b      	bge.n	8003be8 <_vfprintf_r+0xf04>
 8003bb0:	4e26      	ldr	r6, [pc, #152]	; (8003c4c <_vfprintf_r+0xf68>)
 8003bb2:	426d      	negs	r5, r5
 8003bb4:	4623      	mov	r3, r4
 8003bb6:	2710      	movs	r7, #16
 8003bb8:	e9dd 2127 	ldrd	r2, r1, [sp, #156]	; 0x9c
 8003bbc:	2d10      	cmp	r5, #16
 8003bbe:	f102 0201 	add.w	r2, r2, #1
 8003bc2:	f104 0408 	add.w	r4, r4, #8
 8003bc6:	601e      	str	r6, [r3, #0]
 8003bc8:	dc2b      	bgt.n	8003c22 <_vfprintf_r+0xf3e>
 8003bca:	605d      	str	r5, [r3, #4]
 8003bcc:	2a07      	cmp	r2, #7
 8003bce:	440d      	add	r5, r1
 8003bd0:	e9cd 2527 	strd	r2, r5, [sp, #156]	; 0x9c
 8003bd4:	dd08      	ble.n	8003be8 <_vfprintf_r+0xf04>
 8003bd6:	aa26      	add	r2, sp, #152	; 0x98
 8003bd8:	4651      	mov	r1, sl
 8003bda:	4640      	mov	r0, r8
 8003bdc:	f002 fd93 	bl	8006706 <__sprint_r>
 8003be0:	2800      	cmp	r0, #0
 8003be2:	f040 8237 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003be6:	ac29      	add	r4, sp, #164	; 0xa4
 8003be8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003bea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003bec:	6063      	str	r3, [r4, #4]
 8003bee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003bf0:	f8c4 9000 	str.w	r9, [r4]
 8003bf4:	4413      	add	r3, r2
 8003bf6:	9328      	str	r3, [sp, #160]	; 0xa0
 8003bf8:	e489      	b.n	800350e <_vfprintf_r+0x82a>
 8003bfa:	aa26      	add	r2, sp, #152	; 0x98
 8003bfc:	4651      	mov	r1, sl
 8003bfe:	4640      	mov	r0, r8
 8003c00:	f002 fd81 	bl	8006706 <__sprint_r>
 8003c04:	2800      	cmp	r0, #0
 8003c06:	f040 8225 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003c0a:	ac29      	add	r4, sp, #164	; 0xa4
 8003c0c:	e7b8      	b.n	8003b80 <_vfprintf_r+0xe9c>
 8003c0e:	aa26      	add	r2, sp, #152	; 0x98
 8003c10:	4651      	mov	r1, sl
 8003c12:	4640      	mov	r0, r8
 8003c14:	f002 fd77 	bl	8006706 <__sprint_r>
 8003c18:	2800      	cmp	r0, #0
 8003c1a:	f040 821b 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003c1e:	ac29      	add	r4, sp, #164	; 0xa4
 8003c20:	e7c3      	b.n	8003baa <_vfprintf_r+0xec6>
 8003c22:	3110      	adds	r1, #16
 8003c24:	2a07      	cmp	r2, #7
 8003c26:	e9cd 2127 	strd	r2, r1, [sp, #156]	; 0x9c
 8003c2a:	605f      	str	r7, [r3, #4]
 8003c2c:	dd08      	ble.n	8003c40 <_vfprintf_r+0xf5c>
 8003c2e:	aa26      	add	r2, sp, #152	; 0x98
 8003c30:	4651      	mov	r1, sl
 8003c32:	4640      	mov	r0, r8
 8003c34:	f002 fd67 	bl	8006706 <__sprint_r>
 8003c38:	2800      	cmp	r0, #0
 8003c3a:	f040 820b 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003c3e:	ac29      	add	r4, sp, #164	; 0xa4
 8003c40:	3d10      	subs	r5, #16
 8003c42:	4623      	mov	r3, r4
 8003c44:	e7b8      	b.n	8003bb8 <_vfprintf_r+0xed4>
 8003c46:	bf00      	nop
 8003c48:	08007cf2 	.word	0x08007cf2
 8003c4c:	08007d04 	.word	0x08007d04
 8003c50:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8003c52:	42af      	cmp	r7, r5
 8003c54:	bfa8      	it	ge
 8003c56:	462f      	movge	r7, r5
 8003c58:	2f00      	cmp	r7, #0
 8003c5a:	dd09      	ble.n	8003c70 <_vfprintf_r+0xf8c>
 8003c5c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003c5e:	3301      	adds	r3, #1
 8003c60:	443e      	add	r6, r7
 8003c62:	2b07      	cmp	r3, #7
 8003c64:	e9c4 9700 	strd	r9, r7, [r4]
 8003c68:	9628      	str	r6, [sp, #160]	; 0xa0
 8003c6a:	9327      	str	r3, [sp, #156]	; 0x9c
 8003c6c:	dc75      	bgt.n	8003d5a <_vfprintf_r+0x1076>
 8003c6e:	3408      	adds	r4, #8
 8003c70:	2f00      	cmp	r7, #0
 8003c72:	bfac      	ite	ge
 8003c74:	1bee      	subge	r6, r5, r7
 8003c76:	462e      	movlt	r6, r5
 8003c78:	2e00      	cmp	r6, #0
 8003c7a:	dd18      	ble.n	8003cae <_vfprintf_r+0xfca>
 8003c7c:	4f98      	ldr	r7, [pc, #608]	; (8003ee0 <_vfprintf_r+0x11fc>)
 8003c7e:	6027      	str	r7, [r4, #0]
 8003c80:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003c84:	2e10      	cmp	r6, #16
 8003c86:	f103 0301 	add.w	r3, r3, #1
 8003c8a:	f104 0108 	add.w	r1, r4, #8
 8003c8e:	dc6e      	bgt.n	8003d6e <_vfprintf_r+0x108a>
 8003c90:	6066      	str	r6, [r4, #4]
 8003c92:	2b07      	cmp	r3, #7
 8003c94:	4416      	add	r6, r2
 8003c96:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 8003c9a:	dd7b      	ble.n	8003d94 <_vfprintf_r+0x10b0>
 8003c9c:	aa26      	add	r2, sp, #152	; 0x98
 8003c9e:	4651      	mov	r1, sl
 8003ca0:	4640      	mov	r0, r8
 8003ca2:	f002 fd30 	bl	8006706 <__sprint_r>
 8003ca6:	2800      	cmp	r0, #0
 8003ca8:	f040 81d4 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003cac:	ac29      	add	r4, sp, #164	; 0xa4
 8003cae:	f41b 6f80 	tst.w	fp, #1024	; 0x400
 8003cb2:	444d      	add	r5, r9
 8003cb4:	d00a      	beq.n	8003ccc <_vfprintf_r+0xfe8>
 8003cb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d16d      	bne.n	8003d98 <_vfprintf_r+0x10b4>
 8003cbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	d16d      	bne.n	8003d9e <_vfprintf_r+0x10ba>
 8003cc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cc4:	444b      	add	r3, r9
 8003cc6:	429d      	cmp	r5, r3
 8003cc8:	bf28      	it	cs
 8003cca:	461d      	movcs	r5, r3
 8003ccc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003cce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003cd0:	4293      	cmp	r3, r2
 8003cd2:	db02      	blt.n	8003cda <_vfprintf_r+0xff6>
 8003cd4:	f01b 0f01 	tst.w	fp, #1
 8003cd8:	d00e      	beq.n	8003cf8 <_vfprintf_r+0x1014>
 8003cda:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003cdc:	6023      	str	r3, [r4, #0]
 8003cde:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003ce0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003ce2:	6063      	str	r3, [r4, #4]
 8003ce4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003ce6:	4413      	add	r3, r2
 8003ce8:	9328      	str	r3, [sp, #160]	; 0xa0
 8003cea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003cec:	3301      	adds	r3, #1
 8003cee:	2b07      	cmp	r3, #7
 8003cf0:	9327      	str	r3, [sp, #156]	; 0x9c
 8003cf2:	f300 80cf 	bgt.w	8003e94 <_vfprintf_r+0x11b0>
 8003cf6:	3408      	adds	r4, #8
 8003cf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cfa:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8003cfc:	eb09 0203 	add.w	r2, r9, r3
 8003d00:	1b9e      	subs	r6, r3, r6
 8003d02:	1b52      	subs	r2, r2, r5
 8003d04:	4296      	cmp	r6, r2
 8003d06:	bfa8      	it	ge
 8003d08:	4616      	movge	r6, r2
 8003d0a:	2e00      	cmp	r6, #0
 8003d0c:	dd0b      	ble.n	8003d26 <_vfprintf_r+0x1042>
 8003d0e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003d10:	4433      	add	r3, r6
 8003d12:	9328      	str	r3, [sp, #160]	; 0xa0
 8003d14:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003d16:	3301      	adds	r3, #1
 8003d18:	2b07      	cmp	r3, #7
 8003d1a:	e9c4 5600 	strd	r5, r6, [r4]
 8003d1e:	9327      	str	r3, [sp, #156]	; 0x9c
 8003d20:	f300 80c2 	bgt.w	8003ea8 <_vfprintf_r+0x11c4>
 8003d24:	3408      	adds	r4, #8
 8003d26:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8003d28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d2a:	2e00      	cmp	r6, #0
 8003d2c:	eba3 0505 	sub.w	r5, r3, r5
 8003d30:	bfa8      	it	ge
 8003d32:	1bad      	subge	r5, r5, r6
 8003d34:	2d00      	cmp	r5, #0
 8003d36:	f77f abf1 	ble.w	800351c <_vfprintf_r+0x838>
 8003d3a:	4e69      	ldr	r6, [pc, #420]	; (8003ee0 <_vfprintf_r+0x11fc>)
 8003d3c:	2710      	movs	r7, #16
 8003d3e:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003d42:	2d10      	cmp	r5, #16
 8003d44:	f103 0301 	add.w	r3, r3, #1
 8003d48:	f104 0108 	add.w	r1, r4, #8
 8003d4c:	6026      	str	r6, [r4, #0]
 8003d4e:	f300 80b5 	bgt.w	8003ebc <_vfprintf_r+0x11d8>
 8003d52:	6065      	str	r5, [r4, #4]
 8003d54:	4415      	add	r5, r2
 8003d56:	9528      	str	r5, [sp, #160]	; 0xa0
 8003d58:	e6cf      	b.n	8003afa <_vfprintf_r+0xe16>
 8003d5a:	aa26      	add	r2, sp, #152	; 0x98
 8003d5c:	4651      	mov	r1, sl
 8003d5e:	4640      	mov	r0, r8
 8003d60:	f002 fcd1 	bl	8006706 <__sprint_r>
 8003d64:	2800      	cmp	r0, #0
 8003d66:	f040 8175 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003d6a:	ac29      	add	r4, sp, #164	; 0xa4
 8003d6c:	e780      	b.n	8003c70 <_vfprintf_r+0xf8c>
 8003d6e:	2010      	movs	r0, #16
 8003d70:	4402      	add	r2, r0
 8003d72:	2b07      	cmp	r3, #7
 8003d74:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003d78:	6060      	str	r0, [r4, #4]
 8003d7a:	dd08      	ble.n	8003d8e <_vfprintf_r+0x10aa>
 8003d7c:	aa26      	add	r2, sp, #152	; 0x98
 8003d7e:	4651      	mov	r1, sl
 8003d80:	4640      	mov	r0, r8
 8003d82:	f002 fcc0 	bl	8006706 <__sprint_r>
 8003d86:	2800      	cmp	r0, #0
 8003d88:	f040 8164 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003d8c:	a929      	add	r1, sp, #164	; 0xa4
 8003d8e:	3e10      	subs	r6, #16
 8003d90:	460c      	mov	r4, r1
 8003d92:	e774      	b.n	8003c7e <_vfprintf_r+0xf9a>
 8003d94:	460c      	mov	r4, r1
 8003d96:	e78a      	b.n	8003cae <_vfprintf_r+0xfca>
 8003d98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d04a      	beq.n	8003e34 <_vfprintf_r+0x1150>
 8003d9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003da0:	3b01      	subs	r3, #1
 8003da2:	930c      	str	r3, [sp, #48]	; 0x30
 8003da4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8003da6:	6023      	str	r3, [r4, #0]
 8003da8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003daa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003dac:	6063      	str	r3, [r4, #4]
 8003dae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003db0:	4413      	add	r3, r2
 8003db2:	9328      	str	r3, [sp, #160]	; 0xa0
 8003db4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003db6:	3301      	adds	r3, #1
 8003db8:	2b07      	cmp	r3, #7
 8003dba:	9327      	str	r3, [sp, #156]	; 0x9c
 8003dbc:	dc41      	bgt.n	8003e42 <_vfprintf_r+0x115e>
 8003dbe:	3408      	adds	r4, #8
 8003dc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003dc4:	eb09 0703 	add.w	r7, r9, r3
 8003dc8:	1b7b      	subs	r3, r7, r5
 8003dca:	7817      	ldrb	r7, [r2, #0]
 8003dcc:	429f      	cmp	r7, r3
 8003dce:	bfa8      	it	ge
 8003dd0:	461f      	movge	r7, r3
 8003dd2:	2f00      	cmp	r7, #0
 8003dd4:	dd0a      	ble.n	8003dec <_vfprintf_r+0x1108>
 8003dd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003dd8:	443b      	add	r3, r7
 8003dda:	9328      	str	r3, [sp, #160]	; 0xa0
 8003ddc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003dde:	3301      	adds	r3, #1
 8003de0:	2b07      	cmp	r3, #7
 8003de2:	e9c4 5700 	strd	r5, r7, [r4]
 8003de6:	9327      	str	r3, [sp, #156]	; 0x9c
 8003de8:	dc35      	bgt.n	8003e56 <_vfprintf_r+0x1172>
 8003dea:	3408      	adds	r4, #8
 8003dec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003dee:	781e      	ldrb	r6, [r3, #0]
 8003df0:	2f00      	cmp	r7, #0
 8003df2:	bfa8      	it	ge
 8003df4:	1bf6      	subge	r6, r6, r7
 8003df6:	2e00      	cmp	r6, #0
 8003df8:	dd18      	ble.n	8003e2c <_vfprintf_r+0x1148>
 8003dfa:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003dfe:	4838      	ldr	r0, [pc, #224]	; (8003ee0 <_vfprintf_r+0x11fc>)
 8003e00:	6020      	str	r0, [r4, #0]
 8003e02:	2e10      	cmp	r6, #16
 8003e04:	f103 0301 	add.w	r3, r3, #1
 8003e08:	f104 0108 	add.w	r1, r4, #8
 8003e0c:	dc2d      	bgt.n	8003e6a <_vfprintf_r+0x1186>
 8003e0e:	6066      	str	r6, [r4, #4]
 8003e10:	2b07      	cmp	r3, #7
 8003e12:	4416      	add	r6, r2
 8003e14:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 8003e18:	dd3a      	ble.n	8003e90 <_vfprintf_r+0x11ac>
 8003e1a:	aa26      	add	r2, sp, #152	; 0x98
 8003e1c:	4651      	mov	r1, sl
 8003e1e:	4640      	mov	r0, r8
 8003e20:	f002 fc71 	bl	8006706 <__sprint_r>
 8003e24:	2800      	cmp	r0, #0
 8003e26:	f040 8115 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003e2a:	ac29      	add	r4, sp, #164	; 0xa4
 8003e2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003e2e:	781b      	ldrb	r3, [r3, #0]
 8003e30:	441d      	add	r5, r3
 8003e32:	e740      	b.n	8003cb6 <_vfprintf_r+0xfd2>
 8003e34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003e36:	3b01      	subs	r3, #1
 8003e38:	930e      	str	r3, [sp, #56]	; 0x38
 8003e3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003e3c:	3b01      	subs	r3, #1
 8003e3e:	930d      	str	r3, [sp, #52]	; 0x34
 8003e40:	e7b0      	b.n	8003da4 <_vfprintf_r+0x10c0>
 8003e42:	aa26      	add	r2, sp, #152	; 0x98
 8003e44:	4651      	mov	r1, sl
 8003e46:	4640      	mov	r0, r8
 8003e48:	f002 fc5d 	bl	8006706 <__sprint_r>
 8003e4c:	2800      	cmp	r0, #0
 8003e4e:	f040 8101 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003e52:	ac29      	add	r4, sp, #164	; 0xa4
 8003e54:	e7b4      	b.n	8003dc0 <_vfprintf_r+0x10dc>
 8003e56:	aa26      	add	r2, sp, #152	; 0x98
 8003e58:	4651      	mov	r1, sl
 8003e5a:	4640      	mov	r0, r8
 8003e5c:	f002 fc53 	bl	8006706 <__sprint_r>
 8003e60:	2800      	cmp	r0, #0
 8003e62:	f040 80f7 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003e66:	ac29      	add	r4, sp, #164	; 0xa4
 8003e68:	e7c0      	b.n	8003dec <_vfprintf_r+0x1108>
 8003e6a:	2010      	movs	r0, #16
 8003e6c:	4402      	add	r2, r0
 8003e6e:	2b07      	cmp	r3, #7
 8003e70:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003e74:	6060      	str	r0, [r4, #4]
 8003e76:	dd08      	ble.n	8003e8a <_vfprintf_r+0x11a6>
 8003e78:	aa26      	add	r2, sp, #152	; 0x98
 8003e7a:	4651      	mov	r1, sl
 8003e7c:	4640      	mov	r0, r8
 8003e7e:	f002 fc42 	bl	8006706 <__sprint_r>
 8003e82:	2800      	cmp	r0, #0
 8003e84:	f040 80e6 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003e88:	a929      	add	r1, sp, #164	; 0xa4
 8003e8a:	3e10      	subs	r6, #16
 8003e8c:	460c      	mov	r4, r1
 8003e8e:	e7b4      	b.n	8003dfa <_vfprintf_r+0x1116>
 8003e90:	460c      	mov	r4, r1
 8003e92:	e7cb      	b.n	8003e2c <_vfprintf_r+0x1148>
 8003e94:	aa26      	add	r2, sp, #152	; 0x98
 8003e96:	4651      	mov	r1, sl
 8003e98:	4640      	mov	r0, r8
 8003e9a:	f002 fc34 	bl	8006706 <__sprint_r>
 8003e9e:	2800      	cmp	r0, #0
 8003ea0:	f040 80d8 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003ea4:	ac29      	add	r4, sp, #164	; 0xa4
 8003ea6:	e727      	b.n	8003cf8 <_vfprintf_r+0x1014>
 8003ea8:	aa26      	add	r2, sp, #152	; 0x98
 8003eaa:	4651      	mov	r1, sl
 8003eac:	4640      	mov	r0, r8
 8003eae:	f002 fc2a 	bl	8006706 <__sprint_r>
 8003eb2:	2800      	cmp	r0, #0
 8003eb4:	f040 80ce 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003eb8:	ac29      	add	r4, sp, #164	; 0xa4
 8003eba:	e734      	b.n	8003d26 <_vfprintf_r+0x1042>
 8003ebc:	3210      	adds	r2, #16
 8003ebe:	2b07      	cmp	r3, #7
 8003ec0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003ec4:	6067      	str	r7, [r4, #4]
 8003ec6:	dd08      	ble.n	8003eda <_vfprintf_r+0x11f6>
 8003ec8:	aa26      	add	r2, sp, #152	; 0x98
 8003eca:	4651      	mov	r1, sl
 8003ecc:	4640      	mov	r0, r8
 8003ece:	f002 fc1a 	bl	8006706 <__sprint_r>
 8003ed2:	2800      	cmp	r0, #0
 8003ed4:	f040 80be 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003ed8:	a929      	add	r1, sp, #164	; 0xa4
 8003eda:	3d10      	subs	r5, #16
 8003edc:	460c      	mov	r4, r1
 8003ede:	e72e      	b.n	8003d3e <_vfprintf_r+0x105a>
 8003ee0:	08007d04 	.word	0x08007d04
 8003ee4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ee6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003ee8:	2a01      	cmp	r2, #1
 8003eea:	f106 0601 	add.w	r6, r6, #1
 8003eee:	f103 0301 	add.w	r3, r3, #1
 8003ef2:	f104 0508 	add.w	r5, r4, #8
 8003ef6:	dc02      	bgt.n	8003efe <_vfprintf_r+0x121a>
 8003ef8:	f01b 0f01 	tst.w	fp, #1
 8003efc:	d07e      	beq.n	8003ffc <_vfprintf_r+0x1318>
 8003efe:	2201      	movs	r2, #1
 8003f00:	2b07      	cmp	r3, #7
 8003f02:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 8003f06:	f8c4 9000 	str.w	r9, [r4]
 8003f0a:	6062      	str	r2, [r4, #4]
 8003f0c:	dd08      	ble.n	8003f20 <_vfprintf_r+0x123c>
 8003f0e:	aa26      	add	r2, sp, #152	; 0x98
 8003f10:	4651      	mov	r1, sl
 8003f12:	4640      	mov	r0, r8
 8003f14:	f002 fbf7 	bl	8006706 <__sprint_r>
 8003f18:	2800      	cmp	r0, #0
 8003f1a:	f040 809b 	bne.w	8004054 <_vfprintf_r+0x1370>
 8003f1e:	ad29      	add	r5, sp, #164	; 0xa4
 8003f20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003f22:	602b      	str	r3, [r5, #0]
 8003f24:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003f26:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003f28:	606b      	str	r3, [r5, #4]
 8003f2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003f2c:	4413      	add	r3, r2
 8003f2e:	9328      	str	r3, [sp, #160]	; 0xa0
 8003f30:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003f32:	3301      	adds	r3, #1
 8003f34:	2b07      	cmp	r3, #7
 8003f36:	9327      	str	r3, [sp, #156]	; 0x9c
 8003f38:	dc32      	bgt.n	8003fa0 <_vfprintf_r+0x12bc>
 8003f3a:	3508      	adds	r5, #8
 8003f3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f3e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003f42:	1e5c      	subs	r4, r3, #1
 8003f44:	2200      	movs	r2, #0
 8003f46:	2300      	movs	r3, #0
 8003f48:	f7fc fdce 	bl	8000ae8 <__aeabi_dcmpeq>
 8003f4c:	2800      	cmp	r0, #0
 8003f4e:	d130      	bne.n	8003fb2 <_vfprintf_r+0x12ce>
 8003f50:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003f52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003f54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003f56:	3101      	adds	r1, #1
 8003f58:	3b01      	subs	r3, #1
 8003f5a:	f109 0001 	add.w	r0, r9, #1
 8003f5e:	4413      	add	r3, r2
 8003f60:	2907      	cmp	r1, #7
 8003f62:	e9c5 0400 	strd	r0, r4, [r5]
 8003f66:	e9cd 1327 	strd	r1, r3, [sp, #156]	; 0x9c
 8003f6a:	dd50      	ble.n	800400e <_vfprintf_r+0x132a>
 8003f6c:	aa26      	add	r2, sp, #152	; 0x98
 8003f6e:	4651      	mov	r1, sl
 8003f70:	4640      	mov	r0, r8
 8003f72:	f002 fbc8 	bl	8006706 <__sprint_r>
 8003f76:	2800      	cmp	r0, #0
 8003f78:	d16c      	bne.n	8004054 <_vfprintf_r+0x1370>
 8003f7a:	ad29      	add	r5, sp, #164	; 0xa4
 8003f7c:	ab22      	add	r3, sp, #136	; 0x88
 8003f7e:	602b      	str	r3, [r5, #0]
 8003f80:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003f82:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003f84:	606b      	str	r3, [r5, #4]
 8003f86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003f88:	4413      	add	r3, r2
 8003f8a:	9328      	str	r3, [sp, #160]	; 0xa0
 8003f8c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003f8e:	3301      	adds	r3, #1
 8003f90:	2b07      	cmp	r3, #7
 8003f92:	9327      	str	r3, [sp, #156]	; 0x9c
 8003f94:	f73f adb5 	bgt.w	8003b02 <_vfprintf_r+0xe1e>
 8003f98:	f105 0408 	add.w	r4, r5, #8
 8003f9c:	f7ff babe 	b.w	800351c <_vfprintf_r+0x838>
 8003fa0:	aa26      	add	r2, sp, #152	; 0x98
 8003fa2:	4651      	mov	r1, sl
 8003fa4:	4640      	mov	r0, r8
 8003fa6:	f002 fbae 	bl	8006706 <__sprint_r>
 8003faa:	2800      	cmp	r0, #0
 8003fac:	d152      	bne.n	8004054 <_vfprintf_r+0x1370>
 8003fae:	ad29      	add	r5, sp, #164	; 0xa4
 8003fb0:	e7c4      	b.n	8003f3c <_vfprintf_r+0x1258>
 8003fb2:	2c00      	cmp	r4, #0
 8003fb4:	dde2      	ble.n	8003f7c <_vfprintf_r+0x1298>
 8003fb6:	4e58      	ldr	r6, [pc, #352]	; (8004118 <_vfprintf_r+0x1434>)
 8003fb8:	2710      	movs	r7, #16
 8003fba:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003fbe:	2c10      	cmp	r4, #16
 8003fc0:	f103 0301 	add.w	r3, r3, #1
 8003fc4:	f105 0108 	add.w	r1, r5, #8
 8003fc8:	602e      	str	r6, [r5, #0]
 8003fca:	dc07      	bgt.n	8003fdc <_vfprintf_r+0x12f8>
 8003fcc:	606c      	str	r4, [r5, #4]
 8003fce:	2b07      	cmp	r3, #7
 8003fd0:	4414      	add	r4, r2
 8003fd2:	e9cd 3427 	strd	r3, r4, [sp, #156]	; 0x9c
 8003fd6:	dcc9      	bgt.n	8003f6c <_vfprintf_r+0x1288>
 8003fd8:	460d      	mov	r5, r1
 8003fda:	e7cf      	b.n	8003f7c <_vfprintf_r+0x1298>
 8003fdc:	3210      	adds	r2, #16
 8003fde:	2b07      	cmp	r3, #7
 8003fe0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003fe4:	606f      	str	r7, [r5, #4]
 8003fe6:	dd06      	ble.n	8003ff6 <_vfprintf_r+0x1312>
 8003fe8:	aa26      	add	r2, sp, #152	; 0x98
 8003fea:	4651      	mov	r1, sl
 8003fec:	4640      	mov	r0, r8
 8003fee:	f002 fb8a 	bl	8006706 <__sprint_r>
 8003ff2:	bb78      	cbnz	r0, 8004054 <_vfprintf_r+0x1370>
 8003ff4:	a929      	add	r1, sp, #164	; 0xa4
 8003ff6:	3c10      	subs	r4, #16
 8003ff8:	460d      	mov	r5, r1
 8003ffa:	e7de      	b.n	8003fba <_vfprintf_r+0x12d6>
 8003ffc:	2201      	movs	r2, #1
 8003ffe:	2b07      	cmp	r3, #7
 8004000:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 8004004:	f8c4 9000 	str.w	r9, [r4]
 8004008:	6062      	str	r2, [r4, #4]
 800400a:	ddb7      	ble.n	8003f7c <_vfprintf_r+0x1298>
 800400c:	e7ae      	b.n	8003f6c <_vfprintf_r+0x1288>
 800400e:	3508      	adds	r5, #8
 8004010:	e7b4      	b.n	8003f7c <_vfprintf_r+0x1298>
 8004012:	460c      	mov	r4, r1
 8004014:	f7ff ba82 	b.w	800351c <_vfprintf_r+0x838>
 8004018:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 800401c:	1a9d      	subs	r5, r3, r2
 800401e:	2d00      	cmp	r5, #0
 8004020:	f77f aa80 	ble.w	8003524 <_vfprintf_r+0x840>
 8004024:	4e3d      	ldr	r6, [pc, #244]	; (800411c <_vfprintf_r+0x1438>)
 8004026:	2710      	movs	r7, #16
 8004028:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800402c:	2d10      	cmp	r5, #16
 800402e:	f103 0301 	add.w	r3, r3, #1
 8004032:	6026      	str	r6, [r4, #0]
 8004034:	dc18      	bgt.n	8004068 <_vfprintf_r+0x1384>
 8004036:	6065      	str	r5, [r4, #4]
 8004038:	2b07      	cmp	r3, #7
 800403a:	4415      	add	r5, r2
 800403c:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 8004040:	f77f aa70 	ble.w	8003524 <_vfprintf_r+0x840>
 8004044:	aa26      	add	r2, sp, #152	; 0x98
 8004046:	4651      	mov	r1, sl
 8004048:	4640      	mov	r0, r8
 800404a:	f002 fb5c 	bl	8006706 <__sprint_r>
 800404e:	2800      	cmp	r0, #0
 8004050:	f43f aa68 	beq.w	8003524 <_vfprintf_r+0x840>
 8004054:	9b08      	ldr	r3, [sp, #32]
 8004056:	2b00      	cmp	r3, #0
 8004058:	f43f a887 	beq.w	800316a <_vfprintf_r+0x486>
 800405c:	4619      	mov	r1, r3
 800405e:	4640      	mov	r0, r8
 8004060:	f001 f8ca 	bl	80051f8 <_free_r>
 8004064:	f7ff b881 	b.w	800316a <_vfprintf_r+0x486>
 8004068:	3210      	adds	r2, #16
 800406a:	2b07      	cmp	r3, #7
 800406c:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8004070:	6067      	str	r7, [r4, #4]
 8004072:	dc02      	bgt.n	800407a <_vfprintf_r+0x1396>
 8004074:	3408      	adds	r4, #8
 8004076:	3d10      	subs	r5, #16
 8004078:	e7d6      	b.n	8004028 <_vfprintf_r+0x1344>
 800407a:	aa26      	add	r2, sp, #152	; 0x98
 800407c:	4651      	mov	r1, sl
 800407e:	4640      	mov	r0, r8
 8004080:	f002 fb41 	bl	8006706 <__sprint_r>
 8004084:	2800      	cmp	r0, #0
 8004086:	d1e5      	bne.n	8004054 <_vfprintf_r+0x1370>
 8004088:	ac29      	add	r4, sp, #164	; 0xa4
 800408a:	e7f4      	b.n	8004076 <_vfprintf_r+0x1392>
 800408c:	9908      	ldr	r1, [sp, #32]
 800408e:	4640      	mov	r0, r8
 8004090:	f001 f8b2 	bl	80051f8 <_free_r>
 8004094:	f7ff ba5e 	b.w	8003554 <_vfprintf_r+0x870>
 8004098:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800409a:	b91b      	cbnz	r3, 80040a4 <_vfprintf_r+0x13c0>
 800409c:	2300      	movs	r3, #0
 800409e:	9327      	str	r3, [sp, #156]	; 0x9c
 80040a0:	f7ff b863 	b.w	800316a <_vfprintf_r+0x486>
 80040a4:	aa26      	add	r2, sp, #152	; 0x98
 80040a6:	4651      	mov	r1, sl
 80040a8:	4640      	mov	r0, r8
 80040aa:	f002 fb2c 	bl	8006706 <__sprint_r>
 80040ae:	2800      	cmp	r0, #0
 80040b0:	d0f4      	beq.n	800409c <_vfprintf_r+0x13b8>
 80040b2:	f7ff b85a 	b.w	800316a <_vfprintf_r+0x486>
 80040b6:	ea56 0205 	orrs.w	r2, r6, r5
 80040ba:	465f      	mov	r7, fp
 80040bc:	f43f ab71 	beq.w	80037a2 <_vfprintf_r+0xabe>
 80040c0:	2b01      	cmp	r3, #1
 80040c2:	f43f ac0e 	beq.w	80038e2 <_vfprintf_r+0xbfe>
 80040c6:	2b02      	cmp	r3, #2
 80040c8:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 80040cc:	f43f ac55 	beq.w	800397a <_vfprintf_r+0xc96>
 80040d0:	f006 0307 	and.w	r3, r6, #7
 80040d4:	08f6      	lsrs	r6, r6, #3
 80040d6:	ea46 7645 	orr.w	r6, r6, r5, lsl #29
 80040da:	08ed      	lsrs	r5, r5, #3
 80040dc:	3330      	adds	r3, #48	; 0x30
 80040de:	ea56 0105 	orrs.w	r1, r6, r5
 80040e2:	464a      	mov	r2, r9
 80040e4:	f809 3d01 	strb.w	r3, [r9, #-1]!
 80040e8:	d1f2      	bne.n	80040d0 <_vfprintf_r+0x13ec>
 80040ea:	07f8      	lsls	r0, r7, #31
 80040ec:	d506      	bpl.n	80040fc <_vfprintf_r+0x1418>
 80040ee:	2b30      	cmp	r3, #48	; 0x30
 80040f0:	d004      	beq.n	80040fc <_vfprintf_r+0x1418>
 80040f2:	2330      	movs	r3, #48	; 0x30
 80040f4:	f809 3c01 	strb.w	r3, [r9, #-1]
 80040f8:	f1a2 0902 	sub.w	r9, r2, #2
 80040fc:	ab52      	add	r3, sp, #328	; 0x148
 80040fe:	eba3 0309 	sub.w	r3, r3, r9
 8004102:	9e07      	ldr	r6, [sp, #28]
 8004104:	9307      	str	r3, [sp, #28]
 8004106:	2300      	movs	r3, #0
 8004108:	46bb      	mov	fp, r7
 800410a:	9308      	str	r3, [sp, #32]
 800410c:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 8004110:	461d      	mov	r5, r3
 8004112:	f7ff b94a 	b.w	80033aa <_vfprintf_r+0x6c6>
 8004116:	bf00      	nop
 8004118:	08007d04 	.word	0x08007d04
 800411c:	08007cf4 	.word	0x08007cf4

08004120 <__sbprintf>:
 8004120:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004122:	461f      	mov	r7, r3
 8004124:	898b      	ldrh	r3, [r1, #12]
 8004126:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 800412a:	f023 0302 	bic.w	r3, r3, #2
 800412e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004132:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8004134:	9319      	str	r3, [sp, #100]	; 0x64
 8004136:	89cb      	ldrh	r3, [r1, #14]
 8004138:	f8ad 300e 	strh.w	r3, [sp, #14]
 800413c:	69cb      	ldr	r3, [r1, #28]
 800413e:	9307      	str	r3, [sp, #28]
 8004140:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8004142:	9309      	str	r3, [sp, #36]	; 0x24
 8004144:	ab1a      	add	r3, sp, #104	; 0x68
 8004146:	9300      	str	r3, [sp, #0]
 8004148:	9304      	str	r3, [sp, #16]
 800414a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800414e:	4615      	mov	r5, r2
 8004150:	4606      	mov	r6, r0
 8004152:	9302      	str	r3, [sp, #8]
 8004154:	9305      	str	r3, [sp, #20]
 8004156:	a816      	add	r0, sp, #88	; 0x58
 8004158:	2300      	movs	r3, #0
 800415a:	460c      	mov	r4, r1
 800415c:	9306      	str	r3, [sp, #24]
 800415e:	f001 fa77 	bl	8005650 <__retarget_lock_init_recursive>
 8004162:	462a      	mov	r2, r5
 8004164:	463b      	mov	r3, r7
 8004166:	4669      	mov	r1, sp
 8004168:	4630      	mov	r0, r6
 800416a:	f7fe fdbb 	bl	8002ce4 <_vfprintf_r>
 800416e:	1e05      	subs	r5, r0, #0
 8004170:	db07      	blt.n	8004182 <__sbprintf+0x62>
 8004172:	4669      	mov	r1, sp
 8004174:	4630      	mov	r0, r6
 8004176:	f000 ff43 	bl	8005000 <_fflush_r>
 800417a:	2800      	cmp	r0, #0
 800417c:	bf18      	it	ne
 800417e:	f04f 35ff 	movne.w	r5, #4294967295
 8004182:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8004186:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004188:	065b      	lsls	r3, r3, #25
 800418a:	bf42      	ittt	mi
 800418c:	89a3      	ldrhmi	r3, [r4, #12]
 800418e:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 8004192:	81a3      	strhmi	r3, [r4, #12]
 8004194:	f001 fa5d 	bl	8005652 <__retarget_lock_close_recursive>
 8004198:	4628      	mov	r0, r5
 800419a:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 800419e:	bdf0      	pop	{r4, r5, r6, r7, pc}

080041a0 <__swsetup_r>:
 80041a0:	b538      	push	{r3, r4, r5, lr}
 80041a2:	4b2a      	ldr	r3, [pc, #168]	; (800424c <__swsetup_r+0xac>)
 80041a4:	4605      	mov	r5, r0
 80041a6:	6818      	ldr	r0, [r3, #0]
 80041a8:	460c      	mov	r4, r1
 80041aa:	b118      	cbz	r0, 80041b4 <__swsetup_r+0x14>
 80041ac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80041ae:	b90b      	cbnz	r3, 80041b4 <__swsetup_r+0x14>
 80041b0:	f000 ff92 	bl	80050d8 <__sinit>
 80041b4:	89a3      	ldrh	r3, [r4, #12]
 80041b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80041ba:	0718      	lsls	r0, r3, #28
 80041bc:	d422      	bmi.n	8004204 <__swsetup_r+0x64>
 80041be:	06d9      	lsls	r1, r3, #27
 80041c0:	d407      	bmi.n	80041d2 <__swsetup_r+0x32>
 80041c2:	2309      	movs	r3, #9
 80041c4:	602b      	str	r3, [r5, #0]
 80041c6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80041ca:	81a3      	strh	r3, [r4, #12]
 80041cc:	f04f 30ff 	mov.w	r0, #4294967295
 80041d0:	e034      	b.n	800423c <__swsetup_r+0x9c>
 80041d2:	0758      	lsls	r0, r3, #29
 80041d4:	d512      	bpl.n	80041fc <__swsetup_r+0x5c>
 80041d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80041d8:	b141      	cbz	r1, 80041ec <__swsetup_r+0x4c>
 80041da:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80041de:	4299      	cmp	r1, r3
 80041e0:	d002      	beq.n	80041e8 <__swsetup_r+0x48>
 80041e2:	4628      	mov	r0, r5
 80041e4:	f001 f808 	bl	80051f8 <_free_r>
 80041e8:	2300      	movs	r3, #0
 80041ea:	6323      	str	r3, [r4, #48]	; 0x30
 80041ec:	89a3      	ldrh	r3, [r4, #12]
 80041ee:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80041f2:	81a3      	strh	r3, [r4, #12]
 80041f4:	2300      	movs	r3, #0
 80041f6:	6063      	str	r3, [r4, #4]
 80041f8:	6923      	ldr	r3, [r4, #16]
 80041fa:	6023      	str	r3, [r4, #0]
 80041fc:	89a3      	ldrh	r3, [r4, #12]
 80041fe:	f043 0308 	orr.w	r3, r3, #8
 8004202:	81a3      	strh	r3, [r4, #12]
 8004204:	6923      	ldr	r3, [r4, #16]
 8004206:	b94b      	cbnz	r3, 800421c <__swsetup_r+0x7c>
 8004208:	89a3      	ldrh	r3, [r4, #12]
 800420a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800420e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004212:	d003      	beq.n	800421c <__swsetup_r+0x7c>
 8004214:	4621      	mov	r1, r4
 8004216:	4628      	mov	r0, r5
 8004218:	f001 fa4a 	bl	80056b0 <__smakebuf_r>
 800421c:	89a0      	ldrh	r0, [r4, #12]
 800421e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004222:	f010 0301 	ands.w	r3, r0, #1
 8004226:	d00a      	beq.n	800423e <__swsetup_r+0x9e>
 8004228:	2300      	movs	r3, #0
 800422a:	60a3      	str	r3, [r4, #8]
 800422c:	6963      	ldr	r3, [r4, #20]
 800422e:	425b      	negs	r3, r3
 8004230:	61a3      	str	r3, [r4, #24]
 8004232:	6923      	ldr	r3, [r4, #16]
 8004234:	b943      	cbnz	r3, 8004248 <__swsetup_r+0xa8>
 8004236:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800423a:	d1c4      	bne.n	80041c6 <__swsetup_r+0x26>
 800423c:	bd38      	pop	{r3, r4, r5, pc}
 800423e:	0781      	lsls	r1, r0, #30
 8004240:	bf58      	it	pl
 8004242:	6963      	ldrpl	r3, [r4, #20]
 8004244:	60a3      	str	r3, [r4, #8]
 8004246:	e7f4      	b.n	8004232 <__swsetup_r+0x92>
 8004248:	2000      	movs	r0, #0
 800424a:	e7f7      	b.n	800423c <__swsetup_r+0x9c>
 800424c:	20000200 	.word	0x20000200

08004250 <register_fini>:
 8004250:	4b02      	ldr	r3, [pc, #8]	; (800425c <register_fini+0xc>)
 8004252:	b113      	cbz	r3, 800425a <register_fini+0xa>
 8004254:	4802      	ldr	r0, [pc, #8]	; (8004260 <register_fini+0x10>)
 8004256:	f000 b805 	b.w	8004264 <atexit>
 800425a:	4770      	bx	lr
 800425c:	00000000 	.word	0x00000000
 8004260:	08005129 	.word	0x08005129

08004264 <atexit>:
 8004264:	2300      	movs	r3, #0
 8004266:	4601      	mov	r1, r0
 8004268:	461a      	mov	r2, r3
 800426a:	4618      	mov	r0, r3
 800426c:	f002 bf5e 	b.w	800712c <__register_exitproc>

08004270 <quorem>:
 8004270:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004274:	6903      	ldr	r3, [r0, #16]
 8004276:	690c      	ldr	r4, [r1, #16]
 8004278:	42a3      	cmp	r3, r4
 800427a:	4607      	mov	r7, r0
 800427c:	db7d      	blt.n	800437a <quorem+0x10a>
 800427e:	3c01      	subs	r4, #1
 8004280:	f101 0814 	add.w	r8, r1, #20
 8004284:	f100 0514 	add.w	r5, r0, #20
 8004288:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800428c:	9301      	str	r3, [sp, #4]
 800428e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004292:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004296:	3301      	adds	r3, #1
 8004298:	429a      	cmp	r2, r3
 800429a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800429e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80042a2:	fbb2 f6f3 	udiv	r6, r2, r3
 80042a6:	d32e      	bcc.n	8004306 <quorem+0x96>
 80042a8:	f04f 0e00 	mov.w	lr, #0
 80042ac:	4640      	mov	r0, r8
 80042ae:	46ac      	mov	ip, r5
 80042b0:	46f2      	mov	sl, lr
 80042b2:	f850 2b04 	ldr.w	r2, [r0], #4
 80042b6:	b293      	uxth	r3, r2
 80042b8:	fb06 e303 	mla	r3, r6, r3, lr
 80042bc:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80042c0:	0c12      	lsrs	r2, r2, #16
 80042c2:	b29b      	uxth	r3, r3
 80042c4:	fb06 e202 	mla	r2, r6, r2, lr
 80042c8:	ebaa 0303 	sub.w	r3, sl, r3
 80042cc:	f8dc a000 	ldr.w	sl, [ip]
 80042d0:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80042d4:	b292      	uxth	r2, r2
 80042d6:	fa13 f38a 	uxtah	r3, r3, sl
 80042da:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80042de:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80042e2:	b29b      	uxth	r3, r3
 80042e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80042e8:	4581      	cmp	r9, r0
 80042ea:	f84c 3b04 	str.w	r3, [ip], #4
 80042ee:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80042f2:	d2de      	bcs.n	80042b2 <quorem+0x42>
 80042f4:	f855 300b 	ldr.w	r3, [r5, fp]
 80042f8:	b92b      	cbnz	r3, 8004306 <quorem+0x96>
 80042fa:	9b01      	ldr	r3, [sp, #4]
 80042fc:	3b04      	subs	r3, #4
 80042fe:	429d      	cmp	r5, r3
 8004300:	461a      	mov	r2, r3
 8004302:	d32e      	bcc.n	8004362 <quorem+0xf2>
 8004304:	613c      	str	r4, [r7, #16]
 8004306:	4638      	mov	r0, r7
 8004308:	f001 feb2 	bl	8006070 <__mcmp>
 800430c:	2800      	cmp	r0, #0
 800430e:	db24      	blt.n	800435a <quorem+0xea>
 8004310:	3601      	adds	r6, #1
 8004312:	4628      	mov	r0, r5
 8004314:	f04f 0c00 	mov.w	ip, #0
 8004318:	f858 2b04 	ldr.w	r2, [r8], #4
 800431c:	f8d0 e000 	ldr.w	lr, [r0]
 8004320:	b293      	uxth	r3, r2
 8004322:	ebac 0303 	sub.w	r3, ip, r3
 8004326:	0c12      	lsrs	r2, r2, #16
 8004328:	fa13 f38e 	uxtah	r3, r3, lr
 800432c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8004330:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004334:	b29b      	uxth	r3, r3
 8004336:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800433a:	45c1      	cmp	r9, r8
 800433c:	f840 3b04 	str.w	r3, [r0], #4
 8004340:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004344:	d2e8      	bcs.n	8004318 <quorem+0xa8>
 8004346:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800434a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800434e:	b922      	cbnz	r2, 800435a <quorem+0xea>
 8004350:	3b04      	subs	r3, #4
 8004352:	429d      	cmp	r5, r3
 8004354:	461a      	mov	r2, r3
 8004356:	d30a      	bcc.n	800436e <quorem+0xfe>
 8004358:	613c      	str	r4, [r7, #16]
 800435a:	4630      	mov	r0, r6
 800435c:	b003      	add	sp, #12
 800435e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004362:	6812      	ldr	r2, [r2, #0]
 8004364:	3b04      	subs	r3, #4
 8004366:	2a00      	cmp	r2, #0
 8004368:	d1cc      	bne.n	8004304 <quorem+0x94>
 800436a:	3c01      	subs	r4, #1
 800436c:	e7c7      	b.n	80042fe <quorem+0x8e>
 800436e:	6812      	ldr	r2, [r2, #0]
 8004370:	3b04      	subs	r3, #4
 8004372:	2a00      	cmp	r2, #0
 8004374:	d1f0      	bne.n	8004358 <quorem+0xe8>
 8004376:	3c01      	subs	r4, #1
 8004378:	e7eb      	b.n	8004352 <quorem+0xe2>
 800437a:	2000      	movs	r0, #0
 800437c:	e7ee      	b.n	800435c <quorem+0xec>
	...

08004380 <_dtoa_r>:
 8004380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004384:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8004386:	b097      	sub	sp, #92	; 0x5c
 8004388:	4681      	mov	r9, r0
 800438a:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 800438c:	4614      	mov	r4, r2
 800438e:	461d      	mov	r5, r3
 8004390:	4692      	mov	sl, r2
 8004392:	469b      	mov	fp, r3
 8004394:	b149      	cbz	r1, 80043aa <_dtoa_r+0x2a>
 8004396:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004398:	604a      	str	r2, [r1, #4]
 800439a:	2301      	movs	r3, #1
 800439c:	4093      	lsls	r3, r2
 800439e:	608b      	str	r3, [r1, #8]
 80043a0:	f001 fc5b 	bl	8005c5a <_Bfree>
 80043a4:	2300      	movs	r3, #0
 80043a6:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
 80043aa:	1e2b      	subs	r3, r5, #0
 80043ac:	bfaa      	itet	ge
 80043ae:	2300      	movge	r3, #0
 80043b0:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 80043b4:	6033      	strge	r3, [r6, #0]
 80043b6:	4ba0      	ldr	r3, [pc, #640]	; (8004638 <_dtoa_r+0x2b8>)
 80043b8:	bfbc      	itt	lt
 80043ba:	2201      	movlt	r2, #1
 80043bc:	6032      	strlt	r2, [r6, #0]
 80043be:	ea33 030b 	bics.w	r3, r3, fp
 80043c2:	d119      	bne.n	80043f8 <_dtoa_r+0x78>
 80043c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80043c6:	f242 730f 	movw	r3, #9999	; 0x270f
 80043ca:	6013      	str	r3, [r2, #0]
 80043cc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80043d0:	4323      	orrs	r3, r4
 80043d2:	f000 8575 	beq.w	8004ec0 <_dtoa_r+0xb40>
 80043d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80043d8:	b90b      	cbnz	r3, 80043de <_dtoa_r+0x5e>
 80043da:	4b98      	ldr	r3, [pc, #608]	; (800463c <_dtoa_r+0x2bc>)
 80043dc:	e020      	b.n	8004420 <_dtoa_r+0xa0>
 80043de:	4b97      	ldr	r3, [pc, #604]	; (800463c <_dtoa_r+0x2bc>)
 80043e0:	9304      	str	r3, [sp, #16]
 80043e2:	3303      	adds	r3, #3
 80043e4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80043e6:	6013      	str	r3, [r2, #0]
 80043e8:	9804      	ldr	r0, [sp, #16]
 80043ea:	b017      	add	sp, #92	; 0x5c
 80043ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043f0:	4b93      	ldr	r3, [pc, #588]	; (8004640 <_dtoa_r+0x2c0>)
 80043f2:	9304      	str	r3, [sp, #16]
 80043f4:	3308      	adds	r3, #8
 80043f6:	e7f5      	b.n	80043e4 <_dtoa_r+0x64>
 80043f8:	2200      	movs	r2, #0
 80043fa:	2300      	movs	r3, #0
 80043fc:	4650      	mov	r0, sl
 80043fe:	4659      	mov	r1, fp
 8004400:	e9cd ab0c 	strd	sl, fp, [sp, #48]	; 0x30
 8004404:	f7fc fb70 	bl	8000ae8 <__aeabi_dcmpeq>
 8004408:	4607      	mov	r7, r0
 800440a:	b158      	cbz	r0, 8004424 <_dtoa_r+0xa4>
 800440c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800440e:	2301      	movs	r3, #1
 8004410:	6013      	str	r3, [r2, #0]
 8004412:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004414:	2b00      	cmp	r3, #0
 8004416:	f000 8550 	beq.w	8004eba <_dtoa_r+0xb3a>
 800441a:	488a      	ldr	r0, [pc, #552]	; (8004644 <_dtoa_r+0x2c4>)
 800441c:	6018      	str	r0, [r3, #0]
 800441e:	1e43      	subs	r3, r0, #1
 8004420:	9304      	str	r3, [sp, #16]
 8004422:	e7e1      	b.n	80043e8 <_dtoa_r+0x68>
 8004424:	ab14      	add	r3, sp, #80	; 0x50
 8004426:	9301      	str	r3, [sp, #4]
 8004428:	ab15      	add	r3, sp, #84	; 0x54
 800442a:	9300      	str	r3, [sp, #0]
 800442c:	4648      	mov	r0, r9
 800442e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004432:	f001 fec1 	bl	80061b8 <__d2b>
 8004436:	f3cb 560a 	ubfx	r6, fp, #20, #11
 800443a:	9003      	str	r0, [sp, #12]
 800443c:	2e00      	cmp	r6, #0
 800443e:	d07b      	beq.n	8004538 <_dtoa_r+0x1b8>
 8004440:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004442:	9713      	str	r7, [sp, #76]	; 0x4c
 8004444:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004448:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800444c:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8004450:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8004454:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
 8004458:	4b7b      	ldr	r3, [pc, #492]	; (8004648 <_dtoa_r+0x2c8>)
 800445a:	2200      	movs	r2, #0
 800445c:	f7fb ff24 	bl	80002a8 <__aeabi_dsub>
 8004460:	a36f      	add	r3, pc, #444	; (adr r3, 8004620 <_dtoa_r+0x2a0>)
 8004462:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004466:	f7fc f8d7 	bl	8000618 <__aeabi_dmul>
 800446a:	a36f      	add	r3, pc, #444	; (adr r3, 8004628 <_dtoa_r+0x2a8>)
 800446c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004470:	f7fb ff1c 	bl	80002ac <__adddf3>
 8004474:	4604      	mov	r4, r0
 8004476:	4630      	mov	r0, r6
 8004478:	460d      	mov	r5, r1
 800447a:	f7fc f863 	bl	8000544 <__aeabi_i2d>
 800447e:	a36c      	add	r3, pc, #432	; (adr r3, 8004630 <_dtoa_r+0x2b0>)
 8004480:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004484:	f7fc f8c8 	bl	8000618 <__aeabi_dmul>
 8004488:	4602      	mov	r2, r0
 800448a:	460b      	mov	r3, r1
 800448c:	4620      	mov	r0, r4
 800448e:	4629      	mov	r1, r5
 8004490:	f7fb ff0c 	bl	80002ac <__adddf3>
 8004494:	4604      	mov	r4, r0
 8004496:	460d      	mov	r5, r1
 8004498:	f7fc fb6e 	bl	8000b78 <__aeabi_d2iz>
 800449c:	2200      	movs	r2, #0
 800449e:	4680      	mov	r8, r0
 80044a0:	2300      	movs	r3, #0
 80044a2:	4620      	mov	r0, r4
 80044a4:	4629      	mov	r1, r5
 80044a6:	f7fc fb29 	bl	8000afc <__aeabi_dcmplt>
 80044aa:	b148      	cbz	r0, 80044c0 <_dtoa_r+0x140>
 80044ac:	4640      	mov	r0, r8
 80044ae:	f7fc f849 	bl	8000544 <__aeabi_i2d>
 80044b2:	4622      	mov	r2, r4
 80044b4:	462b      	mov	r3, r5
 80044b6:	f7fc fb17 	bl	8000ae8 <__aeabi_dcmpeq>
 80044ba:	b908      	cbnz	r0, 80044c0 <_dtoa_r+0x140>
 80044bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80044c0:	f1b8 0f16 	cmp.w	r8, #22
 80044c4:	d855      	bhi.n	8004572 <_dtoa_r+0x1f2>
 80044c6:	4b61      	ldr	r3, [pc, #388]	; (800464c <_dtoa_r+0x2cc>)
 80044c8:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80044cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044d0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80044d4:	f7fc fb12 	bl	8000afc <__aeabi_dcmplt>
 80044d8:	2800      	cmp	r0, #0
 80044da:	d04c      	beq.n	8004576 <_dtoa_r+0x1f6>
 80044dc:	f108 38ff 	add.w	r8, r8, #4294967295
 80044e0:	2300      	movs	r3, #0
 80044e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80044e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80044e6:	1b9e      	subs	r6, r3, r6
 80044e8:	1e73      	subs	r3, r6, #1
 80044ea:	9309      	str	r3, [sp, #36]	; 0x24
 80044ec:	bf45      	ittet	mi
 80044ee:	f1c6 0301 	rsbmi	r3, r6, #1
 80044f2:	9306      	strmi	r3, [sp, #24]
 80044f4:	2300      	movpl	r3, #0
 80044f6:	2300      	movmi	r3, #0
 80044f8:	bf4c      	ite	mi
 80044fa:	9309      	strmi	r3, [sp, #36]	; 0x24
 80044fc:	9306      	strpl	r3, [sp, #24]
 80044fe:	f1b8 0f00 	cmp.w	r8, #0
 8004502:	db3a      	blt.n	800457a <_dtoa_r+0x1fa>
 8004504:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004506:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800450a:	4443      	add	r3, r8
 800450c:	9309      	str	r3, [sp, #36]	; 0x24
 800450e:	2300      	movs	r3, #0
 8004510:	930a      	str	r3, [sp, #40]	; 0x28
 8004512:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004514:	2b09      	cmp	r3, #9
 8004516:	d86a      	bhi.n	80045ee <_dtoa_r+0x26e>
 8004518:	2b05      	cmp	r3, #5
 800451a:	bfc4      	itt	gt
 800451c:	3b04      	subgt	r3, #4
 800451e:	9320      	strgt	r3, [sp, #128]	; 0x80
 8004520:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004522:	f1a3 0302 	sub.w	r3, r3, #2
 8004526:	bfcc      	ite	gt
 8004528:	2400      	movgt	r4, #0
 800452a:	2401      	movle	r4, #1
 800452c:	2b03      	cmp	r3, #3
 800452e:	d869      	bhi.n	8004604 <_dtoa_r+0x284>
 8004530:	e8df f003 	tbb	[pc, r3]
 8004534:	5b383a2d 	.word	0x5b383a2d
 8004538:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	; 0x50
 800453c:	441e      	add	r6, r3
 800453e:	f206 4332 	addw	r3, r6, #1074	; 0x432
 8004542:	2b20      	cmp	r3, #32
 8004544:	bfc3      	ittte	gt
 8004546:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800454a:	f206 4012 	addwgt	r0, r6, #1042	; 0x412
 800454e:	fa0b f303 	lslgt.w	r3, fp, r3
 8004552:	f1c3 0320 	rsble	r3, r3, #32
 8004556:	bfc6      	itte	gt
 8004558:	fa24 f000 	lsrgt.w	r0, r4, r0
 800455c:	4318      	orrgt	r0, r3
 800455e:	fa04 f003 	lslle.w	r0, r4, r3
 8004562:	f7fb ffdf 	bl	8000524 <__aeabi_ui2d>
 8004566:	2301      	movs	r3, #1
 8004568:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800456c:	3e01      	subs	r6, #1
 800456e:	9313      	str	r3, [sp, #76]	; 0x4c
 8004570:	e772      	b.n	8004458 <_dtoa_r+0xd8>
 8004572:	2301      	movs	r3, #1
 8004574:	e7b5      	b.n	80044e2 <_dtoa_r+0x162>
 8004576:	900f      	str	r0, [sp, #60]	; 0x3c
 8004578:	e7b4      	b.n	80044e4 <_dtoa_r+0x164>
 800457a:	9b06      	ldr	r3, [sp, #24]
 800457c:	eba3 0308 	sub.w	r3, r3, r8
 8004580:	9306      	str	r3, [sp, #24]
 8004582:	f1c8 0300 	rsb	r3, r8, #0
 8004586:	930a      	str	r3, [sp, #40]	; 0x28
 8004588:	2300      	movs	r3, #0
 800458a:	930e      	str	r3, [sp, #56]	; 0x38
 800458c:	e7c1      	b.n	8004512 <_dtoa_r+0x192>
 800458e:	2300      	movs	r3, #0
 8004590:	930b      	str	r3, [sp, #44]	; 0x2c
 8004592:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004594:	2b00      	cmp	r3, #0
 8004596:	dc38      	bgt.n	800460a <_dtoa_r+0x28a>
 8004598:	2301      	movs	r3, #1
 800459a:	9308      	str	r3, [sp, #32]
 800459c:	9305      	str	r3, [sp, #20]
 800459e:	461a      	mov	r2, r3
 80045a0:	9221      	str	r2, [sp, #132]	; 0x84
 80045a2:	e00b      	b.n	80045bc <_dtoa_r+0x23c>
 80045a4:	2301      	movs	r3, #1
 80045a6:	e7f3      	b.n	8004590 <_dtoa_r+0x210>
 80045a8:	2300      	movs	r3, #0
 80045aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80045ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80045ae:	4443      	add	r3, r8
 80045b0:	9308      	str	r3, [sp, #32]
 80045b2:	3301      	adds	r3, #1
 80045b4:	2b01      	cmp	r3, #1
 80045b6:	9305      	str	r3, [sp, #20]
 80045b8:	bfb8      	it	lt
 80045ba:	2301      	movlt	r3, #1
 80045bc:	2200      	movs	r2, #0
 80045be:	f8c9 2044 	str.w	r2, [r9, #68]	; 0x44
 80045c2:	2204      	movs	r2, #4
 80045c4:	f102 0014 	add.w	r0, r2, #20
 80045c8:	4298      	cmp	r0, r3
 80045ca:	f8d9 1044 	ldr.w	r1, [r9, #68]	; 0x44
 80045ce:	d920      	bls.n	8004612 <_dtoa_r+0x292>
 80045d0:	4648      	mov	r0, r9
 80045d2:	f001 fb1d 	bl	8005c10 <_Balloc>
 80045d6:	9004      	str	r0, [sp, #16]
 80045d8:	2800      	cmp	r0, #0
 80045da:	d13d      	bne.n	8004658 <_dtoa_r+0x2d8>
 80045dc:	4b1c      	ldr	r3, [pc, #112]	; (8004650 <_dtoa_r+0x2d0>)
 80045de:	4602      	mov	r2, r0
 80045e0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80045e4:	481b      	ldr	r0, [pc, #108]	; (8004654 <_dtoa_r+0x2d4>)
 80045e6:	f002 fde3 	bl	80071b0 <__assert_func>
 80045ea:	2301      	movs	r3, #1
 80045ec:	e7dd      	b.n	80045aa <_dtoa_r+0x22a>
 80045ee:	2401      	movs	r4, #1
 80045f0:	2300      	movs	r3, #0
 80045f2:	9320      	str	r3, [sp, #128]	; 0x80
 80045f4:	940b      	str	r4, [sp, #44]	; 0x2c
 80045f6:	f04f 33ff 	mov.w	r3, #4294967295
 80045fa:	9308      	str	r3, [sp, #32]
 80045fc:	9305      	str	r3, [sp, #20]
 80045fe:	2200      	movs	r2, #0
 8004600:	2312      	movs	r3, #18
 8004602:	e7cd      	b.n	80045a0 <_dtoa_r+0x220>
 8004604:	2301      	movs	r3, #1
 8004606:	930b      	str	r3, [sp, #44]	; 0x2c
 8004608:	e7f5      	b.n	80045f6 <_dtoa_r+0x276>
 800460a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800460c:	9308      	str	r3, [sp, #32]
 800460e:	9305      	str	r3, [sp, #20]
 8004610:	e7d4      	b.n	80045bc <_dtoa_r+0x23c>
 8004612:	3101      	adds	r1, #1
 8004614:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
 8004618:	0052      	lsls	r2, r2, #1
 800461a:	e7d3      	b.n	80045c4 <_dtoa_r+0x244>
 800461c:	f3af 8000 	nop.w
 8004620:	636f4361 	.word	0x636f4361
 8004624:	3fd287a7 	.word	0x3fd287a7
 8004628:	8b60c8b3 	.word	0x8b60c8b3
 800462c:	3fc68a28 	.word	0x3fc68a28
 8004630:	509f79fb 	.word	0x509f79fb
 8004634:	3fd34413 	.word	0x3fd34413
 8004638:	7ff00000 	.word	0x7ff00000
 800463c:	08007d14 	.word	0x08007d14
 8004640:	08007d18 	.word	0x08007d18
 8004644:	08007cf3 	.word	0x08007cf3
 8004648:	3ff80000 	.word	0x3ff80000
 800464c:	08007e18 	.word	0x08007e18
 8004650:	08007d21 	.word	0x08007d21
 8004654:	08007d32 	.word	0x08007d32
 8004658:	9b04      	ldr	r3, [sp, #16]
 800465a:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
 800465e:	9b05      	ldr	r3, [sp, #20]
 8004660:	2b0e      	cmp	r3, #14
 8004662:	f200 80a1 	bhi.w	80047a8 <_dtoa_r+0x428>
 8004666:	2c00      	cmp	r4, #0
 8004668:	f000 809e 	beq.w	80047a8 <_dtoa_r+0x428>
 800466c:	f1b8 0f00 	cmp.w	r8, #0
 8004670:	dd34      	ble.n	80046dc <_dtoa_r+0x35c>
 8004672:	4a96      	ldr	r2, [pc, #600]	; (80048cc <_dtoa_r+0x54c>)
 8004674:	f008 030f 	and.w	r3, r8, #15
 8004678:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800467c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004680:	f418 7f80 	tst.w	r8, #256	; 0x100
 8004684:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8004688:	ea4f 1528 	mov.w	r5, r8, asr #4
 800468c:	d016      	beq.n	80046bc <_dtoa_r+0x33c>
 800468e:	4b90      	ldr	r3, [pc, #576]	; (80048d0 <_dtoa_r+0x550>)
 8004690:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004694:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004698:	f7fc f8e8 	bl	800086c <__aeabi_ddiv>
 800469c:	f005 050f 	and.w	r5, r5, #15
 80046a0:	4682      	mov	sl, r0
 80046a2:	468b      	mov	fp, r1
 80046a4:	2603      	movs	r6, #3
 80046a6:	4c8a      	ldr	r4, [pc, #552]	; (80048d0 <_dtoa_r+0x550>)
 80046a8:	b955      	cbnz	r5, 80046c0 <_dtoa_r+0x340>
 80046aa:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80046ae:	4650      	mov	r0, sl
 80046b0:	4659      	mov	r1, fp
 80046b2:	f7fc f8db 	bl	800086c <__aeabi_ddiv>
 80046b6:	4682      	mov	sl, r0
 80046b8:	468b      	mov	fp, r1
 80046ba:	e028      	b.n	800470e <_dtoa_r+0x38e>
 80046bc:	2602      	movs	r6, #2
 80046be:	e7f2      	b.n	80046a6 <_dtoa_r+0x326>
 80046c0:	07e9      	lsls	r1, r5, #31
 80046c2:	d508      	bpl.n	80046d6 <_dtoa_r+0x356>
 80046c4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80046c8:	e9d4 2300 	ldrd	r2, r3, [r4]
 80046cc:	f7fb ffa4 	bl	8000618 <__aeabi_dmul>
 80046d0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80046d4:	3601      	adds	r6, #1
 80046d6:	106d      	asrs	r5, r5, #1
 80046d8:	3408      	adds	r4, #8
 80046da:	e7e5      	b.n	80046a8 <_dtoa_r+0x328>
 80046dc:	f000 809e 	beq.w	800481c <_dtoa_r+0x49c>
 80046e0:	f1c8 0400 	rsb	r4, r8, #0
 80046e4:	4b79      	ldr	r3, [pc, #484]	; (80048cc <_dtoa_r+0x54c>)
 80046e6:	4d7a      	ldr	r5, [pc, #488]	; (80048d0 <_dtoa_r+0x550>)
 80046e8:	f004 020f 	and.w	r2, r4, #15
 80046ec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80046f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046f4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80046f8:	f7fb ff8e 	bl	8000618 <__aeabi_dmul>
 80046fc:	1124      	asrs	r4, r4, #4
 80046fe:	4682      	mov	sl, r0
 8004700:	468b      	mov	fp, r1
 8004702:	2300      	movs	r3, #0
 8004704:	2602      	movs	r6, #2
 8004706:	2c00      	cmp	r4, #0
 8004708:	d17d      	bne.n	8004806 <_dtoa_r+0x486>
 800470a:	2b00      	cmp	r3, #0
 800470c:	d1d3      	bne.n	80046b6 <_dtoa_r+0x336>
 800470e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004710:	2b00      	cmp	r3, #0
 8004712:	f000 8085 	beq.w	8004820 <_dtoa_r+0x4a0>
 8004716:	4b6f      	ldr	r3, [pc, #444]	; (80048d4 <_dtoa_r+0x554>)
 8004718:	2200      	movs	r2, #0
 800471a:	4650      	mov	r0, sl
 800471c:	4659      	mov	r1, fp
 800471e:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
 8004722:	f7fc f9eb 	bl	8000afc <__aeabi_dcmplt>
 8004726:	2800      	cmp	r0, #0
 8004728:	d07a      	beq.n	8004820 <_dtoa_r+0x4a0>
 800472a:	9b05      	ldr	r3, [sp, #20]
 800472c:	2b00      	cmp	r3, #0
 800472e:	d077      	beq.n	8004820 <_dtoa_r+0x4a0>
 8004730:	9b08      	ldr	r3, [sp, #32]
 8004732:	2b00      	cmp	r3, #0
 8004734:	dd36      	ble.n	80047a4 <_dtoa_r+0x424>
 8004736:	4650      	mov	r0, sl
 8004738:	4659      	mov	r1, fp
 800473a:	4b67      	ldr	r3, [pc, #412]	; (80048d8 <_dtoa_r+0x558>)
 800473c:	2200      	movs	r2, #0
 800473e:	f7fb ff6b 	bl	8000618 <__aeabi_dmul>
 8004742:	9c08      	ldr	r4, [sp, #32]
 8004744:	f108 35ff 	add.w	r5, r8, #4294967295
 8004748:	4682      	mov	sl, r0
 800474a:	468b      	mov	fp, r1
 800474c:	3601      	adds	r6, #1
 800474e:	4630      	mov	r0, r6
 8004750:	f7fb fef8 	bl	8000544 <__aeabi_i2d>
 8004754:	4652      	mov	r2, sl
 8004756:	465b      	mov	r3, fp
 8004758:	f7fb ff5e 	bl	8000618 <__aeabi_dmul>
 800475c:	4b5f      	ldr	r3, [pc, #380]	; (80048dc <_dtoa_r+0x55c>)
 800475e:	2200      	movs	r2, #0
 8004760:	f7fb fda4 	bl	80002ac <__adddf3>
 8004764:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8004768:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800476c:	9611      	str	r6, [sp, #68]	; 0x44
 800476e:	2c00      	cmp	r4, #0
 8004770:	d159      	bne.n	8004826 <_dtoa_r+0x4a6>
 8004772:	4b5b      	ldr	r3, [pc, #364]	; (80048e0 <_dtoa_r+0x560>)
 8004774:	2200      	movs	r2, #0
 8004776:	4650      	mov	r0, sl
 8004778:	4659      	mov	r1, fp
 800477a:	f7fb fd95 	bl	80002a8 <__aeabi_dsub>
 800477e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004780:	4633      	mov	r3, r6
 8004782:	4682      	mov	sl, r0
 8004784:	468b      	mov	fp, r1
 8004786:	f7fc f9d7 	bl	8000b38 <__aeabi_dcmpgt>
 800478a:	2800      	cmp	r0, #0
 800478c:	f040 828b 	bne.w	8004ca6 <_dtoa_r+0x926>
 8004790:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004792:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8004796:	4650      	mov	r0, sl
 8004798:	4659      	mov	r1, fp
 800479a:	f7fc f9af 	bl	8000afc <__aeabi_dcmplt>
 800479e:	2800      	cmp	r0, #0
 80047a0:	f040 827f 	bne.w	8004ca2 <_dtoa_r+0x922>
 80047a4:	e9dd ab0c 	ldrd	sl, fp, [sp, #48]	; 0x30
 80047a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	f2c0 814d 	blt.w	8004a4a <_dtoa_r+0x6ca>
 80047b0:	f1b8 0f0e 	cmp.w	r8, #14
 80047b4:	f300 8149 	bgt.w	8004a4a <_dtoa_r+0x6ca>
 80047b8:	4b44      	ldr	r3, [pc, #272]	; (80048cc <_dtoa_r+0x54c>)
 80047ba:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80047be:	e9d3 3400 	ldrd	r3, r4, [r3]
 80047c2:	e9cd 3406 	strd	r3, r4, [sp, #24]
 80047c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	f280 80d6 	bge.w	800497a <_dtoa_r+0x5fa>
 80047ce:	9b05      	ldr	r3, [sp, #20]
 80047d0:	2b00      	cmp	r3, #0
 80047d2:	f300 80d2 	bgt.w	800497a <_dtoa_r+0x5fa>
 80047d6:	f040 8263 	bne.w	8004ca0 <_dtoa_r+0x920>
 80047da:	4b41      	ldr	r3, [pc, #260]	; (80048e0 <_dtoa_r+0x560>)
 80047dc:	2200      	movs	r2, #0
 80047de:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80047e2:	f7fb ff19 	bl	8000618 <__aeabi_dmul>
 80047e6:	4652      	mov	r2, sl
 80047e8:	465b      	mov	r3, fp
 80047ea:	f7fc f99b 	bl	8000b24 <__aeabi_dcmpge>
 80047ee:	9c05      	ldr	r4, [sp, #20]
 80047f0:	4625      	mov	r5, r4
 80047f2:	2800      	cmp	r0, #0
 80047f4:	f040 823c 	bne.w	8004c70 <_dtoa_r+0x8f0>
 80047f8:	9e04      	ldr	r6, [sp, #16]
 80047fa:	2331      	movs	r3, #49	; 0x31
 80047fc:	f806 3b01 	strb.w	r3, [r6], #1
 8004800:	f108 0801 	add.w	r8, r8, #1
 8004804:	e238      	b.n	8004c78 <_dtoa_r+0x8f8>
 8004806:	07e2      	lsls	r2, r4, #31
 8004808:	d505      	bpl.n	8004816 <_dtoa_r+0x496>
 800480a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800480e:	f7fb ff03 	bl	8000618 <__aeabi_dmul>
 8004812:	3601      	adds	r6, #1
 8004814:	2301      	movs	r3, #1
 8004816:	1064      	asrs	r4, r4, #1
 8004818:	3508      	adds	r5, #8
 800481a:	e774      	b.n	8004706 <_dtoa_r+0x386>
 800481c:	2602      	movs	r6, #2
 800481e:	e776      	b.n	800470e <_dtoa_r+0x38e>
 8004820:	9c05      	ldr	r4, [sp, #20]
 8004822:	4645      	mov	r5, r8
 8004824:	e793      	b.n	800474e <_dtoa_r+0x3ce>
 8004826:	9904      	ldr	r1, [sp, #16]
 8004828:	4b28      	ldr	r3, [pc, #160]	; (80048cc <_dtoa_r+0x54c>)
 800482a:	4421      	add	r1, r4
 800482c:	9112      	str	r1, [sp, #72]	; 0x48
 800482e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004830:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004834:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8004838:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800483c:	2900      	cmp	r1, #0
 800483e:	d053      	beq.n	80048e8 <_dtoa_r+0x568>
 8004840:	4928      	ldr	r1, [pc, #160]	; (80048e4 <_dtoa_r+0x564>)
 8004842:	2000      	movs	r0, #0
 8004844:	f7fc f812 	bl	800086c <__aeabi_ddiv>
 8004848:	4632      	mov	r2, r6
 800484a:	463b      	mov	r3, r7
 800484c:	f7fb fd2c 	bl	80002a8 <__aeabi_dsub>
 8004850:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004854:	9e04      	ldr	r6, [sp, #16]
 8004856:	4659      	mov	r1, fp
 8004858:	4650      	mov	r0, sl
 800485a:	f7fc f98d 	bl	8000b78 <__aeabi_d2iz>
 800485e:	4604      	mov	r4, r0
 8004860:	f7fb fe70 	bl	8000544 <__aeabi_i2d>
 8004864:	4602      	mov	r2, r0
 8004866:	460b      	mov	r3, r1
 8004868:	4650      	mov	r0, sl
 800486a:	4659      	mov	r1, fp
 800486c:	f7fb fd1c 	bl	80002a8 <__aeabi_dsub>
 8004870:	3430      	adds	r4, #48	; 0x30
 8004872:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004876:	f806 4b01 	strb.w	r4, [r6], #1
 800487a:	4682      	mov	sl, r0
 800487c:	468b      	mov	fp, r1
 800487e:	f7fc f93d 	bl	8000afc <__aeabi_dcmplt>
 8004882:	2800      	cmp	r0, #0
 8004884:	d171      	bne.n	800496a <_dtoa_r+0x5ea>
 8004886:	4652      	mov	r2, sl
 8004888:	465b      	mov	r3, fp
 800488a:	4912      	ldr	r1, [pc, #72]	; (80048d4 <_dtoa_r+0x554>)
 800488c:	2000      	movs	r0, #0
 800488e:	f7fb fd0b 	bl	80002a8 <__aeabi_dsub>
 8004892:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004896:	f7fc f931 	bl	8000afc <__aeabi_dcmplt>
 800489a:	2800      	cmp	r0, #0
 800489c:	f040 80b7 	bne.w	8004a0e <_dtoa_r+0x68e>
 80048a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048a2:	429e      	cmp	r6, r3
 80048a4:	f43f af7e 	beq.w	80047a4 <_dtoa_r+0x424>
 80048a8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80048ac:	4b0a      	ldr	r3, [pc, #40]	; (80048d8 <_dtoa_r+0x558>)
 80048ae:	2200      	movs	r2, #0
 80048b0:	f7fb feb2 	bl	8000618 <__aeabi_dmul>
 80048b4:	4b08      	ldr	r3, [pc, #32]	; (80048d8 <_dtoa_r+0x558>)
 80048b6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80048ba:	2200      	movs	r2, #0
 80048bc:	4650      	mov	r0, sl
 80048be:	4659      	mov	r1, fp
 80048c0:	f7fb feaa 	bl	8000618 <__aeabi_dmul>
 80048c4:	4682      	mov	sl, r0
 80048c6:	468b      	mov	fp, r1
 80048c8:	e7c5      	b.n	8004856 <_dtoa_r+0x4d6>
 80048ca:	bf00      	nop
 80048cc:	08007e18 	.word	0x08007e18
 80048d0:	08007df0 	.word	0x08007df0
 80048d4:	3ff00000 	.word	0x3ff00000
 80048d8:	40240000 	.word	0x40240000
 80048dc:	401c0000 	.word	0x401c0000
 80048e0:	40140000 	.word	0x40140000
 80048e4:	3fe00000 	.word	0x3fe00000
 80048e8:	4630      	mov	r0, r6
 80048ea:	4639      	mov	r1, r7
 80048ec:	f7fb fe94 	bl	8000618 <__aeabi_dmul>
 80048f0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80048f4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80048f6:	9e04      	ldr	r6, [sp, #16]
 80048f8:	4659      	mov	r1, fp
 80048fa:	4650      	mov	r0, sl
 80048fc:	f7fc f93c 	bl	8000b78 <__aeabi_d2iz>
 8004900:	4604      	mov	r4, r0
 8004902:	f7fb fe1f 	bl	8000544 <__aeabi_i2d>
 8004906:	3430      	adds	r4, #48	; 0x30
 8004908:	4602      	mov	r2, r0
 800490a:	460b      	mov	r3, r1
 800490c:	4650      	mov	r0, sl
 800490e:	4659      	mov	r1, fp
 8004910:	f7fb fcca 	bl	80002a8 <__aeabi_dsub>
 8004914:	f806 4b01 	strb.w	r4, [r6], #1
 8004918:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800491a:	429e      	cmp	r6, r3
 800491c:	4682      	mov	sl, r0
 800491e:	468b      	mov	fp, r1
 8004920:	f04f 0200 	mov.w	r2, #0
 8004924:	d123      	bne.n	800496e <_dtoa_r+0x5ee>
 8004926:	4bb0      	ldr	r3, [pc, #704]	; (8004be8 <_dtoa_r+0x868>)
 8004928:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800492c:	f7fb fcbe 	bl	80002ac <__adddf3>
 8004930:	4602      	mov	r2, r0
 8004932:	460b      	mov	r3, r1
 8004934:	4650      	mov	r0, sl
 8004936:	4659      	mov	r1, fp
 8004938:	f7fc f8fe 	bl	8000b38 <__aeabi_dcmpgt>
 800493c:	2800      	cmp	r0, #0
 800493e:	d166      	bne.n	8004a0e <_dtoa_r+0x68e>
 8004940:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004944:	49a8      	ldr	r1, [pc, #672]	; (8004be8 <_dtoa_r+0x868>)
 8004946:	2000      	movs	r0, #0
 8004948:	f7fb fcae 	bl	80002a8 <__aeabi_dsub>
 800494c:	4602      	mov	r2, r0
 800494e:	460b      	mov	r3, r1
 8004950:	4650      	mov	r0, sl
 8004952:	4659      	mov	r1, fp
 8004954:	f7fc f8d2 	bl	8000afc <__aeabi_dcmplt>
 8004958:	2800      	cmp	r0, #0
 800495a:	f43f af23 	beq.w	80047a4 <_dtoa_r+0x424>
 800495e:	463e      	mov	r6, r7
 8004960:	3f01      	subs	r7, #1
 8004962:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004966:	2b30      	cmp	r3, #48	; 0x30
 8004968:	d0f9      	beq.n	800495e <_dtoa_r+0x5de>
 800496a:	46a8      	mov	r8, r5
 800496c:	e03e      	b.n	80049ec <_dtoa_r+0x66c>
 800496e:	4b9f      	ldr	r3, [pc, #636]	; (8004bec <_dtoa_r+0x86c>)
 8004970:	f7fb fe52 	bl	8000618 <__aeabi_dmul>
 8004974:	4682      	mov	sl, r0
 8004976:	468b      	mov	fp, r1
 8004978:	e7be      	b.n	80048f8 <_dtoa_r+0x578>
 800497a:	465d      	mov	r5, fp
 800497c:	9e04      	ldr	r6, [sp, #16]
 800497e:	f8df b26c 	ldr.w	fp, [pc, #620]	; 8004bec <_dtoa_r+0x86c>
 8004982:	4654      	mov	r4, sl
 8004984:	f04f 0a00 	mov.w	sl, #0
 8004988:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800498c:	4620      	mov	r0, r4
 800498e:	4629      	mov	r1, r5
 8004990:	f7fb ff6c 	bl	800086c <__aeabi_ddiv>
 8004994:	f7fc f8f0 	bl	8000b78 <__aeabi_d2iz>
 8004998:	4607      	mov	r7, r0
 800499a:	f7fb fdd3 	bl	8000544 <__aeabi_i2d>
 800499e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80049a2:	f7fb fe39 	bl	8000618 <__aeabi_dmul>
 80049a6:	4602      	mov	r2, r0
 80049a8:	460b      	mov	r3, r1
 80049aa:	4620      	mov	r0, r4
 80049ac:	4629      	mov	r1, r5
 80049ae:	f107 0430 	add.w	r4, r7, #48	; 0x30
 80049b2:	f7fb fc79 	bl	80002a8 <__aeabi_dsub>
 80049b6:	f806 4b01 	strb.w	r4, [r6], #1
 80049ba:	9c04      	ldr	r4, [sp, #16]
 80049bc:	9d05      	ldr	r5, [sp, #20]
 80049be:	1b34      	subs	r4, r6, r4
 80049c0:	42a5      	cmp	r5, r4
 80049c2:	4602      	mov	r2, r0
 80049c4:	460b      	mov	r3, r1
 80049c6:	d133      	bne.n	8004a30 <_dtoa_r+0x6b0>
 80049c8:	f7fb fc70 	bl	80002ac <__adddf3>
 80049cc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80049d0:	4604      	mov	r4, r0
 80049d2:	460d      	mov	r5, r1
 80049d4:	f7fc f8b0 	bl	8000b38 <__aeabi_dcmpgt>
 80049d8:	b9c0      	cbnz	r0, 8004a0c <_dtoa_r+0x68c>
 80049da:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80049de:	4620      	mov	r0, r4
 80049e0:	4629      	mov	r1, r5
 80049e2:	f7fc f881 	bl	8000ae8 <__aeabi_dcmpeq>
 80049e6:	b108      	cbz	r0, 80049ec <_dtoa_r+0x66c>
 80049e8:	07fb      	lsls	r3, r7, #31
 80049ea:	d40f      	bmi.n	8004a0c <_dtoa_r+0x68c>
 80049ec:	4648      	mov	r0, r9
 80049ee:	9903      	ldr	r1, [sp, #12]
 80049f0:	f001 f933 	bl	8005c5a <_Bfree>
 80049f4:	2300      	movs	r3, #0
 80049f6:	7033      	strb	r3, [r6, #0]
 80049f8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80049fa:	f108 0001 	add.w	r0, r8, #1
 80049fe:	6018      	str	r0, [r3, #0]
 8004a00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004a02:	2b00      	cmp	r3, #0
 8004a04:	f43f acf0 	beq.w	80043e8 <_dtoa_r+0x68>
 8004a08:	601e      	str	r6, [r3, #0]
 8004a0a:	e4ed      	b.n	80043e8 <_dtoa_r+0x68>
 8004a0c:	4645      	mov	r5, r8
 8004a0e:	4633      	mov	r3, r6
 8004a10:	461e      	mov	r6, r3
 8004a12:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004a16:	2a39      	cmp	r2, #57	; 0x39
 8004a18:	d106      	bne.n	8004a28 <_dtoa_r+0x6a8>
 8004a1a:	9a04      	ldr	r2, [sp, #16]
 8004a1c:	429a      	cmp	r2, r3
 8004a1e:	d1f7      	bne.n	8004a10 <_dtoa_r+0x690>
 8004a20:	9904      	ldr	r1, [sp, #16]
 8004a22:	2230      	movs	r2, #48	; 0x30
 8004a24:	3501      	adds	r5, #1
 8004a26:	700a      	strb	r2, [r1, #0]
 8004a28:	781a      	ldrb	r2, [r3, #0]
 8004a2a:	3201      	adds	r2, #1
 8004a2c:	701a      	strb	r2, [r3, #0]
 8004a2e:	e79c      	b.n	800496a <_dtoa_r+0x5ea>
 8004a30:	4652      	mov	r2, sl
 8004a32:	465b      	mov	r3, fp
 8004a34:	f7fb fdf0 	bl	8000618 <__aeabi_dmul>
 8004a38:	2200      	movs	r2, #0
 8004a3a:	2300      	movs	r3, #0
 8004a3c:	4604      	mov	r4, r0
 8004a3e:	460d      	mov	r5, r1
 8004a40:	f7fc f852 	bl	8000ae8 <__aeabi_dcmpeq>
 8004a44:	2800      	cmp	r0, #0
 8004a46:	d09f      	beq.n	8004988 <_dtoa_r+0x608>
 8004a48:	e7d0      	b.n	80049ec <_dtoa_r+0x66c>
 8004a4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004a4c:	2a00      	cmp	r2, #0
 8004a4e:	f000 80cf 	beq.w	8004bf0 <_dtoa_r+0x870>
 8004a52:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004a54:	2a01      	cmp	r2, #1
 8004a56:	f300 80ad 	bgt.w	8004bb4 <_dtoa_r+0x834>
 8004a5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004a5c:	2a00      	cmp	r2, #0
 8004a5e:	f000 80a5 	beq.w	8004bac <_dtoa_r+0x82c>
 8004a62:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004a66:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004a68:	9e06      	ldr	r6, [sp, #24]
 8004a6a:	9a06      	ldr	r2, [sp, #24]
 8004a6c:	441a      	add	r2, r3
 8004a6e:	9206      	str	r2, [sp, #24]
 8004a70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a72:	2101      	movs	r1, #1
 8004a74:	441a      	add	r2, r3
 8004a76:	4648      	mov	r0, r9
 8004a78:	9209      	str	r2, [sp, #36]	; 0x24
 8004a7a:	f001 f98b 	bl	8005d94 <__i2b>
 8004a7e:	4605      	mov	r5, r0
 8004a80:	2e00      	cmp	r6, #0
 8004a82:	dd0c      	ble.n	8004a9e <_dtoa_r+0x71e>
 8004a84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a86:	2b00      	cmp	r3, #0
 8004a88:	dd09      	ble.n	8004a9e <_dtoa_r+0x71e>
 8004a8a:	42b3      	cmp	r3, r6
 8004a8c:	9a06      	ldr	r2, [sp, #24]
 8004a8e:	bfa8      	it	ge
 8004a90:	4633      	movge	r3, r6
 8004a92:	1ad2      	subs	r2, r2, r3
 8004a94:	9206      	str	r2, [sp, #24]
 8004a96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a98:	1af6      	subs	r6, r6, r3
 8004a9a:	1ad3      	subs	r3, r2, r3
 8004a9c:	9309      	str	r3, [sp, #36]	; 0x24
 8004a9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004aa0:	b1f3      	cbz	r3, 8004ae0 <_dtoa_r+0x760>
 8004aa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	f000 80a7 	beq.w	8004bf8 <_dtoa_r+0x878>
 8004aaa:	2c00      	cmp	r4, #0
 8004aac:	dd10      	ble.n	8004ad0 <_dtoa_r+0x750>
 8004aae:	4629      	mov	r1, r5
 8004ab0:	4622      	mov	r2, r4
 8004ab2:	4648      	mov	r0, r9
 8004ab4:	f001 fa2c 	bl	8005f10 <__pow5mult>
 8004ab8:	9a03      	ldr	r2, [sp, #12]
 8004aba:	4601      	mov	r1, r0
 8004abc:	4605      	mov	r5, r0
 8004abe:	4648      	mov	r0, r9
 8004ac0:	f001 f97e 	bl	8005dc0 <__multiply>
 8004ac4:	9903      	ldr	r1, [sp, #12]
 8004ac6:	4607      	mov	r7, r0
 8004ac8:	4648      	mov	r0, r9
 8004aca:	f001 f8c6 	bl	8005c5a <_Bfree>
 8004ace:	9703      	str	r7, [sp, #12]
 8004ad0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ad2:	1b1a      	subs	r2, r3, r4
 8004ad4:	d004      	beq.n	8004ae0 <_dtoa_r+0x760>
 8004ad6:	9903      	ldr	r1, [sp, #12]
 8004ad8:	4648      	mov	r0, r9
 8004ada:	f001 fa19 	bl	8005f10 <__pow5mult>
 8004ade:	9003      	str	r0, [sp, #12]
 8004ae0:	2101      	movs	r1, #1
 8004ae2:	4648      	mov	r0, r9
 8004ae4:	f001 f956 	bl	8005d94 <__i2b>
 8004ae8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	4604      	mov	r4, r0
 8004aee:	f340 8085 	ble.w	8004bfc <_dtoa_r+0x87c>
 8004af2:	461a      	mov	r2, r3
 8004af4:	4601      	mov	r1, r0
 8004af6:	4648      	mov	r0, r9
 8004af8:	f001 fa0a 	bl	8005f10 <__pow5mult>
 8004afc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004afe:	2b01      	cmp	r3, #1
 8004b00:	4604      	mov	r4, r0
 8004b02:	dd7e      	ble.n	8004c02 <_dtoa_r+0x882>
 8004b04:	2700      	movs	r7, #0
 8004b06:	6923      	ldr	r3, [r4, #16]
 8004b08:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004b0c:	6918      	ldr	r0, [r3, #16]
 8004b0e:	f001 f8f3 	bl	8005cf8 <__hi0bits>
 8004b12:	f1c0 0020 	rsb	r0, r0, #32
 8004b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b18:	4418      	add	r0, r3
 8004b1a:	f010 001f 	ands.w	r0, r0, #31
 8004b1e:	f000 808e 	beq.w	8004c3e <_dtoa_r+0x8be>
 8004b22:	f1c0 0320 	rsb	r3, r0, #32
 8004b26:	2b04      	cmp	r3, #4
 8004b28:	f340 8087 	ble.w	8004c3a <_dtoa_r+0x8ba>
 8004b2c:	f1c0 001c 	rsb	r0, r0, #28
 8004b30:	9b06      	ldr	r3, [sp, #24]
 8004b32:	4403      	add	r3, r0
 8004b34:	9306      	str	r3, [sp, #24]
 8004b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b38:	4403      	add	r3, r0
 8004b3a:	4406      	add	r6, r0
 8004b3c:	9309      	str	r3, [sp, #36]	; 0x24
 8004b3e:	9b06      	ldr	r3, [sp, #24]
 8004b40:	2b00      	cmp	r3, #0
 8004b42:	dd05      	ble.n	8004b50 <_dtoa_r+0x7d0>
 8004b44:	9903      	ldr	r1, [sp, #12]
 8004b46:	461a      	mov	r2, r3
 8004b48:	4648      	mov	r0, r9
 8004b4a:	f001 fa21 	bl	8005f90 <__lshift>
 8004b4e:	9003      	str	r0, [sp, #12]
 8004b50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	dd05      	ble.n	8004b62 <_dtoa_r+0x7e2>
 8004b56:	4621      	mov	r1, r4
 8004b58:	461a      	mov	r2, r3
 8004b5a:	4648      	mov	r0, r9
 8004b5c:	f001 fa18 	bl	8005f90 <__lshift>
 8004b60:	4604      	mov	r4, r0
 8004b62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004b64:	2b00      	cmp	r3, #0
 8004b66:	d06c      	beq.n	8004c42 <_dtoa_r+0x8c2>
 8004b68:	9803      	ldr	r0, [sp, #12]
 8004b6a:	4621      	mov	r1, r4
 8004b6c:	f001 fa80 	bl	8006070 <__mcmp>
 8004b70:	2800      	cmp	r0, #0
 8004b72:	da66      	bge.n	8004c42 <_dtoa_r+0x8c2>
 8004b74:	2300      	movs	r3, #0
 8004b76:	9903      	ldr	r1, [sp, #12]
 8004b78:	220a      	movs	r2, #10
 8004b7a:	4648      	mov	r0, r9
 8004b7c:	f001 f876 	bl	8005c6c <__multadd>
 8004b80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b82:	9003      	str	r0, [sp, #12]
 8004b84:	f108 38ff 	add.w	r8, r8, #4294967295
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	f000 81a0 	beq.w	8004ece <_dtoa_r+0xb4e>
 8004b8e:	2300      	movs	r3, #0
 8004b90:	4629      	mov	r1, r5
 8004b92:	220a      	movs	r2, #10
 8004b94:	4648      	mov	r0, r9
 8004b96:	f001 f869 	bl	8005c6c <__multadd>
 8004b9a:	9b08      	ldr	r3, [sp, #32]
 8004b9c:	2b00      	cmp	r3, #0
 8004b9e:	4605      	mov	r5, r0
 8004ba0:	f300 808a 	bgt.w	8004cb8 <_dtoa_r+0x938>
 8004ba4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004ba6:	2b02      	cmp	r3, #2
 8004ba8:	dc53      	bgt.n	8004c52 <_dtoa_r+0x8d2>
 8004baa:	e085      	b.n	8004cb8 <_dtoa_r+0x938>
 8004bac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004bae:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004bb2:	e758      	b.n	8004a66 <_dtoa_r+0x6e6>
 8004bb4:	9b05      	ldr	r3, [sp, #20]
 8004bb6:	1e5c      	subs	r4, r3, #1
 8004bb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bba:	42a3      	cmp	r3, r4
 8004bbc:	bfbf      	itttt	lt
 8004bbe:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004bc0:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004bc2:	1ae2      	sublt	r2, r4, r3
 8004bc4:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004bc6:	bfb6      	itet	lt
 8004bc8:	189b      	addlt	r3, r3, r2
 8004bca:	1b1c      	subge	r4, r3, r4
 8004bcc:	930e      	strlt	r3, [sp, #56]	; 0x38
 8004bce:	9b05      	ldr	r3, [sp, #20]
 8004bd0:	bfb8      	it	lt
 8004bd2:	2400      	movlt	r4, #0
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	bfb7      	itett	lt
 8004bd8:	e9dd 2305 	ldrdlt	r2, r3, [sp, #20]
 8004bdc:	e9dd 3605 	ldrdge	r3, r6, [sp, #20]
 8004be0:	1a9e      	sublt	r6, r3, r2
 8004be2:	2300      	movlt	r3, #0
 8004be4:	e741      	b.n	8004a6a <_dtoa_r+0x6ea>
 8004be6:	bf00      	nop
 8004be8:	3fe00000 	.word	0x3fe00000
 8004bec:	40240000 	.word	0x40240000
 8004bf0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004bf2:	9e06      	ldr	r6, [sp, #24]
 8004bf4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004bf6:	e743      	b.n	8004a80 <_dtoa_r+0x700>
 8004bf8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004bfa:	e76c      	b.n	8004ad6 <_dtoa_r+0x756>
 8004bfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004bfe:	2b01      	cmp	r3, #1
 8004c00:	dc17      	bgt.n	8004c32 <_dtoa_r+0x8b2>
 8004c02:	f1ba 0f00 	cmp.w	sl, #0
 8004c06:	d114      	bne.n	8004c32 <_dtoa_r+0x8b2>
 8004c08:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004c0c:	b99b      	cbnz	r3, 8004c36 <_dtoa_r+0x8b6>
 8004c0e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8004c12:	0d3f      	lsrs	r7, r7, #20
 8004c14:	053f      	lsls	r7, r7, #20
 8004c16:	b137      	cbz	r7, 8004c26 <_dtoa_r+0x8a6>
 8004c18:	9b06      	ldr	r3, [sp, #24]
 8004c1a:	3301      	adds	r3, #1
 8004c1c:	9306      	str	r3, [sp, #24]
 8004c1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c20:	3301      	adds	r3, #1
 8004c22:	9309      	str	r3, [sp, #36]	; 0x24
 8004c24:	2701      	movs	r7, #1
 8004c26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	f47f af6c 	bne.w	8004b06 <_dtoa_r+0x786>
 8004c2e:	2001      	movs	r0, #1
 8004c30:	e771      	b.n	8004b16 <_dtoa_r+0x796>
 8004c32:	2700      	movs	r7, #0
 8004c34:	e7f7      	b.n	8004c26 <_dtoa_r+0x8a6>
 8004c36:	4657      	mov	r7, sl
 8004c38:	e7f5      	b.n	8004c26 <_dtoa_r+0x8a6>
 8004c3a:	d080      	beq.n	8004b3e <_dtoa_r+0x7be>
 8004c3c:	4618      	mov	r0, r3
 8004c3e:	301c      	adds	r0, #28
 8004c40:	e776      	b.n	8004b30 <_dtoa_r+0x7b0>
 8004c42:	9b05      	ldr	r3, [sp, #20]
 8004c44:	2b00      	cmp	r3, #0
 8004c46:	dc31      	bgt.n	8004cac <_dtoa_r+0x92c>
 8004c48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004c4a:	2b02      	cmp	r3, #2
 8004c4c:	dd2e      	ble.n	8004cac <_dtoa_r+0x92c>
 8004c4e:	9b05      	ldr	r3, [sp, #20]
 8004c50:	9308      	str	r3, [sp, #32]
 8004c52:	9b08      	ldr	r3, [sp, #32]
 8004c54:	b963      	cbnz	r3, 8004c70 <_dtoa_r+0x8f0>
 8004c56:	4621      	mov	r1, r4
 8004c58:	2205      	movs	r2, #5
 8004c5a:	4648      	mov	r0, r9
 8004c5c:	f001 f806 	bl	8005c6c <__multadd>
 8004c60:	4601      	mov	r1, r0
 8004c62:	4604      	mov	r4, r0
 8004c64:	9803      	ldr	r0, [sp, #12]
 8004c66:	f001 fa03 	bl	8006070 <__mcmp>
 8004c6a:	2800      	cmp	r0, #0
 8004c6c:	f73f adc4 	bgt.w	80047f8 <_dtoa_r+0x478>
 8004c70:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004c72:	9e04      	ldr	r6, [sp, #16]
 8004c74:	ea6f 0803 	mvn.w	r8, r3
 8004c78:	2700      	movs	r7, #0
 8004c7a:	4621      	mov	r1, r4
 8004c7c:	4648      	mov	r0, r9
 8004c7e:	f000 ffec 	bl	8005c5a <_Bfree>
 8004c82:	2d00      	cmp	r5, #0
 8004c84:	f43f aeb2 	beq.w	80049ec <_dtoa_r+0x66c>
 8004c88:	b12f      	cbz	r7, 8004c96 <_dtoa_r+0x916>
 8004c8a:	42af      	cmp	r7, r5
 8004c8c:	d003      	beq.n	8004c96 <_dtoa_r+0x916>
 8004c8e:	4639      	mov	r1, r7
 8004c90:	4648      	mov	r0, r9
 8004c92:	f000 ffe2 	bl	8005c5a <_Bfree>
 8004c96:	4629      	mov	r1, r5
 8004c98:	4648      	mov	r0, r9
 8004c9a:	f000 ffde 	bl	8005c5a <_Bfree>
 8004c9e:	e6a5      	b.n	80049ec <_dtoa_r+0x66c>
 8004ca0:	2400      	movs	r4, #0
 8004ca2:	4625      	mov	r5, r4
 8004ca4:	e7e4      	b.n	8004c70 <_dtoa_r+0x8f0>
 8004ca6:	46a8      	mov	r8, r5
 8004ca8:	4625      	mov	r5, r4
 8004caa:	e5a5      	b.n	80047f8 <_dtoa_r+0x478>
 8004cac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004cae:	2b00      	cmp	r3, #0
 8004cb0:	f000 80c4 	beq.w	8004e3c <_dtoa_r+0xabc>
 8004cb4:	9b05      	ldr	r3, [sp, #20]
 8004cb6:	9308      	str	r3, [sp, #32]
 8004cb8:	2e00      	cmp	r6, #0
 8004cba:	dd05      	ble.n	8004cc8 <_dtoa_r+0x948>
 8004cbc:	4629      	mov	r1, r5
 8004cbe:	4632      	mov	r2, r6
 8004cc0:	4648      	mov	r0, r9
 8004cc2:	f001 f965 	bl	8005f90 <__lshift>
 8004cc6:	4605      	mov	r5, r0
 8004cc8:	2f00      	cmp	r7, #0
 8004cca:	d058      	beq.n	8004d7e <_dtoa_r+0x9fe>
 8004ccc:	6869      	ldr	r1, [r5, #4]
 8004cce:	4648      	mov	r0, r9
 8004cd0:	f000 ff9e 	bl	8005c10 <_Balloc>
 8004cd4:	4606      	mov	r6, r0
 8004cd6:	b920      	cbnz	r0, 8004ce2 <_dtoa_r+0x962>
 8004cd8:	4b81      	ldr	r3, [pc, #516]	; (8004ee0 <_dtoa_r+0xb60>)
 8004cda:	4602      	mov	r2, r0
 8004cdc:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004ce0:	e480      	b.n	80045e4 <_dtoa_r+0x264>
 8004ce2:	692a      	ldr	r2, [r5, #16]
 8004ce4:	3202      	adds	r2, #2
 8004ce6:	0092      	lsls	r2, r2, #2
 8004ce8:	f105 010c 	add.w	r1, r5, #12
 8004cec:	300c      	adds	r0, #12
 8004cee:	f000 ff5b 	bl	8005ba8 <memcpy>
 8004cf2:	2201      	movs	r2, #1
 8004cf4:	4631      	mov	r1, r6
 8004cf6:	4648      	mov	r0, r9
 8004cf8:	f001 f94a 	bl	8005f90 <__lshift>
 8004cfc:	9b04      	ldr	r3, [sp, #16]
 8004cfe:	9a04      	ldr	r2, [sp, #16]
 8004d00:	3301      	adds	r3, #1
 8004d02:	9305      	str	r3, [sp, #20]
 8004d04:	9b08      	ldr	r3, [sp, #32]
 8004d06:	4413      	add	r3, r2
 8004d08:	930a      	str	r3, [sp, #40]	; 0x28
 8004d0a:	f00a 0301 	and.w	r3, sl, #1
 8004d0e:	462f      	mov	r7, r5
 8004d10:	9309      	str	r3, [sp, #36]	; 0x24
 8004d12:	4605      	mov	r5, r0
 8004d14:	9b05      	ldr	r3, [sp, #20]
 8004d16:	9803      	ldr	r0, [sp, #12]
 8004d18:	4621      	mov	r1, r4
 8004d1a:	f103 3bff 	add.w	fp, r3, #4294967295
 8004d1e:	f7ff faa7 	bl	8004270 <quorem>
 8004d22:	4639      	mov	r1, r7
 8004d24:	9006      	str	r0, [sp, #24]
 8004d26:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8004d2a:	9803      	ldr	r0, [sp, #12]
 8004d2c:	f001 f9a0 	bl	8006070 <__mcmp>
 8004d30:	462a      	mov	r2, r5
 8004d32:	9008      	str	r0, [sp, #32]
 8004d34:	4621      	mov	r1, r4
 8004d36:	4648      	mov	r0, r9
 8004d38:	f001 f9b6 	bl	80060a8 <__mdiff>
 8004d3c:	68c2      	ldr	r2, [r0, #12]
 8004d3e:	4606      	mov	r6, r0
 8004d40:	b9fa      	cbnz	r2, 8004d82 <_dtoa_r+0xa02>
 8004d42:	4601      	mov	r1, r0
 8004d44:	9803      	ldr	r0, [sp, #12]
 8004d46:	f001 f993 	bl	8006070 <__mcmp>
 8004d4a:	4602      	mov	r2, r0
 8004d4c:	4631      	mov	r1, r6
 8004d4e:	4648      	mov	r0, r9
 8004d50:	920b      	str	r2, [sp, #44]	; 0x2c
 8004d52:	f000 ff82 	bl	8005c5a <_Bfree>
 8004d56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004d58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004d5a:	9e05      	ldr	r6, [sp, #20]
 8004d5c:	ea43 0102 	orr.w	r1, r3, r2
 8004d60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d62:	430b      	orrs	r3, r1
 8004d64:	d10f      	bne.n	8004d86 <_dtoa_r+0xa06>
 8004d66:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8004d6a:	d028      	beq.n	8004dbe <_dtoa_r+0xa3e>
 8004d6c:	9b08      	ldr	r3, [sp, #32]
 8004d6e:	2b00      	cmp	r3, #0
 8004d70:	dd02      	ble.n	8004d78 <_dtoa_r+0x9f8>
 8004d72:	9b06      	ldr	r3, [sp, #24]
 8004d74:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8004d78:	f88b a000 	strb.w	sl, [fp]
 8004d7c:	e77d      	b.n	8004c7a <_dtoa_r+0x8fa>
 8004d7e:	4628      	mov	r0, r5
 8004d80:	e7bc      	b.n	8004cfc <_dtoa_r+0x97c>
 8004d82:	2201      	movs	r2, #1
 8004d84:	e7e2      	b.n	8004d4c <_dtoa_r+0x9cc>
 8004d86:	9b08      	ldr	r3, [sp, #32]
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	db04      	blt.n	8004d96 <_dtoa_r+0xa16>
 8004d8c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8004d8e:	430b      	orrs	r3, r1
 8004d90:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004d92:	430b      	orrs	r3, r1
 8004d94:	d120      	bne.n	8004dd8 <_dtoa_r+0xa58>
 8004d96:	2a00      	cmp	r2, #0
 8004d98:	ddee      	ble.n	8004d78 <_dtoa_r+0x9f8>
 8004d9a:	9903      	ldr	r1, [sp, #12]
 8004d9c:	2201      	movs	r2, #1
 8004d9e:	4648      	mov	r0, r9
 8004da0:	f001 f8f6 	bl	8005f90 <__lshift>
 8004da4:	4621      	mov	r1, r4
 8004da6:	9003      	str	r0, [sp, #12]
 8004da8:	f001 f962 	bl	8006070 <__mcmp>
 8004dac:	2800      	cmp	r0, #0
 8004dae:	dc03      	bgt.n	8004db8 <_dtoa_r+0xa38>
 8004db0:	d1e2      	bne.n	8004d78 <_dtoa_r+0x9f8>
 8004db2:	f01a 0f01 	tst.w	sl, #1
 8004db6:	d0df      	beq.n	8004d78 <_dtoa_r+0x9f8>
 8004db8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8004dbc:	d1d9      	bne.n	8004d72 <_dtoa_r+0x9f2>
 8004dbe:	2339      	movs	r3, #57	; 0x39
 8004dc0:	f88b 3000 	strb.w	r3, [fp]
 8004dc4:	4633      	mov	r3, r6
 8004dc6:	461e      	mov	r6, r3
 8004dc8:	3b01      	subs	r3, #1
 8004dca:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8004dce:	2a39      	cmp	r2, #57	; 0x39
 8004dd0:	d06b      	beq.n	8004eaa <_dtoa_r+0xb2a>
 8004dd2:	3201      	adds	r2, #1
 8004dd4:	701a      	strb	r2, [r3, #0]
 8004dd6:	e750      	b.n	8004c7a <_dtoa_r+0x8fa>
 8004dd8:	2a00      	cmp	r2, #0
 8004dda:	dd07      	ble.n	8004dec <_dtoa_r+0xa6c>
 8004ddc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8004de0:	d0ed      	beq.n	8004dbe <_dtoa_r+0xa3e>
 8004de2:	f10a 0301 	add.w	r3, sl, #1
 8004de6:	f88b 3000 	strb.w	r3, [fp]
 8004dea:	e746      	b.n	8004c7a <_dtoa_r+0x8fa>
 8004dec:	9b05      	ldr	r3, [sp, #20]
 8004dee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004df0:	f803 ac01 	strb.w	sl, [r3, #-1]
 8004df4:	4293      	cmp	r3, r2
 8004df6:	d042      	beq.n	8004e7e <_dtoa_r+0xafe>
 8004df8:	9903      	ldr	r1, [sp, #12]
 8004dfa:	2300      	movs	r3, #0
 8004dfc:	220a      	movs	r2, #10
 8004dfe:	4648      	mov	r0, r9
 8004e00:	f000 ff34 	bl	8005c6c <__multadd>
 8004e04:	42af      	cmp	r7, r5
 8004e06:	9003      	str	r0, [sp, #12]
 8004e08:	f04f 0300 	mov.w	r3, #0
 8004e0c:	f04f 020a 	mov.w	r2, #10
 8004e10:	4639      	mov	r1, r7
 8004e12:	4648      	mov	r0, r9
 8004e14:	d107      	bne.n	8004e26 <_dtoa_r+0xaa6>
 8004e16:	f000 ff29 	bl	8005c6c <__multadd>
 8004e1a:	4607      	mov	r7, r0
 8004e1c:	4605      	mov	r5, r0
 8004e1e:	9b05      	ldr	r3, [sp, #20]
 8004e20:	3301      	adds	r3, #1
 8004e22:	9305      	str	r3, [sp, #20]
 8004e24:	e776      	b.n	8004d14 <_dtoa_r+0x994>
 8004e26:	f000 ff21 	bl	8005c6c <__multadd>
 8004e2a:	4629      	mov	r1, r5
 8004e2c:	4607      	mov	r7, r0
 8004e2e:	2300      	movs	r3, #0
 8004e30:	220a      	movs	r2, #10
 8004e32:	4648      	mov	r0, r9
 8004e34:	f000 ff1a 	bl	8005c6c <__multadd>
 8004e38:	4605      	mov	r5, r0
 8004e3a:	e7f0      	b.n	8004e1e <_dtoa_r+0xa9e>
 8004e3c:	9b05      	ldr	r3, [sp, #20]
 8004e3e:	9308      	str	r3, [sp, #32]
 8004e40:	9e04      	ldr	r6, [sp, #16]
 8004e42:	9803      	ldr	r0, [sp, #12]
 8004e44:	4621      	mov	r1, r4
 8004e46:	f7ff fa13 	bl	8004270 <quorem>
 8004e4a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8004e4e:	9b04      	ldr	r3, [sp, #16]
 8004e50:	f806 ab01 	strb.w	sl, [r6], #1
 8004e54:	1af2      	subs	r2, r6, r3
 8004e56:	9b08      	ldr	r3, [sp, #32]
 8004e58:	4293      	cmp	r3, r2
 8004e5a:	dd07      	ble.n	8004e6c <_dtoa_r+0xaec>
 8004e5c:	9903      	ldr	r1, [sp, #12]
 8004e5e:	2300      	movs	r3, #0
 8004e60:	220a      	movs	r2, #10
 8004e62:	4648      	mov	r0, r9
 8004e64:	f000 ff02 	bl	8005c6c <__multadd>
 8004e68:	9003      	str	r0, [sp, #12]
 8004e6a:	e7ea      	b.n	8004e42 <_dtoa_r+0xac2>
 8004e6c:	9b08      	ldr	r3, [sp, #32]
 8004e6e:	2b00      	cmp	r3, #0
 8004e70:	bfc8      	it	gt
 8004e72:	461e      	movgt	r6, r3
 8004e74:	9b04      	ldr	r3, [sp, #16]
 8004e76:	bfd8      	it	le
 8004e78:	2601      	movle	r6, #1
 8004e7a:	441e      	add	r6, r3
 8004e7c:	2700      	movs	r7, #0
 8004e7e:	9903      	ldr	r1, [sp, #12]
 8004e80:	2201      	movs	r2, #1
 8004e82:	4648      	mov	r0, r9
 8004e84:	f001 f884 	bl	8005f90 <__lshift>
 8004e88:	4621      	mov	r1, r4
 8004e8a:	9003      	str	r0, [sp, #12]
 8004e8c:	f001 f8f0 	bl	8006070 <__mcmp>
 8004e90:	2800      	cmp	r0, #0
 8004e92:	dc97      	bgt.n	8004dc4 <_dtoa_r+0xa44>
 8004e94:	d102      	bne.n	8004e9c <_dtoa_r+0xb1c>
 8004e96:	f01a 0f01 	tst.w	sl, #1
 8004e9a:	d193      	bne.n	8004dc4 <_dtoa_r+0xa44>
 8004e9c:	4633      	mov	r3, r6
 8004e9e:	461e      	mov	r6, r3
 8004ea0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004ea4:	2a30      	cmp	r2, #48	; 0x30
 8004ea6:	d0fa      	beq.n	8004e9e <_dtoa_r+0xb1e>
 8004ea8:	e6e7      	b.n	8004c7a <_dtoa_r+0x8fa>
 8004eaa:	9a04      	ldr	r2, [sp, #16]
 8004eac:	429a      	cmp	r2, r3
 8004eae:	d18a      	bne.n	8004dc6 <_dtoa_r+0xa46>
 8004eb0:	2331      	movs	r3, #49	; 0x31
 8004eb2:	f108 0801 	add.w	r8, r8, #1
 8004eb6:	7013      	strb	r3, [r2, #0]
 8004eb8:	e6df      	b.n	8004c7a <_dtoa_r+0x8fa>
 8004eba:	4b0a      	ldr	r3, [pc, #40]	; (8004ee4 <_dtoa_r+0xb64>)
 8004ebc:	f7ff bab0 	b.w	8004420 <_dtoa_r+0xa0>
 8004ec0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004ec2:	2b00      	cmp	r3, #0
 8004ec4:	f47f aa94 	bne.w	80043f0 <_dtoa_r+0x70>
 8004ec8:	4b07      	ldr	r3, [pc, #28]	; (8004ee8 <_dtoa_r+0xb68>)
 8004eca:	f7ff baa9 	b.w	8004420 <_dtoa_r+0xa0>
 8004ece:	9b08      	ldr	r3, [sp, #32]
 8004ed0:	2b00      	cmp	r3, #0
 8004ed2:	dcb5      	bgt.n	8004e40 <_dtoa_r+0xac0>
 8004ed4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004ed6:	2b02      	cmp	r3, #2
 8004ed8:	f73f aebb 	bgt.w	8004c52 <_dtoa_r+0x8d2>
 8004edc:	e7b0      	b.n	8004e40 <_dtoa_r+0xac0>
 8004ede:	bf00      	nop
 8004ee0:	08007d21 	.word	0x08007d21
 8004ee4:	08007cf2 	.word	0x08007cf2
 8004ee8:	08007d18 	.word	0x08007d18

08004eec <__sflush_r>:
 8004eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eee:	898b      	ldrh	r3, [r1, #12]
 8004ef0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004ef4:	4605      	mov	r5, r0
 8004ef6:	0718      	lsls	r0, r3, #28
 8004ef8:	460c      	mov	r4, r1
 8004efa:	d45e      	bmi.n	8004fba <__sflush_r+0xce>
 8004efc:	684b      	ldr	r3, [r1, #4]
 8004efe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	818a      	strh	r2, [r1, #12]
 8004f06:	dc04      	bgt.n	8004f12 <__sflush_r+0x26>
 8004f08:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	dc01      	bgt.n	8004f12 <__sflush_r+0x26>
 8004f0e:	2000      	movs	r0, #0
 8004f10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f12:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004f14:	2e00      	cmp	r6, #0
 8004f16:	d0fa      	beq.n	8004f0e <__sflush_r+0x22>
 8004f18:	2300      	movs	r3, #0
 8004f1a:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004f1e:	682f      	ldr	r7, [r5, #0]
 8004f20:	602b      	str	r3, [r5, #0]
 8004f22:	d036      	beq.n	8004f92 <__sflush_r+0xa6>
 8004f24:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8004f26:	89a3      	ldrh	r3, [r4, #12]
 8004f28:	075a      	lsls	r2, r3, #29
 8004f2a:	d505      	bpl.n	8004f38 <__sflush_r+0x4c>
 8004f2c:	6863      	ldr	r3, [r4, #4]
 8004f2e:	1ac0      	subs	r0, r0, r3
 8004f30:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004f32:	b10b      	cbz	r3, 8004f38 <__sflush_r+0x4c>
 8004f34:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004f36:	1ac0      	subs	r0, r0, r3
 8004f38:	2300      	movs	r3, #0
 8004f3a:	4602      	mov	r2, r0
 8004f3c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004f3e:	69e1      	ldr	r1, [r4, #28]
 8004f40:	4628      	mov	r0, r5
 8004f42:	47b0      	blx	r6
 8004f44:	1c43      	adds	r3, r0, #1
 8004f46:	89a3      	ldrh	r3, [r4, #12]
 8004f48:	d106      	bne.n	8004f58 <__sflush_r+0x6c>
 8004f4a:	6829      	ldr	r1, [r5, #0]
 8004f4c:	291d      	cmp	r1, #29
 8004f4e:	d830      	bhi.n	8004fb2 <__sflush_r+0xc6>
 8004f50:	4a2a      	ldr	r2, [pc, #168]	; (8004ffc <__sflush_r+0x110>)
 8004f52:	40ca      	lsrs	r2, r1
 8004f54:	07d6      	lsls	r6, r2, #31
 8004f56:	d52c      	bpl.n	8004fb2 <__sflush_r+0xc6>
 8004f58:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004f5c:	b21b      	sxth	r3, r3
 8004f5e:	2200      	movs	r2, #0
 8004f60:	6062      	str	r2, [r4, #4]
 8004f62:	04d9      	lsls	r1, r3, #19
 8004f64:	6922      	ldr	r2, [r4, #16]
 8004f66:	81a3      	strh	r3, [r4, #12]
 8004f68:	6022      	str	r2, [r4, #0]
 8004f6a:	d504      	bpl.n	8004f76 <__sflush_r+0x8a>
 8004f6c:	1c42      	adds	r2, r0, #1
 8004f6e:	d101      	bne.n	8004f74 <__sflush_r+0x88>
 8004f70:	682b      	ldr	r3, [r5, #0]
 8004f72:	b903      	cbnz	r3, 8004f76 <__sflush_r+0x8a>
 8004f74:	6520      	str	r0, [r4, #80]	; 0x50
 8004f76:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004f78:	602f      	str	r7, [r5, #0]
 8004f7a:	2900      	cmp	r1, #0
 8004f7c:	d0c7      	beq.n	8004f0e <__sflush_r+0x22>
 8004f7e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8004f82:	4299      	cmp	r1, r3
 8004f84:	d002      	beq.n	8004f8c <__sflush_r+0xa0>
 8004f86:	4628      	mov	r0, r5
 8004f88:	f000 f936 	bl	80051f8 <_free_r>
 8004f8c:	2000      	movs	r0, #0
 8004f8e:	6320      	str	r0, [r4, #48]	; 0x30
 8004f90:	e7be      	b.n	8004f10 <__sflush_r+0x24>
 8004f92:	69e1      	ldr	r1, [r4, #28]
 8004f94:	2301      	movs	r3, #1
 8004f96:	4628      	mov	r0, r5
 8004f98:	47b0      	blx	r6
 8004f9a:	1c41      	adds	r1, r0, #1
 8004f9c:	d1c3      	bne.n	8004f26 <__sflush_r+0x3a>
 8004f9e:	682b      	ldr	r3, [r5, #0]
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	d0c0      	beq.n	8004f26 <__sflush_r+0x3a>
 8004fa4:	2b1d      	cmp	r3, #29
 8004fa6:	d001      	beq.n	8004fac <__sflush_r+0xc0>
 8004fa8:	2b16      	cmp	r3, #22
 8004faa:	d101      	bne.n	8004fb0 <__sflush_r+0xc4>
 8004fac:	602f      	str	r7, [r5, #0]
 8004fae:	e7ae      	b.n	8004f0e <__sflush_r+0x22>
 8004fb0:	89a3      	ldrh	r3, [r4, #12]
 8004fb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004fb6:	81a3      	strh	r3, [r4, #12]
 8004fb8:	e7aa      	b.n	8004f10 <__sflush_r+0x24>
 8004fba:	690f      	ldr	r7, [r1, #16]
 8004fbc:	2f00      	cmp	r7, #0
 8004fbe:	d0a6      	beq.n	8004f0e <__sflush_r+0x22>
 8004fc0:	079b      	lsls	r3, r3, #30
 8004fc2:	680e      	ldr	r6, [r1, #0]
 8004fc4:	bf08      	it	eq
 8004fc6:	694b      	ldreq	r3, [r1, #20]
 8004fc8:	600f      	str	r7, [r1, #0]
 8004fca:	bf18      	it	ne
 8004fcc:	2300      	movne	r3, #0
 8004fce:	1bf6      	subs	r6, r6, r7
 8004fd0:	608b      	str	r3, [r1, #8]
 8004fd2:	2e00      	cmp	r6, #0
 8004fd4:	dd9b      	ble.n	8004f0e <__sflush_r+0x22>
 8004fd6:	69e1      	ldr	r1, [r4, #28]
 8004fd8:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
 8004fdc:	4633      	mov	r3, r6
 8004fde:	463a      	mov	r2, r7
 8004fe0:	4628      	mov	r0, r5
 8004fe2:	47e0      	blx	ip
 8004fe4:	2800      	cmp	r0, #0
 8004fe6:	dc06      	bgt.n	8004ff6 <__sflush_r+0x10a>
 8004fe8:	89a3      	ldrh	r3, [r4, #12]
 8004fea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004fee:	81a3      	strh	r3, [r4, #12]
 8004ff0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ff4:	e78c      	b.n	8004f10 <__sflush_r+0x24>
 8004ff6:	4407      	add	r7, r0
 8004ff8:	1a36      	subs	r6, r6, r0
 8004ffa:	e7ea      	b.n	8004fd2 <__sflush_r+0xe6>
 8004ffc:	20400001 	.word	0x20400001

08005000 <_fflush_r>:
 8005000:	b538      	push	{r3, r4, r5, lr}
 8005002:	460c      	mov	r4, r1
 8005004:	4605      	mov	r5, r0
 8005006:	b118      	cbz	r0, 8005010 <_fflush_r+0x10>
 8005008:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800500a:	b90b      	cbnz	r3, 8005010 <_fflush_r+0x10>
 800500c:	f000 f864 	bl	80050d8 <__sinit>
 8005010:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 8005014:	b1b8      	cbz	r0, 8005046 <_fflush_r+0x46>
 8005016:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005018:	07db      	lsls	r3, r3, #31
 800501a:	d404      	bmi.n	8005026 <_fflush_r+0x26>
 800501c:	0581      	lsls	r1, r0, #22
 800501e:	d402      	bmi.n	8005026 <_fflush_r+0x26>
 8005020:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005022:	f000 fb17 	bl	8005654 <__retarget_lock_acquire_recursive>
 8005026:	4628      	mov	r0, r5
 8005028:	4621      	mov	r1, r4
 800502a:	f7ff ff5f 	bl	8004eec <__sflush_r>
 800502e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005030:	07da      	lsls	r2, r3, #31
 8005032:	4605      	mov	r5, r0
 8005034:	d405      	bmi.n	8005042 <_fflush_r+0x42>
 8005036:	89a3      	ldrh	r3, [r4, #12]
 8005038:	059b      	lsls	r3, r3, #22
 800503a:	d402      	bmi.n	8005042 <_fflush_r+0x42>
 800503c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800503e:	f000 fb0a 	bl	8005656 <__retarget_lock_release_recursive>
 8005042:	4628      	mov	r0, r5
 8005044:	bd38      	pop	{r3, r4, r5, pc}
 8005046:	4605      	mov	r5, r0
 8005048:	e7fb      	b.n	8005042 <_fflush_r+0x42>
	...

0800504c <std>:
 800504c:	2300      	movs	r3, #0
 800504e:	b510      	push	{r4, lr}
 8005050:	4604      	mov	r4, r0
 8005052:	e9c0 3300 	strd	r3, r3, [r0]
 8005056:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800505a:	6083      	str	r3, [r0, #8]
 800505c:	8181      	strh	r1, [r0, #12]
 800505e:	6643      	str	r3, [r0, #100]	; 0x64
 8005060:	81c2      	strh	r2, [r0, #14]
 8005062:	6183      	str	r3, [r0, #24]
 8005064:	4619      	mov	r1, r3
 8005066:	2208      	movs	r2, #8
 8005068:	305c      	adds	r0, #92	; 0x5c
 800506a:	f7fd fdd3 	bl	8002c14 <memset>
 800506e:	4b07      	ldr	r3, [pc, #28]	; (800508c <std+0x40>)
 8005070:	6223      	str	r3, [r4, #32]
 8005072:	4b07      	ldr	r3, [pc, #28]	; (8005090 <std+0x44>)
 8005074:	6263      	str	r3, [r4, #36]	; 0x24
 8005076:	4b07      	ldr	r3, [pc, #28]	; (8005094 <std+0x48>)
 8005078:	62a3      	str	r3, [r4, #40]	; 0x28
 800507a:	4b07      	ldr	r3, [pc, #28]	; (8005098 <std+0x4c>)
 800507c:	61e4      	str	r4, [r4, #28]
 800507e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005080:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005088:	f000 bae2 	b.w	8005650 <__retarget_lock_init_recursive>
 800508c:	08006641 	.word	0x08006641
 8005090:	08006663 	.word	0x08006663
 8005094:	0800669b 	.word	0x0800669b
 8005098:	080066bf 	.word	0x080066bf

0800509c <_cleanup_r>:
 800509c:	4901      	ldr	r1, [pc, #4]	; (80050a4 <_cleanup_r+0x8>)
 800509e:	f000 bab3 	b.w	8005608 <_fwalk_reent>
 80050a2:	bf00      	nop
 80050a4:	08007285 	.word	0x08007285

080050a8 <__sfp_lock_acquire>:
 80050a8:	4801      	ldr	r0, [pc, #4]	; (80050b0 <__sfp_lock_acquire+0x8>)
 80050aa:	f000 bad3 	b.w	8005654 <__retarget_lock_acquire_recursive>
 80050ae:	bf00      	nop
 80050b0:	20000c1b 	.word	0x20000c1b

080050b4 <__sfp_lock_release>:
 80050b4:	4801      	ldr	r0, [pc, #4]	; (80050bc <__sfp_lock_release+0x8>)
 80050b6:	f000 bace 	b.w	8005656 <__retarget_lock_release_recursive>
 80050ba:	bf00      	nop
 80050bc:	20000c1b 	.word	0x20000c1b

080050c0 <__sinit_lock_acquire>:
 80050c0:	4801      	ldr	r0, [pc, #4]	; (80050c8 <__sinit_lock_acquire+0x8>)
 80050c2:	f000 bac7 	b.w	8005654 <__retarget_lock_acquire_recursive>
 80050c6:	bf00      	nop
 80050c8:	20000c1c 	.word	0x20000c1c

080050cc <__sinit_lock_release>:
 80050cc:	4801      	ldr	r0, [pc, #4]	; (80050d4 <__sinit_lock_release+0x8>)
 80050ce:	f000 bac2 	b.w	8005656 <__retarget_lock_release_recursive>
 80050d2:	bf00      	nop
 80050d4:	20000c1c 	.word	0x20000c1c

080050d8 <__sinit>:
 80050d8:	b510      	push	{r4, lr}
 80050da:	4604      	mov	r4, r0
 80050dc:	f7ff fff0 	bl	80050c0 <__sinit_lock_acquire>
 80050e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80050e2:	b11a      	cbz	r2, 80050ec <__sinit+0x14>
 80050e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80050e8:	f7ff bff0 	b.w	80050cc <__sinit_lock_release>
 80050ec:	4b0d      	ldr	r3, [pc, #52]	; (8005124 <__sinit+0x4c>)
 80050ee:	63e3      	str	r3, [r4, #60]	; 0x3c
 80050f0:	2303      	movs	r3, #3
 80050f2:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 80050f6:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 80050fa:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80050fe:	6860      	ldr	r0, [r4, #4]
 8005100:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 8005104:	2104      	movs	r1, #4
 8005106:	f7ff ffa1 	bl	800504c <std>
 800510a:	68a0      	ldr	r0, [r4, #8]
 800510c:	2201      	movs	r2, #1
 800510e:	2109      	movs	r1, #9
 8005110:	f7ff ff9c 	bl	800504c <std>
 8005114:	68e0      	ldr	r0, [r4, #12]
 8005116:	2202      	movs	r2, #2
 8005118:	2112      	movs	r1, #18
 800511a:	f7ff ff97 	bl	800504c <std>
 800511e:	2301      	movs	r3, #1
 8005120:	63a3      	str	r3, [r4, #56]	; 0x38
 8005122:	e7df      	b.n	80050e4 <__sinit+0xc>
 8005124:	0800509d 	.word	0x0800509d

08005128 <__libc_fini_array>:
 8005128:	b538      	push	{r3, r4, r5, lr}
 800512a:	4d07      	ldr	r5, [pc, #28]	; (8005148 <__libc_fini_array+0x20>)
 800512c:	4c07      	ldr	r4, [pc, #28]	; (800514c <__libc_fini_array+0x24>)
 800512e:	1b64      	subs	r4, r4, r5
 8005130:	10a4      	asrs	r4, r4, #2
 8005132:	b91c      	cbnz	r4, 800513c <__libc_fini_array+0x14>
 8005134:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005138:	f002 bd22 	b.w	8007b80 <_fini>
 800513c:	3c01      	subs	r4, #1
 800513e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8005142:	4798      	blx	r3
 8005144:	e7f5      	b.n	8005132 <__libc_fini_array+0xa>
 8005146:	bf00      	nop
 8005148:	0800807c 	.word	0x0800807c
 800514c:	08008080 	.word	0x08008080

08005150 <_malloc_trim_r>:
 8005150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005154:	4606      	mov	r6, r0
 8005156:	2008      	movs	r0, #8
 8005158:	460c      	mov	r4, r1
 800515a:	f001 fac7 	bl	80066ec <sysconf>
 800515e:	4f23      	ldr	r7, [pc, #140]	; (80051ec <_malloc_trim_r+0x9c>)
 8005160:	4680      	mov	r8, r0
 8005162:	4630      	mov	r0, r6
 8005164:	f000 fd48 	bl	8005bf8 <__malloc_lock>
 8005168:	68bb      	ldr	r3, [r7, #8]
 800516a:	685d      	ldr	r5, [r3, #4]
 800516c:	f025 0503 	bic.w	r5, r5, #3
 8005170:	1b2c      	subs	r4, r5, r4
 8005172:	3c11      	subs	r4, #17
 8005174:	4444      	add	r4, r8
 8005176:	fbb4 f4f8 	udiv	r4, r4, r8
 800517a:	3c01      	subs	r4, #1
 800517c:	fb08 f404 	mul.w	r4, r8, r4
 8005180:	45a0      	cmp	r8, r4
 8005182:	dd05      	ble.n	8005190 <_malloc_trim_r+0x40>
 8005184:	4630      	mov	r0, r6
 8005186:	f000 fd3d 	bl	8005c04 <__malloc_unlock>
 800518a:	2000      	movs	r0, #0
 800518c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005190:	2100      	movs	r1, #0
 8005192:	4630      	mov	r0, r6
 8005194:	f001 fa44 	bl	8006620 <_sbrk_r>
 8005198:	68bb      	ldr	r3, [r7, #8]
 800519a:	442b      	add	r3, r5
 800519c:	4298      	cmp	r0, r3
 800519e:	d1f1      	bne.n	8005184 <_malloc_trim_r+0x34>
 80051a0:	4261      	negs	r1, r4
 80051a2:	4630      	mov	r0, r6
 80051a4:	f001 fa3c 	bl	8006620 <_sbrk_r>
 80051a8:	3001      	adds	r0, #1
 80051aa:	d110      	bne.n	80051ce <_malloc_trim_r+0x7e>
 80051ac:	2100      	movs	r1, #0
 80051ae:	4630      	mov	r0, r6
 80051b0:	f001 fa36 	bl	8006620 <_sbrk_r>
 80051b4:	68ba      	ldr	r2, [r7, #8]
 80051b6:	1a83      	subs	r3, r0, r2
 80051b8:	2b0f      	cmp	r3, #15
 80051ba:	dde3      	ble.n	8005184 <_malloc_trim_r+0x34>
 80051bc:	490c      	ldr	r1, [pc, #48]	; (80051f0 <_malloc_trim_r+0xa0>)
 80051be:	6809      	ldr	r1, [r1, #0]
 80051c0:	1a40      	subs	r0, r0, r1
 80051c2:	490c      	ldr	r1, [pc, #48]	; (80051f4 <_malloc_trim_r+0xa4>)
 80051c4:	f043 0301 	orr.w	r3, r3, #1
 80051c8:	6008      	str	r0, [r1, #0]
 80051ca:	6053      	str	r3, [r2, #4]
 80051cc:	e7da      	b.n	8005184 <_malloc_trim_r+0x34>
 80051ce:	68bb      	ldr	r3, [r7, #8]
 80051d0:	4a08      	ldr	r2, [pc, #32]	; (80051f4 <_malloc_trim_r+0xa4>)
 80051d2:	1b2d      	subs	r5, r5, r4
 80051d4:	f045 0501 	orr.w	r5, r5, #1
 80051d8:	605d      	str	r5, [r3, #4]
 80051da:	6813      	ldr	r3, [r2, #0]
 80051dc:	4630      	mov	r0, r6
 80051de:	1b1b      	subs	r3, r3, r4
 80051e0:	6013      	str	r3, [r2, #0]
 80051e2:	f000 fd0f 	bl	8005c04 <__malloc_unlock>
 80051e6:	2001      	movs	r0, #1
 80051e8:	e7d0      	b.n	800518c <_malloc_trim_r+0x3c>
 80051ea:	bf00      	nop
 80051ec:	20000634 	.word	0x20000634
 80051f0:	20000a3c 	.word	0x20000a3c
 80051f4:	20000c20 	.word	0x20000c20

080051f8 <_free_r>:
 80051f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051fa:	4605      	mov	r5, r0
 80051fc:	460f      	mov	r7, r1
 80051fe:	2900      	cmp	r1, #0
 8005200:	f000 80b1 	beq.w	8005366 <_free_r+0x16e>
 8005204:	f000 fcf8 	bl	8005bf8 <__malloc_lock>
 8005208:	f857 2c04 	ldr.w	r2, [r7, #-4]
 800520c:	4856      	ldr	r0, [pc, #344]	; (8005368 <_free_r+0x170>)
 800520e:	f022 0401 	bic.w	r4, r2, #1
 8005212:	f1a7 0308 	sub.w	r3, r7, #8
 8005216:	eb03 0c04 	add.w	ip, r3, r4
 800521a:	6881      	ldr	r1, [r0, #8]
 800521c:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8005220:	4561      	cmp	r1, ip
 8005222:	f026 0603 	bic.w	r6, r6, #3
 8005226:	f002 0201 	and.w	r2, r2, #1
 800522a:	d11b      	bne.n	8005264 <_free_r+0x6c>
 800522c:	4434      	add	r4, r6
 800522e:	b93a      	cbnz	r2, 8005240 <_free_r+0x48>
 8005230:	f857 2c08 	ldr.w	r2, [r7, #-8]
 8005234:	1a9b      	subs	r3, r3, r2
 8005236:	4414      	add	r4, r2
 8005238:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 800523c:	60ca      	str	r2, [r1, #12]
 800523e:	6091      	str	r1, [r2, #8]
 8005240:	f044 0201 	orr.w	r2, r4, #1
 8005244:	605a      	str	r2, [r3, #4]
 8005246:	6083      	str	r3, [r0, #8]
 8005248:	4b48      	ldr	r3, [pc, #288]	; (800536c <_free_r+0x174>)
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	42a3      	cmp	r3, r4
 800524e:	d804      	bhi.n	800525a <_free_r+0x62>
 8005250:	4b47      	ldr	r3, [pc, #284]	; (8005370 <_free_r+0x178>)
 8005252:	4628      	mov	r0, r5
 8005254:	6819      	ldr	r1, [r3, #0]
 8005256:	f7ff ff7b 	bl	8005150 <_malloc_trim_r>
 800525a:	4628      	mov	r0, r5
 800525c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005260:	f000 bcd0 	b.w	8005c04 <__malloc_unlock>
 8005264:	f8cc 6004 	str.w	r6, [ip, #4]
 8005268:	2a00      	cmp	r2, #0
 800526a:	d138      	bne.n	80052de <_free_r+0xe6>
 800526c:	f857 1c08 	ldr.w	r1, [r7, #-8]
 8005270:	1a5b      	subs	r3, r3, r1
 8005272:	440c      	add	r4, r1
 8005274:	6899      	ldr	r1, [r3, #8]
 8005276:	f100 0708 	add.w	r7, r0, #8
 800527a:	42b9      	cmp	r1, r7
 800527c:	d031      	beq.n	80052e2 <_free_r+0xea>
 800527e:	68df      	ldr	r7, [r3, #12]
 8005280:	60cf      	str	r7, [r1, #12]
 8005282:	60b9      	str	r1, [r7, #8]
 8005284:	eb0c 0106 	add.w	r1, ip, r6
 8005288:	6849      	ldr	r1, [r1, #4]
 800528a:	07c9      	lsls	r1, r1, #31
 800528c:	d40b      	bmi.n	80052a6 <_free_r+0xae>
 800528e:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8005292:	4434      	add	r4, r6
 8005294:	bb3a      	cbnz	r2, 80052e6 <_free_r+0xee>
 8005296:	4e37      	ldr	r6, [pc, #220]	; (8005374 <_free_r+0x17c>)
 8005298:	42b1      	cmp	r1, r6
 800529a:	d124      	bne.n	80052e6 <_free_r+0xee>
 800529c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80052a0:	e9c3 1102 	strd	r1, r1, [r3, #8]
 80052a4:	2201      	movs	r2, #1
 80052a6:	f044 0101 	orr.w	r1, r4, #1
 80052aa:	6059      	str	r1, [r3, #4]
 80052ac:	511c      	str	r4, [r3, r4]
 80052ae:	2a00      	cmp	r2, #0
 80052b0:	d1d3      	bne.n	800525a <_free_r+0x62>
 80052b2:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 80052b6:	d21b      	bcs.n	80052f0 <_free_r+0xf8>
 80052b8:	0961      	lsrs	r1, r4, #5
 80052ba:	08e2      	lsrs	r2, r4, #3
 80052bc:	2401      	movs	r4, #1
 80052be:	408c      	lsls	r4, r1
 80052c0:	6841      	ldr	r1, [r0, #4]
 80052c2:	3201      	adds	r2, #1
 80052c4:	430c      	orrs	r4, r1
 80052c6:	6044      	str	r4, [r0, #4]
 80052c8:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
 80052cc:	f850 4032 	ldr.w	r4, [r0, r2, lsl #3]
 80052d0:	3908      	subs	r1, #8
 80052d2:	e9c3 4102 	strd	r4, r1, [r3, #8]
 80052d6:	f840 3032 	str.w	r3, [r0, r2, lsl #3]
 80052da:	60e3      	str	r3, [r4, #12]
 80052dc:	e7bd      	b.n	800525a <_free_r+0x62>
 80052de:	2200      	movs	r2, #0
 80052e0:	e7d0      	b.n	8005284 <_free_r+0x8c>
 80052e2:	2201      	movs	r2, #1
 80052e4:	e7ce      	b.n	8005284 <_free_r+0x8c>
 80052e6:	f8dc 600c 	ldr.w	r6, [ip, #12]
 80052ea:	60ce      	str	r6, [r1, #12]
 80052ec:	60b1      	str	r1, [r6, #8]
 80052ee:	e7da      	b.n	80052a6 <_free_r+0xae>
 80052f0:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 80052f4:	ea4f 2254 	mov.w	r2, r4, lsr #9
 80052f8:	d214      	bcs.n	8005324 <_free_r+0x12c>
 80052fa:	09a2      	lsrs	r2, r4, #6
 80052fc:	3238      	adds	r2, #56	; 0x38
 80052fe:	1c51      	adds	r1, r2, #1
 8005300:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 8005304:	f850 1031 	ldr.w	r1, [r0, r1, lsl #3]
 8005308:	428e      	cmp	r6, r1
 800530a:	d125      	bne.n	8005358 <_free_r+0x160>
 800530c:	2401      	movs	r4, #1
 800530e:	1092      	asrs	r2, r2, #2
 8005310:	fa04 f202 	lsl.w	r2, r4, r2
 8005314:	6844      	ldr	r4, [r0, #4]
 8005316:	4322      	orrs	r2, r4
 8005318:	6042      	str	r2, [r0, #4]
 800531a:	e9c3 1602 	strd	r1, r6, [r3, #8]
 800531e:	60b3      	str	r3, [r6, #8]
 8005320:	60cb      	str	r3, [r1, #12]
 8005322:	e79a      	b.n	800525a <_free_r+0x62>
 8005324:	2a14      	cmp	r2, #20
 8005326:	d801      	bhi.n	800532c <_free_r+0x134>
 8005328:	325b      	adds	r2, #91	; 0x5b
 800532a:	e7e8      	b.n	80052fe <_free_r+0x106>
 800532c:	2a54      	cmp	r2, #84	; 0x54
 800532e:	d802      	bhi.n	8005336 <_free_r+0x13e>
 8005330:	0b22      	lsrs	r2, r4, #12
 8005332:	326e      	adds	r2, #110	; 0x6e
 8005334:	e7e3      	b.n	80052fe <_free_r+0x106>
 8005336:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800533a:	d802      	bhi.n	8005342 <_free_r+0x14a>
 800533c:	0be2      	lsrs	r2, r4, #15
 800533e:	3277      	adds	r2, #119	; 0x77
 8005340:	e7dd      	b.n	80052fe <_free_r+0x106>
 8005342:	f240 5154 	movw	r1, #1364	; 0x554
 8005346:	428a      	cmp	r2, r1
 8005348:	bf9a      	itte	ls
 800534a:	0ca2      	lsrls	r2, r4, #18
 800534c:	327c      	addls	r2, #124	; 0x7c
 800534e:	227e      	movhi	r2, #126	; 0x7e
 8005350:	e7d5      	b.n	80052fe <_free_r+0x106>
 8005352:	6889      	ldr	r1, [r1, #8]
 8005354:	428e      	cmp	r6, r1
 8005356:	d004      	beq.n	8005362 <_free_r+0x16a>
 8005358:	684a      	ldr	r2, [r1, #4]
 800535a:	f022 0203 	bic.w	r2, r2, #3
 800535e:	42a2      	cmp	r2, r4
 8005360:	d8f7      	bhi.n	8005352 <_free_r+0x15a>
 8005362:	68ce      	ldr	r6, [r1, #12]
 8005364:	e7d9      	b.n	800531a <_free_r+0x122>
 8005366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005368:	20000634 	.word	0x20000634
 800536c:	20000a40 	.word	0x20000a40
 8005370:	20000c50 	.word	0x20000c50
 8005374:	2000063c 	.word	0x2000063c

08005378 <__sfvwrite_r>:
 8005378:	6893      	ldr	r3, [r2, #8]
 800537a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800537e:	4606      	mov	r6, r0
 8005380:	460c      	mov	r4, r1
 8005382:	4690      	mov	r8, r2
 8005384:	b91b      	cbnz	r3, 800538e <__sfvwrite_r+0x16>
 8005386:	2000      	movs	r0, #0
 8005388:	b003      	add	sp, #12
 800538a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800538e:	898b      	ldrh	r3, [r1, #12]
 8005390:	0718      	lsls	r0, r3, #28
 8005392:	d550      	bpl.n	8005436 <__sfvwrite_r+0xbe>
 8005394:	690b      	ldr	r3, [r1, #16]
 8005396:	2b00      	cmp	r3, #0
 8005398:	d04d      	beq.n	8005436 <__sfvwrite_r+0xbe>
 800539a:	89a3      	ldrh	r3, [r4, #12]
 800539c:	f8d8 7000 	ldr.w	r7, [r8]
 80053a0:	f013 0902 	ands.w	r9, r3, #2
 80053a4:	d16b      	bne.n	800547e <__sfvwrite_r+0x106>
 80053a6:	f013 0301 	ands.w	r3, r3, #1
 80053aa:	f000 809b 	beq.w	80054e4 <__sfvwrite_r+0x16c>
 80053ae:	4648      	mov	r0, r9
 80053b0:	46ca      	mov	sl, r9
 80053b2:	46cb      	mov	fp, r9
 80053b4:	f1bb 0f00 	cmp.w	fp, #0
 80053b8:	f000 8102 	beq.w	80055c0 <__sfvwrite_r+0x248>
 80053bc:	b950      	cbnz	r0, 80053d4 <__sfvwrite_r+0x5c>
 80053be:	465a      	mov	r2, fp
 80053c0:	210a      	movs	r1, #10
 80053c2:	4650      	mov	r0, sl
 80053c4:	f7fa ff1c 	bl	8000200 <memchr>
 80053c8:	2800      	cmp	r0, #0
 80053ca:	f000 80fe 	beq.w	80055ca <__sfvwrite_r+0x252>
 80053ce:	3001      	adds	r0, #1
 80053d0:	eba0 090a 	sub.w	r9, r0, sl
 80053d4:	6820      	ldr	r0, [r4, #0]
 80053d6:	6921      	ldr	r1, [r4, #16]
 80053d8:	6963      	ldr	r3, [r4, #20]
 80053da:	45d9      	cmp	r9, fp
 80053dc:	464a      	mov	r2, r9
 80053de:	bf28      	it	cs
 80053e0:	465a      	movcs	r2, fp
 80053e2:	4288      	cmp	r0, r1
 80053e4:	f240 80f4 	bls.w	80055d0 <__sfvwrite_r+0x258>
 80053e8:	68a5      	ldr	r5, [r4, #8]
 80053ea:	441d      	add	r5, r3
 80053ec:	42aa      	cmp	r2, r5
 80053ee:	f340 80ef 	ble.w	80055d0 <__sfvwrite_r+0x258>
 80053f2:	4651      	mov	r1, sl
 80053f4:	462a      	mov	r2, r5
 80053f6:	f000 fbe5 	bl	8005bc4 <memmove>
 80053fa:	6823      	ldr	r3, [r4, #0]
 80053fc:	442b      	add	r3, r5
 80053fe:	6023      	str	r3, [r4, #0]
 8005400:	4621      	mov	r1, r4
 8005402:	4630      	mov	r0, r6
 8005404:	f7ff fdfc 	bl	8005000 <_fflush_r>
 8005408:	2800      	cmp	r0, #0
 800540a:	d166      	bne.n	80054da <__sfvwrite_r+0x162>
 800540c:	ebb9 0905 	subs.w	r9, r9, r5
 8005410:	f040 80f6 	bne.w	8005600 <__sfvwrite_r+0x288>
 8005414:	4621      	mov	r1, r4
 8005416:	4630      	mov	r0, r6
 8005418:	f7ff fdf2 	bl	8005000 <_fflush_r>
 800541c:	2800      	cmp	r0, #0
 800541e:	d15c      	bne.n	80054da <__sfvwrite_r+0x162>
 8005420:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8005424:	44aa      	add	sl, r5
 8005426:	ebab 0b05 	sub.w	fp, fp, r5
 800542a:	1b55      	subs	r5, r2, r5
 800542c:	f8c8 5008 	str.w	r5, [r8, #8]
 8005430:	2d00      	cmp	r5, #0
 8005432:	d1bf      	bne.n	80053b4 <__sfvwrite_r+0x3c>
 8005434:	e7a7      	b.n	8005386 <__sfvwrite_r+0xe>
 8005436:	4621      	mov	r1, r4
 8005438:	4630      	mov	r0, r6
 800543a:	f7fe feb1 	bl	80041a0 <__swsetup_r>
 800543e:	2800      	cmp	r0, #0
 8005440:	d0ab      	beq.n	800539a <__sfvwrite_r+0x22>
 8005442:	f04f 30ff 	mov.w	r0, #4294967295
 8005446:	e79f      	b.n	8005388 <__sfvwrite_r+0x10>
 8005448:	e9d7 b500 	ldrd	fp, r5, [r7]
 800544c:	3708      	adds	r7, #8
 800544e:	2d00      	cmp	r5, #0
 8005450:	d0fa      	beq.n	8005448 <__sfvwrite_r+0xd0>
 8005452:	4555      	cmp	r5, sl
 8005454:	462b      	mov	r3, r5
 8005456:	69e1      	ldr	r1, [r4, #28]
 8005458:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
 800545c:	bf28      	it	cs
 800545e:	4653      	movcs	r3, sl
 8005460:	465a      	mov	r2, fp
 8005462:	4630      	mov	r0, r6
 8005464:	47e0      	blx	ip
 8005466:	2800      	cmp	r0, #0
 8005468:	dd37      	ble.n	80054da <__sfvwrite_r+0x162>
 800546a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800546e:	4483      	add	fp, r0
 8005470:	1a2d      	subs	r5, r5, r0
 8005472:	1a18      	subs	r0, r3, r0
 8005474:	f8c8 0008 	str.w	r0, [r8, #8]
 8005478:	2800      	cmp	r0, #0
 800547a:	d1e8      	bne.n	800544e <__sfvwrite_r+0xd6>
 800547c:	e783      	b.n	8005386 <__sfvwrite_r+0xe>
 800547e:	f04f 0b00 	mov.w	fp, #0
 8005482:	f8df a180 	ldr.w	sl, [pc, #384]	; 8005604 <__sfvwrite_r+0x28c>
 8005486:	465d      	mov	r5, fp
 8005488:	e7e1      	b.n	800544e <__sfvwrite_r+0xd6>
 800548a:	e9d7 9a00 	ldrd	r9, sl, [r7]
 800548e:	3708      	adds	r7, #8
 8005490:	f1ba 0f00 	cmp.w	sl, #0
 8005494:	d0f9      	beq.n	800548a <__sfvwrite_r+0x112>
 8005496:	89a3      	ldrh	r3, [r4, #12]
 8005498:	6820      	ldr	r0, [r4, #0]
 800549a:	68a2      	ldr	r2, [r4, #8]
 800549c:	0599      	lsls	r1, r3, #22
 800549e:	d563      	bpl.n	8005568 <__sfvwrite_r+0x1f0>
 80054a0:	4552      	cmp	r2, sl
 80054a2:	d836      	bhi.n	8005512 <__sfvwrite_r+0x19a>
 80054a4:	f413 6f90 	tst.w	r3, #1152	; 0x480
 80054a8:	d033      	beq.n	8005512 <__sfvwrite_r+0x19a>
 80054aa:	6921      	ldr	r1, [r4, #16]
 80054ac:	6965      	ldr	r5, [r4, #20]
 80054ae:	eba0 0b01 	sub.w	fp, r0, r1
 80054b2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80054b6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80054ba:	f10b 0201 	add.w	r2, fp, #1
 80054be:	106d      	asrs	r5, r5, #1
 80054c0:	4452      	add	r2, sl
 80054c2:	4295      	cmp	r5, r2
 80054c4:	bf38      	it	cc
 80054c6:	4615      	movcc	r5, r2
 80054c8:	055b      	lsls	r3, r3, #21
 80054ca:	d53d      	bpl.n	8005548 <__sfvwrite_r+0x1d0>
 80054cc:	4629      	mov	r1, r5
 80054ce:	4630      	mov	r0, r6
 80054d0:	f000 f92e 	bl	8005730 <_malloc_r>
 80054d4:	b948      	cbnz	r0, 80054ea <__sfvwrite_r+0x172>
 80054d6:	230c      	movs	r3, #12
 80054d8:	6033      	str	r3, [r6, #0]
 80054da:	89a3      	ldrh	r3, [r4, #12]
 80054dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80054e0:	81a3      	strh	r3, [r4, #12]
 80054e2:	e7ae      	b.n	8005442 <__sfvwrite_r+0xca>
 80054e4:	4699      	mov	r9, r3
 80054e6:	469a      	mov	sl, r3
 80054e8:	e7d2      	b.n	8005490 <__sfvwrite_r+0x118>
 80054ea:	465a      	mov	r2, fp
 80054ec:	6921      	ldr	r1, [r4, #16]
 80054ee:	9001      	str	r0, [sp, #4]
 80054f0:	f000 fb5a 	bl	8005ba8 <memcpy>
 80054f4:	89a2      	ldrh	r2, [r4, #12]
 80054f6:	9b01      	ldr	r3, [sp, #4]
 80054f8:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80054fc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005500:	81a2      	strh	r2, [r4, #12]
 8005502:	6123      	str	r3, [r4, #16]
 8005504:	6165      	str	r5, [r4, #20]
 8005506:	445b      	add	r3, fp
 8005508:	eba5 050b 	sub.w	r5, r5, fp
 800550c:	6023      	str	r3, [r4, #0]
 800550e:	4652      	mov	r2, sl
 8005510:	60a5      	str	r5, [r4, #8]
 8005512:	4552      	cmp	r2, sl
 8005514:	bf28      	it	cs
 8005516:	4652      	movcs	r2, sl
 8005518:	6820      	ldr	r0, [r4, #0]
 800551a:	9201      	str	r2, [sp, #4]
 800551c:	4649      	mov	r1, r9
 800551e:	f000 fb51 	bl	8005bc4 <memmove>
 8005522:	68a3      	ldr	r3, [r4, #8]
 8005524:	9a01      	ldr	r2, [sp, #4]
 8005526:	1a9b      	subs	r3, r3, r2
 8005528:	60a3      	str	r3, [r4, #8]
 800552a:	6823      	ldr	r3, [r4, #0]
 800552c:	441a      	add	r2, r3
 800552e:	4655      	mov	r5, sl
 8005530:	6022      	str	r2, [r4, #0]
 8005532:	f8d8 0008 	ldr.w	r0, [r8, #8]
 8005536:	44a9      	add	r9, r5
 8005538:	ebaa 0a05 	sub.w	sl, sl, r5
 800553c:	1b45      	subs	r5, r0, r5
 800553e:	f8c8 5008 	str.w	r5, [r8, #8]
 8005542:	2d00      	cmp	r5, #0
 8005544:	d1a4      	bne.n	8005490 <__sfvwrite_r+0x118>
 8005546:	e71e      	b.n	8005386 <__sfvwrite_r+0xe>
 8005548:	462a      	mov	r2, r5
 800554a:	4630      	mov	r0, r6
 800554c:	f000 fe90 	bl	8006270 <_realloc_r>
 8005550:	4603      	mov	r3, r0
 8005552:	2800      	cmp	r0, #0
 8005554:	d1d5      	bne.n	8005502 <__sfvwrite_r+0x18a>
 8005556:	6921      	ldr	r1, [r4, #16]
 8005558:	4630      	mov	r0, r6
 800555a:	f7ff fe4d 	bl	80051f8 <_free_r>
 800555e:	89a3      	ldrh	r3, [r4, #12]
 8005560:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005564:	81a3      	strh	r3, [r4, #12]
 8005566:	e7b6      	b.n	80054d6 <__sfvwrite_r+0x15e>
 8005568:	6923      	ldr	r3, [r4, #16]
 800556a:	4283      	cmp	r3, r0
 800556c:	d302      	bcc.n	8005574 <__sfvwrite_r+0x1fc>
 800556e:	6961      	ldr	r1, [r4, #20]
 8005570:	4551      	cmp	r1, sl
 8005572:	d915      	bls.n	80055a0 <__sfvwrite_r+0x228>
 8005574:	4552      	cmp	r2, sl
 8005576:	bf28      	it	cs
 8005578:	4652      	movcs	r2, sl
 800557a:	4649      	mov	r1, r9
 800557c:	4615      	mov	r5, r2
 800557e:	f000 fb21 	bl	8005bc4 <memmove>
 8005582:	68a3      	ldr	r3, [r4, #8]
 8005584:	6822      	ldr	r2, [r4, #0]
 8005586:	1b5b      	subs	r3, r3, r5
 8005588:	442a      	add	r2, r5
 800558a:	60a3      	str	r3, [r4, #8]
 800558c:	6022      	str	r2, [r4, #0]
 800558e:	2b00      	cmp	r3, #0
 8005590:	d1cf      	bne.n	8005532 <__sfvwrite_r+0x1ba>
 8005592:	4621      	mov	r1, r4
 8005594:	4630      	mov	r0, r6
 8005596:	f7ff fd33 	bl	8005000 <_fflush_r>
 800559a:	2800      	cmp	r0, #0
 800559c:	d0c9      	beq.n	8005532 <__sfvwrite_r+0x1ba>
 800559e:	e79c      	b.n	80054da <__sfvwrite_r+0x162>
 80055a0:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80055a4:	459a      	cmp	sl, r3
 80055a6:	bf38      	it	cc
 80055a8:	4653      	movcc	r3, sl
 80055aa:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80055ac:	fb93 f3f1 	sdiv	r3, r3, r1
 80055b0:	464a      	mov	r2, r9
 80055b2:	434b      	muls	r3, r1
 80055b4:	4630      	mov	r0, r6
 80055b6:	69e1      	ldr	r1, [r4, #28]
 80055b8:	47a8      	blx	r5
 80055ba:	1e05      	subs	r5, r0, #0
 80055bc:	dcb9      	bgt.n	8005532 <__sfvwrite_r+0x1ba>
 80055be:	e78c      	b.n	80054da <__sfvwrite_r+0x162>
 80055c0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80055c4:	2000      	movs	r0, #0
 80055c6:	3708      	adds	r7, #8
 80055c8:	e6f4      	b.n	80053b4 <__sfvwrite_r+0x3c>
 80055ca:	f10b 0901 	add.w	r9, fp, #1
 80055ce:	e701      	b.n	80053d4 <__sfvwrite_r+0x5c>
 80055d0:	4293      	cmp	r3, r2
 80055d2:	dc08      	bgt.n	80055e6 <__sfvwrite_r+0x26e>
 80055d4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80055d6:	69e1      	ldr	r1, [r4, #28]
 80055d8:	4652      	mov	r2, sl
 80055da:	4630      	mov	r0, r6
 80055dc:	47a8      	blx	r5
 80055de:	1e05      	subs	r5, r0, #0
 80055e0:	f73f af14 	bgt.w	800540c <__sfvwrite_r+0x94>
 80055e4:	e779      	b.n	80054da <__sfvwrite_r+0x162>
 80055e6:	4651      	mov	r1, sl
 80055e8:	9201      	str	r2, [sp, #4]
 80055ea:	f000 faeb 	bl	8005bc4 <memmove>
 80055ee:	9a01      	ldr	r2, [sp, #4]
 80055f0:	68a3      	ldr	r3, [r4, #8]
 80055f2:	1a9b      	subs	r3, r3, r2
 80055f4:	60a3      	str	r3, [r4, #8]
 80055f6:	6823      	ldr	r3, [r4, #0]
 80055f8:	4413      	add	r3, r2
 80055fa:	6023      	str	r3, [r4, #0]
 80055fc:	4615      	mov	r5, r2
 80055fe:	e705      	b.n	800540c <__sfvwrite_r+0x94>
 8005600:	2001      	movs	r0, #1
 8005602:	e70d      	b.n	8005420 <__sfvwrite_r+0xa8>
 8005604:	7ffffc00 	.word	0x7ffffc00

08005608 <_fwalk_reent>:
 8005608:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800560c:	4606      	mov	r6, r0
 800560e:	4688      	mov	r8, r1
 8005610:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 8005614:	2700      	movs	r7, #0
 8005616:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800561a:	f1b9 0901 	subs.w	r9, r9, #1
 800561e:	d505      	bpl.n	800562c <_fwalk_reent+0x24>
 8005620:	6824      	ldr	r4, [r4, #0]
 8005622:	2c00      	cmp	r4, #0
 8005624:	d1f7      	bne.n	8005616 <_fwalk_reent+0xe>
 8005626:	4638      	mov	r0, r7
 8005628:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800562c:	89ab      	ldrh	r3, [r5, #12]
 800562e:	2b01      	cmp	r3, #1
 8005630:	d907      	bls.n	8005642 <_fwalk_reent+0x3a>
 8005632:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005636:	3301      	adds	r3, #1
 8005638:	d003      	beq.n	8005642 <_fwalk_reent+0x3a>
 800563a:	4629      	mov	r1, r5
 800563c:	4630      	mov	r0, r6
 800563e:	47c0      	blx	r8
 8005640:	4307      	orrs	r7, r0
 8005642:	3568      	adds	r5, #104	; 0x68
 8005644:	e7e9      	b.n	800561a <_fwalk_reent+0x12>
	...

08005648 <_localeconv_r>:
 8005648:	4800      	ldr	r0, [pc, #0]	; (800564c <_localeconv_r+0x4>)
 800564a:	4770      	bx	lr
 800564c:	20000b34 	.word	0x20000b34

08005650 <__retarget_lock_init_recursive>:
 8005650:	4770      	bx	lr

08005652 <__retarget_lock_close_recursive>:
 8005652:	4770      	bx	lr

08005654 <__retarget_lock_acquire_recursive>:
 8005654:	4770      	bx	lr

08005656 <__retarget_lock_release_recursive>:
 8005656:	4770      	bx	lr

08005658 <__swhatbuf_r>:
 8005658:	b570      	push	{r4, r5, r6, lr}
 800565a:	460e      	mov	r6, r1
 800565c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005660:	2900      	cmp	r1, #0
 8005662:	b096      	sub	sp, #88	; 0x58
 8005664:	4614      	mov	r4, r2
 8005666:	461d      	mov	r5, r3
 8005668:	da0a      	bge.n	8005680 <__swhatbuf_r+0x28>
 800566a:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 800566e:	2300      	movs	r3, #0
 8005670:	f011 0080 	ands.w	r0, r1, #128	; 0x80
 8005674:	602b      	str	r3, [r5, #0]
 8005676:	d116      	bne.n	80056a6 <__swhatbuf_r+0x4e>
 8005678:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800567c:	6023      	str	r3, [r4, #0]
 800567e:	e015      	b.n	80056ac <__swhatbuf_r+0x54>
 8005680:	466a      	mov	r2, sp
 8005682:	f001 fed3 	bl	800742c <_fstat_r>
 8005686:	2800      	cmp	r0, #0
 8005688:	dbef      	blt.n	800566a <__swhatbuf_r+0x12>
 800568a:	9a01      	ldr	r2, [sp, #4]
 800568c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005690:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005694:	425a      	negs	r2, r3
 8005696:	415a      	adcs	r2, r3
 8005698:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800569c:	602a      	str	r2, [r5, #0]
 800569e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80056a2:	6023      	str	r3, [r4, #0]
 80056a4:	e002      	b.n	80056ac <__swhatbuf_r+0x54>
 80056a6:	2240      	movs	r2, #64	; 0x40
 80056a8:	6022      	str	r2, [r4, #0]
 80056aa:	4618      	mov	r0, r3
 80056ac:	b016      	add	sp, #88	; 0x58
 80056ae:	bd70      	pop	{r4, r5, r6, pc}

080056b0 <__smakebuf_r>:
 80056b0:	898b      	ldrh	r3, [r1, #12]
 80056b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80056b4:	079d      	lsls	r5, r3, #30
 80056b6:	4606      	mov	r6, r0
 80056b8:	460c      	mov	r4, r1
 80056ba:	d507      	bpl.n	80056cc <__smakebuf_r+0x1c>
 80056bc:	f104 0343 	add.w	r3, r4, #67	; 0x43
 80056c0:	6023      	str	r3, [r4, #0]
 80056c2:	6123      	str	r3, [r4, #16]
 80056c4:	2301      	movs	r3, #1
 80056c6:	6163      	str	r3, [r4, #20]
 80056c8:	b002      	add	sp, #8
 80056ca:	bd70      	pop	{r4, r5, r6, pc}
 80056cc:	ab01      	add	r3, sp, #4
 80056ce:	466a      	mov	r2, sp
 80056d0:	f7ff ffc2 	bl	8005658 <__swhatbuf_r>
 80056d4:	9900      	ldr	r1, [sp, #0]
 80056d6:	4605      	mov	r5, r0
 80056d8:	4630      	mov	r0, r6
 80056da:	f000 f829 	bl	8005730 <_malloc_r>
 80056de:	b948      	cbnz	r0, 80056f4 <__smakebuf_r+0x44>
 80056e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80056e4:	059a      	lsls	r2, r3, #22
 80056e6:	d4ef      	bmi.n	80056c8 <__smakebuf_r+0x18>
 80056e8:	f023 0303 	bic.w	r3, r3, #3
 80056ec:	f043 0302 	orr.w	r3, r3, #2
 80056f0:	81a3      	strh	r3, [r4, #12]
 80056f2:	e7e3      	b.n	80056bc <__smakebuf_r+0xc>
 80056f4:	4b0d      	ldr	r3, [pc, #52]	; (800572c <__smakebuf_r+0x7c>)
 80056f6:	63f3      	str	r3, [r6, #60]	; 0x3c
 80056f8:	89a3      	ldrh	r3, [r4, #12]
 80056fa:	6020      	str	r0, [r4, #0]
 80056fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005700:	81a3      	strh	r3, [r4, #12]
 8005702:	9b00      	ldr	r3, [sp, #0]
 8005704:	6163      	str	r3, [r4, #20]
 8005706:	9b01      	ldr	r3, [sp, #4]
 8005708:	6120      	str	r0, [r4, #16]
 800570a:	b15b      	cbz	r3, 8005724 <__smakebuf_r+0x74>
 800570c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005710:	4630      	mov	r0, r6
 8005712:	f001 fe9d 	bl	8007450 <_isatty_r>
 8005716:	b128      	cbz	r0, 8005724 <__smakebuf_r+0x74>
 8005718:	89a3      	ldrh	r3, [r4, #12]
 800571a:	f023 0303 	bic.w	r3, r3, #3
 800571e:	f043 0301 	orr.w	r3, r3, #1
 8005722:	81a3      	strh	r3, [r4, #12]
 8005724:	89a0      	ldrh	r0, [r4, #12]
 8005726:	4305      	orrs	r5, r0
 8005728:	81a5      	strh	r5, [r4, #12]
 800572a:	e7cd      	b.n	80056c8 <__smakebuf_r+0x18>
 800572c:	0800509d 	.word	0x0800509d

08005730 <_malloc_r>:
 8005730:	f101 030b 	add.w	r3, r1, #11
 8005734:	2b16      	cmp	r3, #22
 8005736:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800573a:	4605      	mov	r5, r0
 800573c:	d906      	bls.n	800574c <_malloc_r+0x1c>
 800573e:	f033 0707 	bics.w	r7, r3, #7
 8005742:	d504      	bpl.n	800574e <_malloc_r+0x1e>
 8005744:	230c      	movs	r3, #12
 8005746:	602b      	str	r3, [r5, #0]
 8005748:	2400      	movs	r4, #0
 800574a:	e1a3      	b.n	8005a94 <_malloc_r+0x364>
 800574c:	2710      	movs	r7, #16
 800574e:	42b9      	cmp	r1, r7
 8005750:	d8f8      	bhi.n	8005744 <_malloc_r+0x14>
 8005752:	4628      	mov	r0, r5
 8005754:	f000 fa50 	bl	8005bf8 <__malloc_lock>
 8005758:	f5b7 7ffc 	cmp.w	r7, #504	; 0x1f8
 800575c:	4eaf      	ldr	r6, [pc, #700]	; (8005a1c <_malloc_r+0x2ec>)
 800575e:	d237      	bcs.n	80057d0 <_malloc_r+0xa0>
 8005760:	f107 0208 	add.w	r2, r7, #8
 8005764:	4432      	add	r2, r6
 8005766:	f1a2 0108 	sub.w	r1, r2, #8
 800576a:	6854      	ldr	r4, [r2, #4]
 800576c:	428c      	cmp	r4, r1
 800576e:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 8005772:	d102      	bne.n	800577a <_malloc_r+0x4a>
 8005774:	68d4      	ldr	r4, [r2, #12]
 8005776:	42a2      	cmp	r2, r4
 8005778:	d010      	beq.n	800579c <_malloc_r+0x6c>
 800577a:	6863      	ldr	r3, [r4, #4]
 800577c:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8005780:	f023 0303 	bic.w	r3, r3, #3
 8005784:	60ca      	str	r2, [r1, #12]
 8005786:	4423      	add	r3, r4
 8005788:	6091      	str	r1, [r2, #8]
 800578a:	685a      	ldr	r2, [r3, #4]
 800578c:	f042 0201 	orr.w	r2, r2, #1
 8005790:	605a      	str	r2, [r3, #4]
 8005792:	4628      	mov	r0, r5
 8005794:	f000 fa36 	bl	8005c04 <__malloc_unlock>
 8005798:	3408      	adds	r4, #8
 800579a:	e17b      	b.n	8005a94 <_malloc_r+0x364>
 800579c:	3302      	adds	r3, #2
 800579e:	6934      	ldr	r4, [r6, #16]
 80057a0:	499f      	ldr	r1, [pc, #636]	; (8005a20 <_malloc_r+0x2f0>)
 80057a2:	428c      	cmp	r4, r1
 80057a4:	d077      	beq.n	8005896 <_malloc_r+0x166>
 80057a6:	6862      	ldr	r2, [r4, #4]
 80057a8:	f022 0c03 	bic.w	ip, r2, #3
 80057ac:	ebac 0007 	sub.w	r0, ip, r7
 80057b0:	280f      	cmp	r0, #15
 80057b2:	dd48      	ble.n	8005846 <_malloc_r+0x116>
 80057b4:	19e2      	adds	r2, r4, r7
 80057b6:	f040 0301 	orr.w	r3, r0, #1
 80057ba:	f047 0701 	orr.w	r7, r7, #1
 80057be:	6067      	str	r7, [r4, #4]
 80057c0:	e9c6 2204 	strd	r2, r2, [r6, #16]
 80057c4:	e9c2 1102 	strd	r1, r1, [r2, #8]
 80057c8:	6053      	str	r3, [r2, #4]
 80057ca:	f844 000c 	str.w	r0, [r4, ip]
 80057ce:	e7e0      	b.n	8005792 <_malloc_r+0x62>
 80057d0:	0a7b      	lsrs	r3, r7, #9
 80057d2:	d02a      	beq.n	800582a <_malloc_r+0xfa>
 80057d4:	2b04      	cmp	r3, #4
 80057d6:	d812      	bhi.n	80057fe <_malloc_r+0xce>
 80057d8:	09bb      	lsrs	r3, r7, #6
 80057da:	3338      	adds	r3, #56	; 0x38
 80057dc:	1c5a      	adds	r2, r3, #1
 80057de:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 80057e2:	f1a2 0c08 	sub.w	ip, r2, #8
 80057e6:	6854      	ldr	r4, [r2, #4]
 80057e8:	4564      	cmp	r4, ip
 80057ea:	d006      	beq.n	80057fa <_malloc_r+0xca>
 80057ec:	6862      	ldr	r2, [r4, #4]
 80057ee:	f022 0203 	bic.w	r2, r2, #3
 80057f2:	1bd0      	subs	r0, r2, r7
 80057f4:	280f      	cmp	r0, #15
 80057f6:	dd1c      	ble.n	8005832 <_malloc_r+0x102>
 80057f8:	3b01      	subs	r3, #1
 80057fa:	3301      	adds	r3, #1
 80057fc:	e7cf      	b.n	800579e <_malloc_r+0x6e>
 80057fe:	2b14      	cmp	r3, #20
 8005800:	d801      	bhi.n	8005806 <_malloc_r+0xd6>
 8005802:	335b      	adds	r3, #91	; 0x5b
 8005804:	e7ea      	b.n	80057dc <_malloc_r+0xac>
 8005806:	2b54      	cmp	r3, #84	; 0x54
 8005808:	d802      	bhi.n	8005810 <_malloc_r+0xe0>
 800580a:	0b3b      	lsrs	r3, r7, #12
 800580c:	336e      	adds	r3, #110	; 0x6e
 800580e:	e7e5      	b.n	80057dc <_malloc_r+0xac>
 8005810:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8005814:	d802      	bhi.n	800581c <_malloc_r+0xec>
 8005816:	0bfb      	lsrs	r3, r7, #15
 8005818:	3377      	adds	r3, #119	; 0x77
 800581a:	e7df      	b.n	80057dc <_malloc_r+0xac>
 800581c:	f240 5254 	movw	r2, #1364	; 0x554
 8005820:	4293      	cmp	r3, r2
 8005822:	d804      	bhi.n	800582e <_malloc_r+0xfe>
 8005824:	0cbb      	lsrs	r3, r7, #18
 8005826:	337c      	adds	r3, #124	; 0x7c
 8005828:	e7d8      	b.n	80057dc <_malloc_r+0xac>
 800582a:	233f      	movs	r3, #63	; 0x3f
 800582c:	e7d6      	b.n	80057dc <_malloc_r+0xac>
 800582e:	237e      	movs	r3, #126	; 0x7e
 8005830:	e7d4      	b.n	80057dc <_malloc_r+0xac>
 8005832:	2800      	cmp	r0, #0
 8005834:	68e1      	ldr	r1, [r4, #12]
 8005836:	db04      	blt.n	8005842 <_malloc_r+0x112>
 8005838:	68a3      	ldr	r3, [r4, #8]
 800583a:	60d9      	str	r1, [r3, #12]
 800583c:	608b      	str	r3, [r1, #8]
 800583e:	18a3      	adds	r3, r4, r2
 8005840:	e7a3      	b.n	800578a <_malloc_r+0x5a>
 8005842:	460c      	mov	r4, r1
 8005844:	e7d0      	b.n	80057e8 <_malloc_r+0xb8>
 8005846:	2800      	cmp	r0, #0
 8005848:	e9c6 1104 	strd	r1, r1, [r6, #16]
 800584c:	db07      	blt.n	800585e <_malloc_r+0x12e>
 800584e:	44a4      	add	ip, r4
 8005850:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8005854:	f043 0301 	orr.w	r3, r3, #1
 8005858:	f8cc 3004 	str.w	r3, [ip, #4]
 800585c:	e799      	b.n	8005792 <_malloc_r+0x62>
 800585e:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8005862:	6870      	ldr	r0, [r6, #4]
 8005864:	f080 8094 	bcs.w	8005990 <_malloc_r+0x260>
 8005868:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 800586c:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 8005870:	f04f 0c01 	mov.w	ip, #1
 8005874:	3201      	adds	r2, #1
 8005876:	fa0c fc0e 	lsl.w	ip, ip, lr
 800587a:	ea4c 0000 	orr.w	r0, ip, r0
 800587e:	6070      	str	r0, [r6, #4]
 8005880:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 8005884:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 8005888:	3808      	subs	r0, #8
 800588a:	e9c4 c002 	strd	ip, r0, [r4, #8]
 800588e:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 8005892:	f8cc 400c 	str.w	r4, [ip, #12]
 8005896:	2001      	movs	r0, #1
 8005898:	109a      	asrs	r2, r3, #2
 800589a:	fa00 f202 	lsl.w	r2, r0, r2
 800589e:	6870      	ldr	r0, [r6, #4]
 80058a0:	4290      	cmp	r0, r2
 80058a2:	d326      	bcc.n	80058f2 <_malloc_r+0x1c2>
 80058a4:	4210      	tst	r0, r2
 80058a6:	d106      	bne.n	80058b6 <_malloc_r+0x186>
 80058a8:	f023 0303 	bic.w	r3, r3, #3
 80058ac:	0052      	lsls	r2, r2, #1
 80058ae:	4210      	tst	r0, r2
 80058b0:	f103 0304 	add.w	r3, r3, #4
 80058b4:	d0fa      	beq.n	80058ac <_malloc_r+0x17c>
 80058b6:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 80058ba:	46c1      	mov	r9, r8
 80058bc:	469e      	mov	lr, r3
 80058be:	f8d9 400c 	ldr.w	r4, [r9, #12]
 80058c2:	454c      	cmp	r4, r9
 80058c4:	f040 80b8 	bne.w	8005a38 <_malloc_r+0x308>
 80058c8:	f10e 0e01 	add.w	lr, lr, #1
 80058cc:	f01e 0f03 	tst.w	lr, #3
 80058d0:	f109 0908 	add.w	r9, r9, #8
 80058d4:	d1f3      	bne.n	80058be <_malloc_r+0x18e>
 80058d6:	0798      	lsls	r0, r3, #30
 80058d8:	f040 80e2 	bne.w	8005aa0 <_malloc_r+0x370>
 80058dc:	6873      	ldr	r3, [r6, #4]
 80058de:	ea23 0302 	bic.w	r3, r3, r2
 80058e2:	6073      	str	r3, [r6, #4]
 80058e4:	6870      	ldr	r0, [r6, #4]
 80058e6:	0052      	lsls	r2, r2, #1
 80058e8:	4290      	cmp	r0, r2
 80058ea:	d302      	bcc.n	80058f2 <_malloc_r+0x1c2>
 80058ec:	2a00      	cmp	r2, #0
 80058ee:	f040 80e4 	bne.w	8005aba <_malloc_r+0x38a>
 80058f2:	f8d6 a008 	ldr.w	sl, [r6, #8]
 80058f6:	f8da 3004 	ldr.w	r3, [sl, #4]
 80058fa:	f023 0903 	bic.w	r9, r3, #3
 80058fe:	45b9      	cmp	r9, r7
 8005900:	d304      	bcc.n	800590c <_malloc_r+0x1dc>
 8005902:	eba9 0207 	sub.w	r2, r9, r7
 8005906:	2a0f      	cmp	r2, #15
 8005908:	f300 8142 	bgt.w	8005b90 <_malloc_r+0x460>
 800590c:	4b45      	ldr	r3, [pc, #276]	; (8005a24 <_malloc_r+0x2f4>)
 800590e:	6819      	ldr	r1, [r3, #0]
 8005910:	3110      	adds	r1, #16
 8005912:	4439      	add	r1, r7
 8005914:	2008      	movs	r0, #8
 8005916:	9101      	str	r1, [sp, #4]
 8005918:	f000 fee8 	bl	80066ec <sysconf>
 800591c:	4a42      	ldr	r2, [pc, #264]	; (8005a28 <_malloc_r+0x2f8>)
 800591e:	9901      	ldr	r1, [sp, #4]
 8005920:	6813      	ldr	r3, [r2, #0]
 8005922:	3301      	adds	r3, #1
 8005924:	bf1f      	itttt	ne
 8005926:	f101 31ff 	addne.w	r1, r1, #4294967295
 800592a:	1809      	addne	r1, r1, r0
 800592c:	4243      	negne	r3, r0
 800592e:	4019      	andne	r1, r3
 8005930:	4680      	mov	r8, r0
 8005932:	4628      	mov	r0, r5
 8005934:	9101      	str	r1, [sp, #4]
 8005936:	f000 fe73 	bl	8006620 <_sbrk_r>
 800593a:	1c42      	adds	r2, r0, #1
 800593c:	eb0a 0b09 	add.w	fp, sl, r9
 8005940:	4604      	mov	r4, r0
 8005942:	f000 80f8 	beq.w	8005b36 <_malloc_r+0x406>
 8005946:	4583      	cmp	fp, r0
 8005948:	9901      	ldr	r1, [sp, #4]
 800594a:	4a37      	ldr	r2, [pc, #220]	; (8005a28 <_malloc_r+0x2f8>)
 800594c:	d902      	bls.n	8005954 <_malloc_r+0x224>
 800594e:	45b2      	cmp	sl, r6
 8005950:	f040 80f1 	bne.w	8005b36 <_malloc_r+0x406>
 8005954:	4b35      	ldr	r3, [pc, #212]	; (8005a2c <_malloc_r+0x2fc>)
 8005956:	6818      	ldr	r0, [r3, #0]
 8005958:	45a3      	cmp	fp, r4
 800595a:	4408      	add	r0, r1
 800595c:	6018      	str	r0, [r3, #0]
 800595e:	f108 3cff 	add.w	ip, r8, #4294967295
 8005962:	f040 80ac 	bne.w	8005abe <_malloc_r+0x38e>
 8005966:	ea1b 0f0c 	tst.w	fp, ip
 800596a:	f040 80a8 	bne.w	8005abe <_malloc_r+0x38e>
 800596e:	68b2      	ldr	r2, [r6, #8]
 8005970:	4449      	add	r1, r9
 8005972:	f041 0101 	orr.w	r1, r1, #1
 8005976:	6051      	str	r1, [r2, #4]
 8005978:	4a2d      	ldr	r2, [pc, #180]	; (8005a30 <_malloc_r+0x300>)
 800597a:	681b      	ldr	r3, [r3, #0]
 800597c:	6811      	ldr	r1, [r2, #0]
 800597e:	428b      	cmp	r3, r1
 8005980:	bf88      	it	hi
 8005982:	6013      	strhi	r3, [r2, #0]
 8005984:	4a2b      	ldr	r2, [pc, #172]	; (8005a34 <_malloc_r+0x304>)
 8005986:	6811      	ldr	r1, [r2, #0]
 8005988:	428b      	cmp	r3, r1
 800598a:	bf88      	it	hi
 800598c:	6013      	strhi	r3, [r2, #0]
 800598e:	e0d2      	b.n	8005b36 <_malloc_r+0x406>
 8005990:	f5bc 6f20 	cmp.w	ip, #2560	; 0xa00
 8005994:	ea4f 225c 	mov.w	r2, ip, lsr #9
 8005998:	d218      	bcs.n	80059cc <_malloc_r+0x29c>
 800599a:	ea4f 129c 	mov.w	r2, ip, lsr #6
 800599e:	3238      	adds	r2, #56	; 0x38
 80059a0:	f102 0e01 	add.w	lr, r2, #1
 80059a4:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 80059a8:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 80059ac:	45f0      	cmp	r8, lr
 80059ae:	d12b      	bne.n	8005a08 <_malloc_r+0x2d8>
 80059b0:	1092      	asrs	r2, r2, #2
 80059b2:	f04f 0c01 	mov.w	ip, #1
 80059b6:	fa0c f202 	lsl.w	r2, ip, r2
 80059ba:	4310      	orrs	r0, r2
 80059bc:	6070      	str	r0, [r6, #4]
 80059be:	e9c4 e802 	strd	lr, r8, [r4, #8]
 80059c2:	f8c8 4008 	str.w	r4, [r8, #8]
 80059c6:	f8ce 400c 	str.w	r4, [lr, #12]
 80059ca:	e764      	b.n	8005896 <_malloc_r+0x166>
 80059cc:	2a14      	cmp	r2, #20
 80059ce:	d801      	bhi.n	80059d4 <_malloc_r+0x2a4>
 80059d0:	325b      	adds	r2, #91	; 0x5b
 80059d2:	e7e5      	b.n	80059a0 <_malloc_r+0x270>
 80059d4:	2a54      	cmp	r2, #84	; 0x54
 80059d6:	d803      	bhi.n	80059e0 <_malloc_r+0x2b0>
 80059d8:	ea4f 321c 	mov.w	r2, ip, lsr #12
 80059dc:	326e      	adds	r2, #110	; 0x6e
 80059de:	e7df      	b.n	80059a0 <_malloc_r+0x270>
 80059e0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80059e4:	d803      	bhi.n	80059ee <_malloc_r+0x2be>
 80059e6:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 80059ea:	3277      	adds	r2, #119	; 0x77
 80059ec:	e7d8      	b.n	80059a0 <_malloc_r+0x270>
 80059ee:	f240 5e54 	movw	lr, #1364	; 0x554
 80059f2:	4572      	cmp	r2, lr
 80059f4:	bf9a      	itte	ls
 80059f6:	ea4f 429c 	movls.w	r2, ip, lsr #18
 80059fa:	327c      	addls	r2, #124	; 0x7c
 80059fc:	227e      	movhi	r2, #126	; 0x7e
 80059fe:	e7cf      	b.n	80059a0 <_malloc_r+0x270>
 8005a00:	f8de e008 	ldr.w	lr, [lr, #8]
 8005a04:	45f0      	cmp	r8, lr
 8005a06:	d005      	beq.n	8005a14 <_malloc_r+0x2e4>
 8005a08:	f8de 2004 	ldr.w	r2, [lr, #4]
 8005a0c:	f022 0203 	bic.w	r2, r2, #3
 8005a10:	4562      	cmp	r2, ip
 8005a12:	d8f5      	bhi.n	8005a00 <_malloc_r+0x2d0>
 8005a14:	f8de 800c 	ldr.w	r8, [lr, #12]
 8005a18:	e7d1      	b.n	80059be <_malloc_r+0x28e>
 8005a1a:	bf00      	nop
 8005a1c:	20000634 	.word	0x20000634
 8005a20:	2000063c 	.word	0x2000063c
 8005a24:	20000c50 	.word	0x20000c50
 8005a28:	20000a3c 	.word	0x20000a3c
 8005a2c:	20000c20 	.word	0x20000c20
 8005a30:	20000c48 	.word	0x20000c48
 8005a34:	20000c4c 	.word	0x20000c4c
 8005a38:	6860      	ldr	r0, [r4, #4]
 8005a3a:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8005a3e:	f020 0003 	bic.w	r0, r0, #3
 8005a42:	eba0 0a07 	sub.w	sl, r0, r7
 8005a46:	f1ba 0f0f 	cmp.w	sl, #15
 8005a4a:	dd12      	ble.n	8005a72 <_malloc_r+0x342>
 8005a4c:	68a3      	ldr	r3, [r4, #8]
 8005a4e:	19e2      	adds	r2, r4, r7
 8005a50:	f047 0701 	orr.w	r7, r7, #1
 8005a54:	6067      	str	r7, [r4, #4]
 8005a56:	f8c3 c00c 	str.w	ip, [r3, #12]
 8005a5a:	f8cc 3008 	str.w	r3, [ip, #8]
 8005a5e:	f04a 0301 	orr.w	r3, sl, #1
 8005a62:	e9c6 2204 	strd	r2, r2, [r6, #16]
 8005a66:	e9c2 1102 	strd	r1, r1, [r2, #8]
 8005a6a:	6053      	str	r3, [r2, #4]
 8005a6c:	f844 a000 	str.w	sl, [r4, r0]
 8005a70:	e68f      	b.n	8005792 <_malloc_r+0x62>
 8005a72:	f1ba 0f00 	cmp.w	sl, #0
 8005a76:	db11      	blt.n	8005a9c <_malloc_r+0x36c>
 8005a78:	4420      	add	r0, r4
 8005a7a:	6843      	ldr	r3, [r0, #4]
 8005a7c:	f043 0301 	orr.w	r3, r3, #1
 8005a80:	6043      	str	r3, [r0, #4]
 8005a82:	f854 3f08 	ldr.w	r3, [r4, #8]!
 8005a86:	4628      	mov	r0, r5
 8005a88:	f8c3 c00c 	str.w	ip, [r3, #12]
 8005a8c:	f8cc 3008 	str.w	r3, [ip, #8]
 8005a90:	f000 f8b8 	bl	8005c04 <__malloc_unlock>
 8005a94:	4620      	mov	r0, r4
 8005a96:	b003      	add	sp, #12
 8005a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a9c:	4664      	mov	r4, ip
 8005a9e:	e710      	b.n	80058c2 <_malloc_r+0x192>
 8005aa0:	f858 0908 	ldr.w	r0, [r8], #-8
 8005aa4:	4540      	cmp	r0, r8
 8005aa6:	f103 33ff 	add.w	r3, r3, #4294967295
 8005aaa:	f43f af14 	beq.w	80058d6 <_malloc_r+0x1a6>
 8005aae:	e719      	b.n	80058e4 <_malloc_r+0x1b4>
 8005ab0:	3304      	adds	r3, #4
 8005ab2:	0052      	lsls	r2, r2, #1
 8005ab4:	4210      	tst	r0, r2
 8005ab6:	d0fb      	beq.n	8005ab0 <_malloc_r+0x380>
 8005ab8:	e6fd      	b.n	80058b6 <_malloc_r+0x186>
 8005aba:	4673      	mov	r3, lr
 8005abc:	e7fa      	b.n	8005ab4 <_malloc_r+0x384>
 8005abe:	f8d2 e000 	ldr.w	lr, [r2]
 8005ac2:	f1be 3fff 	cmp.w	lr, #4294967295
 8005ac6:	bf1b      	ittet	ne
 8005ac8:	eba4 0b0b 	subne.w	fp, r4, fp
 8005acc:	eb0b 0200 	addne.w	r2, fp, r0
 8005ad0:	6014      	streq	r4, [r2, #0]
 8005ad2:	601a      	strne	r2, [r3, #0]
 8005ad4:	f014 0b07 	ands.w	fp, r4, #7
 8005ad8:	bf1a      	itte	ne
 8005ada:	f1cb 0008 	rsbne	r0, fp, #8
 8005ade:	1824      	addne	r4, r4, r0
 8005ae0:	4658      	moveq	r0, fp
 8005ae2:	1862      	adds	r2, r4, r1
 8005ae4:	ea02 010c 	and.w	r1, r2, ip
 8005ae8:	4480      	add	r8, r0
 8005aea:	eba8 0801 	sub.w	r8, r8, r1
 8005aee:	ea08 080c 	and.w	r8, r8, ip
 8005af2:	4641      	mov	r1, r8
 8005af4:	4628      	mov	r0, r5
 8005af6:	9201      	str	r2, [sp, #4]
 8005af8:	f000 fd92 	bl	8006620 <_sbrk_r>
 8005afc:	1c43      	adds	r3, r0, #1
 8005afe:	9a01      	ldr	r2, [sp, #4]
 8005b00:	4b28      	ldr	r3, [pc, #160]	; (8005ba4 <_malloc_r+0x474>)
 8005b02:	d107      	bne.n	8005b14 <_malloc_r+0x3e4>
 8005b04:	f1bb 0f00 	cmp.w	fp, #0
 8005b08:	d023      	beq.n	8005b52 <_malloc_r+0x422>
 8005b0a:	f1ab 0008 	sub.w	r0, fp, #8
 8005b0e:	4410      	add	r0, r2
 8005b10:	f04f 0800 	mov.w	r8, #0
 8005b14:	681a      	ldr	r2, [r3, #0]
 8005b16:	60b4      	str	r4, [r6, #8]
 8005b18:	1b00      	subs	r0, r0, r4
 8005b1a:	4440      	add	r0, r8
 8005b1c:	4442      	add	r2, r8
 8005b1e:	f040 0001 	orr.w	r0, r0, #1
 8005b22:	45b2      	cmp	sl, r6
 8005b24:	601a      	str	r2, [r3, #0]
 8005b26:	6060      	str	r0, [r4, #4]
 8005b28:	f43f af26 	beq.w	8005978 <_malloc_r+0x248>
 8005b2c:	f1b9 0f0f 	cmp.w	r9, #15
 8005b30:	d812      	bhi.n	8005b58 <_malloc_r+0x428>
 8005b32:	2301      	movs	r3, #1
 8005b34:	6063      	str	r3, [r4, #4]
 8005b36:	68b3      	ldr	r3, [r6, #8]
 8005b38:	685b      	ldr	r3, [r3, #4]
 8005b3a:	f023 0303 	bic.w	r3, r3, #3
 8005b3e:	42bb      	cmp	r3, r7
 8005b40:	eba3 0207 	sub.w	r2, r3, r7
 8005b44:	d301      	bcc.n	8005b4a <_malloc_r+0x41a>
 8005b46:	2a0f      	cmp	r2, #15
 8005b48:	dc22      	bgt.n	8005b90 <_malloc_r+0x460>
 8005b4a:	4628      	mov	r0, r5
 8005b4c:	f000 f85a 	bl	8005c04 <__malloc_unlock>
 8005b50:	e5fa      	b.n	8005748 <_malloc_r+0x18>
 8005b52:	4610      	mov	r0, r2
 8005b54:	46d8      	mov	r8, fp
 8005b56:	e7dd      	b.n	8005b14 <_malloc_r+0x3e4>
 8005b58:	f8da 2004 	ldr.w	r2, [sl, #4]
 8005b5c:	f1a9 090c 	sub.w	r9, r9, #12
 8005b60:	f029 0907 	bic.w	r9, r9, #7
 8005b64:	f002 0201 	and.w	r2, r2, #1
 8005b68:	ea42 0209 	orr.w	r2, r2, r9
 8005b6c:	f8ca 2004 	str.w	r2, [sl, #4]
 8005b70:	2105      	movs	r1, #5
 8005b72:	eb0a 0209 	add.w	r2, sl, r9
 8005b76:	f1b9 0f0f 	cmp.w	r9, #15
 8005b7a:	e9c2 1101 	strd	r1, r1, [r2, #4]
 8005b7e:	f67f aefb 	bls.w	8005978 <_malloc_r+0x248>
 8005b82:	f10a 0108 	add.w	r1, sl, #8
 8005b86:	4628      	mov	r0, r5
 8005b88:	f7ff fb36 	bl	80051f8 <_free_r>
 8005b8c:	4b05      	ldr	r3, [pc, #20]	; (8005ba4 <_malloc_r+0x474>)
 8005b8e:	e6f3      	b.n	8005978 <_malloc_r+0x248>
 8005b90:	68b4      	ldr	r4, [r6, #8]
 8005b92:	f047 0301 	orr.w	r3, r7, #1
 8005b96:	4427      	add	r7, r4
 8005b98:	f042 0201 	orr.w	r2, r2, #1
 8005b9c:	6063      	str	r3, [r4, #4]
 8005b9e:	60b7      	str	r7, [r6, #8]
 8005ba0:	607a      	str	r2, [r7, #4]
 8005ba2:	e5f6      	b.n	8005792 <_malloc_r+0x62>
 8005ba4:	20000c20 	.word	0x20000c20

08005ba8 <memcpy>:
 8005ba8:	440a      	add	r2, r1
 8005baa:	4291      	cmp	r1, r2
 8005bac:	f100 33ff 	add.w	r3, r0, #4294967295
 8005bb0:	d100      	bne.n	8005bb4 <memcpy+0xc>
 8005bb2:	4770      	bx	lr
 8005bb4:	b510      	push	{r4, lr}
 8005bb6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005bba:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005bbe:	4291      	cmp	r1, r2
 8005bc0:	d1f9      	bne.n	8005bb6 <memcpy+0xe>
 8005bc2:	bd10      	pop	{r4, pc}

08005bc4 <memmove>:
 8005bc4:	4288      	cmp	r0, r1
 8005bc6:	b510      	push	{r4, lr}
 8005bc8:	eb01 0402 	add.w	r4, r1, r2
 8005bcc:	d902      	bls.n	8005bd4 <memmove+0x10>
 8005bce:	4284      	cmp	r4, r0
 8005bd0:	4623      	mov	r3, r4
 8005bd2:	d807      	bhi.n	8005be4 <memmove+0x20>
 8005bd4:	1e43      	subs	r3, r0, #1
 8005bd6:	42a1      	cmp	r1, r4
 8005bd8:	d008      	beq.n	8005bec <memmove+0x28>
 8005bda:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005bde:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005be2:	e7f8      	b.n	8005bd6 <memmove+0x12>
 8005be4:	4402      	add	r2, r0
 8005be6:	4601      	mov	r1, r0
 8005be8:	428a      	cmp	r2, r1
 8005bea:	d100      	bne.n	8005bee <memmove+0x2a>
 8005bec:	bd10      	pop	{r4, pc}
 8005bee:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005bf2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005bf6:	e7f7      	b.n	8005be8 <memmove+0x24>

08005bf8 <__malloc_lock>:
 8005bf8:	4801      	ldr	r0, [pc, #4]	; (8005c00 <__malloc_lock+0x8>)
 8005bfa:	f7ff bd2b 	b.w	8005654 <__retarget_lock_acquire_recursive>
 8005bfe:	bf00      	nop
 8005c00:	20000c1a 	.word	0x20000c1a

08005c04 <__malloc_unlock>:
 8005c04:	4801      	ldr	r0, [pc, #4]	; (8005c0c <__malloc_unlock+0x8>)
 8005c06:	f7ff bd26 	b.w	8005656 <__retarget_lock_release_recursive>
 8005c0a:	bf00      	nop
 8005c0c:	20000c1a 	.word	0x20000c1a

08005c10 <_Balloc>:
 8005c10:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8005c12:	b570      	push	{r4, r5, r6, lr}
 8005c14:	4605      	mov	r5, r0
 8005c16:	460c      	mov	r4, r1
 8005c18:	b17b      	cbz	r3, 8005c3a <_Balloc+0x2a>
 8005c1a:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8005c1c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005c20:	b9a0      	cbnz	r0, 8005c4c <_Balloc+0x3c>
 8005c22:	2101      	movs	r1, #1
 8005c24:	fa01 f604 	lsl.w	r6, r1, r4
 8005c28:	1d72      	adds	r2, r6, #5
 8005c2a:	0092      	lsls	r2, r2, #2
 8005c2c:	4628      	mov	r0, r5
 8005c2e:	f001 fadd 	bl	80071ec <_calloc_r>
 8005c32:	b148      	cbz	r0, 8005c48 <_Balloc+0x38>
 8005c34:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8005c38:	e00b      	b.n	8005c52 <_Balloc+0x42>
 8005c3a:	2221      	movs	r2, #33	; 0x21
 8005c3c:	2104      	movs	r1, #4
 8005c3e:	f001 fad5 	bl	80071ec <_calloc_r>
 8005c42:	64e8      	str	r0, [r5, #76]	; 0x4c
 8005c44:	2800      	cmp	r0, #0
 8005c46:	d1e8      	bne.n	8005c1a <_Balloc+0xa>
 8005c48:	2000      	movs	r0, #0
 8005c4a:	bd70      	pop	{r4, r5, r6, pc}
 8005c4c:	6802      	ldr	r2, [r0, #0]
 8005c4e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8005c52:	2300      	movs	r3, #0
 8005c54:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005c58:	e7f7      	b.n	8005c4a <_Balloc+0x3a>

08005c5a <_Bfree>:
 8005c5a:	b131      	cbz	r1, 8005c6a <_Bfree+0x10>
 8005c5c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8005c5e:	684a      	ldr	r2, [r1, #4]
 8005c60:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8005c64:	6008      	str	r0, [r1, #0]
 8005c66:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005c6a:	4770      	bx	lr

08005c6c <__multadd>:
 8005c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c70:	690d      	ldr	r5, [r1, #16]
 8005c72:	4607      	mov	r7, r0
 8005c74:	460c      	mov	r4, r1
 8005c76:	461e      	mov	r6, r3
 8005c78:	f101 0c14 	add.w	ip, r1, #20
 8005c7c:	2000      	movs	r0, #0
 8005c7e:	f8dc 3000 	ldr.w	r3, [ip]
 8005c82:	b299      	uxth	r1, r3
 8005c84:	fb02 6101 	mla	r1, r2, r1, r6
 8005c88:	0c1e      	lsrs	r6, r3, #16
 8005c8a:	0c0b      	lsrs	r3, r1, #16
 8005c8c:	fb02 3306 	mla	r3, r2, r6, r3
 8005c90:	b289      	uxth	r1, r1
 8005c92:	3001      	adds	r0, #1
 8005c94:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8005c98:	4285      	cmp	r5, r0
 8005c9a:	f84c 1b04 	str.w	r1, [ip], #4
 8005c9e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8005ca2:	dcec      	bgt.n	8005c7e <__multadd+0x12>
 8005ca4:	b30e      	cbz	r6, 8005cea <__multadd+0x7e>
 8005ca6:	68a3      	ldr	r3, [r4, #8]
 8005ca8:	42ab      	cmp	r3, r5
 8005caa:	dc19      	bgt.n	8005ce0 <__multadd+0x74>
 8005cac:	6861      	ldr	r1, [r4, #4]
 8005cae:	4638      	mov	r0, r7
 8005cb0:	3101      	adds	r1, #1
 8005cb2:	f7ff ffad 	bl	8005c10 <_Balloc>
 8005cb6:	4680      	mov	r8, r0
 8005cb8:	b928      	cbnz	r0, 8005cc6 <__multadd+0x5a>
 8005cba:	4602      	mov	r2, r0
 8005cbc:	4b0c      	ldr	r3, [pc, #48]	; (8005cf0 <__multadd+0x84>)
 8005cbe:	480d      	ldr	r0, [pc, #52]	; (8005cf4 <__multadd+0x88>)
 8005cc0:	21b5      	movs	r1, #181	; 0xb5
 8005cc2:	f001 fa75 	bl	80071b0 <__assert_func>
 8005cc6:	6922      	ldr	r2, [r4, #16]
 8005cc8:	3202      	adds	r2, #2
 8005cca:	f104 010c 	add.w	r1, r4, #12
 8005cce:	0092      	lsls	r2, r2, #2
 8005cd0:	300c      	adds	r0, #12
 8005cd2:	f7ff ff69 	bl	8005ba8 <memcpy>
 8005cd6:	4621      	mov	r1, r4
 8005cd8:	4638      	mov	r0, r7
 8005cda:	f7ff ffbe 	bl	8005c5a <_Bfree>
 8005cde:	4644      	mov	r4, r8
 8005ce0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005ce4:	3501      	adds	r5, #1
 8005ce6:	615e      	str	r6, [r3, #20]
 8005ce8:	6125      	str	r5, [r4, #16]
 8005cea:	4620      	mov	r0, r4
 8005cec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005cf0:	08007d21 	.word	0x08007d21
 8005cf4:	08007d8d 	.word	0x08007d8d

08005cf8 <__hi0bits>:
 8005cf8:	0c02      	lsrs	r2, r0, #16
 8005cfa:	0412      	lsls	r2, r2, #16
 8005cfc:	4603      	mov	r3, r0
 8005cfe:	b9ca      	cbnz	r2, 8005d34 <__hi0bits+0x3c>
 8005d00:	0403      	lsls	r3, r0, #16
 8005d02:	2010      	movs	r0, #16
 8005d04:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005d08:	bf04      	itt	eq
 8005d0a:	021b      	lsleq	r3, r3, #8
 8005d0c:	3008      	addeq	r0, #8
 8005d0e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005d12:	bf04      	itt	eq
 8005d14:	011b      	lsleq	r3, r3, #4
 8005d16:	3004      	addeq	r0, #4
 8005d18:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005d1c:	bf04      	itt	eq
 8005d1e:	009b      	lsleq	r3, r3, #2
 8005d20:	3002      	addeq	r0, #2
 8005d22:	2b00      	cmp	r3, #0
 8005d24:	db05      	blt.n	8005d32 <__hi0bits+0x3a>
 8005d26:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8005d2a:	f100 0001 	add.w	r0, r0, #1
 8005d2e:	bf08      	it	eq
 8005d30:	2020      	moveq	r0, #32
 8005d32:	4770      	bx	lr
 8005d34:	2000      	movs	r0, #0
 8005d36:	e7e5      	b.n	8005d04 <__hi0bits+0xc>

08005d38 <__lo0bits>:
 8005d38:	6803      	ldr	r3, [r0, #0]
 8005d3a:	4602      	mov	r2, r0
 8005d3c:	f013 0007 	ands.w	r0, r3, #7
 8005d40:	d00b      	beq.n	8005d5a <__lo0bits+0x22>
 8005d42:	07d9      	lsls	r1, r3, #31
 8005d44:	d421      	bmi.n	8005d8a <__lo0bits+0x52>
 8005d46:	0798      	lsls	r0, r3, #30
 8005d48:	bf49      	itett	mi
 8005d4a:	085b      	lsrmi	r3, r3, #1
 8005d4c:	089b      	lsrpl	r3, r3, #2
 8005d4e:	2001      	movmi	r0, #1
 8005d50:	6013      	strmi	r3, [r2, #0]
 8005d52:	bf5c      	itt	pl
 8005d54:	6013      	strpl	r3, [r2, #0]
 8005d56:	2002      	movpl	r0, #2
 8005d58:	4770      	bx	lr
 8005d5a:	b299      	uxth	r1, r3
 8005d5c:	b909      	cbnz	r1, 8005d62 <__lo0bits+0x2a>
 8005d5e:	0c1b      	lsrs	r3, r3, #16
 8005d60:	2010      	movs	r0, #16
 8005d62:	b2d9      	uxtb	r1, r3
 8005d64:	b909      	cbnz	r1, 8005d6a <__lo0bits+0x32>
 8005d66:	3008      	adds	r0, #8
 8005d68:	0a1b      	lsrs	r3, r3, #8
 8005d6a:	0719      	lsls	r1, r3, #28
 8005d6c:	bf04      	itt	eq
 8005d6e:	091b      	lsreq	r3, r3, #4
 8005d70:	3004      	addeq	r0, #4
 8005d72:	0799      	lsls	r1, r3, #30
 8005d74:	bf04      	itt	eq
 8005d76:	089b      	lsreq	r3, r3, #2
 8005d78:	3002      	addeq	r0, #2
 8005d7a:	07d9      	lsls	r1, r3, #31
 8005d7c:	d403      	bmi.n	8005d86 <__lo0bits+0x4e>
 8005d7e:	085b      	lsrs	r3, r3, #1
 8005d80:	f100 0001 	add.w	r0, r0, #1
 8005d84:	d003      	beq.n	8005d8e <__lo0bits+0x56>
 8005d86:	6013      	str	r3, [r2, #0]
 8005d88:	4770      	bx	lr
 8005d8a:	2000      	movs	r0, #0
 8005d8c:	4770      	bx	lr
 8005d8e:	2020      	movs	r0, #32
 8005d90:	4770      	bx	lr
	...

08005d94 <__i2b>:
 8005d94:	b510      	push	{r4, lr}
 8005d96:	460c      	mov	r4, r1
 8005d98:	2101      	movs	r1, #1
 8005d9a:	f7ff ff39 	bl	8005c10 <_Balloc>
 8005d9e:	4602      	mov	r2, r0
 8005da0:	b928      	cbnz	r0, 8005dae <__i2b+0x1a>
 8005da2:	4b05      	ldr	r3, [pc, #20]	; (8005db8 <__i2b+0x24>)
 8005da4:	4805      	ldr	r0, [pc, #20]	; (8005dbc <__i2b+0x28>)
 8005da6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005daa:	f001 fa01 	bl	80071b0 <__assert_func>
 8005dae:	2301      	movs	r3, #1
 8005db0:	6144      	str	r4, [r0, #20]
 8005db2:	6103      	str	r3, [r0, #16]
 8005db4:	bd10      	pop	{r4, pc}
 8005db6:	bf00      	nop
 8005db8:	08007d21 	.word	0x08007d21
 8005dbc:	08007d8d 	.word	0x08007d8d

08005dc0 <__multiply>:
 8005dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dc4:	4691      	mov	r9, r2
 8005dc6:	690a      	ldr	r2, [r1, #16]
 8005dc8:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005dcc:	429a      	cmp	r2, r3
 8005dce:	bfb8      	it	lt
 8005dd0:	460b      	movlt	r3, r1
 8005dd2:	460c      	mov	r4, r1
 8005dd4:	bfbc      	itt	lt
 8005dd6:	464c      	movlt	r4, r9
 8005dd8:	4699      	movlt	r9, r3
 8005dda:	6927      	ldr	r7, [r4, #16]
 8005ddc:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8005de0:	68a3      	ldr	r3, [r4, #8]
 8005de2:	6861      	ldr	r1, [r4, #4]
 8005de4:	eb07 060a 	add.w	r6, r7, sl
 8005de8:	42b3      	cmp	r3, r6
 8005dea:	b085      	sub	sp, #20
 8005dec:	bfb8      	it	lt
 8005dee:	3101      	addlt	r1, #1
 8005df0:	f7ff ff0e 	bl	8005c10 <_Balloc>
 8005df4:	b930      	cbnz	r0, 8005e04 <__multiply+0x44>
 8005df6:	4602      	mov	r2, r0
 8005df8:	4b43      	ldr	r3, [pc, #268]	; (8005f08 <__multiply+0x148>)
 8005dfa:	4844      	ldr	r0, [pc, #272]	; (8005f0c <__multiply+0x14c>)
 8005dfc:	f240 115d 	movw	r1, #349	; 0x15d
 8005e00:	f001 f9d6 	bl	80071b0 <__assert_func>
 8005e04:	f100 0514 	add.w	r5, r0, #20
 8005e08:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8005e0c:	462b      	mov	r3, r5
 8005e0e:	2200      	movs	r2, #0
 8005e10:	4543      	cmp	r3, r8
 8005e12:	d321      	bcc.n	8005e58 <__multiply+0x98>
 8005e14:	f104 0314 	add.w	r3, r4, #20
 8005e18:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8005e1c:	f109 0314 	add.w	r3, r9, #20
 8005e20:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8005e24:	9202      	str	r2, [sp, #8]
 8005e26:	1b3a      	subs	r2, r7, r4
 8005e28:	3a15      	subs	r2, #21
 8005e2a:	f022 0203 	bic.w	r2, r2, #3
 8005e2e:	3204      	adds	r2, #4
 8005e30:	f104 0115 	add.w	r1, r4, #21
 8005e34:	428f      	cmp	r7, r1
 8005e36:	bf38      	it	cc
 8005e38:	2204      	movcc	r2, #4
 8005e3a:	9201      	str	r2, [sp, #4]
 8005e3c:	9a02      	ldr	r2, [sp, #8]
 8005e3e:	9303      	str	r3, [sp, #12]
 8005e40:	429a      	cmp	r2, r3
 8005e42:	d80c      	bhi.n	8005e5e <__multiply+0x9e>
 8005e44:	2e00      	cmp	r6, #0
 8005e46:	dd03      	ble.n	8005e50 <__multiply+0x90>
 8005e48:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d059      	beq.n	8005f04 <__multiply+0x144>
 8005e50:	6106      	str	r6, [r0, #16]
 8005e52:	b005      	add	sp, #20
 8005e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e58:	f843 2b04 	str.w	r2, [r3], #4
 8005e5c:	e7d8      	b.n	8005e10 <__multiply+0x50>
 8005e5e:	f8b3 a000 	ldrh.w	sl, [r3]
 8005e62:	f1ba 0f00 	cmp.w	sl, #0
 8005e66:	d023      	beq.n	8005eb0 <__multiply+0xf0>
 8005e68:	f104 0e14 	add.w	lr, r4, #20
 8005e6c:	46a9      	mov	r9, r5
 8005e6e:	f04f 0c00 	mov.w	ip, #0
 8005e72:	f85e 2b04 	ldr.w	r2, [lr], #4
 8005e76:	f8d9 1000 	ldr.w	r1, [r9]
 8005e7a:	fa1f fb82 	uxth.w	fp, r2
 8005e7e:	b289      	uxth	r1, r1
 8005e80:	fb0a 110b 	mla	r1, sl, fp, r1
 8005e84:	4461      	add	r1, ip
 8005e86:	f8d9 c000 	ldr.w	ip, [r9]
 8005e8a:	0c12      	lsrs	r2, r2, #16
 8005e8c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8005e90:	fb0a c202 	mla	r2, sl, r2, ip
 8005e94:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8005e98:	b289      	uxth	r1, r1
 8005e9a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005e9e:	4577      	cmp	r7, lr
 8005ea0:	f849 1b04 	str.w	r1, [r9], #4
 8005ea4:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8005ea8:	d8e3      	bhi.n	8005e72 <__multiply+0xb2>
 8005eaa:	9a01      	ldr	r2, [sp, #4]
 8005eac:	f845 c002 	str.w	ip, [r5, r2]
 8005eb0:	9a03      	ldr	r2, [sp, #12]
 8005eb2:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005eb6:	3304      	adds	r3, #4
 8005eb8:	f1b9 0f00 	cmp.w	r9, #0
 8005ebc:	d020      	beq.n	8005f00 <__multiply+0x140>
 8005ebe:	6829      	ldr	r1, [r5, #0]
 8005ec0:	f104 0c14 	add.w	ip, r4, #20
 8005ec4:	46ae      	mov	lr, r5
 8005ec6:	f04f 0a00 	mov.w	sl, #0
 8005eca:	f8bc b000 	ldrh.w	fp, [ip]
 8005ece:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8005ed2:	fb09 220b 	mla	r2, r9, fp, r2
 8005ed6:	4492      	add	sl, r2
 8005ed8:	b289      	uxth	r1, r1
 8005eda:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8005ede:	f84e 1b04 	str.w	r1, [lr], #4
 8005ee2:	f85c 2b04 	ldr.w	r2, [ip], #4
 8005ee6:	f8be 1000 	ldrh.w	r1, [lr]
 8005eea:	0c12      	lsrs	r2, r2, #16
 8005eec:	fb09 1102 	mla	r1, r9, r2, r1
 8005ef0:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8005ef4:	4567      	cmp	r7, ip
 8005ef6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005efa:	d8e6      	bhi.n	8005eca <__multiply+0x10a>
 8005efc:	9a01      	ldr	r2, [sp, #4]
 8005efe:	50a9      	str	r1, [r5, r2]
 8005f00:	3504      	adds	r5, #4
 8005f02:	e79b      	b.n	8005e3c <__multiply+0x7c>
 8005f04:	3e01      	subs	r6, #1
 8005f06:	e79d      	b.n	8005e44 <__multiply+0x84>
 8005f08:	08007d21 	.word	0x08007d21
 8005f0c:	08007d8d 	.word	0x08007d8d

08005f10 <__pow5mult>:
 8005f10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005f14:	4615      	mov	r5, r2
 8005f16:	f012 0203 	ands.w	r2, r2, #3
 8005f1a:	4606      	mov	r6, r0
 8005f1c:	460f      	mov	r7, r1
 8005f1e:	d007      	beq.n	8005f30 <__pow5mult+0x20>
 8005f20:	4c1a      	ldr	r4, [pc, #104]	; (8005f8c <__pow5mult+0x7c>)
 8005f22:	3a01      	subs	r2, #1
 8005f24:	2300      	movs	r3, #0
 8005f26:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005f2a:	f7ff fe9f 	bl	8005c6c <__multadd>
 8005f2e:	4607      	mov	r7, r0
 8005f30:	10ad      	asrs	r5, r5, #2
 8005f32:	d027      	beq.n	8005f84 <__pow5mult+0x74>
 8005f34:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 8005f36:	b944      	cbnz	r4, 8005f4a <__pow5mult+0x3a>
 8005f38:	f240 2171 	movw	r1, #625	; 0x271
 8005f3c:	4630      	mov	r0, r6
 8005f3e:	f7ff ff29 	bl	8005d94 <__i2b>
 8005f42:	2300      	movs	r3, #0
 8005f44:	64b0      	str	r0, [r6, #72]	; 0x48
 8005f46:	4604      	mov	r4, r0
 8005f48:	6003      	str	r3, [r0, #0]
 8005f4a:	f04f 0900 	mov.w	r9, #0
 8005f4e:	07eb      	lsls	r3, r5, #31
 8005f50:	d50a      	bpl.n	8005f68 <__pow5mult+0x58>
 8005f52:	4639      	mov	r1, r7
 8005f54:	4622      	mov	r2, r4
 8005f56:	4630      	mov	r0, r6
 8005f58:	f7ff ff32 	bl	8005dc0 <__multiply>
 8005f5c:	4639      	mov	r1, r7
 8005f5e:	4680      	mov	r8, r0
 8005f60:	4630      	mov	r0, r6
 8005f62:	f7ff fe7a 	bl	8005c5a <_Bfree>
 8005f66:	4647      	mov	r7, r8
 8005f68:	106d      	asrs	r5, r5, #1
 8005f6a:	d00b      	beq.n	8005f84 <__pow5mult+0x74>
 8005f6c:	6820      	ldr	r0, [r4, #0]
 8005f6e:	b938      	cbnz	r0, 8005f80 <__pow5mult+0x70>
 8005f70:	4622      	mov	r2, r4
 8005f72:	4621      	mov	r1, r4
 8005f74:	4630      	mov	r0, r6
 8005f76:	f7ff ff23 	bl	8005dc0 <__multiply>
 8005f7a:	6020      	str	r0, [r4, #0]
 8005f7c:	f8c0 9000 	str.w	r9, [r0]
 8005f80:	4604      	mov	r4, r0
 8005f82:	e7e4      	b.n	8005f4e <__pow5mult+0x3e>
 8005f84:	4638      	mov	r0, r7
 8005f86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005f8a:	bf00      	nop
 8005f8c:	08007ee0 	.word	0x08007ee0

08005f90 <__lshift>:
 8005f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f94:	460c      	mov	r4, r1
 8005f96:	6849      	ldr	r1, [r1, #4]
 8005f98:	6923      	ldr	r3, [r4, #16]
 8005f9a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8005f9e:	68a3      	ldr	r3, [r4, #8]
 8005fa0:	4607      	mov	r7, r0
 8005fa2:	4691      	mov	r9, r2
 8005fa4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005fa8:	f108 0601 	add.w	r6, r8, #1
 8005fac:	42b3      	cmp	r3, r6
 8005fae:	db0b      	blt.n	8005fc8 <__lshift+0x38>
 8005fb0:	4638      	mov	r0, r7
 8005fb2:	f7ff fe2d 	bl	8005c10 <_Balloc>
 8005fb6:	4605      	mov	r5, r0
 8005fb8:	b948      	cbnz	r0, 8005fce <__lshift+0x3e>
 8005fba:	4602      	mov	r2, r0
 8005fbc:	4b2a      	ldr	r3, [pc, #168]	; (8006068 <__lshift+0xd8>)
 8005fbe:	482b      	ldr	r0, [pc, #172]	; (800606c <__lshift+0xdc>)
 8005fc0:	f240 11d9 	movw	r1, #473	; 0x1d9
 8005fc4:	f001 f8f4 	bl	80071b0 <__assert_func>
 8005fc8:	3101      	adds	r1, #1
 8005fca:	005b      	lsls	r3, r3, #1
 8005fcc:	e7ee      	b.n	8005fac <__lshift+0x1c>
 8005fce:	2300      	movs	r3, #0
 8005fd0:	f100 0114 	add.w	r1, r0, #20
 8005fd4:	f100 0210 	add.w	r2, r0, #16
 8005fd8:	4618      	mov	r0, r3
 8005fda:	4553      	cmp	r3, sl
 8005fdc:	db37      	blt.n	800604e <__lshift+0xbe>
 8005fde:	6920      	ldr	r0, [r4, #16]
 8005fe0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005fe4:	f104 0314 	add.w	r3, r4, #20
 8005fe8:	f019 091f 	ands.w	r9, r9, #31
 8005fec:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005ff0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8005ff4:	d02f      	beq.n	8006056 <__lshift+0xc6>
 8005ff6:	f1c9 0e20 	rsb	lr, r9, #32
 8005ffa:	468a      	mov	sl, r1
 8005ffc:	f04f 0c00 	mov.w	ip, #0
 8006000:	681a      	ldr	r2, [r3, #0]
 8006002:	fa02 f209 	lsl.w	r2, r2, r9
 8006006:	ea42 020c 	orr.w	r2, r2, ip
 800600a:	f84a 2b04 	str.w	r2, [sl], #4
 800600e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006012:	4298      	cmp	r0, r3
 8006014:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006018:	d8f2      	bhi.n	8006000 <__lshift+0x70>
 800601a:	1b03      	subs	r3, r0, r4
 800601c:	3b15      	subs	r3, #21
 800601e:	f023 0303 	bic.w	r3, r3, #3
 8006022:	3304      	adds	r3, #4
 8006024:	f104 0215 	add.w	r2, r4, #21
 8006028:	4290      	cmp	r0, r2
 800602a:	bf38      	it	cc
 800602c:	2304      	movcc	r3, #4
 800602e:	f841 c003 	str.w	ip, [r1, r3]
 8006032:	f1bc 0f00 	cmp.w	ip, #0
 8006036:	d001      	beq.n	800603c <__lshift+0xac>
 8006038:	f108 0602 	add.w	r6, r8, #2
 800603c:	3e01      	subs	r6, #1
 800603e:	4638      	mov	r0, r7
 8006040:	612e      	str	r6, [r5, #16]
 8006042:	4621      	mov	r1, r4
 8006044:	f7ff fe09 	bl	8005c5a <_Bfree>
 8006048:	4628      	mov	r0, r5
 800604a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800604e:	f842 0f04 	str.w	r0, [r2, #4]!
 8006052:	3301      	adds	r3, #1
 8006054:	e7c1      	b.n	8005fda <__lshift+0x4a>
 8006056:	3904      	subs	r1, #4
 8006058:	f853 2b04 	ldr.w	r2, [r3], #4
 800605c:	f841 2f04 	str.w	r2, [r1, #4]!
 8006060:	4298      	cmp	r0, r3
 8006062:	d8f9      	bhi.n	8006058 <__lshift+0xc8>
 8006064:	e7ea      	b.n	800603c <__lshift+0xac>
 8006066:	bf00      	nop
 8006068:	08007d21 	.word	0x08007d21
 800606c:	08007d8d 	.word	0x08007d8d

08006070 <__mcmp>:
 8006070:	690a      	ldr	r2, [r1, #16]
 8006072:	4603      	mov	r3, r0
 8006074:	6900      	ldr	r0, [r0, #16]
 8006076:	1a80      	subs	r0, r0, r2
 8006078:	b530      	push	{r4, r5, lr}
 800607a:	d10d      	bne.n	8006098 <__mcmp+0x28>
 800607c:	3314      	adds	r3, #20
 800607e:	3114      	adds	r1, #20
 8006080:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8006084:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8006088:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800608c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8006090:	4295      	cmp	r5, r2
 8006092:	d002      	beq.n	800609a <__mcmp+0x2a>
 8006094:	d304      	bcc.n	80060a0 <__mcmp+0x30>
 8006096:	2001      	movs	r0, #1
 8006098:	bd30      	pop	{r4, r5, pc}
 800609a:	42a3      	cmp	r3, r4
 800609c:	d3f4      	bcc.n	8006088 <__mcmp+0x18>
 800609e:	e7fb      	b.n	8006098 <__mcmp+0x28>
 80060a0:	f04f 30ff 	mov.w	r0, #4294967295
 80060a4:	e7f8      	b.n	8006098 <__mcmp+0x28>
	...

080060a8 <__mdiff>:
 80060a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060ac:	460d      	mov	r5, r1
 80060ae:	4607      	mov	r7, r0
 80060b0:	4611      	mov	r1, r2
 80060b2:	4628      	mov	r0, r5
 80060b4:	4614      	mov	r4, r2
 80060b6:	f7ff ffdb 	bl	8006070 <__mcmp>
 80060ba:	1e06      	subs	r6, r0, #0
 80060bc:	d111      	bne.n	80060e2 <__mdiff+0x3a>
 80060be:	4631      	mov	r1, r6
 80060c0:	4638      	mov	r0, r7
 80060c2:	f7ff fda5 	bl	8005c10 <_Balloc>
 80060c6:	4602      	mov	r2, r0
 80060c8:	b928      	cbnz	r0, 80060d6 <__mdiff+0x2e>
 80060ca:	4b39      	ldr	r3, [pc, #228]	; (80061b0 <__mdiff+0x108>)
 80060cc:	f240 2132 	movw	r1, #562	; 0x232
 80060d0:	4838      	ldr	r0, [pc, #224]	; (80061b4 <__mdiff+0x10c>)
 80060d2:	f001 f86d 	bl	80071b0 <__assert_func>
 80060d6:	2301      	movs	r3, #1
 80060d8:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80060dc:	4610      	mov	r0, r2
 80060de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060e2:	bfa4      	itt	ge
 80060e4:	4623      	movge	r3, r4
 80060e6:	462c      	movge	r4, r5
 80060e8:	4638      	mov	r0, r7
 80060ea:	6861      	ldr	r1, [r4, #4]
 80060ec:	bfa6      	itte	ge
 80060ee:	461d      	movge	r5, r3
 80060f0:	2600      	movge	r6, #0
 80060f2:	2601      	movlt	r6, #1
 80060f4:	f7ff fd8c 	bl	8005c10 <_Balloc>
 80060f8:	4602      	mov	r2, r0
 80060fa:	b918      	cbnz	r0, 8006104 <__mdiff+0x5c>
 80060fc:	4b2c      	ldr	r3, [pc, #176]	; (80061b0 <__mdiff+0x108>)
 80060fe:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006102:	e7e5      	b.n	80060d0 <__mdiff+0x28>
 8006104:	6927      	ldr	r7, [r4, #16]
 8006106:	60c6      	str	r6, [r0, #12]
 8006108:	692e      	ldr	r6, [r5, #16]
 800610a:	f104 0014 	add.w	r0, r4, #20
 800610e:	f105 0914 	add.w	r9, r5, #20
 8006112:	f102 0e14 	add.w	lr, r2, #20
 8006116:	eb00 0c87 	add.w	ip, r0, r7, lsl #2
 800611a:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800611e:	3410      	adds	r4, #16
 8006120:	46f2      	mov	sl, lr
 8006122:	2100      	movs	r1, #0
 8006124:	f859 3b04 	ldr.w	r3, [r9], #4
 8006128:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800612c:	fa1f f883 	uxth.w	r8, r3
 8006130:	fa11 f18b 	uxtah	r1, r1, fp
 8006134:	0c1b      	lsrs	r3, r3, #16
 8006136:	eba1 0808 	sub.w	r8, r1, r8
 800613a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800613e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8006142:	fa1f f888 	uxth.w	r8, r8
 8006146:	1419      	asrs	r1, r3, #16
 8006148:	454e      	cmp	r6, r9
 800614a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800614e:	f84a 3b04 	str.w	r3, [sl], #4
 8006152:	d8e7      	bhi.n	8006124 <__mdiff+0x7c>
 8006154:	1b73      	subs	r3, r6, r5
 8006156:	3b15      	subs	r3, #21
 8006158:	f023 0303 	bic.w	r3, r3, #3
 800615c:	3304      	adds	r3, #4
 800615e:	3515      	adds	r5, #21
 8006160:	42ae      	cmp	r6, r5
 8006162:	bf38      	it	cc
 8006164:	2304      	movcc	r3, #4
 8006166:	4418      	add	r0, r3
 8006168:	4473      	add	r3, lr
 800616a:	469e      	mov	lr, r3
 800616c:	4606      	mov	r6, r0
 800616e:	4566      	cmp	r6, ip
 8006170:	d30e      	bcc.n	8006190 <__mdiff+0xe8>
 8006172:	f10c 0103 	add.w	r1, ip, #3
 8006176:	1a09      	subs	r1, r1, r0
 8006178:	f021 0103 	bic.w	r1, r1, #3
 800617c:	3803      	subs	r0, #3
 800617e:	4584      	cmp	ip, r0
 8006180:	bf38      	it	cc
 8006182:	2100      	movcc	r1, #0
 8006184:	4419      	add	r1, r3
 8006186:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800618a:	b17b      	cbz	r3, 80061ac <__mdiff+0x104>
 800618c:	6117      	str	r7, [r2, #16]
 800618e:	e7a5      	b.n	80060dc <__mdiff+0x34>
 8006190:	f856 8b04 	ldr.w	r8, [r6], #4
 8006194:	fa11 f488 	uxtah	r4, r1, r8
 8006198:	1425      	asrs	r5, r4, #16
 800619a:	eb05 4518 	add.w	r5, r5, r8, lsr #16
 800619e:	b2a4      	uxth	r4, r4
 80061a0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80061a4:	f84e 4b04 	str.w	r4, [lr], #4
 80061a8:	1429      	asrs	r1, r5, #16
 80061aa:	e7e0      	b.n	800616e <__mdiff+0xc6>
 80061ac:	3f01      	subs	r7, #1
 80061ae:	e7ea      	b.n	8006186 <__mdiff+0xde>
 80061b0:	08007d21 	.word	0x08007d21
 80061b4:	08007d8d 	.word	0x08007d8d

080061b8 <__d2b>:
 80061b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80061bc:	2101      	movs	r1, #1
 80061be:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80061c2:	4690      	mov	r8, r2
 80061c4:	461d      	mov	r5, r3
 80061c6:	f7ff fd23 	bl	8005c10 <_Balloc>
 80061ca:	4604      	mov	r4, r0
 80061cc:	b930      	cbnz	r0, 80061dc <__d2b+0x24>
 80061ce:	4602      	mov	r2, r0
 80061d0:	4b25      	ldr	r3, [pc, #148]	; (8006268 <__d2b+0xb0>)
 80061d2:	4826      	ldr	r0, [pc, #152]	; (800626c <__d2b+0xb4>)
 80061d4:	f240 310a 	movw	r1, #778	; 0x30a
 80061d8:	f000 ffea 	bl	80071b0 <__assert_func>
 80061dc:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80061e0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80061e4:	bb2d      	cbnz	r5, 8006232 <__d2b+0x7a>
 80061e6:	9301      	str	r3, [sp, #4]
 80061e8:	f1b8 0300 	subs.w	r3, r8, #0
 80061ec:	d026      	beq.n	800623c <__d2b+0x84>
 80061ee:	4668      	mov	r0, sp
 80061f0:	9300      	str	r3, [sp, #0]
 80061f2:	f7ff fda1 	bl	8005d38 <__lo0bits>
 80061f6:	9900      	ldr	r1, [sp, #0]
 80061f8:	b1f0      	cbz	r0, 8006238 <__d2b+0x80>
 80061fa:	9a01      	ldr	r2, [sp, #4]
 80061fc:	f1c0 0320 	rsb	r3, r0, #32
 8006200:	fa02 f303 	lsl.w	r3, r2, r3
 8006204:	430b      	orrs	r3, r1
 8006206:	40c2      	lsrs	r2, r0
 8006208:	6163      	str	r3, [r4, #20]
 800620a:	9201      	str	r2, [sp, #4]
 800620c:	9b01      	ldr	r3, [sp, #4]
 800620e:	61a3      	str	r3, [r4, #24]
 8006210:	2b00      	cmp	r3, #0
 8006212:	bf14      	ite	ne
 8006214:	2102      	movne	r1, #2
 8006216:	2101      	moveq	r1, #1
 8006218:	6121      	str	r1, [r4, #16]
 800621a:	b1c5      	cbz	r5, 800624e <__d2b+0x96>
 800621c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006220:	4405      	add	r5, r0
 8006222:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006226:	603d      	str	r5, [r7, #0]
 8006228:	6030      	str	r0, [r6, #0]
 800622a:	4620      	mov	r0, r4
 800622c:	b002      	add	sp, #8
 800622e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006232:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006236:	e7d6      	b.n	80061e6 <__d2b+0x2e>
 8006238:	6161      	str	r1, [r4, #20]
 800623a:	e7e7      	b.n	800620c <__d2b+0x54>
 800623c:	a801      	add	r0, sp, #4
 800623e:	f7ff fd7b 	bl	8005d38 <__lo0bits>
 8006242:	9b01      	ldr	r3, [sp, #4]
 8006244:	6163      	str	r3, [r4, #20]
 8006246:	2101      	movs	r1, #1
 8006248:	6121      	str	r1, [r4, #16]
 800624a:	3020      	adds	r0, #32
 800624c:	e7e5      	b.n	800621a <__d2b+0x62>
 800624e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8006252:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006256:	6038      	str	r0, [r7, #0]
 8006258:	6918      	ldr	r0, [r3, #16]
 800625a:	f7ff fd4d 	bl	8005cf8 <__hi0bits>
 800625e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8006262:	6031      	str	r1, [r6, #0]
 8006264:	e7e1      	b.n	800622a <__d2b+0x72>
 8006266:	bf00      	nop
 8006268:	08007d21 	.word	0x08007d21
 800626c:	08007d8d 	.word	0x08007d8d

08006270 <_realloc_r>:
 8006270:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006274:	460c      	mov	r4, r1
 8006276:	4681      	mov	r9, r0
 8006278:	4611      	mov	r1, r2
 800627a:	b924      	cbnz	r4, 8006286 <_realloc_r+0x16>
 800627c:	b003      	add	sp, #12
 800627e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006282:	f7ff ba55 	b.w	8005730 <_malloc_r>
 8006286:	9201      	str	r2, [sp, #4]
 8006288:	f7ff fcb6 	bl	8005bf8 <__malloc_lock>
 800628c:	9901      	ldr	r1, [sp, #4]
 800628e:	f101 080b 	add.w	r8, r1, #11
 8006292:	f1b8 0f16 	cmp.w	r8, #22
 8006296:	d90b      	bls.n	80062b0 <_realloc_r+0x40>
 8006298:	f038 0807 	bics.w	r8, r8, #7
 800629c:	d50a      	bpl.n	80062b4 <_realloc_r+0x44>
 800629e:	230c      	movs	r3, #12
 80062a0:	f8c9 3000 	str.w	r3, [r9]
 80062a4:	f04f 0b00 	mov.w	fp, #0
 80062a8:	4658      	mov	r0, fp
 80062aa:	b003      	add	sp, #12
 80062ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062b0:	f04f 0810 	mov.w	r8, #16
 80062b4:	4588      	cmp	r8, r1
 80062b6:	d3f2      	bcc.n	800629e <_realloc_r+0x2e>
 80062b8:	f854 5c04 	ldr.w	r5, [r4, #-4]
 80062bc:	f025 0603 	bic.w	r6, r5, #3
 80062c0:	45b0      	cmp	r8, r6
 80062c2:	f1a4 0a08 	sub.w	sl, r4, #8
 80062c6:	f340 816e 	ble.w	80065a6 <_realloc_r+0x336>
 80062ca:	4a9b      	ldr	r2, [pc, #620]	; (8006538 <_realloc_r+0x2c8>)
 80062cc:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80062d0:	eb0a 0306 	add.w	r3, sl, r6
 80062d4:	459c      	cmp	ip, r3
 80062d6:	685a      	ldr	r2, [r3, #4]
 80062d8:	d005      	beq.n	80062e6 <_realloc_r+0x76>
 80062da:	f022 0001 	bic.w	r0, r2, #1
 80062de:	4418      	add	r0, r3
 80062e0:	6840      	ldr	r0, [r0, #4]
 80062e2:	07c7      	lsls	r7, r0, #31
 80062e4:	d427      	bmi.n	8006336 <_realloc_r+0xc6>
 80062e6:	f022 0203 	bic.w	r2, r2, #3
 80062ea:	459c      	cmp	ip, r3
 80062ec:	eb06 0702 	add.w	r7, r6, r2
 80062f0:	d119      	bne.n	8006326 <_realloc_r+0xb6>
 80062f2:	f108 0010 	add.w	r0, r8, #16
 80062f6:	42b8      	cmp	r0, r7
 80062f8:	dc1f      	bgt.n	800633a <_realloc_r+0xca>
 80062fa:	eb0a 0308 	add.w	r3, sl, r8
 80062fe:	4a8e      	ldr	r2, [pc, #568]	; (8006538 <_realloc_r+0x2c8>)
 8006300:	eba7 0708 	sub.w	r7, r7, r8
 8006304:	f047 0701 	orr.w	r7, r7, #1
 8006308:	6093      	str	r3, [r2, #8]
 800630a:	605f      	str	r7, [r3, #4]
 800630c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006310:	f003 0301 	and.w	r3, r3, #1
 8006314:	ea43 0308 	orr.w	r3, r3, r8
 8006318:	f844 3c04 	str.w	r3, [r4, #-4]
 800631c:	4648      	mov	r0, r9
 800631e:	f7ff fc71 	bl	8005c04 <__malloc_unlock>
 8006322:	46a3      	mov	fp, r4
 8006324:	e7c0      	b.n	80062a8 <_realloc_r+0x38>
 8006326:	45b8      	cmp	r8, r7
 8006328:	dc07      	bgt.n	800633a <_realloc_r+0xca>
 800632a:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800632e:	60da      	str	r2, [r3, #12]
 8006330:	6093      	str	r3, [r2, #8]
 8006332:	4655      	mov	r5, sl
 8006334:	e07f      	b.n	8006436 <_realloc_r+0x1c6>
 8006336:	2200      	movs	r2, #0
 8006338:	4613      	mov	r3, r2
 800633a:	07e8      	lsls	r0, r5, #31
 800633c:	f100 80e5 	bmi.w	800650a <_realloc_r+0x29a>
 8006340:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8006344:	ebaa 0505 	sub.w	r5, sl, r5
 8006348:	6868      	ldr	r0, [r5, #4]
 800634a:	f020 0003 	bic.w	r0, r0, #3
 800634e:	eb00 0b06 	add.w	fp, r0, r6
 8006352:	2b00      	cmp	r3, #0
 8006354:	f000 80a5 	beq.w	80064a2 <_realloc_r+0x232>
 8006358:	459c      	cmp	ip, r3
 800635a:	eb02 070b 	add.w	r7, r2, fp
 800635e:	d14a      	bne.n	80063f6 <_realloc_r+0x186>
 8006360:	f108 0310 	add.w	r3, r8, #16
 8006364:	42bb      	cmp	r3, r7
 8006366:	f300 809c 	bgt.w	80064a2 <_realloc_r+0x232>
 800636a:	46ab      	mov	fp, r5
 800636c:	68eb      	ldr	r3, [r5, #12]
 800636e:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 8006372:	60d3      	str	r3, [r2, #12]
 8006374:	609a      	str	r2, [r3, #8]
 8006376:	1f32      	subs	r2, r6, #4
 8006378:	2a24      	cmp	r2, #36	; 0x24
 800637a:	d837      	bhi.n	80063ec <_realloc_r+0x17c>
 800637c:	2a13      	cmp	r2, #19
 800637e:	d933      	bls.n	80063e8 <_realloc_r+0x178>
 8006380:	6823      	ldr	r3, [r4, #0]
 8006382:	60ab      	str	r3, [r5, #8]
 8006384:	6863      	ldr	r3, [r4, #4]
 8006386:	60eb      	str	r3, [r5, #12]
 8006388:	2a1b      	cmp	r2, #27
 800638a:	d81b      	bhi.n	80063c4 <_realloc_r+0x154>
 800638c:	3408      	adds	r4, #8
 800638e:	f105 0310 	add.w	r3, r5, #16
 8006392:	6822      	ldr	r2, [r4, #0]
 8006394:	601a      	str	r2, [r3, #0]
 8006396:	6862      	ldr	r2, [r4, #4]
 8006398:	605a      	str	r2, [r3, #4]
 800639a:	68a2      	ldr	r2, [r4, #8]
 800639c:	609a      	str	r2, [r3, #8]
 800639e:	eb05 0308 	add.w	r3, r5, r8
 80063a2:	4a65      	ldr	r2, [pc, #404]	; (8006538 <_realloc_r+0x2c8>)
 80063a4:	eba7 0708 	sub.w	r7, r7, r8
 80063a8:	f047 0701 	orr.w	r7, r7, #1
 80063ac:	6093      	str	r3, [r2, #8]
 80063ae:	605f      	str	r7, [r3, #4]
 80063b0:	686b      	ldr	r3, [r5, #4]
 80063b2:	f003 0301 	and.w	r3, r3, #1
 80063b6:	ea43 0308 	orr.w	r3, r3, r8
 80063ba:	606b      	str	r3, [r5, #4]
 80063bc:	4648      	mov	r0, r9
 80063be:	f7ff fc21 	bl	8005c04 <__malloc_unlock>
 80063c2:	e771      	b.n	80062a8 <_realloc_r+0x38>
 80063c4:	68a3      	ldr	r3, [r4, #8]
 80063c6:	612b      	str	r3, [r5, #16]
 80063c8:	68e3      	ldr	r3, [r4, #12]
 80063ca:	616b      	str	r3, [r5, #20]
 80063cc:	2a24      	cmp	r2, #36	; 0x24
 80063ce:	bf01      	itttt	eq
 80063d0:	6923      	ldreq	r3, [r4, #16]
 80063d2:	61ab      	streq	r3, [r5, #24]
 80063d4:	6962      	ldreq	r2, [r4, #20]
 80063d6:	61ea      	streq	r2, [r5, #28]
 80063d8:	bf19      	ittee	ne
 80063da:	3410      	addne	r4, #16
 80063dc:	f105 0318 	addne.w	r3, r5, #24
 80063e0:	f105 0320 	addeq.w	r3, r5, #32
 80063e4:	3418      	addeq	r4, #24
 80063e6:	e7d4      	b.n	8006392 <_realloc_r+0x122>
 80063e8:	465b      	mov	r3, fp
 80063ea:	e7d2      	b.n	8006392 <_realloc_r+0x122>
 80063ec:	4621      	mov	r1, r4
 80063ee:	4658      	mov	r0, fp
 80063f0:	f7ff fbe8 	bl	8005bc4 <memmove>
 80063f4:	e7d3      	b.n	800639e <_realloc_r+0x12e>
 80063f6:	45b8      	cmp	r8, r7
 80063f8:	dc53      	bgt.n	80064a2 <_realloc_r+0x232>
 80063fa:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 80063fe:	4628      	mov	r0, r5
 8006400:	60da      	str	r2, [r3, #12]
 8006402:	6093      	str	r3, [r2, #8]
 8006404:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8006408:	68eb      	ldr	r3, [r5, #12]
 800640a:	60d3      	str	r3, [r2, #12]
 800640c:	609a      	str	r2, [r3, #8]
 800640e:	1f32      	subs	r2, r6, #4
 8006410:	2a24      	cmp	r2, #36	; 0x24
 8006412:	d842      	bhi.n	800649a <_realloc_r+0x22a>
 8006414:	2a13      	cmp	r2, #19
 8006416:	d908      	bls.n	800642a <_realloc_r+0x1ba>
 8006418:	6823      	ldr	r3, [r4, #0]
 800641a:	60ab      	str	r3, [r5, #8]
 800641c:	6863      	ldr	r3, [r4, #4]
 800641e:	60eb      	str	r3, [r5, #12]
 8006420:	2a1b      	cmp	r2, #27
 8006422:	d828      	bhi.n	8006476 <_realloc_r+0x206>
 8006424:	3408      	adds	r4, #8
 8006426:	f105 0010 	add.w	r0, r5, #16
 800642a:	6823      	ldr	r3, [r4, #0]
 800642c:	6003      	str	r3, [r0, #0]
 800642e:	6863      	ldr	r3, [r4, #4]
 8006430:	6043      	str	r3, [r0, #4]
 8006432:	68a3      	ldr	r3, [r4, #8]
 8006434:	6083      	str	r3, [r0, #8]
 8006436:	686b      	ldr	r3, [r5, #4]
 8006438:	eba7 0008 	sub.w	r0, r7, r8
 800643c:	280f      	cmp	r0, #15
 800643e:	f003 0301 	and.w	r3, r3, #1
 8006442:	eb05 0207 	add.w	r2, r5, r7
 8006446:	f240 80b0 	bls.w	80065aa <_realloc_r+0x33a>
 800644a:	eb05 0108 	add.w	r1, r5, r8
 800644e:	ea48 0303 	orr.w	r3, r8, r3
 8006452:	f040 0001 	orr.w	r0, r0, #1
 8006456:	606b      	str	r3, [r5, #4]
 8006458:	6048      	str	r0, [r1, #4]
 800645a:	6853      	ldr	r3, [r2, #4]
 800645c:	f043 0301 	orr.w	r3, r3, #1
 8006460:	6053      	str	r3, [r2, #4]
 8006462:	3108      	adds	r1, #8
 8006464:	4648      	mov	r0, r9
 8006466:	f7fe fec7 	bl	80051f8 <_free_r>
 800646a:	4648      	mov	r0, r9
 800646c:	f7ff fbca 	bl	8005c04 <__malloc_unlock>
 8006470:	f105 0b08 	add.w	fp, r5, #8
 8006474:	e718      	b.n	80062a8 <_realloc_r+0x38>
 8006476:	68a3      	ldr	r3, [r4, #8]
 8006478:	612b      	str	r3, [r5, #16]
 800647a:	68e3      	ldr	r3, [r4, #12]
 800647c:	616b      	str	r3, [r5, #20]
 800647e:	2a24      	cmp	r2, #36	; 0x24
 8006480:	bf01      	itttt	eq
 8006482:	6923      	ldreq	r3, [r4, #16]
 8006484:	61ab      	streq	r3, [r5, #24]
 8006486:	6963      	ldreq	r3, [r4, #20]
 8006488:	61eb      	streq	r3, [r5, #28]
 800648a:	bf19      	ittee	ne
 800648c:	3410      	addne	r4, #16
 800648e:	f105 0018 	addne.w	r0, r5, #24
 8006492:	f105 0020 	addeq.w	r0, r5, #32
 8006496:	3418      	addeq	r4, #24
 8006498:	e7c7      	b.n	800642a <_realloc_r+0x1ba>
 800649a:	4621      	mov	r1, r4
 800649c:	f7ff fb92 	bl	8005bc4 <memmove>
 80064a0:	e7c9      	b.n	8006436 <_realloc_r+0x1c6>
 80064a2:	45d8      	cmp	r8, fp
 80064a4:	dc31      	bgt.n	800650a <_realloc_r+0x29a>
 80064a6:	4628      	mov	r0, r5
 80064a8:	68eb      	ldr	r3, [r5, #12]
 80064aa:	f850 2f08 	ldr.w	r2, [r0, #8]!
 80064ae:	60d3      	str	r3, [r2, #12]
 80064b0:	609a      	str	r2, [r3, #8]
 80064b2:	1f32      	subs	r2, r6, #4
 80064b4:	2a24      	cmp	r2, #36	; 0x24
 80064b6:	d824      	bhi.n	8006502 <_realloc_r+0x292>
 80064b8:	2a13      	cmp	r2, #19
 80064ba:	d908      	bls.n	80064ce <_realloc_r+0x25e>
 80064bc:	6823      	ldr	r3, [r4, #0]
 80064be:	60ab      	str	r3, [r5, #8]
 80064c0:	6863      	ldr	r3, [r4, #4]
 80064c2:	60eb      	str	r3, [r5, #12]
 80064c4:	2a1b      	cmp	r2, #27
 80064c6:	d80a      	bhi.n	80064de <_realloc_r+0x26e>
 80064c8:	3408      	adds	r4, #8
 80064ca:	f105 0010 	add.w	r0, r5, #16
 80064ce:	6823      	ldr	r3, [r4, #0]
 80064d0:	6003      	str	r3, [r0, #0]
 80064d2:	6863      	ldr	r3, [r4, #4]
 80064d4:	6043      	str	r3, [r0, #4]
 80064d6:	68a3      	ldr	r3, [r4, #8]
 80064d8:	6083      	str	r3, [r0, #8]
 80064da:	465f      	mov	r7, fp
 80064dc:	e7ab      	b.n	8006436 <_realloc_r+0x1c6>
 80064de:	68a3      	ldr	r3, [r4, #8]
 80064e0:	612b      	str	r3, [r5, #16]
 80064e2:	68e3      	ldr	r3, [r4, #12]
 80064e4:	616b      	str	r3, [r5, #20]
 80064e6:	2a24      	cmp	r2, #36	; 0x24
 80064e8:	bf01      	itttt	eq
 80064ea:	6923      	ldreq	r3, [r4, #16]
 80064ec:	61ab      	streq	r3, [r5, #24]
 80064ee:	6963      	ldreq	r3, [r4, #20]
 80064f0:	61eb      	streq	r3, [r5, #28]
 80064f2:	bf19      	ittee	ne
 80064f4:	3410      	addne	r4, #16
 80064f6:	f105 0018 	addne.w	r0, r5, #24
 80064fa:	f105 0020 	addeq.w	r0, r5, #32
 80064fe:	3418      	addeq	r4, #24
 8006500:	e7e5      	b.n	80064ce <_realloc_r+0x25e>
 8006502:	4621      	mov	r1, r4
 8006504:	f7ff fb5e 	bl	8005bc4 <memmove>
 8006508:	e7e7      	b.n	80064da <_realloc_r+0x26a>
 800650a:	4648      	mov	r0, r9
 800650c:	f7ff f910 	bl	8005730 <_malloc_r>
 8006510:	4683      	mov	fp, r0
 8006512:	2800      	cmp	r0, #0
 8006514:	f43f af52 	beq.w	80063bc <_realloc_r+0x14c>
 8006518:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800651c:	f023 0301 	bic.w	r3, r3, #1
 8006520:	4453      	add	r3, sl
 8006522:	f1a0 0208 	sub.w	r2, r0, #8
 8006526:	4293      	cmp	r3, r2
 8006528:	d108      	bne.n	800653c <_realloc_r+0x2cc>
 800652a:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800652e:	f027 0703 	bic.w	r7, r7, #3
 8006532:	4437      	add	r7, r6
 8006534:	e6fd      	b.n	8006332 <_realloc_r+0xc2>
 8006536:	bf00      	nop
 8006538:	20000634 	.word	0x20000634
 800653c:	1f32      	subs	r2, r6, #4
 800653e:	2a24      	cmp	r2, #36	; 0x24
 8006540:	d82d      	bhi.n	800659e <_realloc_r+0x32e>
 8006542:	2a13      	cmp	r2, #19
 8006544:	d928      	bls.n	8006598 <_realloc_r+0x328>
 8006546:	6823      	ldr	r3, [r4, #0]
 8006548:	6003      	str	r3, [r0, #0]
 800654a:	6863      	ldr	r3, [r4, #4]
 800654c:	6043      	str	r3, [r0, #4]
 800654e:	2a1b      	cmp	r2, #27
 8006550:	d80e      	bhi.n	8006570 <_realloc_r+0x300>
 8006552:	f104 0208 	add.w	r2, r4, #8
 8006556:	f100 0308 	add.w	r3, r0, #8
 800655a:	6811      	ldr	r1, [r2, #0]
 800655c:	6019      	str	r1, [r3, #0]
 800655e:	6851      	ldr	r1, [r2, #4]
 8006560:	6059      	str	r1, [r3, #4]
 8006562:	6892      	ldr	r2, [r2, #8]
 8006564:	609a      	str	r2, [r3, #8]
 8006566:	4621      	mov	r1, r4
 8006568:	4648      	mov	r0, r9
 800656a:	f7fe fe45 	bl	80051f8 <_free_r>
 800656e:	e725      	b.n	80063bc <_realloc_r+0x14c>
 8006570:	68a3      	ldr	r3, [r4, #8]
 8006572:	6083      	str	r3, [r0, #8]
 8006574:	68e3      	ldr	r3, [r4, #12]
 8006576:	60c3      	str	r3, [r0, #12]
 8006578:	2a24      	cmp	r2, #36	; 0x24
 800657a:	bf01      	itttt	eq
 800657c:	6923      	ldreq	r3, [r4, #16]
 800657e:	6103      	streq	r3, [r0, #16]
 8006580:	6961      	ldreq	r1, [r4, #20]
 8006582:	6141      	streq	r1, [r0, #20]
 8006584:	bf19      	ittee	ne
 8006586:	f104 0210 	addne.w	r2, r4, #16
 800658a:	f100 0310 	addne.w	r3, r0, #16
 800658e:	f104 0218 	addeq.w	r2, r4, #24
 8006592:	f100 0318 	addeq.w	r3, r0, #24
 8006596:	e7e0      	b.n	800655a <_realloc_r+0x2ea>
 8006598:	4603      	mov	r3, r0
 800659a:	4622      	mov	r2, r4
 800659c:	e7dd      	b.n	800655a <_realloc_r+0x2ea>
 800659e:	4621      	mov	r1, r4
 80065a0:	f7ff fb10 	bl	8005bc4 <memmove>
 80065a4:	e7df      	b.n	8006566 <_realloc_r+0x2f6>
 80065a6:	4637      	mov	r7, r6
 80065a8:	e6c3      	b.n	8006332 <_realloc_r+0xc2>
 80065aa:	431f      	orrs	r7, r3
 80065ac:	606f      	str	r7, [r5, #4]
 80065ae:	6853      	ldr	r3, [r2, #4]
 80065b0:	f043 0301 	orr.w	r3, r3, #1
 80065b4:	6053      	str	r3, [r2, #4]
 80065b6:	e758      	b.n	800646a <_realloc_r+0x1fa>

080065b8 <frexp>:
 80065b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80065ba:	4617      	mov	r7, r2
 80065bc:	2200      	movs	r2, #0
 80065be:	603a      	str	r2, [r7, #0]
 80065c0:	4a14      	ldr	r2, [pc, #80]	; (8006614 <frexp+0x5c>)
 80065c2:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80065c6:	4296      	cmp	r6, r2
 80065c8:	4604      	mov	r4, r0
 80065ca:	460d      	mov	r5, r1
 80065cc:	460b      	mov	r3, r1
 80065ce:	dc1e      	bgt.n	800660e <frexp+0x56>
 80065d0:	4602      	mov	r2, r0
 80065d2:	4332      	orrs	r2, r6
 80065d4:	d01b      	beq.n	800660e <frexp+0x56>
 80065d6:	4a10      	ldr	r2, [pc, #64]	; (8006618 <frexp+0x60>)
 80065d8:	400a      	ands	r2, r1
 80065da:	b952      	cbnz	r2, 80065f2 <frexp+0x3a>
 80065dc:	4b0f      	ldr	r3, [pc, #60]	; (800661c <frexp+0x64>)
 80065de:	2200      	movs	r2, #0
 80065e0:	f7fa f81a 	bl	8000618 <__aeabi_dmul>
 80065e4:	f06f 0235 	mvn.w	r2, #53	; 0x35
 80065e8:	4604      	mov	r4, r0
 80065ea:	460b      	mov	r3, r1
 80065ec:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80065f0:	603a      	str	r2, [r7, #0]
 80065f2:	683a      	ldr	r2, [r7, #0]
 80065f4:	1536      	asrs	r6, r6, #20
 80065f6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80065fa:	f2a6 36fe 	subw	r6, r6, #1022	; 0x3fe
 80065fe:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8006602:	4416      	add	r6, r2
 8006604:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 8006608:	603e      	str	r6, [r7, #0]
 800660a:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 800660e:	4620      	mov	r0, r4
 8006610:	4629      	mov	r1, r5
 8006612:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006614:	7fefffff 	.word	0x7fefffff
 8006618:	7ff00000 	.word	0x7ff00000
 800661c:	43500000 	.word	0x43500000

08006620 <_sbrk_r>:
 8006620:	b538      	push	{r3, r4, r5, lr}
 8006622:	4d06      	ldr	r5, [pc, #24]	; (800663c <_sbrk_r+0x1c>)
 8006624:	2300      	movs	r3, #0
 8006626:	4604      	mov	r4, r0
 8006628:	4608      	mov	r0, r1
 800662a:	602b      	str	r3, [r5, #0]
 800662c:	f001 f910 	bl	8007850 <_sbrk>
 8006630:	1c43      	adds	r3, r0, #1
 8006632:	d102      	bne.n	800663a <_sbrk_r+0x1a>
 8006634:	682b      	ldr	r3, [r5, #0]
 8006636:	b103      	cbz	r3, 800663a <_sbrk_r+0x1a>
 8006638:	6023      	str	r3, [r4, #0]
 800663a:	bd38      	pop	{r3, r4, r5, pc}
 800663c:	20000c54 	.word	0x20000c54

08006640 <__sread>:
 8006640:	b510      	push	{r4, lr}
 8006642:	460c      	mov	r4, r1
 8006644:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006648:	f000 ff3c 	bl	80074c4 <_read_r>
 800664c:	2800      	cmp	r0, #0
 800664e:	bfab      	itete	ge
 8006650:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 8006652:	89a3      	ldrhlt	r3, [r4, #12]
 8006654:	181b      	addge	r3, r3, r0
 8006656:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800665a:	bfac      	ite	ge
 800665c:	6523      	strge	r3, [r4, #80]	; 0x50
 800665e:	81a3      	strhlt	r3, [r4, #12]
 8006660:	bd10      	pop	{r4, pc}

08006662 <__swrite>:
 8006662:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006666:	461f      	mov	r7, r3
 8006668:	898b      	ldrh	r3, [r1, #12]
 800666a:	05db      	lsls	r3, r3, #23
 800666c:	4605      	mov	r5, r0
 800666e:	460c      	mov	r4, r1
 8006670:	4616      	mov	r6, r2
 8006672:	d505      	bpl.n	8006680 <__swrite+0x1e>
 8006674:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006678:	2302      	movs	r3, #2
 800667a:	2200      	movs	r2, #0
 800667c:	f000 fefe 	bl	800747c <_lseek_r>
 8006680:	89a3      	ldrh	r3, [r4, #12]
 8006682:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006686:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800668a:	81a3      	strh	r3, [r4, #12]
 800668c:	4632      	mov	r2, r6
 800668e:	463b      	mov	r3, r7
 8006690:	4628      	mov	r0, r5
 8006692:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006696:	f000 bd37 	b.w	8007108 <_write_r>

0800669a <__sseek>:
 800669a:	b510      	push	{r4, lr}
 800669c:	460c      	mov	r4, r1
 800669e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066a2:	f000 feeb 	bl	800747c <_lseek_r>
 80066a6:	1c43      	adds	r3, r0, #1
 80066a8:	89a3      	ldrh	r3, [r4, #12]
 80066aa:	bf15      	itete	ne
 80066ac:	6520      	strne	r0, [r4, #80]	; 0x50
 80066ae:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80066b2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80066b6:	81a3      	strheq	r3, [r4, #12]
 80066b8:	bf18      	it	ne
 80066ba:	81a3      	strhne	r3, [r4, #12]
 80066bc:	bd10      	pop	{r4, pc}

080066be <__sclose>:
 80066be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066c2:	f000 bdc9 	b.w	8007258 <_close_r>

080066c6 <strncpy>:
 80066c6:	b510      	push	{r4, lr}
 80066c8:	3901      	subs	r1, #1
 80066ca:	4603      	mov	r3, r0
 80066cc:	b132      	cbz	r2, 80066dc <strncpy+0x16>
 80066ce:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80066d2:	f803 4b01 	strb.w	r4, [r3], #1
 80066d6:	3a01      	subs	r2, #1
 80066d8:	2c00      	cmp	r4, #0
 80066da:	d1f7      	bne.n	80066cc <strncpy+0x6>
 80066dc:	441a      	add	r2, r3
 80066de:	2100      	movs	r1, #0
 80066e0:	4293      	cmp	r3, r2
 80066e2:	d100      	bne.n	80066e6 <strncpy+0x20>
 80066e4:	bd10      	pop	{r4, pc}
 80066e6:	f803 1b01 	strb.w	r1, [r3], #1
 80066ea:	e7f9      	b.n	80066e0 <strncpy+0x1a>

080066ec <sysconf>:
 80066ec:	2808      	cmp	r0, #8
 80066ee:	b508      	push	{r3, lr}
 80066f0:	d006      	beq.n	8006700 <sysconf+0x14>
 80066f2:	f000 fdc1 	bl	8007278 <__errno>
 80066f6:	2316      	movs	r3, #22
 80066f8:	6003      	str	r3, [r0, #0]
 80066fa:	f04f 30ff 	mov.w	r0, #4294967295
 80066fe:	bd08      	pop	{r3, pc}
 8006700:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006704:	e7fb      	b.n	80066fe <sysconf+0x12>

08006706 <__sprint_r>:
 8006706:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800670a:	6893      	ldr	r3, [r2, #8]
 800670c:	4680      	mov	r8, r0
 800670e:	460f      	mov	r7, r1
 8006710:	4614      	mov	r4, r2
 8006712:	b91b      	cbnz	r3, 800671c <__sprint_r+0x16>
 8006714:	6053      	str	r3, [r2, #4]
 8006716:	4618      	mov	r0, r3
 8006718:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800671c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 800671e:	049d      	lsls	r5, r3, #18
 8006720:	d520      	bpl.n	8006764 <__sprint_r+0x5e>
 8006722:	6815      	ldr	r5, [r2, #0]
 8006724:	3508      	adds	r5, #8
 8006726:	e955 b602 	ldrd	fp, r6, [r5, #-8]
 800672a:	f04f 0900 	mov.w	r9, #0
 800672e:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 8006732:	45ca      	cmp	sl, r9
 8006734:	dc0b      	bgt.n	800674e <__sprint_r+0x48>
 8006736:	68a0      	ldr	r0, [r4, #8]
 8006738:	f026 0603 	bic.w	r6, r6, #3
 800673c:	1b80      	subs	r0, r0, r6
 800673e:	60a0      	str	r0, [r4, #8]
 8006740:	3508      	adds	r5, #8
 8006742:	2800      	cmp	r0, #0
 8006744:	d1ef      	bne.n	8006726 <__sprint_r+0x20>
 8006746:	2300      	movs	r3, #0
 8006748:	e9c4 3301 	strd	r3, r3, [r4, #4]
 800674c:	e7e4      	b.n	8006718 <__sprint_r+0x12>
 800674e:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 8006752:	463a      	mov	r2, r7
 8006754:	4640      	mov	r0, r8
 8006756:	f000 fe40 	bl	80073da <_fputwc_r>
 800675a:	1c43      	adds	r3, r0, #1
 800675c:	d0f3      	beq.n	8006746 <__sprint_r+0x40>
 800675e:	f109 0901 	add.w	r9, r9, #1
 8006762:	e7e6      	b.n	8006732 <__sprint_r+0x2c>
 8006764:	f7fe fe08 	bl	8005378 <__sfvwrite_r>
 8006768:	e7ed      	b.n	8006746 <__sprint_r+0x40>
	...

0800676c <_vfiprintf_r>:
 800676c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006770:	b0bb      	sub	sp, #236	; 0xec
 8006772:	460f      	mov	r7, r1
 8006774:	9202      	str	r2, [sp, #8]
 8006776:	461d      	mov	r5, r3
 8006778:	461c      	mov	r4, r3
 800677a:	4681      	mov	r9, r0
 800677c:	b118      	cbz	r0, 8006786 <_vfiprintf_r+0x1a>
 800677e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006780:	b90b      	cbnz	r3, 8006786 <_vfiprintf_r+0x1a>
 8006782:	f7fe fca9 	bl	80050d8 <__sinit>
 8006786:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006788:	07d8      	lsls	r0, r3, #31
 800678a:	d405      	bmi.n	8006798 <_vfiprintf_r+0x2c>
 800678c:	89bb      	ldrh	r3, [r7, #12]
 800678e:	0599      	lsls	r1, r3, #22
 8006790:	d402      	bmi.n	8006798 <_vfiprintf_r+0x2c>
 8006792:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8006794:	f7fe ff5e 	bl	8005654 <__retarget_lock_acquire_recursive>
 8006798:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800679c:	049a      	lsls	r2, r3, #18
 800679e:	d406      	bmi.n	80067ae <_vfiprintf_r+0x42>
 80067a0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80067a4:	81bb      	strh	r3, [r7, #12]
 80067a6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80067a8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80067ac:	667b      	str	r3, [r7, #100]	; 0x64
 80067ae:	89bb      	ldrh	r3, [r7, #12]
 80067b0:	071e      	lsls	r6, r3, #28
 80067b2:	d501      	bpl.n	80067b8 <_vfiprintf_r+0x4c>
 80067b4:	693b      	ldr	r3, [r7, #16]
 80067b6:	b9ab      	cbnz	r3, 80067e4 <_vfiprintf_r+0x78>
 80067b8:	4639      	mov	r1, r7
 80067ba:	4648      	mov	r0, r9
 80067bc:	f7fd fcf0 	bl	80041a0 <__swsetup_r>
 80067c0:	b180      	cbz	r0, 80067e4 <_vfiprintf_r+0x78>
 80067c2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80067c4:	07d8      	lsls	r0, r3, #31
 80067c6:	d506      	bpl.n	80067d6 <_vfiprintf_r+0x6a>
 80067c8:	f04f 33ff 	mov.w	r3, #4294967295
 80067cc:	9303      	str	r3, [sp, #12]
 80067ce:	9803      	ldr	r0, [sp, #12]
 80067d0:	b03b      	add	sp, #236	; 0xec
 80067d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067d6:	89bb      	ldrh	r3, [r7, #12]
 80067d8:	0599      	lsls	r1, r3, #22
 80067da:	d4f5      	bmi.n	80067c8 <_vfiprintf_r+0x5c>
 80067dc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80067de:	f7fe ff3a 	bl	8005656 <__retarget_lock_release_recursive>
 80067e2:	e7f1      	b.n	80067c8 <_vfiprintf_r+0x5c>
 80067e4:	89bb      	ldrh	r3, [r7, #12]
 80067e6:	f003 021a 	and.w	r2, r3, #26
 80067ea:	2a0a      	cmp	r2, #10
 80067ec:	d114      	bne.n	8006818 <_vfiprintf_r+0xac>
 80067ee:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80067f2:	2a00      	cmp	r2, #0
 80067f4:	db10      	blt.n	8006818 <_vfiprintf_r+0xac>
 80067f6:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 80067f8:	07d2      	lsls	r2, r2, #31
 80067fa:	d404      	bmi.n	8006806 <_vfiprintf_r+0x9a>
 80067fc:	059e      	lsls	r6, r3, #22
 80067fe:	d402      	bmi.n	8006806 <_vfiprintf_r+0x9a>
 8006800:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8006802:	f7fe ff28 	bl	8005656 <__retarget_lock_release_recursive>
 8006806:	9a02      	ldr	r2, [sp, #8]
 8006808:	462b      	mov	r3, r5
 800680a:	4639      	mov	r1, r7
 800680c:	4648      	mov	r0, r9
 800680e:	b03b      	add	sp, #236	; 0xec
 8006810:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006814:	f000 bc38 	b.w	8007088 <__sbprintf>
 8006818:	2300      	movs	r3, #0
 800681a:	e9cd 330f 	strd	r3, r3, [sp, #60]	; 0x3c
 800681e:	e9cd 3306 	strd	r3, r3, [sp, #24]
 8006822:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8006826:	ae11      	add	r6, sp, #68	; 0x44
 8006828:	960e      	str	r6, [sp, #56]	; 0x38
 800682a:	9303      	str	r3, [sp, #12]
 800682c:	9b02      	ldr	r3, [sp, #8]
 800682e:	461d      	mov	r5, r3
 8006830:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006834:	b10a      	cbz	r2, 800683a <_vfiprintf_r+0xce>
 8006836:	2a25      	cmp	r2, #37	; 0x25
 8006838:	d1f9      	bne.n	800682e <_vfiprintf_r+0xc2>
 800683a:	9b02      	ldr	r3, [sp, #8]
 800683c:	ebb5 0803 	subs.w	r8, r5, r3
 8006840:	d00d      	beq.n	800685e <_vfiprintf_r+0xf2>
 8006842:	e9c6 3800 	strd	r3, r8, [r6]
 8006846:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006848:	4443      	add	r3, r8
 800684a:	9310      	str	r3, [sp, #64]	; 0x40
 800684c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800684e:	3301      	adds	r3, #1
 8006850:	2b07      	cmp	r3, #7
 8006852:	930f      	str	r3, [sp, #60]	; 0x3c
 8006854:	dc75      	bgt.n	8006942 <_vfiprintf_r+0x1d6>
 8006856:	3608      	adds	r6, #8
 8006858:	9b03      	ldr	r3, [sp, #12]
 800685a:	4443      	add	r3, r8
 800685c:	9303      	str	r3, [sp, #12]
 800685e:	782b      	ldrb	r3, [r5, #0]
 8006860:	2b00      	cmp	r3, #0
 8006862:	f000 83d5 	beq.w	8007010 <_vfiprintf_r+0x8a4>
 8006866:	2300      	movs	r3, #0
 8006868:	f04f 31ff 	mov.w	r1, #4294967295
 800686c:	1c6a      	adds	r2, r5, #1
 800686e:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8006872:	9101      	str	r1, [sp, #4]
 8006874:	9304      	str	r3, [sp, #16]
 8006876:	469a      	mov	sl, r3
 8006878:	f812 3b01 	ldrb.w	r3, [r2], #1
 800687c:	9202      	str	r2, [sp, #8]
 800687e:	f1a3 0220 	sub.w	r2, r3, #32
 8006882:	2a5a      	cmp	r2, #90	; 0x5a
 8006884:	f200 831d 	bhi.w	8006ec2 <_vfiprintf_r+0x756>
 8006888:	e8df f012 	tbh	[pc, r2, lsl #1]
 800688c:	031b009a 	.word	0x031b009a
 8006890:	00a2031b 	.word	0x00a2031b
 8006894:	031b031b 	.word	0x031b031b
 8006898:	0082031b 	.word	0x0082031b
 800689c:	031b031b 	.word	0x031b031b
 80068a0:	00af00a5 	.word	0x00af00a5
 80068a4:	00ac031b 	.word	0x00ac031b
 80068a8:	031b00b1 	.word	0x031b00b1
 80068ac:	00cf00cc 	.word	0x00cf00cc
 80068b0:	00cf00cf 	.word	0x00cf00cf
 80068b4:	00cf00cf 	.word	0x00cf00cf
 80068b8:	00cf00cf 	.word	0x00cf00cf
 80068bc:	00cf00cf 	.word	0x00cf00cf
 80068c0:	031b031b 	.word	0x031b031b
 80068c4:	031b031b 	.word	0x031b031b
 80068c8:	031b031b 	.word	0x031b031b
 80068cc:	031b031b 	.word	0x031b031b
 80068d0:	00f9031b 	.word	0x00f9031b
 80068d4:	031b0107 	.word	0x031b0107
 80068d8:	031b031b 	.word	0x031b031b
 80068dc:	031b031b 	.word	0x031b031b
 80068e0:	031b031b 	.word	0x031b031b
 80068e4:	031b031b 	.word	0x031b031b
 80068e8:	0157031b 	.word	0x0157031b
 80068ec:	031b031b 	.word	0x031b031b
 80068f0:	01a0031b 	.word	0x01a0031b
 80068f4:	027d031b 	.word	0x027d031b
 80068f8:	031b031b 	.word	0x031b031b
 80068fc:	031b029d 	.word	0x031b029d
 8006900:	031b031b 	.word	0x031b031b
 8006904:	031b031b 	.word	0x031b031b
 8006908:	031b031b 	.word	0x031b031b
 800690c:	031b031b 	.word	0x031b031b
 8006910:	00f9031b 	.word	0x00f9031b
 8006914:	031b0109 	.word	0x031b0109
 8006918:	031b031b 	.word	0x031b031b
 800691c:	010900df 	.word	0x010900df
 8006920:	031b00f3 	.word	0x031b00f3
 8006924:	031b00ec 	.word	0x031b00ec
 8006928:	01590135 	.word	0x01590135
 800692c:	00f3018e 	.word	0x00f3018e
 8006930:	01a0031b 	.word	0x01a0031b
 8006934:	027f0098 	.word	0x027f0098
 8006938:	031b031b 	.word	0x031b031b
 800693c:	031b0065 	.word	0x031b0065
 8006940:	0098      	.short	0x0098
 8006942:	aa0e      	add	r2, sp, #56	; 0x38
 8006944:	4639      	mov	r1, r7
 8006946:	4648      	mov	r0, r9
 8006948:	f7ff fedd 	bl	8006706 <__sprint_r>
 800694c:	2800      	cmp	r0, #0
 800694e:	f040 833e 	bne.w	8006fce <_vfiprintf_r+0x862>
 8006952:	ae11      	add	r6, sp, #68	; 0x44
 8006954:	e780      	b.n	8006858 <_vfiprintf_r+0xec>
 8006956:	4a9c      	ldr	r2, [pc, #624]	; (8006bc8 <_vfiprintf_r+0x45c>)
 8006958:	9206      	str	r2, [sp, #24]
 800695a:	f01a 0220 	ands.w	r2, sl, #32
 800695e:	f000 8234 	beq.w	8006dca <_vfiprintf_r+0x65e>
 8006962:	3407      	adds	r4, #7
 8006964:	f024 0207 	bic.w	r2, r4, #7
 8006968:	4693      	mov	fp, r2
 800696a:	6855      	ldr	r5, [r2, #4]
 800696c:	f85b 4b08 	ldr.w	r4, [fp], #8
 8006970:	f01a 0f01 	tst.w	sl, #1
 8006974:	d009      	beq.n	800698a <_vfiprintf_r+0x21e>
 8006976:	ea54 0205 	orrs.w	r2, r4, r5
 800697a:	bf1f      	itttt	ne
 800697c:	2230      	movne	r2, #48	; 0x30
 800697e:	f88d 2034 	strbne.w	r2, [sp, #52]	; 0x34
 8006982:	f88d 3035 	strbne.w	r3, [sp, #53]	; 0x35
 8006986:	f04a 0a02 	orrne.w	sl, sl, #2
 800698a:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800698e:	e119      	b.n	8006bc4 <_vfiprintf_r+0x458>
 8006990:	4648      	mov	r0, r9
 8006992:	f7fe fe59 	bl	8005648 <_localeconv_r>
 8006996:	6843      	ldr	r3, [r0, #4]
 8006998:	9309      	str	r3, [sp, #36]	; 0x24
 800699a:	4618      	mov	r0, r3
 800699c:	f7f9 fc28 	bl	80001f0 <strlen>
 80069a0:	9008      	str	r0, [sp, #32]
 80069a2:	4648      	mov	r0, r9
 80069a4:	f7fe fe50 	bl	8005648 <_localeconv_r>
 80069a8:	6883      	ldr	r3, [r0, #8]
 80069aa:	9307      	str	r3, [sp, #28]
 80069ac:	9b08      	ldr	r3, [sp, #32]
 80069ae:	b12b      	cbz	r3, 80069bc <_vfiprintf_r+0x250>
 80069b0:	9b07      	ldr	r3, [sp, #28]
 80069b2:	b11b      	cbz	r3, 80069bc <_vfiprintf_r+0x250>
 80069b4:	781b      	ldrb	r3, [r3, #0]
 80069b6:	b10b      	cbz	r3, 80069bc <_vfiprintf_r+0x250>
 80069b8:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 80069bc:	9a02      	ldr	r2, [sp, #8]
 80069be:	e75b      	b.n	8006878 <_vfiprintf_r+0x10c>
 80069c0:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	d1f9      	bne.n	80069bc <_vfiprintf_r+0x250>
 80069c8:	2320      	movs	r3, #32
 80069ca:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 80069ce:	e7f5      	b.n	80069bc <_vfiprintf_r+0x250>
 80069d0:	f04a 0a01 	orr.w	sl, sl, #1
 80069d4:	e7f2      	b.n	80069bc <_vfiprintf_r+0x250>
 80069d6:	f854 3b04 	ldr.w	r3, [r4], #4
 80069da:	9304      	str	r3, [sp, #16]
 80069dc:	2b00      	cmp	r3, #0
 80069de:	daed      	bge.n	80069bc <_vfiprintf_r+0x250>
 80069e0:	425b      	negs	r3, r3
 80069e2:	9304      	str	r3, [sp, #16]
 80069e4:	f04a 0a04 	orr.w	sl, sl, #4
 80069e8:	e7e8      	b.n	80069bc <_vfiprintf_r+0x250>
 80069ea:	232b      	movs	r3, #43	; 0x2b
 80069ec:	e7ed      	b.n	80069ca <_vfiprintf_r+0x25e>
 80069ee:	9a02      	ldr	r2, [sp, #8]
 80069f0:	f812 3b01 	ldrb.w	r3, [r2], #1
 80069f4:	2b2a      	cmp	r3, #42	; 0x2a
 80069f6:	d112      	bne.n	8006a1e <_vfiprintf_r+0x2b2>
 80069f8:	f854 0b04 	ldr.w	r0, [r4], #4
 80069fc:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 8006a00:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8006a04:	e7da      	b.n	80069bc <_vfiprintf_r+0x250>
 8006a06:	9b01      	ldr	r3, [sp, #4]
 8006a08:	200a      	movs	r0, #10
 8006a0a:	fb00 1303 	mla	r3, r0, r3, r1
 8006a0e:	9301      	str	r3, [sp, #4]
 8006a10:	f812 3b01 	ldrb.w	r3, [r2], #1
 8006a14:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006a18:	2909      	cmp	r1, #9
 8006a1a:	d9f4      	bls.n	8006a06 <_vfiprintf_r+0x29a>
 8006a1c:	e72e      	b.n	800687c <_vfiprintf_r+0x110>
 8006a1e:	2100      	movs	r1, #0
 8006a20:	9101      	str	r1, [sp, #4]
 8006a22:	e7f7      	b.n	8006a14 <_vfiprintf_r+0x2a8>
 8006a24:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 8006a28:	e7c8      	b.n	80069bc <_vfiprintf_r+0x250>
 8006a2a:	2100      	movs	r1, #0
 8006a2c:	9a02      	ldr	r2, [sp, #8]
 8006a2e:	9104      	str	r1, [sp, #16]
 8006a30:	9904      	ldr	r1, [sp, #16]
 8006a32:	3b30      	subs	r3, #48	; 0x30
 8006a34:	200a      	movs	r0, #10
 8006a36:	fb00 3301 	mla	r3, r0, r1, r3
 8006a3a:	9304      	str	r3, [sp, #16]
 8006a3c:	f812 3b01 	ldrb.w	r3, [r2], #1
 8006a40:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006a44:	2909      	cmp	r1, #9
 8006a46:	d9f3      	bls.n	8006a30 <_vfiprintf_r+0x2c4>
 8006a48:	e718      	b.n	800687c <_vfiprintf_r+0x110>
 8006a4a:	9b02      	ldr	r3, [sp, #8]
 8006a4c:	781b      	ldrb	r3, [r3, #0]
 8006a4e:	2b68      	cmp	r3, #104	; 0x68
 8006a50:	bf01      	itttt	eq
 8006a52:	9b02      	ldreq	r3, [sp, #8]
 8006a54:	3301      	addeq	r3, #1
 8006a56:	9302      	streq	r3, [sp, #8]
 8006a58:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 8006a5c:	bf18      	it	ne
 8006a5e:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 8006a62:	e7ab      	b.n	80069bc <_vfiprintf_r+0x250>
 8006a64:	9b02      	ldr	r3, [sp, #8]
 8006a66:	781b      	ldrb	r3, [r3, #0]
 8006a68:	2b6c      	cmp	r3, #108	; 0x6c
 8006a6a:	d105      	bne.n	8006a78 <_vfiprintf_r+0x30c>
 8006a6c:	9b02      	ldr	r3, [sp, #8]
 8006a6e:	3301      	adds	r3, #1
 8006a70:	9302      	str	r3, [sp, #8]
 8006a72:	f04a 0a20 	orr.w	sl, sl, #32
 8006a76:	e7a1      	b.n	80069bc <_vfiprintf_r+0x250>
 8006a78:	f04a 0a10 	orr.w	sl, sl, #16
 8006a7c:	e79e      	b.n	80069bc <_vfiprintf_r+0x250>
 8006a7e:	46a3      	mov	fp, r4
 8006a80:	2100      	movs	r1, #0
 8006a82:	f85b 3b04 	ldr.w	r3, [fp], #4
 8006a86:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 8006a8a:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
 8006a8e:	2301      	movs	r3, #1
 8006a90:	9301      	str	r3, [sp, #4]
 8006a92:	460d      	mov	r5, r1
 8006a94:	f10d 0884 	add.w	r8, sp, #132	; 0x84
 8006a98:	e0ad      	b.n	8006bf6 <_vfiprintf_r+0x48a>
 8006a9a:	f04a 0a10 	orr.w	sl, sl, #16
 8006a9e:	f01a 0f20 	tst.w	sl, #32
 8006aa2:	d011      	beq.n	8006ac8 <_vfiprintf_r+0x35c>
 8006aa4:	3407      	adds	r4, #7
 8006aa6:	f024 0307 	bic.w	r3, r4, #7
 8006aaa:	469b      	mov	fp, r3
 8006aac:	685d      	ldr	r5, [r3, #4]
 8006aae:	f85b 4b08 	ldr.w	r4, [fp], #8
 8006ab2:	2d00      	cmp	r5, #0
 8006ab4:	da06      	bge.n	8006ac4 <_vfiprintf_r+0x358>
 8006ab6:	4264      	negs	r4, r4
 8006ab8:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8006abc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8006ac0:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8006ac4:	2301      	movs	r3, #1
 8006ac6:	e04a      	b.n	8006b5e <_vfiprintf_r+0x3f2>
 8006ac8:	46a3      	mov	fp, r4
 8006aca:	f01a 0f10 	tst.w	sl, #16
 8006ace:	f85b 5b04 	ldr.w	r5, [fp], #4
 8006ad2:	d002      	beq.n	8006ada <_vfiprintf_r+0x36e>
 8006ad4:	462c      	mov	r4, r5
 8006ad6:	17ed      	asrs	r5, r5, #31
 8006ad8:	e7eb      	b.n	8006ab2 <_vfiprintf_r+0x346>
 8006ada:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8006ade:	d003      	beq.n	8006ae8 <_vfiprintf_r+0x37c>
 8006ae0:	b22c      	sxth	r4, r5
 8006ae2:	f345 35c0 	sbfx	r5, r5, #15, #1
 8006ae6:	e7e4      	b.n	8006ab2 <_vfiprintf_r+0x346>
 8006ae8:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8006aec:	d0f2      	beq.n	8006ad4 <_vfiprintf_r+0x368>
 8006aee:	b26c      	sxtb	r4, r5
 8006af0:	f345 15c0 	sbfx	r5, r5, #7, #1
 8006af4:	e7dd      	b.n	8006ab2 <_vfiprintf_r+0x346>
 8006af6:	f01a 0f20 	tst.w	sl, #32
 8006afa:	f104 0b04 	add.w	fp, r4, #4
 8006afe:	d007      	beq.n	8006b10 <_vfiprintf_r+0x3a4>
 8006b00:	9a03      	ldr	r2, [sp, #12]
 8006b02:	6823      	ldr	r3, [r4, #0]
 8006b04:	9903      	ldr	r1, [sp, #12]
 8006b06:	17d2      	asrs	r2, r2, #31
 8006b08:	e9c3 1200 	strd	r1, r2, [r3]
 8006b0c:	465c      	mov	r4, fp
 8006b0e:	e68d      	b.n	800682c <_vfiprintf_r+0xc0>
 8006b10:	f01a 0f10 	tst.w	sl, #16
 8006b14:	d003      	beq.n	8006b1e <_vfiprintf_r+0x3b2>
 8006b16:	6823      	ldr	r3, [r4, #0]
 8006b18:	9a03      	ldr	r2, [sp, #12]
 8006b1a:	601a      	str	r2, [r3, #0]
 8006b1c:	e7f6      	b.n	8006b0c <_vfiprintf_r+0x3a0>
 8006b1e:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8006b22:	d003      	beq.n	8006b2c <_vfiprintf_r+0x3c0>
 8006b24:	6823      	ldr	r3, [r4, #0]
 8006b26:	9a03      	ldr	r2, [sp, #12]
 8006b28:	801a      	strh	r2, [r3, #0]
 8006b2a:	e7ef      	b.n	8006b0c <_vfiprintf_r+0x3a0>
 8006b2c:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8006b30:	d0f1      	beq.n	8006b16 <_vfiprintf_r+0x3aa>
 8006b32:	6823      	ldr	r3, [r4, #0]
 8006b34:	9a03      	ldr	r2, [sp, #12]
 8006b36:	701a      	strb	r2, [r3, #0]
 8006b38:	e7e8      	b.n	8006b0c <_vfiprintf_r+0x3a0>
 8006b3a:	f04a 0a10 	orr.w	sl, sl, #16
 8006b3e:	f01a 0320 	ands.w	r3, sl, #32
 8006b42:	d01f      	beq.n	8006b84 <_vfiprintf_r+0x418>
 8006b44:	3407      	adds	r4, #7
 8006b46:	f024 0307 	bic.w	r3, r4, #7
 8006b4a:	469b      	mov	fp, r3
 8006b4c:	685d      	ldr	r5, [r3, #4]
 8006b4e:	f85b 4b08 	ldr.w	r4, [fp], #8
 8006b52:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8006b56:	2300      	movs	r3, #0
 8006b58:	2200      	movs	r2, #0
 8006b5a:	f88d 2033 	strb.w	r2, [sp, #51]	; 0x33
 8006b5e:	9a01      	ldr	r2, [sp, #4]
 8006b60:	3201      	adds	r2, #1
 8006b62:	f000 8262 	beq.w	800702a <_vfiprintf_r+0x8be>
 8006b66:	f02a 0280 	bic.w	r2, sl, #128	; 0x80
 8006b6a:	9205      	str	r2, [sp, #20]
 8006b6c:	ea54 0205 	orrs.w	r2, r4, r5
 8006b70:	f040 8261 	bne.w	8007036 <_vfiprintf_r+0x8ca>
 8006b74:	9a01      	ldr	r2, [sp, #4]
 8006b76:	2a00      	cmp	r2, #0
 8006b78:	f000 8198 	beq.w	8006eac <_vfiprintf_r+0x740>
 8006b7c:	2b01      	cmp	r3, #1
 8006b7e:	f040 825d 	bne.w	800703c <_vfiprintf_r+0x8d0>
 8006b82:	e139      	b.n	8006df8 <_vfiprintf_r+0x68c>
 8006b84:	46a3      	mov	fp, r4
 8006b86:	f01a 0510 	ands.w	r5, sl, #16
 8006b8a:	f85b 4b04 	ldr.w	r4, [fp], #4
 8006b8e:	d001      	beq.n	8006b94 <_vfiprintf_r+0x428>
 8006b90:	461d      	mov	r5, r3
 8006b92:	e7de      	b.n	8006b52 <_vfiprintf_r+0x3e6>
 8006b94:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 8006b98:	d001      	beq.n	8006b9e <_vfiprintf_r+0x432>
 8006b9a:	b2a4      	uxth	r4, r4
 8006b9c:	e7d9      	b.n	8006b52 <_vfiprintf_r+0x3e6>
 8006b9e:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 8006ba2:	d0d6      	beq.n	8006b52 <_vfiprintf_r+0x3e6>
 8006ba4:	b2e4      	uxtb	r4, r4
 8006ba6:	e7f3      	b.n	8006b90 <_vfiprintf_r+0x424>
 8006ba8:	2330      	movs	r3, #48	; 0x30
 8006baa:	46a3      	mov	fp, r4
 8006bac:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
 8006bb0:	2378      	movs	r3, #120	; 0x78
 8006bb2:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
 8006bb6:	f85b 4b04 	ldr.w	r4, [fp], #4
 8006bba:	4b03      	ldr	r3, [pc, #12]	; (8006bc8 <_vfiprintf_r+0x45c>)
 8006bbc:	9306      	str	r3, [sp, #24]
 8006bbe:	2500      	movs	r5, #0
 8006bc0:	f04a 0a02 	orr.w	sl, sl, #2
 8006bc4:	2302      	movs	r3, #2
 8006bc6:	e7c7      	b.n	8006b58 <_vfiprintf_r+0x3ec>
 8006bc8:	08007cd0 	.word	0x08007cd0
 8006bcc:	9b01      	ldr	r3, [sp, #4]
 8006bce:	46a3      	mov	fp, r4
 8006bd0:	2500      	movs	r5, #0
 8006bd2:	1c5c      	adds	r4, r3, #1
 8006bd4:	f85b 8b04 	ldr.w	r8, [fp], #4
 8006bd8:	f88d 5033 	strb.w	r5, [sp, #51]	; 0x33
 8006bdc:	f000 80ce 	beq.w	8006d7c <_vfiprintf_r+0x610>
 8006be0:	461a      	mov	r2, r3
 8006be2:	4629      	mov	r1, r5
 8006be4:	4640      	mov	r0, r8
 8006be6:	f7f9 fb0b 	bl	8000200 <memchr>
 8006bea:	2800      	cmp	r0, #0
 8006bec:	f000 8173 	beq.w	8006ed6 <_vfiprintf_r+0x76a>
 8006bf0:	eba0 0308 	sub.w	r3, r0, r8
 8006bf4:	9301      	str	r3, [sp, #4]
 8006bf6:	9b01      	ldr	r3, [sp, #4]
 8006bf8:	42ab      	cmp	r3, r5
 8006bfa:	bfb8      	it	lt
 8006bfc:	462b      	movlt	r3, r5
 8006bfe:	9305      	str	r3, [sp, #20]
 8006c00:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8006c04:	b113      	cbz	r3, 8006c0c <_vfiprintf_r+0x4a0>
 8006c06:	9b05      	ldr	r3, [sp, #20]
 8006c08:	3301      	adds	r3, #1
 8006c0a:	9305      	str	r3, [sp, #20]
 8006c0c:	f01a 0302 	ands.w	r3, sl, #2
 8006c10:	930a      	str	r3, [sp, #40]	; 0x28
 8006c12:	bf1e      	ittt	ne
 8006c14:	9b05      	ldrne	r3, [sp, #20]
 8006c16:	3302      	addne	r3, #2
 8006c18:	9305      	strne	r3, [sp, #20]
 8006c1a:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 8006c1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c20:	d11f      	bne.n	8006c62 <_vfiprintf_r+0x4f6>
 8006c22:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8006c26:	1a9c      	subs	r4, r3, r2
 8006c28:	2c00      	cmp	r4, #0
 8006c2a:	dd1a      	ble.n	8006c62 <_vfiprintf_r+0x4f6>
 8006c2c:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 8006c30:	48aa      	ldr	r0, [pc, #680]	; (8006edc <_vfiprintf_r+0x770>)
 8006c32:	6030      	str	r0, [r6, #0]
 8006c34:	2c10      	cmp	r4, #16
 8006c36:	f103 0301 	add.w	r3, r3, #1
 8006c3a:	f106 0108 	add.w	r1, r6, #8
 8006c3e:	f300 8153 	bgt.w	8006ee8 <_vfiprintf_r+0x77c>
 8006c42:	6074      	str	r4, [r6, #4]
 8006c44:	2b07      	cmp	r3, #7
 8006c46:	4414      	add	r4, r2
 8006c48:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 8006c4c:	f340 815e 	ble.w	8006f0c <_vfiprintf_r+0x7a0>
 8006c50:	aa0e      	add	r2, sp, #56	; 0x38
 8006c52:	4639      	mov	r1, r7
 8006c54:	4648      	mov	r0, r9
 8006c56:	f7ff fd56 	bl	8006706 <__sprint_r>
 8006c5a:	2800      	cmp	r0, #0
 8006c5c:	f040 81b7 	bne.w	8006fce <_vfiprintf_r+0x862>
 8006c60:	ae11      	add	r6, sp, #68	; 0x44
 8006c62:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8006c66:	b173      	cbz	r3, 8006c86 <_vfiprintf_r+0x51a>
 8006c68:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8006c6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006c6e:	6032      	str	r2, [r6, #0]
 8006c70:	2201      	movs	r2, #1
 8006c72:	6072      	str	r2, [r6, #4]
 8006c74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006c76:	3301      	adds	r3, #1
 8006c78:	3201      	adds	r2, #1
 8006c7a:	2b07      	cmp	r3, #7
 8006c7c:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006c80:	f300 8146 	bgt.w	8006f10 <_vfiprintf_r+0x7a4>
 8006c84:	3608      	adds	r6, #8
 8006c86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006c88:	b16b      	cbz	r3, 8006ca6 <_vfiprintf_r+0x53a>
 8006c8a:	aa0d      	add	r2, sp, #52	; 0x34
 8006c8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006c8e:	6032      	str	r2, [r6, #0]
 8006c90:	2202      	movs	r2, #2
 8006c92:	6072      	str	r2, [r6, #4]
 8006c94:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006c96:	3301      	adds	r3, #1
 8006c98:	3202      	adds	r2, #2
 8006c9a:	2b07      	cmp	r3, #7
 8006c9c:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006ca0:	f300 813f 	bgt.w	8006f22 <_vfiprintf_r+0x7b6>
 8006ca4:	3608      	adds	r6, #8
 8006ca6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006ca8:	2b80      	cmp	r3, #128	; 0x80
 8006caa:	d11f      	bne.n	8006cec <_vfiprintf_r+0x580>
 8006cac:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8006cb0:	1a9c      	subs	r4, r3, r2
 8006cb2:	2c00      	cmp	r4, #0
 8006cb4:	dd1a      	ble.n	8006cec <_vfiprintf_r+0x580>
 8006cb6:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 8006cba:	4889      	ldr	r0, [pc, #548]	; (8006ee0 <_vfiprintf_r+0x774>)
 8006cbc:	6030      	str	r0, [r6, #0]
 8006cbe:	2c10      	cmp	r4, #16
 8006cc0:	f103 0301 	add.w	r3, r3, #1
 8006cc4:	f106 0108 	add.w	r1, r6, #8
 8006cc8:	f300 8134 	bgt.w	8006f34 <_vfiprintf_r+0x7c8>
 8006ccc:	6074      	str	r4, [r6, #4]
 8006cce:	2b07      	cmp	r3, #7
 8006cd0:	4414      	add	r4, r2
 8006cd2:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 8006cd6:	f340 813f 	ble.w	8006f58 <_vfiprintf_r+0x7ec>
 8006cda:	aa0e      	add	r2, sp, #56	; 0x38
 8006cdc:	4639      	mov	r1, r7
 8006cde:	4648      	mov	r0, r9
 8006ce0:	f7ff fd11 	bl	8006706 <__sprint_r>
 8006ce4:	2800      	cmp	r0, #0
 8006ce6:	f040 8172 	bne.w	8006fce <_vfiprintf_r+0x862>
 8006cea:	ae11      	add	r6, sp, #68	; 0x44
 8006cec:	9b01      	ldr	r3, [sp, #4]
 8006cee:	1aec      	subs	r4, r5, r3
 8006cf0:	2c00      	cmp	r4, #0
 8006cf2:	dd1a      	ble.n	8006d2a <_vfiprintf_r+0x5be>
 8006cf4:	4d7a      	ldr	r5, [pc, #488]	; (8006ee0 <_vfiprintf_r+0x774>)
 8006cf6:	6035      	str	r5, [r6, #0]
 8006cf8:	e9dd 310f 	ldrd	r3, r1, [sp, #60]	; 0x3c
 8006cfc:	2c10      	cmp	r4, #16
 8006cfe:	f103 0301 	add.w	r3, r3, #1
 8006d02:	f106 0208 	add.w	r2, r6, #8
 8006d06:	f300 8129 	bgt.w	8006f5c <_vfiprintf_r+0x7f0>
 8006d0a:	6074      	str	r4, [r6, #4]
 8006d0c:	2b07      	cmp	r3, #7
 8006d0e:	440c      	add	r4, r1
 8006d10:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 8006d14:	f340 8133 	ble.w	8006f7e <_vfiprintf_r+0x812>
 8006d18:	aa0e      	add	r2, sp, #56	; 0x38
 8006d1a:	4639      	mov	r1, r7
 8006d1c:	4648      	mov	r0, r9
 8006d1e:	f7ff fcf2 	bl	8006706 <__sprint_r>
 8006d22:	2800      	cmp	r0, #0
 8006d24:	f040 8153 	bne.w	8006fce <_vfiprintf_r+0x862>
 8006d28:	ae11      	add	r6, sp, #68	; 0x44
 8006d2a:	9b01      	ldr	r3, [sp, #4]
 8006d2c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006d2e:	6073      	str	r3, [r6, #4]
 8006d30:	4418      	add	r0, r3
 8006d32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006d34:	f8c6 8000 	str.w	r8, [r6]
 8006d38:	3301      	adds	r3, #1
 8006d3a:	2b07      	cmp	r3, #7
 8006d3c:	9010      	str	r0, [sp, #64]	; 0x40
 8006d3e:	930f      	str	r3, [sp, #60]	; 0x3c
 8006d40:	f300 811f 	bgt.w	8006f82 <_vfiprintf_r+0x816>
 8006d44:	f106 0308 	add.w	r3, r6, #8
 8006d48:	f01a 0f04 	tst.w	sl, #4
 8006d4c:	f040 8121 	bne.w	8006f92 <_vfiprintf_r+0x826>
 8006d50:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 8006d54:	9905      	ldr	r1, [sp, #20]
 8006d56:	428a      	cmp	r2, r1
 8006d58:	bfac      	ite	ge
 8006d5a:	189b      	addge	r3, r3, r2
 8006d5c:	185b      	addlt	r3, r3, r1
 8006d5e:	9303      	str	r3, [sp, #12]
 8006d60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006d62:	b13b      	cbz	r3, 8006d74 <_vfiprintf_r+0x608>
 8006d64:	aa0e      	add	r2, sp, #56	; 0x38
 8006d66:	4639      	mov	r1, r7
 8006d68:	4648      	mov	r0, r9
 8006d6a:	f7ff fccc 	bl	8006706 <__sprint_r>
 8006d6e:	2800      	cmp	r0, #0
 8006d70:	f040 812d 	bne.w	8006fce <_vfiprintf_r+0x862>
 8006d74:	2300      	movs	r3, #0
 8006d76:	930f      	str	r3, [sp, #60]	; 0x3c
 8006d78:	ae11      	add	r6, sp, #68	; 0x44
 8006d7a:	e6c7      	b.n	8006b0c <_vfiprintf_r+0x3a0>
 8006d7c:	4640      	mov	r0, r8
 8006d7e:	f7f9 fa37 	bl	80001f0 <strlen>
 8006d82:	9001      	str	r0, [sp, #4]
 8006d84:	e737      	b.n	8006bf6 <_vfiprintf_r+0x48a>
 8006d86:	f04a 0a10 	orr.w	sl, sl, #16
 8006d8a:	f01a 0320 	ands.w	r3, sl, #32
 8006d8e:	d008      	beq.n	8006da2 <_vfiprintf_r+0x636>
 8006d90:	3407      	adds	r4, #7
 8006d92:	f024 0307 	bic.w	r3, r4, #7
 8006d96:	469b      	mov	fp, r3
 8006d98:	685d      	ldr	r5, [r3, #4]
 8006d9a:	f85b 4b08 	ldr.w	r4, [fp], #8
 8006d9e:	2301      	movs	r3, #1
 8006da0:	e6da      	b.n	8006b58 <_vfiprintf_r+0x3ec>
 8006da2:	46a3      	mov	fp, r4
 8006da4:	f01a 0510 	ands.w	r5, sl, #16
 8006da8:	f85b 4b04 	ldr.w	r4, [fp], #4
 8006dac:	d001      	beq.n	8006db2 <_vfiprintf_r+0x646>
 8006dae:	461d      	mov	r5, r3
 8006db0:	e7f5      	b.n	8006d9e <_vfiprintf_r+0x632>
 8006db2:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 8006db6:	d001      	beq.n	8006dbc <_vfiprintf_r+0x650>
 8006db8:	b2a4      	uxth	r4, r4
 8006dba:	e7f0      	b.n	8006d9e <_vfiprintf_r+0x632>
 8006dbc:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 8006dc0:	d0ed      	beq.n	8006d9e <_vfiprintf_r+0x632>
 8006dc2:	b2e4      	uxtb	r4, r4
 8006dc4:	e7f3      	b.n	8006dae <_vfiprintf_r+0x642>
 8006dc6:	4a47      	ldr	r2, [pc, #284]	; (8006ee4 <_vfiprintf_r+0x778>)
 8006dc8:	e5c6      	b.n	8006958 <_vfiprintf_r+0x1ec>
 8006dca:	46a3      	mov	fp, r4
 8006dcc:	f01a 0510 	ands.w	r5, sl, #16
 8006dd0:	f85b 4b04 	ldr.w	r4, [fp], #4
 8006dd4:	d001      	beq.n	8006dda <_vfiprintf_r+0x66e>
 8006dd6:	4615      	mov	r5, r2
 8006dd8:	e5ca      	b.n	8006970 <_vfiprintf_r+0x204>
 8006dda:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
 8006dde:	d001      	beq.n	8006de4 <_vfiprintf_r+0x678>
 8006de0:	b2a4      	uxth	r4, r4
 8006de2:	e5c5      	b.n	8006970 <_vfiprintf_r+0x204>
 8006de4:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 8006de8:	f43f adc2 	beq.w	8006970 <_vfiprintf_r+0x204>
 8006dec:	b2e4      	uxtb	r4, r4
 8006dee:	e7f2      	b.n	8006dd6 <_vfiprintf_r+0x66a>
 8006df0:	2c0a      	cmp	r4, #10
 8006df2:	f175 0300 	sbcs.w	r3, r5, #0
 8006df6:	d205      	bcs.n	8006e04 <_vfiprintf_r+0x698>
 8006df8:	3430      	adds	r4, #48	; 0x30
 8006dfa:	f88d 40e7 	strb.w	r4, [sp, #231]	; 0xe7
 8006dfe:	f10d 08e7 	add.w	r8, sp, #231	; 0xe7
 8006e02:	e137      	b.n	8007074 <_vfiprintf_r+0x908>
 8006e04:	ab3a      	add	r3, sp, #232	; 0xe8
 8006e06:	930a      	str	r3, [sp, #40]	; 0x28
 8006e08:	9b05      	ldr	r3, [sp, #20]
 8006e0a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006e0e:	f04f 0a00 	mov.w	sl, #0
 8006e12:	930b      	str	r3, [sp, #44]	; 0x2c
 8006e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006e16:	220a      	movs	r2, #10
 8006e18:	f103 38ff 	add.w	r8, r3, #4294967295
 8006e1c:	4620      	mov	r0, r4
 8006e1e:	2300      	movs	r3, #0
 8006e20:	4629      	mov	r1, r5
 8006e22:	f7f9 fed1 	bl	8000bc8 <__aeabi_uldivmod>
 8006e26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006e28:	3230      	adds	r2, #48	; 0x30
 8006e2a:	f803 2c01 	strb.w	r2, [r3, #-1]
 8006e2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006e30:	f10a 0a01 	add.w	sl, sl, #1
 8006e34:	b1d3      	cbz	r3, 8006e6c <_vfiprintf_r+0x700>
 8006e36:	9b07      	ldr	r3, [sp, #28]
 8006e38:	781b      	ldrb	r3, [r3, #0]
 8006e3a:	4553      	cmp	r3, sl
 8006e3c:	d116      	bne.n	8006e6c <_vfiprintf_r+0x700>
 8006e3e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8006e42:	d013      	beq.n	8006e6c <_vfiprintf_r+0x700>
 8006e44:	2c0a      	cmp	r4, #10
 8006e46:	f175 0300 	sbcs.w	r3, r5, #0
 8006e4a:	d30f      	bcc.n	8006e6c <_vfiprintf_r+0x700>
 8006e4c:	9b08      	ldr	r3, [sp, #32]
 8006e4e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006e50:	eba8 0803 	sub.w	r8, r8, r3
 8006e54:	461a      	mov	r2, r3
 8006e56:	4640      	mov	r0, r8
 8006e58:	f7ff fc35 	bl	80066c6 <strncpy>
 8006e5c:	9b07      	ldr	r3, [sp, #28]
 8006e5e:	785b      	ldrb	r3, [r3, #1]
 8006e60:	b1a3      	cbz	r3, 8006e8c <_vfiprintf_r+0x720>
 8006e62:	9b07      	ldr	r3, [sp, #28]
 8006e64:	3301      	adds	r3, #1
 8006e66:	9307      	str	r3, [sp, #28]
 8006e68:	f04f 0a00 	mov.w	sl, #0
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	220a      	movs	r2, #10
 8006e70:	4620      	mov	r0, r4
 8006e72:	4629      	mov	r1, r5
 8006e74:	f7f9 fea8 	bl	8000bc8 <__aeabi_uldivmod>
 8006e78:	2c0a      	cmp	r4, #10
 8006e7a:	f175 0300 	sbcs.w	r3, r5, #0
 8006e7e:	f0c0 80f9 	bcc.w	8007074 <_vfiprintf_r+0x908>
 8006e82:	4604      	mov	r4, r0
 8006e84:	460d      	mov	r5, r1
 8006e86:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8006e8a:	e7c3      	b.n	8006e14 <_vfiprintf_r+0x6a8>
 8006e8c:	469a      	mov	sl, r3
 8006e8e:	e7ed      	b.n	8006e6c <_vfiprintf_r+0x700>
 8006e90:	f004 030f 	and.w	r3, r4, #15
 8006e94:	9a06      	ldr	r2, [sp, #24]
 8006e96:	0924      	lsrs	r4, r4, #4
 8006e98:	5cd3      	ldrb	r3, [r2, r3]
 8006e9a:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8006e9e:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 8006ea2:	092d      	lsrs	r5, r5, #4
 8006ea4:	ea54 0305 	orrs.w	r3, r4, r5
 8006ea8:	d1f2      	bne.n	8006e90 <_vfiprintf_r+0x724>
 8006eaa:	e0e3      	b.n	8007074 <_vfiprintf_r+0x908>
 8006eac:	b933      	cbnz	r3, 8006ebc <_vfiprintf_r+0x750>
 8006eae:	f01a 0f01 	tst.w	sl, #1
 8006eb2:	d003      	beq.n	8006ebc <_vfiprintf_r+0x750>
 8006eb4:	2330      	movs	r3, #48	; 0x30
 8006eb6:	f88d 30e7 	strb.w	r3, [sp, #231]	; 0xe7
 8006eba:	e7a0      	b.n	8006dfe <_vfiprintf_r+0x692>
 8006ebc:	f10d 08e8 	add.w	r8, sp, #232	; 0xe8
 8006ec0:	e0d8      	b.n	8007074 <_vfiprintf_r+0x908>
 8006ec2:	2b00      	cmp	r3, #0
 8006ec4:	f000 80a4 	beq.w	8007010 <_vfiprintf_r+0x8a4>
 8006ec8:	2100      	movs	r1, #0
 8006eca:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 8006ece:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
 8006ed2:	46a3      	mov	fp, r4
 8006ed4:	e5db      	b.n	8006a8e <_vfiprintf_r+0x322>
 8006ed6:	4605      	mov	r5, r0
 8006ed8:	e68d      	b.n	8006bf6 <_vfiprintf_r+0x48a>
 8006eda:	bf00      	nop
 8006edc:	08007eec 	.word	0x08007eec
 8006ee0:	08007efc 	.word	0x08007efc
 8006ee4:	08007ce1 	.word	0x08007ce1
 8006ee8:	2010      	movs	r0, #16
 8006eea:	4402      	add	r2, r0
 8006eec:	2b07      	cmp	r3, #7
 8006eee:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006ef2:	6070      	str	r0, [r6, #4]
 8006ef4:	dd07      	ble.n	8006f06 <_vfiprintf_r+0x79a>
 8006ef6:	aa0e      	add	r2, sp, #56	; 0x38
 8006ef8:	4639      	mov	r1, r7
 8006efa:	4648      	mov	r0, r9
 8006efc:	f7ff fc03 	bl	8006706 <__sprint_r>
 8006f00:	2800      	cmp	r0, #0
 8006f02:	d164      	bne.n	8006fce <_vfiprintf_r+0x862>
 8006f04:	a911      	add	r1, sp, #68	; 0x44
 8006f06:	3c10      	subs	r4, #16
 8006f08:	460e      	mov	r6, r1
 8006f0a:	e68f      	b.n	8006c2c <_vfiprintf_r+0x4c0>
 8006f0c:	460e      	mov	r6, r1
 8006f0e:	e6a8      	b.n	8006c62 <_vfiprintf_r+0x4f6>
 8006f10:	aa0e      	add	r2, sp, #56	; 0x38
 8006f12:	4639      	mov	r1, r7
 8006f14:	4648      	mov	r0, r9
 8006f16:	f7ff fbf6 	bl	8006706 <__sprint_r>
 8006f1a:	2800      	cmp	r0, #0
 8006f1c:	d157      	bne.n	8006fce <_vfiprintf_r+0x862>
 8006f1e:	ae11      	add	r6, sp, #68	; 0x44
 8006f20:	e6b1      	b.n	8006c86 <_vfiprintf_r+0x51a>
 8006f22:	aa0e      	add	r2, sp, #56	; 0x38
 8006f24:	4639      	mov	r1, r7
 8006f26:	4648      	mov	r0, r9
 8006f28:	f7ff fbed 	bl	8006706 <__sprint_r>
 8006f2c:	2800      	cmp	r0, #0
 8006f2e:	d14e      	bne.n	8006fce <_vfiprintf_r+0x862>
 8006f30:	ae11      	add	r6, sp, #68	; 0x44
 8006f32:	e6b8      	b.n	8006ca6 <_vfiprintf_r+0x53a>
 8006f34:	2010      	movs	r0, #16
 8006f36:	4402      	add	r2, r0
 8006f38:	2b07      	cmp	r3, #7
 8006f3a:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006f3e:	6070      	str	r0, [r6, #4]
 8006f40:	dd07      	ble.n	8006f52 <_vfiprintf_r+0x7e6>
 8006f42:	aa0e      	add	r2, sp, #56	; 0x38
 8006f44:	4639      	mov	r1, r7
 8006f46:	4648      	mov	r0, r9
 8006f48:	f7ff fbdd 	bl	8006706 <__sprint_r>
 8006f4c:	2800      	cmp	r0, #0
 8006f4e:	d13e      	bne.n	8006fce <_vfiprintf_r+0x862>
 8006f50:	a911      	add	r1, sp, #68	; 0x44
 8006f52:	3c10      	subs	r4, #16
 8006f54:	460e      	mov	r6, r1
 8006f56:	e6ae      	b.n	8006cb6 <_vfiprintf_r+0x54a>
 8006f58:	460e      	mov	r6, r1
 8006f5a:	e6c7      	b.n	8006cec <_vfiprintf_r+0x580>
 8006f5c:	2010      	movs	r0, #16
 8006f5e:	4401      	add	r1, r0
 8006f60:	2b07      	cmp	r3, #7
 8006f62:	e9cd 310f 	strd	r3, r1, [sp, #60]	; 0x3c
 8006f66:	6070      	str	r0, [r6, #4]
 8006f68:	dd06      	ble.n	8006f78 <_vfiprintf_r+0x80c>
 8006f6a:	aa0e      	add	r2, sp, #56	; 0x38
 8006f6c:	4639      	mov	r1, r7
 8006f6e:	4648      	mov	r0, r9
 8006f70:	f7ff fbc9 	bl	8006706 <__sprint_r>
 8006f74:	bb58      	cbnz	r0, 8006fce <_vfiprintf_r+0x862>
 8006f76:	aa11      	add	r2, sp, #68	; 0x44
 8006f78:	3c10      	subs	r4, #16
 8006f7a:	4616      	mov	r6, r2
 8006f7c:	e6bb      	b.n	8006cf6 <_vfiprintf_r+0x58a>
 8006f7e:	4616      	mov	r6, r2
 8006f80:	e6d3      	b.n	8006d2a <_vfiprintf_r+0x5be>
 8006f82:	aa0e      	add	r2, sp, #56	; 0x38
 8006f84:	4639      	mov	r1, r7
 8006f86:	4648      	mov	r0, r9
 8006f88:	f7ff fbbd 	bl	8006706 <__sprint_r>
 8006f8c:	b9f8      	cbnz	r0, 8006fce <_vfiprintf_r+0x862>
 8006f8e:	ab11      	add	r3, sp, #68	; 0x44
 8006f90:	e6da      	b.n	8006d48 <_vfiprintf_r+0x5dc>
 8006f92:	e9dd 2104 	ldrd	r2, r1, [sp, #16]
 8006f96:	1a54      	subs	r4, r2, r1
 8006f98:	2c00      	cmp	r4, #0
 8006f9a:	f77f aed9 	ble.w	8006d50 <_vfiprintf_r+0x5e4>
 8006f9e:	4d39      	ldr	r5, [pc, #228]	; (8007084 <_vfiprintf_r+0x918>)
 8006fa0:	2610      	movs	r6, #16
 8006fa2:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	; 0x3c
 8006fa6:	2c10      	cmp	r4, #16
 8006fa8:	f102 0201 	add.w	r2, r2, #1
 8006fac:	601d      	str	r5, [r3, #0]
 8006fae:	dc1d      	bgt.n	8006fec <_vfiprintf_r+0x880>
 8006fb0:	605c      	str	r4, [r3, #4]
 8006fb2:	2a07      	cmp	r2, #7
 8006fb4:	440c      	add	r4, r1
 8006fb6:	e9cd 240f 	strd	r2, r4, [sp, #60]	; 0x3c
 8006fba:	f77f aec9 	ble.w	8006d50 <_vfiprintf_r+0x5e4>
 8006fbe:	aa0e      	add	r2, sp, #56	; 0x38
 8006fc0:	4639      	mov	r1, r7
 8006fc2:	4648      	mov	r0, r9
 8006fc4:	f7ff fb9f 	bl	8006706 <__sprint_r>
 8006fc8:	2800      	cmp	r0, #0
 8006fca:	f43f aec1 	beq.w	8006d50 <_vfiprintf_r+0x5e4>
 8006fce:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006fd0:	07d9      	lsls	r1, r3, #31
 8006fd2:	d405      	bmi.n	8006fe0 <_vfiprintf_r+0x874>
 8006fd4:	89bb      	ldrh	r3, [r7, #12]
 8006fd6:	059a      	lsls	r2, r3, #22
 8006fd8:	d402      	bmi.n	8006fe0 <_vfiprintf_r+0x874>
 8006fda:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8006fdc:	f7fe fb3b 	bl	8005656 <__retarget_lock_release_recursive>
 8006fe0:	89bb      	ldrh	r3, [r7, #12]
 8006fe2:	065b      	lsls	r3, r3, #25
 8006fe4:	f57f abf3 	bpl.w	80067ce <_vfiprintf_r+0x62>
 8006fe8:	f7ff bbee 	b.w	80067c8 <_vfiprintf_r+0x5c>
 8006fec:	3110      	adds	r1, #16
 8006fee:	2a07      	cmp	r2, #7
 8006ff0:	e9cd 210f 	strd	r2, r1, [sp, #60]	; 0x3c
 8006ff4:	605e      	str	r6, [r3, #4]
 8006ff6:	dc02      	bgt.n	8006ffe <_vfiprintf_r+0x892>
 8006ff8:	3308      	adds	r3, #8
 8006ffa:	3c10      	subs	r4, #16
 8006ffc:	e7d1      	b.n	8006fa2 <_vfiprintf_r+0x836>
 8006ffe:	aa0e      	add	r2, sp, #56	; 0x38
 8007000:	4639      	mov	r1, r7
 8007002:	4648      	mov	r0, r9
 8007004:	f7ff fb7f 	bl	8006706 <__sprint_r>
 8007008:	2800      	cmp	r0, #0
 800700a:	d1e0      	bne.n	8006fce <_vfiprintf_r+0x862>
 800700c:	ab11      	add	r3, sp, #68	; 0x44
 800700e:	e7f4      	b.n	8006ffa <_vfiprintf_r+0x88e>
 8007010:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007012:	b913      	cbnz	r3, 800701a <_vfiprintf_r+0x8ae>
 8007014:	2300      	movs	r3, #0
 8007016:	930f      	str	r3, [sp, #60]	; 0x3c
 8007018:	e7d9      	b.n	8006fce <_vfiprintf_r+0x862>
 800701a:	aa0e      	add	r2, sp, #56	; 0x38
 800701c:	4639      	mov	r1, r7
 800701e:	4648      	mov	r0, r9
 8007020:	f7ff fb71 	bl	8006706 <__sprint_r>
 8007024:	2800      	cmp	r0, #0
 8007026:	d0f5      	beq.n	8007014 <_vfiprintf_r+0x8a8>
 8007028:	e7d1      	b.n	8006fce <_vfiprintf_r+0x862>
 800702a:	ea54 0205 	orrs.w	r2, r4, r5
 800702e:	f8cd a014 	str.w	sl, [sp, #20]
 8007032:	f43f ada3 	beq.w	8006b7c <_vfiprintf_r+0x410>
 8007036:	2b01      	cmp	r3, #1
 8007038:	f43f aeda 	beq.w	8006df0 <_vfiprintf_r+0x684>
 800703c:	2b02      	cmp	r3, #2
 800703e:	f10d 08e8 	add.w	r8, sp, #232	; 0xe8
 8007042:	f43f af25 	beq.w	8006e90 <_vfiprintf_r+0x724>
 8007046:	f004 0307 	and.w	r3, r4, #7
 800704a:	08e4      	lsrs	r4, r4, #3
 800704c:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 8007050:	08ed      	lsrs	r5, r5, #3
 8007052:	3330      	adds	r3, #48	; 0x30
 8007054:	ea54 0105 	orrs.w	r1, r4, r5
 8007058:	4642      	mov	r2, r8
 800705a:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800705e:	d1f2      	bne.n	8007046 <_vfiprintf_r+0x8da>
 8007060:	9905      	ldr	r1, [sp, #20]
 8007062:	07c8      	lsls	r0, r1, #31
 8007064:	d506      	bpl.n	8007074 <_vfiprintf_r+0x908>
 8007066:	2b30      	cmp	r3, #48	; 0x30
 8007068:	d004      	beq.n	8007074 <_vfiprintf_r+0x908>
 800706a:	2330      	movs	r3, #48	; 0x30
 800706c:	f808 3c01 	strb.w	r3, [r8, #-1]
 8007070:	f1a2 0802 	sub.w	r8, r2, #2
 8007074:	ab3a      	add	r3, sp, #232	; 0xe8
 8007076:	eba3 0308 	sub.w	r3, r3, r8
 800707a:	9d01      	ldr	r5, [sp, #4]
 800707c:	f8dd a014 	ldr.w	sl, [sp, #20]
 8007080:	9301      	str	r3, [sp, #4]
 8007082:	e5b8      	b.n	8006bf6 <_vfiprintf_r+0x48a>
 8007084:	08007eec 	.word	0x08007eec

08007088 <__sbprintf>:
 8007088:	b5f0      	push	{r4, r5, r6, r7, lr}
 800708a:	461f      	mov	r7, r3
 800708c:	898b      	ldrh	r3, [r1, #12]
 800708e:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 8007092:	f023 0302 	bic.w	r3, r3, #2
 8007096:	f8ad 300c 	strh.w	r3, [sp, #12]
 800709a:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 800709c:	9319      	str	r3, [sp, #100]	; 0x64
 800709e:	89cb      	ldrh	r3, [r1, #14]
 80070a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80070a4:	69cb      	ldr	r3, [r1, #28]
 80070a6:	9307      	str	r3, [sp, #28]
 80070a8:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 80070aa:	9309      	str	r3, [sp, #36]	; 0x24
 80070ac:	ab1a      	add	r3, sp, #104	; 0x68
 80070ae:	9300      	str	r3, [sp, #0]
 80070b0:	9304      	str	r3, [sp, #16]
 80070b2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80070b6:	4615      	mov	r5, r2
 80070b8:	4606      	mov	r6, r0
 80070ba:	9302      	str	r3, [sp, #8]
 80070bc:	9305      	str	r3, [sp, #20]
 80070be:	a816      	add	r0, sp, #88	; 0x58
 80070c0:	2300      	movs	r3, #0
 80070c2:	460c      	mov	r4, r1
 80070c4:	9306      	str	r3, [sp, #24]
 80070c6:	f7fe fac3 	bl	8005650 <__retarget_lock_init_recursive>
 80070ca:	462a      	mov	r2, r5
 80070cc:	463b      	mov	r3, r7
 80070ce:	4669      	mov	r1, sp
 80070d0:	4630      	mov	r0, r6
 80070d2:	f7ff fb4b 	bl	800676c <_vfiprintf_r>
 80070d6:	1e05      	subs	r5, r0, #0
 80070d8:	db07      	blt.n	80070ea <__sbprintf+0x62>
 80070da:	4669      	mov	r1, sp
 80070dc:	4630      	mov	r0, r6
 80070de:	f7fd ff8f 	bl	8005000 <_fflush_r>
 80070e2:	2800      	cmp	r0, #0
 80070e4:	bf18      	it	ne
 80070e6:	f04f 35ff 	movne.w	r5, #4294967295
 80070ea:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80070ee:	9816      	ldr	r0, [sp, #88]	; 0x58
 80070f0:	065b      	lsls	r3, r3, #25
 80070f2:	bf42      	ittt	mi
 80070f4:	89a3      	ldrhmi	r3, [r4, #12]
 80070f6:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 80070fa:	81a3      	strhmi	r3, [r4, #12]
 80070fc:	f7fe faa9 	bl	8005652 <__retarget_lock_close_recursive>
 8007100:	4628      	mov	r0, r5
 8007102:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 8007106:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007108 <_write_r>:
 8007108:	b538      	push	{r3, r4, r5, lr}
 800710a:	4d07      	ldr	r5, [pc, #28]	; (8007128 <_write_r+0x20>)
 800710c:	4604      	mov	r4, r0
 800710e:	4608      	mov	r0, r1
 8007110:	4611      	mov	r1, r2
 8007112:	2200      	movs	r2, #0
 8007114:	602a      	str	r2, [r5, #0]
 8007116:	461a      	mov	r2, r3
 8007118:	f000 fb45 	bl	80077a6 <_write>
 800711c:	1c43      	adds	r3, r0, #1
 800711e:	d102      	bne.n	8007126 <_write_r+0x1e>
 8007120:	682b      	ldr	r3, [r5, #0]
 8007122:	b103      	cbz	r3, 8007126 <_write_r+0x1e>
 8007124:	6023      	str	r3, [r4, #0]
 8007126:	bd38      	pop	{r3, r4, r5, pc}
 8007128:	20000c54 	.word	0x20000c54

0800712c <__register_exitproc>:
 800712c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007130:	f8df a074 	ldr.w	sl, [pc, #116]	; 80071a8 <__register_exitproc+0x7c>
 8007134:	4606      	mov	r6, r0
 8007136:	f8da 0000 	ldr.w	r0, [sl]
 800713a:	4698      	mov	r8, r3
 800713c:	460f      	mov	r7, r1
 800713e:	4691      	mov	r9, r2
 8007140:	f7fe fa88 	bl	8005654 <__retarget_lock_acquire_recursive>
 8007144:	4b19      	ldr	r3, [pc, #100]	; (80071ac <__register_exitproc+0x80>)
 8007146:	681b      	ldr	r3, [r3, #0]
 8007148:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 800714c:	b91c      	cbnz	r4, 8007156 <__register_exitproc+0x2a>
 800714e:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8007152:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8007156:	6865      	ldr	r5, [r4, #4]
 8007158:	f8da 0000 	ldr.w	r0, [sl]
 800715c:	2d1f      	cmp	r5, #31
 800715e:	dd05      	ble.n	800716c <__register_exitproc+0x40>
 8007160:	f7fe fa79 	bl	8005656 <__retarget_lock_release_recursive>
 8007164:	f04f 30ff 	mov.w	r0, #4294967295
 8007168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800716c:	b19e      	cbz	r6, 8007196 <__register_exitproc+0x6a>
 800716e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8007172:	2201      	movs	r2, #1
 8007174:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8007178:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 800717c:	40aa      	lsls	r2, r5
 800717e:	4313      	orrs	r3, r2
 8007180:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 8007184:	2e02      	cmp	r6, #2
 8007186:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800718a:	bf02      	ittt	eq
 800718c:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8007190:	4313      	orreq	r3, r2
 8007192:	f8c4 318c 	streq.w	r3, [r4, #396]	; 0x18c
 8007196:	1c6b      	adds	r3, r5, #1
 8007198:	3502      	adds	r5, #2
 800719a:	6063      	str	r3, [r4, #4]
 800719c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 80071a0:	f7fe fa59 	bl	8005656 <__retarget_lock_release_recursive>
 80071a4:	2000      	movs	r0, #0
 80071a6:	e7df      	b.n	8007168 <__register_exitproc+0x3c>
 80071a8:	20000630 	.word	0x20000630
 80071ac:	08007cbc 	.word	0x08007cbc

080071b0 <__assert_func>:
 80071b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80071b2:	4614      	mov	r4, r2
 80071b4:	461a      	mov	r2, r3
 80071b6:	4b09      	ldr	r3, [pc, #36]	; (80071dc <__assert_func+0x2c>)
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	4605      	mov	r5, r0
 80071bc:	68d8      	ldr	r0, [r3, #12]
 80071be:	b14c      	cbz	r4, 80071d4 <__assert_func+0x24>
 80071c0:	4b07      	ldr	r3, [pc, #28]	; (80071e0 <__assert_func+0x30>)
 80071c2:	9100      	str	r1, [sp, #0]
 80071c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80071c8:	4906      	ldr	r1, [pc, #24]	; (80071e4 <__assert_func+0x34>)
 80071ca:	462b      	mov	r3, r5
 80071cc:	f000 f8b2 	bl	8007334 <fiprintf>
 80071d0:	f000 f9f7 	bl	80075c2 <abort>
 80071d4:	4b04      	ldr	r3, [pc, #16]	; (80071e8 <__assert_func+0x38>)
 80071d6:	461c      	mov	r4, r3
 80071d8:	e7f3      	b.n	80071c2 <__assert_func+0x12>
 80071da:	bf00      	nop
 80071dc:	20000200 	.word	0x20000200
 80071e0:	08007f0c 	.word	0x08007f0c
 80071e4:	08007f19 	.word	0x08007f19
 80071e8:	08007f47 	.word	0x08007f47

080071ec <_calloc_r>:
 80071ec:	b538      	push	{r3, r4, r5, lr}
 80071ee:	fba1 1502 	umull	r1, r5, r1, r2
 80071f2:	b92d      	cbnz	r5, 8007200 <_calloc_r+0x14>
 80071f4:	f7fe fa9c 	bl	8005730 <_malloc_r>
 80071f8:	4604      	mov	r4, r0
 80071fa:	b938      	cbnz	r0, 800720c <_calloc_r+0x20>
 80071fc:	4620      	mov	r0, r4
 80071fe:	bd38      	pop	{r3, r4, r5, pc}
 8007200:	f000 f83a 	bl	8007278 <__errno>
 8007204:	230c      	movs	r3, #12
 8007206:	6003      	str	r3, [r0, #0]
 8007208:	2400      	movs	r4, #0
 800720a:	e7f7      	b.n	80071fc <_calloc_r+0x10>
 800720c:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8007210:	f022 0203 	bic.w	r2, r2, #3
 8007214:	3a04      	subs	r2, #4
 8007216:	2a24      	cmp	r2, #36	; 0x24
 8007218:	d819      	bhi.n	800724e <_calloc_r+0x62>
 800721a:	2a13      	cmp	r2, #19
 800721c:	d915      	bls.n	800724a <_calloc_r+0x5e>
 800721e:	2a1b      	cmp	r2, #27
 8007220:	e9c0 5500 	strd	r5, r5, [r0]
 8007224:	d806      	bhi.n	8007234 <_calloc_r+0x48>
 8007226:	f100 0308 	add.w	r3, r0, #8
 800722a:	2200      	movs	r2, #0
 800722c:	e9c3 2200 	strd	r2, r2, [r3]
 8007230:	609a      	str	r2, [r3, #8]
 8007232:	e7e3      	b.n	80071fc <_calloc_r+0x10>
 8007234:	2a24      	cmp	r2, #36	; 0x24
 8007236:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800723a:	bf11      	iteee	ne
 800723c:	f100 0310 	addne.w	r3, r0, #16
 8007240:	6105      	streq	r5, [r0, #16]
 8007242:	f100 0318 	addeq.w	r3, r0, #24
 8007246:	6145      	streq	r5, [r0, #20]
 8007248:	e7ef      	b.n	800722a <_calloc_r+0x3e>
 800724a:	4603      	mov	r3, r0
 800724c:	e7ed      	b.n	800722a <_calloc_r+0x3e>
 800724e:	4629      	mov	r1, r5
 8007250:	f7fb fce0 	bl	8002c14 <memset>
 8007254:	e7d2      	b.n	80071fc <_calloc_r+0x10>
	...

08007258 <_close_r>:
 8007258:	b538      	push	{r3, r4, r5, lr}
 800725a:	4d06      	ldr	r5, [pc, #24]	; (8007274 <_close_r+0x1c>)
 800725c:	2300      	movs	r3, #0
 800725e:	4604      	mov	r4, r0
 8007260:	4608      	mov	r0, r1
 8007262:	602b      	str	r3, [r5, #0]
 8007264:	f000 facc 	bl	8007800 <_close>
 8007268:	1c43      	adds	r3, r0, #1
 800726a:	d102      	bne.n	8007272 <_close_r+0x1a>
 800726c:	682b      	ldr	r3, [r5, #0]
 800726e:	b103      	cbz	r3, 8007272 <_close_r+0x1a>
 8007270:	6023      	str	r3, [r4, #0]
 8007272:	bd38      	pop	{r3, r4, r5, pc}
 8007274:	20000c54 	.word	0x20000c54

08007278 <__errno>:
 8007278:	4b01      	ldr	r3, [pc, #4]	; (8007280 <__errno+0x8>)
 800727a:	6818      	ldr	r0, [r3, #0]
 800727c:	4770      	bx	lr
 800727e:	bf00      	nop
 8007280:	20000200 	.word	0x20000200

08007284 <_fclose_r>:
 8007284:	b570      	push	{r4, r5, r6, lr}
 8007286:	4606      	mov	r6, r0
 8007288:	460c      	mov	r4, r1
 800728a:	b911      	cbnz	r1, 8007292 <_fclose_r+0xe>
 800728c:	2500      	movs	r5, #0
 800728e:	4628      	mov	r0, r5
 8007290:	bd70      	pop	{r4, r5, r6, pc}
 8007292:	b118      	cbz	r0, 800729c <_fclose_r+0x18>
 8007294:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8007296:	b90b      	cbnz	r3, 800729c <_fclose_r+0x18>
 8007298:	f7fd ff1e 	bl	80050d8 <__sinit>
 800729c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800729e:	07d8      	lsls	r0, r3, #31
 80072a0:	d405      	bmi.n	80072ae <_fclose_r+0x2a>
 80072a2:	89a3      	ldrh	r3, [r4, #12]
 80072a4:	0599      	lsls	r1, r3, #22
 80072a6:	d402      	bmi.n	80072ae <_fclose_r+0x2a>
 80072a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80072aa:	f7fe f9d3 	bl	8005654 <__retarget_lock_acquire_recursive>
 80072ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80072b2:	b93b      	cbnz	r3, 80072c4 <_fclose_r+0x40>
 80072b4:	6e65      	ldr	r5, [r4, #100]	; 0x64
 80072b6:	f015 0501 	ands.w	r5, r5, #1
 80072ba:	d1e7      	bne.n	800728c <_fclose_r+0x8>
 80072bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80072be:	f7fe f9ca 	bl	8005656 <__retarget_lock_release_recursive>
 80072c2:	e7e4      	b.n	800728e <_fclose_r+0xa>
 80072c4:	4621      	mov	r1, r4
 80072c6:	4630      	mov	r0, r6
 80072c8:	f7fd fe10 	bl	8004eec <__sflush_r>
 80072cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80072ce:	4605      	mov	r5, r0
 80072d0:	b133      	cbz	r3, 80072e0 <_fclose_r+0x5c>
 80072d2:	69e1      	ldr	r1, [r4, #28]
 80072d4:	4630      	mov	r0, r6
 80072d6:	4798      	blx	r3
 80072d8:	2800      	cmp	r0, #0
 80072da:	bfb8      	it	lt
 80072dc:	f04f 35ff 	movlt.w	r5, #4294967295
 80072e0:	89a3      	ldrh	r3, [r4, #12]
 80072e2:	061a      	lsls	r2, r3, #24
 80072e4:	d503      	bpl.n	80072ee <_fclose_r+0x6a>
 80072e6:	6921      	ldr	r1, [r4, #16]
 80072e8:	4630      	mov	r0, r6
 80072ea:	f7fd ff85 	bl	80051f8 <_free_r>
 80072ee:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80072f0:	b141      	cbz	r1, 8007304 <_fclose_r+0x80>
 80072f2:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80072f6:	4299      	cmp	r1, r3
 80072f8:	d002      	beq.n	8007300 <_fclose_r+0x7c>
 80072fa:	4630      	mov	r0, r6
 80072fc:	f7fd ff7c 	bl	80051f8 <_free_r>
 8007300:	2300      	movs	r3, #0
 8007302:	6323      	str	r3, [r4, #48]	; 0x30
 8007304:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8007306:	b121      	cbz	r1, 8007312 <_fclose_r+0x8e>
 8007308:	4630      	mov	r0, r6
 800730a:	f7fd ff75 	bl	80051f8 <_free_r>
 800730e:	2300      	movs	r3, #0
 8007310:	6463      	str	r3, [r4, #68]	; 0x44
 8007312:	f7fd fec9 	bl	80050a8 <__sfp_lock_acquire>
 8007316:	2300      	movs	r3, #0
 8007318:	81a3      	strh	r3, [r4, #12]
 800731a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800731c:	07db      	lsls	r3, r3, #31
 800731e:	d402      	bmi.n	8007326 <_fclose_r+0xa2>
 8007320:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007322:	f7fe f998 	bl	8005656 <__retarget_lock_release_recursive>
 8007326:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007328:	f7fe f993 	bl	8005652 <__retarget_lock_close_recursive>
 800732c:	f7fd fec2 	bl	80050b4 <__sfp_lock_release>
 8007330:	e7ad      	b.n	800728e <_fclose_r+0xa>
	...

08007334 <fiprintf>:
 8007334:	b40e      	push	{r1, r2, r3}
 8007336:	b503      	push	{r0, r1, lr}
 8007338:	4601      	mov	r1, r0
 800733a:	ab03      	add	r3, sp, #12
 800733c:	4805      	ldr	r0, [pc, #20]	; (8007354 <fiprintf+0x20>)
 800733e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007342:	6800      	ldr	r0, [r0, #0]
 8007344:	9301      	str	r3, [sp, #4]
 8007346:	f7ff fa11 	bl	800676c <_vfiprintf_r>
 800734a:	b002      	add	sp, #8
 800734c:	f85d eb04 	ldr.w	lr, [sp], #4
 8007350:	b003      	add	sp, #12
 8007352:	4770      	bx	lr
 8007354:	20000200 	.word	0x20000200

08007358 <__fputwc>:
 8007358:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800735c:	4680      	mov	r8, r0
 800735e:	460e      	mov	r6, r1
 8007360:	4615      	mov	r5, r2
 8007362:	f000 f885 	bl	8007470 <__locale_mb_cur_max>
 8007366:	2801      	cmp	r0, #1
 8007368:	4604      	mov	r4, r0
 800736a:	d11b      	bne.n	80073a4 <__fputwc+0x4c>
 800736c:	1e73      	subs	r3, r6, #1
 800736e:	2bfe      	cmp	r3, #254	; 0xfe
 8007370:	d818      	bhi.n	80073a4 <__fputwc+0x4c>
 8007372:	f88d 6004 	strb.w	r6, [sp, #4]
 8007376:	2700      	movs	r7, #0
 8007378:	f10d 0904 	add.w	r9, sp, #4
 800737c:	42a7      	cmp	r7, r4
 800737e:	d020      	beq.n	80073c2 <__fputwc+0x6a>
 8007380:	68ab      	ldr	r3, [r5, #8]
 8007382:	f817 1009 	ldrb.w	r1, [r7, r9]
 8007386:	3b01      	subs	r3, #1
 8007388:	2b00      	cmp	r3, #0
 800738a:	60ab      	str	r3, [r5, #8]
 800738c:	da04      	bge.n	8007398 <__fputwc+0x40>
 800738e:	69aa      	ldr	r2, [r5, #24]
 8007390:	4293      	cmp	r3, r2
 8007392:	db1a      	blt.n	80073ca <__fputwc+0x72>
 8007394:	290a      	cmp	r1, #10
 8007396:	d018      	beq.n	80073ca <__fputwc+0x72>
 8007398:	682b      	ldr	r3, [r5, #0]
 800739a:	1c5a      	adds	r2, r3, #1
 800739c:	602a      	str	r2, [r5, #0]
 800739e:	7019      	strb	r1, [r3, #0]
 80073a0:	3701      	adds	r7, #1
 80073a2:	e7eb      	b.n	800737c <__fputwc+0x24>
 80073a4:	4632      	mov	r2, r6
 80073a6:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 80073aa:	a901      	add	r1, sp, #4
 80073ac:	4640      	mov	r0, r8
 80073ae:	f000 f8e5 	bl	800757c <_wcrtomb_r>
 80073b2:	1c42      	adds	r2, r0, #1
 80073b4:	4604      	mov	r4, r0
 80073b6:	d1de      	bne.n	8007376 <__fputwc+0x1e>
 80073b8:	89ab      	ldrh	r3, [r5, #12]
 80073ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80073be:	81ab      	strh	r3, [r5, #12]
 80073c0:	4606      	mov	r6, r0
 80073c2:	4630      	mov	r0, r6
 80073c4:	b003      	add	sp, #12
 80073c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80073ca:	462a      	mov	r2, r5
 80073cc:	4640      	mov	r0, r8
 80073ce:	f000 f88b 	bl	80074e8 <__swbuf_r>
 80073d2:	1c43      	adds	r3, r0, #1
 80073d4:	d1e4      	bne.n	80073a0 <__fputwc+0x48>
 80073d6:	4606      	mov	r6, r0
 80073d8:	e7f3      	b.n	80073c2 <__fputwc+0x6a>

080073da <_fputwc_r>:
 80073da:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80073dc:	07db      	lsls	r3, r3, #31
 80073de:	b570      	push	{r4, r5, r6, lr}
 80073e0:	4605      	mov	r5, r0
 80073e2:	460e      	mov	r6, r1
 80073e4:	4614      	mov	r4, r2
 80073e6:	d405      	bmi.n	80073f4 <_fputwc_r+0x1a>
 80073e8:	8993      	ldrh	r3, [r2, #12]
 80073ea:	0598      	lsls	r0, r3, #22
 80073ec:	d402      	bmi.n	80073f4 <_fputwc_r+0x1a>
 80073ee:	6d90      	ldr	r0, [r2, #88]	; 0x58
 80073f0:	f7fe f930 	bl	8005654 <__retarget_lock_acquire_recursive>
 80073f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80073f8:	0499      	lsls	r1, r3, #18
 80073fa:	d406      	bmi.n	800740a <_fputwc_r+0x30>
 80073fc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8007400:	81a3      	strh	r3, [r4, #12]
 8007402:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007404:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8007408:	6663      	str	r3, [r4, #100]	; 0x64
 800740a:	4622      	mov	r2, r4
 800740c:	4628      	mov	r0, r5
 800740e:	4631      	mov	r1, r6
 8007410:	f7ff ffa2 	bl	8007358 <__fputwc>
 8007414:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007416:	07da      	lsls	r2, r3, #31
 8007418:	4605      	mov	r5, r0
 800741a:	d405      	bmi.n	8007428 <_fputwc_r+0x4e>
 800741c:	89a3      	ldrh	r3, [r4, #12]
 800741e:	059b      	lsls	r3, r3, #22
 8007420:	d402      	bmi.n	8007428 <_fputwc_r+0x4e>
 8007422:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007424:	f7fe f917 	bl	8005656 <__retarget_lock_release_recursive>
 8007428:	4628      	mov	r0, r5
 800742a:	bd70      	pop	{r4, r5, r6, pc}

0800742c <_fstat_r>:
 800742c:	b538      	push	{r3, r4, r5, lr}
 800742e:	4d07      	ldr	r5, [pc, #28]	; (800744c <_fstat_r+0x20>)
 8007430:	2300      	movs	r3, #0
 8007432:	4604      	mov	r4, r0
 8007434:	4608      	mov	r0, r1
 8007436:	4611      	mov	r1, r2
 8007438:	602b      	str	r3, [r5, #0]
 800743a:	f000 fa4e 	bl	80078da <_fstat>
 800743e:	1c43      	adds	r3, r0, #1
 8007440:	d102      	bne.n	8007448 <_fstat_r+0x1c>
 8007442:	682b      	ldr	r3, [r5, #0]
 8007444:	b103      	cbz	r3, 8007448 <_fstat_r+0x1c>
 8007446:	6023      	str	r3, [r4, #0]
 8007448:	bd38      	pop	{r3, r4, r5, pc}
 800744a:	bf00      	nop
 800744c:	20000c54 	.word	0x20000c54

08007450 <_isatty_r>:
 8007450:	b538      	push	{r3, r4, r5, lr}
 8007452:	4d06      	ldr	r5, [pc, #24]	; (800746c <_isatty_r+0x1c>)
 8007454:	2300      	movs	r3, #0
 8007456:	4604      	mov	r4, r0
 8007458:	4608      	mov	r0, r1
 800745a:	602b      	str	r3, [r5, #0]
 800745c:	f000 fb44 	bl	8007ae8 <_isatty>
 8007460:	1c43      	adds	r3, r0, #1
 8007462:	d102      	bne.n	800746a <_isatty_r+0x1a>
 8007464:	682b      	ldr	r3, [r5, #0]
 8007466:	b103      	cbz	r3, 800746a <_isatty_r+0x1a>
 8007468:	6023      	str	r3, [r4, #0]
 800746a:	bd38      	pop	{r3, r4, r5, pc}
 800746c:	20000c54 	.word	0x20000c54

08007470 <__locale_mb_cur_max>:
 8007470:	4b01      	ldr	r3, [pc, #4]	; (8007478 <__locale_mb_cur_max+0x8>)
 8007472:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8007476:	4770      	bx	lr
 8007478:	20000a44 	.word	0x20000a44

0800747c <_lseek_r>:
 800747c:	b538      	push	{r3, r4, r5, lr}
 800747e:	4d07      	ldr	r5, [pc, #28]	; (800749c <_lseek_r+0x20>)
 8007480:	4604      	mov	r4, r0
 8007482:	4608      	mov	r0, r1
 8007484:	4611      	mov	r1, r2
 8007486:	2200      	movs	r2, #0
 8007488:	602a      	str	r2, [r5, #0]
 800748a:	461a      	mov	r2, r3
 800748c:	f000 f979 	bl	8007782 <_lseek>
 8007490:	1c43      	adds	r3, r0, #1
 8007492:	d102      	bne.n	800749a <_lseek_r+0x1e>
 8007494:	682b      	ldr	r3, [r5, #0]
 8007496:	b103      	cbz	r3, 800749a <_lseek_r+0x1e>
 8007498:	6023      	str	r3, [r4, #0]
 800749a:	bd38      	pop	{r3, r4, r5, pc}
 800749c:	20000c54 	.word	0x20000c54

080074a0 <__ascii_mbtowc>:
 80074a0:	b082      	sub	sp, #8
 80074a2:	b901      	cbnz	r1, 80074a6 <__ascii_mbtowc+0x6>
 80074a4:	a901      	add	r1, sp, #4
 80074a6:	b142      	cbz	r2, 80074ba <__ascii_mbtowc+0x1a>
 80074a8:	b14b      	cbz	r3, 80074be <__ascii_mbtowc+0x1e>
 80074aa:	7813      	ldrb	r3, [r2, #0]
 80074ac:	600b      	str	r3, [r1, #0]
 80074ae:	7812      	ldrb	r2, [r2, #0]
 80074b0:	1e10      	subs	r0, r2, #0
 80074b2:	bf18      	it	ne
 80074b4:	2001      	movne	r0, #1
 80074b6:	b002      	add	sp, #8
 80074b8:	4770      	bx	lr
 80074ba:	4610      	mov	r0, r2
 80074bc:	e7fb      	b.n	80074b6 <__ascii_mbtowc+0x16>
 80074be:	f06f 0001 	mvn.w	r0, #1
 80074c2:	e7f8      	b.n	80074b6 <__ascii_mbtowc+0x16>

080074c4 <_read_r>:
 80074c4:	b538      	push	{r3, r4, r5, lr}
 80074c6:	4d07      	ldr	r5, [pc, #28]	; (80074e4 <_read_r+0x20>)
 80074c8:	4604      	mov	r4, r0
 80074ca:	4608      	mov	r0, r1
 80074cc:	4611      	mov	r1, r2
 80074ce:	2200      	movs	r2, #0
 80074d0:	602a      	str	r2, [r5, #0]
 80074d2:	461a      	mov	r2, r3
 80074d4:	f000 f8ff 	bl	80076d6 <_read>
 80074d8:	1c43      	adds	r3, r0, #1
 80074da:	d102      	bne.n	80074e2 <_read_r+0x1e>
 80074dc:	682b      	ldr	r3, [r5, #0]
 80074de:	b103      	cbz	r3, 80074e2 <_read_r+0x1e>
 80074e0:	6023      	str	r3, [r4, #0]
 80074e2:	bd38      	pop	{r3, r4, r5, pc}
 80074e4:	20000c54 	.word	0x20000c54

080074e8 <__swbuf_r>:
 80074e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074ea:	460e      	mov	r6, r1
 80074ec:	4614      	mov	r4, r2
 80074ee:	4605      	mov	r5, r0
 80074f0:	b118      	cbz	r0, 80074fa <__swbuf_r+0x12>
 80074f2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80074f4:	b90b      	cbnz	r3, 80074fa <__swbuf_r+0x12>
 80074f6:	f7fd fdef 	bl	80050d8 <__sinit>
 80074fa:	69a3      	ldr	r3, [r4, #24]
 80074fc:	60a3      	str	r3, [r4, #8]
 80074fe:	89a3      	ldrh	r3, [r4, #12]
 8007500:	0719      	lsls	r1, r3, #28
 8007502:	d529      	bpl.n	8007558 <__swbuf_r+0x70>
 8007504:	6923      	ldr	r3, [r4, #16]
 8007506:	b33b      	cbz	r3, 8007558 <__swbuf_r+0x70>
 8007508:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800750c:	b2f6      	uxtb	r6, r6
 800750e:	049a      	lsls	r2, r3, #18
 8007510:	4637      	mov	r7, r6
 8007512:	d52a      	bpl.n	800756a <__swbuf_r+0x82>
 8007514:	6823      	ldr	r3, [r4, #0]
 8007516:	6920      	ldr	r0, [r4, #16]
 8007518:	1a18      	subs	r0, r3, r0
 800751a:	6963      	ldr	r3, [r4, #20]
 800751c:	4283      	cmp	r3, r0
 800751e:	dc04      	bgt.n	800752a <__swbuf_r+0x42>
 8007520:	4621      	mov	r1, r4
 8007522:	4628      	mov	r0, r5
 8007524:	f7fd fd6c 	bl	8005000 <_fflush_r>
 8007528:	b9e0      	cbnz	r0, 8007564 <__swbuf_r+0x7c>
 800752a:	68a3      	ldr	r3, [r4, #8]
 800752c:	3b01      	subs	r3, #1
 800752e:	60a3      	str	r3, [r4, #8]
 8007530:	6823      	ldr	r3, [r4, #0]
 8007532:	1c5a      	adds	r2, r3, #1
 8007534:	6022      	str	r2, [r4, #0]
 8007536:	701e      	strb	r6, [r3, #0]
 8007538:	6962      	ldr	r2, [r4, #20]
 800753a:	1c43      	adds	r3, r0, #1
 800753c:	429a      	cmp	r2, r3
 800753e:	d004      	beq.n	800754a <__swbuf_r+0x62>
 8007540:	89a3      	ldrh	r3, [r4, #12]
 8007542:	07db      	lsls	r3, r3, #31
 8007544:	d506      	bpl.n	8007554 <__swbuf_r+0x6c>
 8007546:	2e0a      	cmp	r6, #10
 8007548:	d104      	bne.n	8007554 <__swbuf_r+0x6c>
 800754a:	4621      	mov	r1, r4
 800754c:	4628      	mov	r0, r5
 800754e:	f7fd fd57 	bl	8005000 <_fflush_r>
 8007552:	b938      	cbnz	r0, 8007564 <__swbuf_r+0x7c>
 8007554:	4638      	mov	r0, r7
 8007556:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007558:	4621      	mov	r1, r4
 800755a:	4628      	mov	r0, r5
 800755c:	f7fc fe20 	bl	80041a0 <__swsetup_r>
 8007560:	2800      	cmp	r0, #0
 8007562:	d0d1      	beq.n	8007508 <__swbuf_r+0x20>
 8007564:	f04f 37ff 	mov.w	r7, #4294967295
 8007568:	e7f4      	b.n	8007554 <__swbuf_r+0x6c>
 800756a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800756e:	81a3      	strh	r3, [r4, #12]
 8007570:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007572:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007576:	6663      	str	r3, [r4, #100]	; 0x64
 8007578:	e7cc      	b.n	8007514 <__swbuf_r+0x2c>
	...

0800757c <_wcrtomb_r>:
 800757c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800757e:	4c09      	ldr	r4, [pc, #36]	; (80075a4 <_wcrtomb_r+0x28>)
 8007580:	b085      	sub	sp, #20
 8007582:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 8007586:	4605      	mov	r5, r0
 8007588:	461e      	mov	r6, r3
 800758a:	b909      	cbnz	r1, 8007590 <_wcrtomb_r+0x14>
 800758c:	460a      	mov	r2, r1
 800758e:	a901      	add	r1, sp, #4
 8007590:	47b8      	blx	r7
 8007592:	1c43      	adds	r3, r0, #1
 8007594:	bf01      	itttt	eq
 8007596:	2300      	moveq	r3, #0
 8007598:	6033      	streq	r3, [r6, #0]
 800759a:	238a      	moveq	r3, #138	; 0x8a
 800759c:	602b      	streq	r3, [r5, #0]
 800759e:	b005      	add	sp, #20
 80075a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80075a2:	bf00      	nop
 80075a4:	20000a44 	.word	0x20000a44

080075a8 <__ascii_wctomb>:
 80075a8:	4603      	mov	r3, r0
 80075aa:	4608      	mov	r0, r1
 80075ac:	b141      	cbz	r1, 80075c0 <__ascii_wctomb+0x18>
 80075ae:	2aff      	cmp	r2, #255	; 0xff
 80075b0:	d904      	bls.n	80075bc <__ascii_wctomb+0x14>
 80075b2:	228a      	movs	r2, #138	; 0x8a
 80075b4:	601a      	str	r2, [r3, #0]
 80075b6:	f04f 30ff 	mov.w	r0, #4294967295
 80075ba:	4770      	bx	lr
 80075bc:	700a      	strb	r2, [r1, #0]
 80075be:	2001      	movs	r0, #1
 80075c0:	4770      	bx	lr

080075c2 <abort>:
 80075c2:	b508      	push	{r3, lr}
 80075c4:	2006      	movs	r0, #6
 80075c6:	f000 f82d 	bl	8007624 <raise>
 80075ca:	2001      	movs	r0, #1
 80075cc:	f000 faa8 	bl	8007b20 <_exit>

080075d0 <_raise_r>:
 80075d0:	291f      	cmp	r1, #31
 80075d2:	b538      	push	{r3, r4, r5, lr}
 80075d4:	4604      	mov	r4, r0
 80075d6:	460d      	mov	r5, r1
 80075d8:	d904      	bls.n	80075e4 <_raise_r+0x14>
 80075da:	2316      	movs	r3, #22
 80075dc:	6003      	str	r3, [r0, #0]
 80075de:	f04f 30ff 	mov.w	r0, #4294967295
 80075e2:	bd38      	pop	{r3, r4, r5, pc}
 80075e4:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 80075e8:	b112      	cbz	r2, 80075f0 <_raise_r+0x20>
 80075ea:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80075ee:	b94b      	cbnz	r3, 8007604 <_raise_r+0x34>
 80075f0:	4620      	mov	r0, r4
 80075f2:	f000 f831 	bl	8007658 <_getpid_r>
 80075f6:	462a      	mov	r2, r5
 80075f8:	4601      	mov	r1, r0
 80075fa:	4620      	mov	r0, r4
 80075fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007600:	f000 b818 	b.w	8007634 <_kill_r>
 8007604:	2b01      	cmp	r3, #1
 8007606:	d00a      	beq.n	800761e <_raise_r+0x4e>
 8007608:	1c59      	adds	r1, r3, #1
 800760a:	d103      	bne.n	8007614 <_raise_r+0x44>
 800760c:	2316      	movs	r3, #22
 800760e:	6003      	str	r3, [r0, #0]
 8007610:	2001      	movs	r0, #1
 8007612:	e7e6      	b.n	80075e2 <_raise_r+0x12>
 8007614:	2400      	movs	r4, #0
 8007616:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800761a:	4628      	mov	r0, r5
 800761c:	4798      	blx	r3
 800761e:	2000      	movs	r0, #0
 8007620:	e7df      	b.n	80075e2 <_raise_r+0x12>
	...

08007624 <raise>:
 8007624:	4b02      	ldr	r3, [pc, #8]	; (8007630 <raise+0xc>)
 8007626:	4601      	mov	r1, r0
 8007628:	6818      	ldr	r0, [r3, #0]
 800762a:	f7ff bfd1 	b.w	80075d0 <_raise_r>
 800762e:	bf00      	nop
 8007630:	20000200 	.word	0x20000200

08007634 <_kill_r>:
 8007634:	b538      	push	{r3, r4, r5, lr}
 8007636:	4d07      	ldr	r5, [pc, #28]	; (8007654 <_kill_r+0x20>)
 8007638:	2300      	movs	r3, #0
 800763a:	4604      	mov	r4, r0
 800763c:	4608      	mov	r0, r1
 800763e:	4611      	mov	r1, r2
 8007640:	602b      	str	r3, [r5, #0]
 8007642:	f000 fa8b 	bl	8007b5c <_kill>
 8007646:	1c43      	adds	r3, r0, #1
 8007648:	d102      	bne.n	8007650 <_kill_r+0x1c>
 800764a:	682b      	ldr	r3, [r5, #0]
 800764c:	b103      	cbz	r3, 8007650 <_kill_r+0x1c>
 800764e:	6023      	str	r3, [r4, #0]
 8007650:	bd38      	pop	{r3, r4, r5, pc}
 8007652:	bf00      	nop
 8007654:	20000c54 	.word	0x20000c54

08007658 <_getpid_r>:
 8007658:	f000 b8f8 	b.w	800784c <_getpid>

0800765c <findslot>:
 800765c:	4b0a      	ldr	r3, [pc, #40]	; (8007688 <findslot+0x2c>)
 800765e:	b510      	push	{r4, lr}
 8007660:	4604      	mov	r4, r0
 8007662:	6818      	ldr	r0, [r3, #0]
 8007664:	b118      	cbz	r0, 800766e <findslot+0x12>
 8007666:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8007668:	b90b      	cbnz	r3, 800766e <findslot+0x12>
 800766a:	f7fd fd35 	bl	80050d8 <__sinit>
 800766e:	2c13      	cmp	r4, #19
 8007670:	d807      	bhi.n	8007682 <findslot+0x26>
 8007672:	4806      	ldr	r0, [pc, #24]	; (800768c <findslot+0x30>)
 8007674:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8007678:	3201      	adds	r2, #1
 800767a:	d002      	beq.n	8007682 <findslot+0x26>
 800767c:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8007680:	bd10      	pop	{r4, pc}
 8007682:	2000      	movs	r0, #0
 8007684:	e7fc      	b.n	8007680 <findslot+0x24>
 8007686:	bf00      	nop
 8007688:	20000200 	.word	0x20000200
 800768c:	20000c5c 	.word	0x20000c5c

08007690 <error>:
 8007690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007692:	4604      	mov	r4, r0
 8007694:	f7ff fdf0 	bl	8007278 <__errno>
 8007698:	2613      	movs	r6, #19
 800769a:	4605      	mov	r5, r0
 800769c:	2700      	movs	r7, #0
 800769e:	4630      	mov	r0, r6
 80076a0:	4639      	mov	r1, r7
 80076a2:	beab      	bkpt	0x00ab
 80076a4:	4606      	mov	r6, r0
 80076a6:	602e      	str	r6, [r5, #0]
 80076a8:	4620      	mov	r0, r4
 80076aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080076ac <checkerror>:
 80076ac:	1c43      	adds	r3, r0, #1
 80076ae:	d101      	bne.n	80076b4 <checkerror+0x8>
 80076b0:	f7ff bfee 	b.w	8007690 <error>
 80076b4:	4770      	bx	lr

080076b6 <_swiread>:
 80076b6:	b530      	push	{r4, r5, lr}
 80076b8:	b085      	sub	sp, #20
 80076ba:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80076be:	9203      	str	r2, [sp, #12]
 80076c0:	2406      	movs	r4, #6
 80076c2:	ad01      	add	r5, sp, #4
 80076c4:	4620      	mov	r0, r4
 80076c6:	4629      	mov	r1, r5
 80076c8:	beab      	bkpt	0x00ab
 80076ca:	4604      	mov	r4, r0
 80076cc:	4620      	mov	r0, r4
 80076ce:	f7ff ffed 	bl	80076ac <checkerror>
 80076d2:	b005      	add	sp, #20
 80076d4:	bd30      	pop	{r4, r5, pc}

080076d6 <_read>:
 80076d6:	b570      	push	{r4, r5, r6, lr}
 80076d8:	460e      	mov	r6, r1
 80076da:	4615      	mov	r5, r2
 80076dc:	f7ff ffbe 	bl	800765c <findslot>
 80076e0:	4604      	mov	r4, r0
 80076e2:	b930      	cbnz	r0, 80076f2 <_read+0x1c>
 80076e4:	f7ff fdc8 	bl	8007278 <__errno>
 80076e8:	2309      	movs	r3, #9
 80076ea:	6003      	str	r3, [r0, #0]
 80076ec:	f04f 30ff 	mov.w	r0, #4294967295
 80076f0:	bd70      	pop	{r4, r5, r6, pc}
 80076f2:	6800      	ldr	r0, [r0, #0]
 80076f4:	462a      	mov	r2, r5
 80076f6:	4631      	mov	r1, r6
 80076f8:	f7ff ffdd 	bl	80076b6 <_swiread>
 80076fc:	1c43      	adds	r3, r0, #1
 80076fe:	bf1f      	itttt	ne
 8007700:	6863      	ldrne	r3, [r4, #4]
 8007702:	1a28      	subne	r0, r5, r0
 8007704:	181b      	addne	r3, r3, r0
 8007706:	6063      	strne	r3, [r4, #4]
 8007708:	e7f2      	b.n	80076f0 <_read+0x1a>

0800770a <_swilseek>:
 800770a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800770c:	460c      	mov	r4, r1
 800770e:	4616      	mov	r6, r2
 8007710:	f7ff ffa4 	bl	800765c <findslot>
 8007714:	4605      	mov	r5, r0
 8007716:	b940      	cbnz	r0, 800772a <_swilseek+0x20>
 8007718:	f7ff fdae 	bl	8007278 <__errno>
 800771c:	2309      	movs	r3, #9
 800771e:	6003      	str	r3, [r0, #0]
 8007720:	f04f 34ff 	mov.w	r4, #4294967295
 8007724:	4620      	mov	r0, r4
 8007726:	b003      	add	sp, #12
 8007728:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800772a:	2e02      	cmp	r6, #2
 800772c:	d903      	bls.n	8007736 <_swilseek+0x2c>
 800772e:	f7ff fda3 	bl	8007278 <__errno>
 8007732:	2316      	movs	r3, #22
 8007734:	e7f3      	b.n	800771e <_swilseek+0x14>
 8007736:	2e01      	cmp	r6, #1
 8007738:	d112      	bne.n	8007760 <_swilseek+0x56>
 800773a:	6843      	ldr	r3, [r0, #4]
 800773c:	18e4      	adds	r4, r4, r3
 800773e:	d4f6      	bmi.n	800772e <_swilseek+0x24>
 8007740:	682b      	ldr	r3, [r5, #0]
 8007742:	260a      	movs	r6, #10
 8007744:	e9cd 3400 	strd	r3, r4, [sp]
 8007748:	466f      	mov	r7, sp
 800774a:	4630      	mov	r0, r6
 800774c:	4639      	mov	r1, r7
 800774e:	beab      	bkpt	0x00ab
 8007750:	4606      	mov	r6, r0
 8007752:	4630      	mov	r0, r6
 8007754:	f7ff ffaa 	bl	80076ac <checkerror>
 8007758:	2800      	cmp	r0, #0
 800775a:	dbe1      	blt.n	8007720 <_swilseek+0x16>
 800775c:	606c      	str	r4, [r5, #4]
 800775e:	e7e1      	b.n	8007724 <_swilseek+0x1a>
 8007760:	2e02      	cmp	r6, #2
 8007762:	d1ed      	bne.n	8007740 <_swilseek+0x36>
 8007764:	6803      	ldr	r3, [r0, #0]
 8007766:	9300      	str	r3, [sp, #0]
 8007768:	260c      	movs	r6, #12
 800776a:	466f      	mov	r7, sp
 800776c:	4630      	mov	r0, r6
 800776e:	4639      	mov	r1, r7
 8007770:	beab      	bkpt	0x00ab
 8007772:	4606      	mov	r6, r0
 8007774:	4630      	mov	r0, r6
 8007776:	f7ff ff99 	bl	80076ac <checkerror>
 800777a:	1c43      	adds	r3, r0, #1
 800777c:	d0d0      	beq.n	8007720 <_swilseek+0x16>
 800777e:	4404      	add	r4, r0
 8007780:	e7de      	b.n	8007740 <_swilseek+0x36>

08007782 <_lseek>:
 8007782:	f7ff bfc2 	b.w	800770a <_swilseek>

08007786 <_swiwrite>:
 8007786:	b530      	push	{r4, r5, lr}
 8007788:	b085      	sub	sp, #20
 800778a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800778e:	9203      	str	r2, [sp, #12]
 8007790:	2405      	movs	r4, #5
 8007792:	ad01      	add	r5, sp, #4
 8007794:	4620      	mov	r0, r4
 8007796:	4629      	mov	r1, r5
 8007798:	beab      	bkpt	0x00ab
 800779a:	4604      	mov	r4, r0
 800779c:	4620      	mov	r0, r4
 800779e:	f7ff ff85 	bl	80076ac <checkerror>
 80077a2:	b005      	add	sp, #20
 80077a4:	bd30      	pop	{r4, r5, pc}

080077a6 <_write>:
 80077a6:	b570      	push	{r4, r5, r6, lr}
 80077a8:	460e      	mov	r6, r1
 80077aa:	4615      	mov	r5, r2
 80077ac:	f7ff ff56 	bl	800765c <findslot>
 80077b0:	4604      	mov	r4, r0
 80077b2:	b930      	cbnz	r0, 80077c2 <_write+0x1c>
 80077b4:	f7ff fd60 	bl	8007278 <__errno>
 80077b8:	2309      	movs	r3, #9
 80077ba:	6003      	str	r3, [r0, #0]
 80077bc:	f04f 30ff 	mov.w	r0, #4294967295
 80077c0:	bd70      	pop	{r4, r5, r6, pc}
 80077c2:	6800      	ldr	r0, [r0, #0]
 80077c4:	462a      	mov	r2, r5
 80077c6:	4631      	mov	r1, r6
 80077c8:	f7ff ffdd 	bl	8007786 <_swiwrite>
 80077cc:	1e03      	subs	r3, r0, #0
 80077ce:	dbf5      	blt.n	80077bc <_write+0x16>
 80077d0:	6862      	ldr	r2, [r4, #4]
 80077d2:	1ae8      	subs	r0, r5, r3
 80077d4:	4402      	add	r2, r0
 80077d6:	42ab      	cmp	r3, r5
 80077d8:	6062      	str	r2, [r4, #4]
 80077da:	d1f1      	bne.n	80077c0 <_write+0x1a>
 80077dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80077e0:	2000      	movs	r0, #0
 80077e2:	f7ff bf55 	b.w	8007690 <error>

080077e6 <_swiclose>:
 80077e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80077e8:	2402      	movs	r4, #2
 80077ea:	9001      	str	r0, [sp, #4]
 80077ec:	ad01      	add	r5, sp, #4
 80077ee:	4620      	mov	r0, r4
 80077f0:	4629      	mov	r1, r5
 80077f2:	beab      	bkpt	0x00ab
 80077f4:	4604      	mov	r4, r0
 80077f6:	4620      	mov	r0, r4
 80077f8:	f7ff ff58 	bl	80076ac <checkerror>
 80077fc:	b003      	add	sp, #12
 80077fe:	bd30      	pop	{r4, r5, pc}

08007800 <_close>:
 8007800:	b538      	push	{r3, r4, r5, lr}
 8007802:	4605      	mov	r5, r0
 8007804:	f7ff ff2a 	bl	800765c <findslot>
 8007808:	4604      	mov	r4, r0
 800780a:	b930      	cbnz	r0, 800781a <_close+0x1a>
 800780c:	f7ff fd34 	bl	8007278 <__errno>
 8007810:	2309      	movs	r3, #9
 8007812:	6003      	str	r3, [r0, #0]
 8007814:	f04f 30ff 	mov.w	r0, #4294967295
 8007818:	bd38      	pop	{r3, r4, r5, pc}
 800781a:	3d01      	subs	r5, #1
 800781c:	2d01      	cmp	r5, #1
 800781e:	d809      	bhi.n	8007834 <_close+0x34>
 8007820:	4b09      	ldr	r3, [pc, #36]	; (8007848 <_close+0x48>)
 8007822:	689a      	ldr	r2, [r3, #8]
 8007824:	691b      	ldr	r3, [r3, #16]
 8007826:	429a      	cmp	r2, r3
 8007828:	d104      	bne.n	8007834 <_close+0x34>
 800782a:	f04f 33ff 	mov.w	r3, #4294967295
 800782e:	6003      	str	r3, [r0, #0]
 8007830:	2000      	movs	r0, #0
 8007832:	e7f1      	b.n	8007818 <_close+0x18>
 8007834:	6820      	ldr	r0, [r4, #0]
 8007836:	f7ff ffd6 	bl	80077e6 <_swiclose>
 800783a:	2800      	cmp	r0, #0
 800783c:	d1ec      	bne.n	8007818 <_close+0x18>
 800783e:	f04f 33ff 	mov.w	r3, #4294967295
 8007842:	6023      	str	r3, [r4, #0]
 8007844:	e7e8      	b.n	8007818 <_close+0x18>
 8007846:	bf00      	nop
 8007848:	20000c5c 	.word	0x20000c5c

0800784c <_getpid>:
 800784c:	2001      	movs	r0, #1
 800784e:	4770      	bx	lr

08007850 <_sbrk>:
 8007850:	4a0d      	ldr	r2, [pc, #52]	; (8007888 <_sbrk+0x38>)
 8007852:	6811      	ldr	r1, [r2, #0]
 8007854:	b510      	push	{r4, lr}
 8007856:	4603      	mov	r3, r0
 8007858:	b909      	cbnz	r1, 800785e <_sbrk+0xe>
 800785a:	490c      	ldr	r1, [pc, #48]	; (800788c <_sbrk+0x3c>)
 800785c:	6011      	str	r1, [r2, #0]
 800785e:	6810      	ldr	r0, [r2, #0]
 8007860:	4669      	mov	r1, sp
 8007862:	4403      	add	r3, r0
 8007864:	428b      	cmp	r3, r1
 8007866:	d806      	bhi.n	8007876 <_sbrk+0x26>
 8007868:	4909      	ldr	r1, [pc, #36]	; (8007890 <_sbrk+0x40>)
 800786a:	4c0a      	ldr	r4, [pc, #40]	; (8007894 <_sbrk+0x44>)
 800786c:	6809      	ldr	r1, [r1, #0]
 800786e:	42a1      	cmp	r1, r4
 8007870:	d008      	beq.n	8007884 <_sbrk+0x34>
 8007872:	428b      	cmp	r3, r1
 8007874:	d906      	bls.n	8007884 <_sbrk+0x34>
 8007876:	f7ff fcff 	bl	8007278 <__errno>
 800787a:	230c      	movs	r3, #12
 800787c:	6003      	str	r3, [r0, #0]
 800787e:	f04f 30ff 	mov.w	r0, #4294967295
 8007882:	bd10      	pop	{r4, pc}
 8007884:	6013      	str	r3, [r2, #0]
 8007886:	e7fc      	b.n	8007882 <_sbrk+0x32>
 8007888:	20000c58 	.word	0x20000c58
 800788c:	20000d00 	.word	0x20000d00
 8007890:	20000bb0 	.word	0x20000bb0
 8007894:	cafedead 	.word	0xcafedead

08007898 <_swistat>:
 8007898:	b570      	push	{r4, r5, r6, lr}
 800789a:	460c      	mov	r4, r1
 800789c:	f7ff fede 	bl	800765c <findslot>
 80078a0:	4605      	mov	r5, r0
 80078a2:	b930      	cbnz	r0, 80078b2 <_swistat+0x1a>
 80078a4:	f7ff fce8 	bl	8007278 <__errno>
 80078a8:	2309      	movs	r3, #9
 80078aa:	6003      	str	r3, [r0, #0]
 80078ac:	f04f 30ff 	mov.w	r0, #4294967295
 80078b0:	bd70      	pop	{r4, r5, r6, pc}
 80078b2:	6863      	ldr	r3, [r4, #4]
 80078b4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80078b8:	6063      	str	r3, [r4, #4]
 80078ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80078be:	64a3      	str	r3, [r4, #72]	; 0x48
 80078c0:	260c      	movs	r6, #12
 80078c2:	4630      	mov	r0, r6
 80078c4:	4629      	mov	r1, r5
 80078c6:	beab      	bkpt	0x00ab
 80078c8:	4605      	mov	r5, r0
 80078ca:	4628      	mov	r0, r5
 80078cc:	f7ff feee 	bl	80076ac <checkerror>
 80078d0:	1c43      	adds	r3, r0, #1
 80078d2:	bf1c      	itt	ne
 80078d4:	6120      	strne	r0, [r4, #16]
 80078d6:	2000      	movne	r0, #0
 80078d8:	e7ea      	b.n	80078b0 <_swistat+0x18>

080078da <_fstat>:
 80078da:	460b      	mov	r3, r1
 80078dc:	b510      	push	{r4, lr}
 80078de:	2100      	movs	r1, #0
 80078e0:	4604      	mov	r4, r0
 80078e2:	2258      	movs	r2, #88	; 0x58
 80078e4:	4618      	mov	r0, r3
 80078e6:	f7fb f995 	bl	8002c14 <memset>
 80078ea:	4601      	mov	r1, r0
 80078ec:	4620      	mov	r0, r4
 80078ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80078f2:	f7ff bfd1 	b.w	8007898 <_swistat>

080078f6 <_stat>:
 80078f6:	b538      	push	{r3, r4, r5, lr}
 80078f8:	460d      	mov	r5, r1
 80078fa:	4604      	mov	r4, r0
 80078fc:	2258      	movs	r2, #88	; 0x58
 80078fe:	2100      	movs	r1, #0
 8007900:	4628      	mov	r0, r5
 8007902:	f7fb f987 	bl	8002c14 <memset>
 8007906:	4620      	mov	r0, r4
 8007908:	2100      	movs	r1, #0
 800790a:	f000 f811 	bl	8007930 <_swiopen>
 800790e:	1c43      	adds	r3, r0, #1
 8007910:	4604      	mov	r4, r0
 8007912:	d00b      	beq.n	800792c <_stat+0x36>
 8007914:	686b      	ldr	r3, [r5, #4]
 8007916:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800791a:	606b      	str	r3, [r5, #4]
 800791c:	4629      	mov	r1, r5
 800791e:	f7ff ffbb 	bl	8007898 <_swistat>
 8007922:	4605      	mov	r5, r0
 8007924:	4620      	mov	r0, r4
 8007926:	f7ff ff6b 	bl	8007800 <_close>
 800792a:	462c      	mov	r4, r5
 800792c:	4620      	mov	r0, r4
 800792e:	bd38      	pop	{r3, r4, r5, pc}

08007930 <_swiopen>:
 8007930:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007934:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80079e0 <_swiopen+0xb0>
 8007938:	b097      	sub	sp, #92	; 0x5c
 800793a:	4607      	mov	r7, r0
 800793c:	460e      	mov	r6, r1
 800793e:	2500      	movs	r5, #0
 8007940:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 8007944:	1c61      	adds	r1, r4, #1
 8007946:	d037      	beq.n	80079b8 <_swiopen+0x88>
 8007948:	3501      	adds	r5, #1
 800794a:	2d14      	cmp	r5, #20
 800794c:	d1f8      	bne.n	8007940 <_swiopen+0x10>
 800794e:	f7ff fc93 	bl	8007278 <__errno>
 8007952:	2318      	movs	r3, #24
 8007954:	6003      	str	r3, [r0, #0]
 8007956:	f04f 34ff 	mov.w	r4, #4294967295
 800795a:	e03d      	b.n	80079d8 <_swiopen+0xa8>
 800795c:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8007960:	f240 6301 	movw	r3, #1537	; 0x601
 8007964:	07b2      	lsls	r2, r6, #30
 8007966:	bf48      	it	mi
 8007968:	f044 0402 	orrmi.w	r4, r4, #2
 800796c:	421e      	tst	r6, r3
 800796e:	bf18      	it	ne
 8007970:	f044 0404 	orrne.w	r4, r4, #4
 8007974:	0733      	lsls	r3, r6, #28
 8007976:	bf48      	it	mi
 8007978:	f024 0404 	bicmi.w	r4, r4, #4
 800797c:	4638      	mov	r0, r7
 800797e:	bf48      	it	mi
 8007980:	f044 0408 	orrmi.w	r4, r4, #8
 8007984:	9700      	str	r7, [sp, #0]
 8007986:	f7f8 fc33 	bl	80001f0 <strlen>
 800798a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800798e:	2401      	movs	r4, #1
 8007990:	4620      	mov	r0, r4
 8007992:	4649      	mov	r1, r9
 8007994:	beab      	bkpt	0x00ab
 8007996:	4604      	mov	r4, r0
 8007998:	2c00      	cmp	r4, #0
 800799a:	db08      	blt.n	80079ae <_swiopen+0x7e>
 800799c:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 80079a0:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 80079a4:	2300      	movs	r3, #0
 80079a6:	f8c8 3004 	str.w	r3, [r8, #4]
 80079aa:	462c      	mov	r4, r5
 80079ac:	e014      	b.n	80079d8 <_swiopen+0xa8>
 80079ae:	4620      	mov	r0, r4
 80079b0:	f7ff fe6e 	bl	8007690 <error>
 80079b4:	4604      	mov	r4, r0
 80079b6:	e00f      	b.n	80079d8 <_swiopen+0xa8>
 80079b8:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 80079bc:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80079c0:	46e9      	mov	r9, sp
 80079c2:	d1cb      	bne.n	800795c <_swiopen+0x2c>
 80079c4:	4649      	mov	r1, r9
 80079c6:	4638      	mov	r0, r7
 80079c8:	f7ff ff95 	bl	80078f6 <_stat>
 80079cc:	3001      	adds	r0, #1
 80079ce:	d0c5      	beq.n	800795c <_swiopen+0x2c>
 80079d0:	f7ff fc52 	bl	8007278 <__errno>
 80079d4:	2311      	movs	r3, #17
 80079d6:	6003      	str	r3, [r0, #0]
 80079d8:	4620      	mov	r0, r4
 80079da:	b017      	add	sp, #92	; 0x5c
 80079dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079e0:	20000c5c 	.word	0x20000c5c

080079e4 <_get_semihosting_exts>:
 80079e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079e8:	4606      	mov	r6, r0
 80079ea:	460f      	mov	r7, r1
 80079ec:	482a      	ldr	r0, [pc, #168]	; (8007a98 <_get_semihosting_exts+0xb4>)
 80079ee:	2100      	movs	r1, #0
 80079f0:	4615      	mov	r5, r2
 80079f2:	f7ff ff9d 	bl	8007930 <_swiopen>
 80079f6:	462a      	mov	r2, r5
 80079f8:	4604      	mov	r4, r0
 80079fa:	2100      	movs	r1, #0
 80079fc:	4630      	mov	r0, r6
 80079fe:	f7fb f909 	bl	8002c14 <memset>
 8007a02:	1c63      	adds	r3, r4, #1
 8007a04:	d016      	beq.n	8007a34 <_get_semihosting_exts+0x50>
 8007a06:	4620      	mov	r0, r4
 8007a08:	f7ff fe28 	bl	800765c <findslot>
 8007a0c:	f04f 080c 	mov.w	r8, #12
 8007a10:	4681      	mov	r9, r0
 8007a12:	4640      	mov	r0, r8
 8007a14:	4649      	mov	r1, r9
 8007a16:	beab      	bkpt	0x00ab
 8007a18:	4680      	mov	r8, r0
 8007a1a:	4640      	mov	r0, r8
 8007a1c:	f7ff fe46 	bl	80076ac <checkerror>
 8007a20:	2803      	cmp	r0, #3
 8007a22:	dd02      	ble.n	8007a2a <_get_semihosting_exts+0x46>
 8007a24:	1ec3      	subs	r3, r0, #3
 8007a26:	42ab      	cmp	r3, r5
 8007a28:	dc08      	bgt.n	8007a3c <_get_semihosting_exts+0x58>
 8007a2a:	4620      	mov	r0, r4
 8007a2c:	f7ff fee8 	bl	8007800 <_close>
 8007a30:	f04f 34ff 	mov.w	r4, #4294967295
 8007a34:	4620      	mov	r0, r4
 8007a36:	b003      	add	sp, #12
 8007a38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a3c:	2204      	movs	r2, #4
 8007a3e:	eb0d 0102 	add.w	r1, sp, r2
 8007a42:	4620      	mov	r0, r4
 8007a44:	f7ff fe47 	bl	80076d6 <_read>
 8007a48:	2803      	cmp	r0, #3
 8007a4a:	ddee      	ble.n	8007a2a <_get_semihosting_exts+0x46>
 8007a4c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8007a50:	2b53      	cmp	r3, #83	; 0x53
 8007a52:	d1ea      	bne.n	8007a2a <_get_semihosting_exts+0x46>
 8007a54:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8007a58:	2b48      	cmp	r3, #72	; 0x48
 8007a5a:	d1e6      	bne.n	8007a2a <_get_semihosting_exts+0x46>
 8007a5c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8007a60:	2b46      	cmp	r3, #70	; 0x46
 8007a62:	d1e2      	bne.n	8007a2a <_get_semihosting_exts+0x46>
 8007a64:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8007a68:	2b42      	cmp	r3, #66	; 0x42
 8007a6a:	d1de      	bne.n	8007a2a <_get_semihosting_exts+0x46>
 8007a6c:	2201      	movs	r2, #1
 8007a6e:	4639      	mov	r1, r7
 8007a70:	4620      	mov	r0, r4
 8007a72:	f7ff fe4a 	bl	800770a <_swilseek>
 8007a76:	2800      	cmp	r0, #0
 8007a78:	dbd7      	blt.n	8007a2a <_get_semihosting_exts+0x46>
 8007a7a:	462a      	mov	r2, r5
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	4620      	mov	r0, r4
 8007a80:	f7ff fe29 	bl	80076d6 <_read>
 8007a84:	4605      	mov	r5, r0
 8007a86:	4620      	mov	r0, r4
 8007a88:	f7ff feba 	bl	8007800 <_close>
 8007a8c:	4628      	mov	r0, r5
 8007a8e:	f7ff fe0d 	bl	80076ac <checkerror>
 8007a92:	4604      	mov	r4, r0
 8007a94:	e7ce      	b.n	8007a34 <_get_semihosting_exts+0x50>
 8007a96:	bf00      	nop
 8007a98:	08008053 	.word	0x08008053

08007a9c <initialise_semihosting_exts>:
 8007a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007a9e:	4d0a      	ldr	r5, [pc, #40]	; (8007ac8 <initialise_semihosting_exts+0x2c>)
 8007aa0:	4c0a      	ldr	r4, [pc, #40]	; (8007acc <initialise_semihosting_exts+0x30>)
 8007aa2:	2100      	movs	r1, #0
 8007aa4:	2201      	movs	r2, #1
 8007aa6:	a801      	add	r0, sp, #4
 8007aa8:	6029      	str	r1, [r5, #0]
 8007aaa:	6022      	str	r2, [r4, #0]
 8007aac:	f7ff ff9a 	bl	80079e4 <_get_semihosting_exts>
 8007ab0:	2800      	cmp	r0, #0
 8007ab2:	dd07      	ble.n	8007ac4 <initialise_semihosting_exts+0x28>
 8007ab4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8007ab8:	f003 0201 	and.w	r2, r3, #1
 8007abc:	f003 0302 	and.w	r3, r3, #2
 8007ac0:	602a      	str	r2, [r5, #0]
 8007ac2:	6023      	str	r3, [r4, #0]
 8007ac4:	b003      	add	sp, #12
 8007ac6:	bd30      	pop	{r4, r5, pc}
 8007ac8:	20000bb4 	.word	0x20000bb4
 8007acc:	20000bb8 	.word	0x20000bb8

08007ad0 <_has_ext_exit_extended>:
 8007ad0:	b510      	push	{r4, lr}
 8007ad2:	4c04      	ldr	r4, [pc, #16]	; (8007ae4 <_has_ext_exit_extended+0x14>)
 8007ad4:	6823      	ldr	r3, [r4, #0]
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	da01      	bge.n	8007ade <_has_ext_exit_extended+0xe>
 8007ada:	f7ff ffdf 	bl	8007a9c <initialise_semihosting_exts>
 8007ade:	6820      	ldr	r0, [r4, #0]
 8007ae0:	bd10      	pop	{r4, pc}
 8007ae2:	bf00      	nop
 8007ae4:	20000bb4 	.word	0x20000bb4

08007ae8 <_isatty>:
 8007ae8:	b570      	push	{r4, r5, r6, lr}
 8007aea:	f7ff fdb7 	bl	800765c <findslot>
 8007aee:	2509      	movs	r5, #9
 8007af0:	4604      	mov	r4, r0
 8007af2:	b920      	cbnz	r0, 8007afe <_isatty+0x16>
 8007af4:	f7ff fbc0 	bl	8007278 <__errno>
 8007af8:	6005      	str	r5, [r0, #0]
 8007afa:	4620      	mov	r0, r4
 8007afc:	bd70      	pop	{r4, r5, r6, pc}
 8007afe:	4628      	mov	r0, r5
 8007b00:	4621      	mov	r1, r4
 8007b02:	beab      	bkpt	0x00ab
 8007b04:	4604      	mov	r4, r0
 8007b06:	2c01      	cmp	r4, #1
 8007b08:	d0f7      	beq.n	8007afa <_isatty+0x12>
 8007b0a:	f7ff fbb5 	bl	8007278 <__errno>
 8007b0e:	2400      	movs	r4, #0
 8007b10:	4605      	mov	r5, r0
 8007b12:	2613      	movs	r6, #19
 8007b14:	4630      	mov	r0, r6
 8007b16:	4621      	mov	r1, r4
 8007b18:	beab      	bkpt	0x00ab
 8007b1a:	4606      	mov	r6, r0
 8007b1c:	602e      	str	r6, [r5, #0]
 8007b1e:	e7ec      	b.n	8007afa <_isatty+0x12>

08007b20 <_exit>:
 8007b20:	4601      	mov	r1, r0
 8007b22:	b508      	push	{r3, lr}
 8007b24:	4a02      	ldr	r2, [pc, #8]	; (8007b30 <_exit+0x10>)
 8007b26:	f04f 30ff 	mov.w	r0, #4294967295
 8007b2a:	f000 f803 	bl	8007b34 <_kill_shared>
 8007b2e:	bf00      	nop
 8007b30:	00020026 	.word	0x00020026

08007b34 <_kill_shared>:
 8007b34:	b507      	push	{r0, r1, r2, lr}
 8007b36:	e9cd 2100 	strd	r2, r1, [sp]
 8007b3a:	f7ff ffc9 	bl	8007ad0 <_has_ext_exit_extended>
 8007b3e:	2800      	cmp	r0, #0
 8007b40:	bf14      	ite	ne
 8007b42:	2420      	movne	r4, #32
 8007b44:	2418      	moveq	r4, #24
 8007b46:	f7ff ffc3 	bl	8007ad0 <_has_ext_exit_extended>
 8007b4a:	b120      	cbz	r0, 8007b56 <_kill_shared+0x22>
 8007b4c:	466d      	mov	r5, sp
 8007b4e:	4620      	mov	r0, r4
 8007b50:	4629      	mov	r1, r5
 8007b52:	beab      	bkpt	0x00ab
 8007b54:	4604      	mov	r4, r0
 8007b56:	9d00      	ldr	r5, [sp, #0]
 8007b58:	e7f9      	b.n	8007b4e <_kill_shared+0x1a>
	...

08007b5c <_kill>:
 8007b5c:	2906      	cmp	r1, #6
 8007b5e:	b508      	push	{r3, lr}
 8007b60:	bf0c      	ite	eq
 8007b62:	4a02      	ldreq	r2, [pc, #8]	; (8007b6c <_kill+0x10>)
 8007b64:	4a02      	ldrne	r2, [pc, #8]	; (8007b70 <_kill+0x14>)
 8007b66:	f7ff ffe5 	bl	8007b34 <_kill_shared>
 8007b6a:	bf00      	nop
 8007b6c:	00020023 	.word	0x00020023
 8007b70:	00020026 	.word	0x00020026

08007b74 <_init>:
 8007b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b76:	bf00      	nop
 8007b78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b7a:	bc08      	pop	{r3}
 8007b7c:	469e      	mov	lr, r3
 8007b7e:	4770      	bx	lr

08007b80 <_fini>:
 8007b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b82:	bf00      	nop
 8007b84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b86:	bc08      	pop	{r3}
 8007b88:	469e      	mov	lr, r3
 8007b8a:	4770      	bx	lr
