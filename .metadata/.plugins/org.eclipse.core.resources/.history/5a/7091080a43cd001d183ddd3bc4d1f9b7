/*
 * stm32f407xx_rcc_driver.c
 *
 *  Created on: Mar 29, 2019
 *      Author: admin
 */
#define RCC_CFGR_SWS0		2
#define RCC_CFGR_HPRE		4
#define RCC_CFGR_PRE1		10
#define RCC_CFGR_PRE2		13


#include "stm32f407xx_rcc_driver.h"


uint16_t AHB_PreScaler[8] = {2,4,8,16,64,128,256,512};
uint8_t APB1_PreScaler[4] = { 2, 4 , 8, 16};



uint32_t RCC_GetPCLK1Value(void)
{
	uint32_t pclk1,SystemClk;

	uint8_t clksrc,temp,ahbp,apb1p;

	clksrc =GET_KBITS(RCC_ptr->CFGR,2,RCC_CFGR_SWS0);

	if(clksrc == 0 )
	{
		SystemClk = 16000000;
	}else if(clksrc == 1)
	{
		SystemClk = 8000000;
	}else if (clksrc == 2)
	{
		SystemClk = RCC_GetPLLOutputClock();
	}

	//for ahb
	temp =GET_KBITS(RCC_ptr->CFGR,4,RCC_CFGR_HPRE);

	if(temp < 8)
	{
		ahbp = 1;
	}else
	{
		ahbp = AHB_PreScaler[temp-8];
	}



	//apb1
	temp =GET_KBITS(RCC_ptr->CFGR,3,RCC_CFGR_PRE1);

	if(temp < 4)
	{
		apb1p = 1;
	}else
	{
		apb1p = APB1_PreScaler[temp-4];
	}

	pclk1 =  (SystemClk / ahbp) /apb1p;

	return pclk1;
}



/*********************************************************************
 * @fn      		  - RCC_GetPCLK2Value
 *
 * @brief             -
 *
 * @param[in]         -
 * @param[in]         -
 * @param[in]         -
 *
 * @return            -
 *
 * @Note              -

 */
uint32_t RCC_GetPCLK2Value(void)
{
	uint32_t tmp,pclk2;

	uint8_t ahbp,apb2p;
	uint32_t sysclkArr[]={16000000,8000000,0};
	sysclkArr[2]=RCC_GetPLLOutputClock();

	tmp =GET_KBITS(RCC_ptr->CFGR,4,RCC_CFGR_HPRE);

	tmp < 0x08?ahbp = 1:ahbp = AHB_PreScaler[tmp-8];

	tmp = GET_KBITS(RCC_ptr->CFGR,3,RCC_CFGR_PRE2);

	if(tmp < 0x04)
	{
		apb2p = 1;
	}else
	{
		apb2p = APB1_PreScaler[tmp-4];
	}

	pclk2 = (sysclkArr[GET_KBITS(RCC_ptr->CFGR ,2,RCC_CFGR_SWS0)] / ahbp )/ apb2p;

	return pclk2;
}

uint32_t  RCC_GetPLLOutputClock()
{

	return 0;
}

